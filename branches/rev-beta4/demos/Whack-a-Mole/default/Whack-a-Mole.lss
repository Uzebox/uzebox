
Whack-a-Mole.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00009ea6  00009fc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009ea6  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000b36  0080010c  00009eb2  00009fcc  2**5
                  ALLOC
  3 .debug_aranges 00000090  00000000  00000000  00009fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000090c  00000000  00000000  0000a05c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002af0  00000000  00000000  0000a968  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f5  00000000  00000000  0000d458  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001ccf  00000000  00000000  0000dc4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000420  00000000  00000000  0000f91c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000cbc  00000000  00000000  0000fd3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000195d  00000000  00000000  000109f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00012355  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ca 32 	jmp	0x6594	; 0x6594 <__ctors_end>
       4:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
       8:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
       c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      10:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      14:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      18:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      1c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      20:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      24:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      28:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      2c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      30:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      34:	0c 94 8e 34 	jmp	0x691c	; 0x691c <__vector_13>
      38:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      3c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      40:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      44:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      48:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      4c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      50:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      54:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      58:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      5c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      60:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      64:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      68:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>
      6c:	0c 94 67 33 	jmp	0x66ce	; 0x66ce <__bad_interrupt>

00000070 <patchCommands>:
      70:	3f 38 4d 38 2b 39 05 3d ef 3c 50 38 5f 38 6e 38     ?8M8+9.=.<P8_8n8
      80:	d5 3c 7c 38 8a 38                                   .<|8.8

00000086 <song_Whacksong>:
      86:	00 c0 00 00 b0 07 7f 00 c0 00 00 c1 00 00 b1 07     ................
      96:	6a 00 c2 00 00 b2 07 6c 00 90 47 61 00 c2 00 00     j......l..Ga....
      a6:	92 3b 60 00 c1 00 00 91 43 61 04 43 00 00 90 47     .;`.....Ca.C...G
      b6:	00 08 92 3b 00 06 90 53 58 00 91 4f 58 04 90 53     ...;...SX..OX..S
      c6:	00 00 91 4f 00 02 90 47 4d 00 91 43 4d 04 90 47     ...O...GM..CM..G
      d6:	00 00 91 43 00 09 90 53 61 00 91 4f 61 04 90 53     ...C...Sa..Oa..S
      e6:	00 00 91 4f 00 08 90 47 5c 00 91 43 5c 11 43 00     ...O...G\..C\.C.
      f6:	00 90 47 00 01 53 5b 00 91 4f 5b 05 90 53 00 00     ..G..S[..O[..S..
     106:	91 4f 00 01 90 47 48 01 91 43 48 00 92 3b 5e 04     .O...GH..CH..;^.
     116:	90 47 00 00 91 43 00 08 90 53 60 00 91 4f 60 02     .G...C...S`..O`.
     126:	92 3b 00 02 91 4f 00 00 90 53 00 08 92 35 5f 01     .;...O...S...5_.
     136:	90 45 5b 00 91 41 5b 04 90 45 00 00 91 41 00 0a     .E[..A[..E...A..
     146:	92 35 00 04 90 51 41 00 91 4d 3d 04 90 51 00 00     .5...QA..M=..Q..
     156:	91 4d 00 03 90 45 36 00 91 41 32 04 90 45 00 00     .M...E6..A2..E..
     166:	91 41 00 08 90 51 5b 00 91 4d 57 04 90 51 00 00     .A...Q[..MW..Q..
     176:	91 4d 00 08 92 35 5f 00 90 45 5c 00 91 41 5c 0d     .M...5_..E\..A\.
     186:	92 35 00 05 91 41 00 00 90 45 00 01 51 44 00 91     .5...A...E..QD..
     196:	4d 40 00 92 37 5d 04 90 51 00 00 91 4d 00 02 90     M@..7]..Q...M...
     1a6:	45 31 00 91 41 2d 04 90 45 00 00 91 41 00 02 92     E1..A-..E...A...
     1b6:	37 00 06 90 51 5f 00 91 4d 5b 00 92 39 5e 04 90     7...Q_..M[..9^..
     1c6:	51 00 00 91 4d 00 06 92 39 00 03 3b 5f 00 90 47     Q...M...9..;_..G
     1d6:	59 00 91 43 59 04 90 47 00 00 91 43 00 09 92 3b     Y..CY..G...C...;
     1e6:	00 06 90 53 3d 00 91 4f 3d 04 4f 00 00 90 53 00     ...S=..O=.O...S.
     1f6:	02 47 32 00 91 43 32 04 43 00 00 90 47 00 08 53     .G2..C2.C...G..S
     206:	57 00 91 4f 57 04 90 53 00 00 91 4f 00 08 92 3b     W..OW..S...O...;
     216:	5e 00 90 47 59 00 91 43 59 0d 92 3b 00 05 90 47     ^..GY..CY..;...G
     226:	00 00 91 43 00 01 90 53 40 00 91 4f 40 00 92 3c     ...C...S@..O@..<
     236:	5e 04 90 53 00 00 91 4f 00 02 90 47 2d 00 91 43     ^..S...O...G-..C
     246:	2d 02 92 3c 00 02 90 47 00 00 91 43 00 08 92 3e     -..<...G...C...>
     256:	5d 00 90 53 5b 00 91 4f 5b 04 90 53 00 01 91 4f     ]..S[..O[..S...O
     266:	00 05 92 3e 00 03 40 5d 01 90 45 5e 00 91 41 5e     ...>..@]..E^..A^
     276:	04 90 45 00 00 91 41 00 05 92 40 00 09 3e 5d 00     ..E...A...@..>].
     286:	90 51 41 00 91 4d 3a 04 90 51 00 00 91 4d 00 01     .QA..M:..Q...M..
     296:	90 45 36 00 91 41 2f 04 90 45 00 00 91 41 00 01     .E6..A/..E...A..
     2a6:	92 3e 00 07 90 51 5b 00 91 4d 54 00 92 3c 5d 04     .>...Q[..MT..<].
     2b6:	90 51 00 00 91 4d 00 05 92 3c 00 04 90 45 5e 00     .Q...M...<...E^.
     2c6:	92 3b 5d 00 91 41 5e 11 90 45 00 00 91 41 00 01     .;]..A^..E...A..
     2d6:	90 51 44 00 91 4d 3d 01 92 3b 00 03 90 51 00 00     .QD..M=..;...Q..
     2e6:	91 4d 00 02 90 45 31 00 92 3c 5d 00 91 41 2a 05     .M...E1..<]..A*.
     2f6:	41 00 00 90 45 00 08 51 5f 00 91 4d 58 04 4d 00     A...E..Q_..MX.M.
     306:	00 90 51 00 07 92 3c 00 01 3b 5c 01 91 43 5c 00     ..Q...<..;\..C\.
     316:	90 47 5c 04 47 00 00 91 43 00 04 92 3b 00 0b 91     .G\.G...C...;...
     326:	4f 41 00 90 53 3d 04 91 4f 00 00 90 53 00 02 91     OA..S=..O...S...
     336:	43 36 00 90 47 32 04 91 43 00 00 90 47 00 08 91     C6..G2..C...G...
     346:	4f 5b 00 90 53 57 04 53 00 00 91 4f 00 09 43 59     O[..SW.S...O..CY
     356:	00 90 47 59 00 92 3b 5c 0a 3b 00 06 39 5c 01 91     ..GY..;\.;..9\..
     366:	43 00 00 90 47 00 01 91 4f 44 00 90 53 40 04 53     C...G...OD..S@.S
     376:	00 00 91 4f 00 02 43 31 00 90 47 2d 04 92 39 00     ...O..C1..G-..9.
     386:	00 90 47 00 00 91 43 00 08 4f 5f 00 90 53 5b 01     ..G...C..O_..S[.
     396:	92 37 5b 03 90 53 00 00 91 4f 00 05 92 37 00 03     .7[..S...O...7..
     3a6:	35 5b 00 91 45 5b 01 90 48 5b 04 48 00 00 91 45     5[..E[..H[.H...E
     3b6:	00 06 92 35 00 04 90 4a 66 00 91 47 66 00 92 37     ...5...Jf..Gf..7
     3c6:	5b 06 91 47 00 00 90 4a 00 04 92 37 00 0e 39 5b     [..G...J...7..9[
     3d6:	00 90 4c 66 00 91 48 66 07 90 4c 00 00 91 48 00     ..Lf..Hf..L...H.
     3e6:	03 92 39 00 0f 3b 5c 00 90 4d 5b 00 91 4a 5b 04     ..9..;\..M[..J[.
     3f6:	92 3b 00 01 91 4a 00 00 90 4d 00 09 4c 65 00 92     .;...J...M..Le..
     406:	3c 5c 00 91 48 65 07 92 3c 00 03 91 48 00 00 90     <\..He..<...H...
     416:	4c 00 0f 4a 5b 00 91 47 5b 01 92 3e 5c 36 3e 00     L..J[..G[..>\6>.
     426:	01 90 4a 00 01 91 47 00 00 ff 2f 00                 ..J...G.../.

00000432 <patch00>:
     432:	00 02 08 01 06 00 01 00 ec 01 ff                    ...........

0000043d <patch01>:
     43d:	00 02 01 01 06 00 01 00 ec 01 ff                    ...........

00000448 <patch02>:
     448:	00 ff                                               ..

0000044a <patch03>:
     44a:	00 ff                                               ..

0000044c <patch04>:
     44c:	00 ff                                               ..

0000044e <patch05>:
     44e:	00 02 01 01 00 ec 00 ff                             ........

00000456 <patch06>:
     456:	00 02 08 00 08 48 01 08 34 01 08 3e 01 05 00 00     .....H..4..>....
     466:	ff                                                  .

00000467 <patch07>:
     467:	00 02 08 00 00 ec 01 08 3c 01 08 44 01 08 3c 01     ........<..D..<.
     477:	08 50 01 08 46 01 05 00 00 ff                       .P..F.....

00000481 <patch08>:
     481:	00 02 08 00 00 e2 00 08 48 05 05 00 00 ff           ........H.....

0000048f <patch09>:
     48f:	00 02 08 00 00 f9 00 08 54 2d 05 00 00 ff           ........T-....

0000049d <patches>:
     49d:	00 00 00 32 04 00 00 00 00 00 00 00 3d 04 00 00     ...2........=...
     4ad:	00 00 00 00 00 48 04 00 00 00 00 00 00 00 4a 04     .....H........J.
     4bd:	00 00 00 00 00 00 00 4c 04 00 00 00 00 00 00 00     .......L........
     4cd:	4e 04 00 00 00 00 00 00 00 56 04 00 00 00 00 00     N........V......
     4dd:	00 00 67 04 00 00 00 00 00 00 00 81 04 00 00 00     ..g.............
     4ed:	00 00 00 00 8f 04 00 00 00 00                       ..........

000004f7 <cursor_tileset>:
     4f7:	fe fe fe fe fe 00 00 fe fe fe fe fe 00 ff ad 01     ................
     507:	fe fe fe fe 00 ff ad 01 fe fe fe fe 00 ff ad 00     ................
     517:	fe fe fe fe 00 ff ad 00 fe fe fe fe 00 ff ad 00     ................
     527:	fe 00 00 fe 00 ff ff 00 00 ff ff 00 00 ff ff ff     ................
     537:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     547:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     557:	00 00 00 00 fe fe fe fe ff ad 00 ad 00 00 fe fe     ................
     567:	ff ad 00 ad 00 ad 00 fe ff ff ff ad ff ad 00 fe     ................
     577:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     587:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     597:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     5a7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     5b7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     5c7:	fe fe fe fe fe 00 00 fe fe fe fe fe 00 0b 0b 00     ................
     5d7:	fe fe fe 00 6e 1e 00 0b fe fe fe 00 14 00 0b 14     ....n...........
     5e7:	fe fe fe fe 00 0b 14 6e fe fe fe 00 0b 14 6e 6e     .......n......nn
     5f7:	fe fe 00 00 fe fe fe fe fe 00 0b 0b 00 fe fe fe     ................
     607:	00 0b 14 6e 6e 00 fe fe 0b 14 6e 6e 1e 1e 00 fe     ...nn.....nn....
     617:	14 6e 6e 1e 1e 1e 1e 00 6e 6e 1e 1e 1e 1e 14 0b     .nn.....nn......
     627:	6e 1e 1e 1e 1e 14 14 0b 1e 1e 1e 1e 14 14 0b 0b     n...............
     637:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     647:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     657:	fe fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
     667:	00 fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
     677:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     687:	fe fe fe 00 00 00 00 00 fe fe 00 0b 14 6e 1e 1e     .............n..
     697:	fe fe 00 0b 14 6e 1e 1e fe fe 00 0b 14 6e 1e 1e     .....n.......n..
     6a7:	fe fe 00 0b 14 6e 1e 1e fe fe 00 0b 14 6e 1e 1e     .....n.......n..
     6b7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     6c7:	00 00 fe fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     6d7:	14 0b 00 fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     6e7:	14 0b 00 fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     6f7:	00 ff ff ad 00 ff ff 00 fe 00 ff ff ad ff ff 00     ................
     707:	fe fe 00 ff ff ff ff 00 fe fe 00 ff ff ff ff 00     ................
     717:	fe fe fe 00 ff ff ff ff fe fe fe fe 00 ff ff ff     ................
     727:	fe fe fe fe fe 00 ad ad fe fe fe fe fe fe 00 00     ................
     737:	ad 00 ad 00 ff ad 00 fe ad 00 ad 00 ff ad 00 fe     ................
     747:	ad 00 ad 00 ff ad 00 fe ad 00 ad 00 ff ad 00 fe     ................
     757:	ff ff ff ff ad 00 fe fe ff ff ff ad ad 00 fe fe     ................
     767:	ad ad ad ad 00 fe fe fe 00 00 00 00 fe fe fe fe     ................
     777:	fe fe 00 0b 14 6e 6e 1e fe 00 0b 14 6e 6e 1e 1e     .....nn.....nn..
     787:	00 0b 14 6e 6e 1e 1e 1e 00 14 6e 6e 1e 1e 1e 1e     ...nn.....nn....
     797:	fe 00 6e 1e 1e 1e 1e 14 fe fe 00 1e 1e 1e 14 14     ..n.............
     7a7:	fe fe fe 00 14 14 14 0b fe fe fe fe 00 0b 0b 0b     ................
     7b7:	1e 1e 1e 14 14 0b 0b 00 1e 1e 14 14 0b 0b 00 fe     ................
     7c7:	1e 14 14 0b 0b 00 fe fe 14 14 0b 0b 00 00 00 fe     ................
     7d7:	14 0b 0b 00 00 00 0b 00 0b 0b 00 00 00 0b 14 0b     ................
     7e7:	0b 00 fe 00 0b 14 14 14 00 fe fe fe 00 14 1e 1e     ................
     7f7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     807:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     817:	fe fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
     827:	0b 00 fe fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     837:	fe 00 00 0b 14 6e 1e 1e 00 1e 00 0b 14 6e 1e 1e     .....n.......n..
     847:	00 14 00 0b 14 6e 1e 1e 00 0b 00 0b 14 6e 1e 1e     .....n.......n..
     857:	fe 00 00 0b 14 6e 1e 1e fe fe 00 0b 14 6e 1e 1e     .....n.......n..
     867:	fe fe 00 0b 14 6e 1e 1e fe fe 00 0b 14 6e 1e 1e     .....n.......n..
     877:	14 0b 00 00 00 00 00 00 14 0b 00 00 1e 1e 1e 1e     ................
     887:	14 0b 00 00 14 14 14 14 14 0b 00 00 0b 0b 0b 0b     ................
     897:	14 0b 00 00 00 00 00 00 14 0b 00 fe fe fe fe fe     ................
     8a7:	14 0b 00 fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     8b7:	00 00 00 00 00 00 00 fe 1e 1e 1e 1e 1e 1e 0b 00     ................
     8c7:	14 14 14 14 14 14 0b 00 0b 0b 0b 0b 0b 0b 0b 00     ................
     8d7:	00 00 00 00 00 00 00 fe fe fe fe fe fe fe fe fe     ................
     8e7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     8f7:	fe fe fe fe fe 00 00 00 fe fe fe fe fe fe fe fe     ................
     907:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     917:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     927:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     937:	fe fe fe fe fe 00 14 1e fe fe fe fe fe fe 00 14     ................
     947:	fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe fe     ................
     957:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     967:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     977:	1e 14 0b 00 fe fe fe fe 1e 1e 14 0b 00 fe fe fe     ................
     987:	14 1e 1e 1e 0b 00 fe fe 00 14 1e 1e 14 0b 00 fe     ................
     997:	fe 00 14 14 14 0b 00 fe fe fe 00 0b 0b 00 fe fe     ................
     9a7:	fe fe fe 00 00 fe fe fe fe fe fe fe fe fe fe fe     ................
     9b7:	fe fe 00 0b 14 6e 1e 1e fe fe 00 0b 14 6e 1e 1e     .....n.......n..
     9c7:	fe fe fe 00 00 00 00 00 fe fe fe fe fe fe fe fe     ................
     9d7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     9e7:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     9f7:	14 0b 00 fe fe fe fe fe 14 0b 00 fe fe fe fe fe     ................
     a07:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     a17:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
     a27:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................

00000a37 <map_cursor>:
     a37:	03 03 00 01 02 08 09 02 02 02 02                    ...........

00000a42 <map_hammerUp>:
     a42:	03 03 03 04 05 0a 0b 0c 10 11 12                    ...........

00000a4d <map_hammerDown>:
     a4d:	03 03 06 07 02 0d 0e 0f 13 14 02                    ...........

00000a58 <map_main>:
     a58:	1b 16 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     a74:	00 93 1e 1a 1b 1c 1d 1e 1f 1a 1b 1c 1d 1e 1f 1a     ................
     a84:	1b 1c 1d 1e 1f 1a 1b 1c 1d 1e 1f 94 95 96 97 98     ................
     a94:	99 95 96 33 97 98 99 95 96 33 97 98 99 95 96 33     ...3.....3.....3
     aa4:	97 98 99 95 96 33 97 05 06 00 00 00 00 00 00 00     .....3..........
	...
     ac4:	00 01 10 11 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ae0:	0c 1e 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     af8:	00 00 00 1a 96 33 00 00 00 00 00 00 00 00 00 00     .....3..........
	...
     b14:	00 00 97 05 06 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b30:	00 01 10 11 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b4c:	0c 1e 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b64:	00 00 00 1a 96 33 00 00 00 00 00 00 00 00 00 00     .....3..........
	...
     b80:	00 00 97 05 06 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b9c:	00 01 10 11 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bb8:	0c 1e 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bd0:	00 00 00 1a 96 33 00 00 00 00 00 00 00 00 00 00     .....3..........
	...
     bec:	00 00 97 05 06 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c08:	00 01 10 11 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c24:	0c 1e 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c3c:	00 00 00 1a 96 33 00 00 00 00 00 00 00 00 00 00     .....3..........
	...
     c58:	00 00 97 05 06 01 02 03 04 05 06 01 02 03 04 05     ................
     c68:	06 01 02 03 04 05 06 01 02 03 04 05 06 01 10 11     ................
     c78:	0c 0d 0e 0f 10 11 0c 0d 0e 0f 10 11 0c 0d 0e 0f     ................
     c88:	10 11 0c 0d 0e 0f 10 11 0c 9a 1f 1a 1b 1c 1d 1e     ................
     c98:	1f 1a 1b 1c 1d 1e 1f 1a 1b 1c 1d 1e 1f 1a 1b 1c     ................
     ca8:	1d 1e 1f 9b                                         ....

00000cac <map_mole1>:
     cac:	06 04 01 02 03 04 05 06 0c 0d 0e 0f 10 11 1a 1b     ................
     cbc:	1c 1d 1e 1f 2e 2f 30 31 32 33                       ...../0123

00000cc6 <map_mole2>:
     cc6:	06 04 01 02 03 04 05 06 0c 0d 0e 0f 10 11 1a 20     ............... 
     cd6:	21 22 1e 1f 2e 34 35 36 32 33                       !"...45623

00000ce0 <map_mole3>:
     ce0:	06 04 01 02 03 04 05 06 0c 0d 0e 0f 10 11 1a 23     ...............#
     cf0:	24 25 1e 1f 2e 37 38 39 32 33                       $%...78923

00000cfa <map_mole4>:
     cfa:	06 04 01 02 03 04 05 06 0c 12 13 14 10 11 1a 26     ...............&
     d0a:	27 28 1e 1f 3a 3b 3c 3d 32 33                       '(..:;<=23

00000d14 <map_mole5>:
     d14:	06 04 01 02 03 04 05 06 0c 53 24 54 10 11 1a 6b     .........S$T...k
     d24:	6c 6d 1e 1f 7b 7c 7d 7e 7f 33                       lm..{|}~.3

00000d2e <map_mole6>:
     d2e:	06 04 01 02 03 04 05 06 0c 55 56 57 10 11 1a 6e     .........UVW...n
     d3e:	6f 70 1e 1f 80 81 82 83 7f 33                       op.......3

00000d48 <map_mole7>:
     d48:	06 04 01 02 03 04 05 06 0c 58 59 5a 10 11 1a 71     .........XYZ...q
     d58:	72 73 1e 1f 84 85 86 87 88 33                       rs.......3

00000d62 <map_hole>:
     d62:	06 04 01 02 03 04 05 06 0c 0d 0e 0f 10 11 1a 1b     ................
     d72:	1c 1d 1e 1f 2e 89 8a 8b 32 33                       ........23

00000d7c <map_startBtnUp>:
     d7c:	05 02 07 08 09 0a 0b 15 16 17 18 19                 ............

00000d88 <map_startBtnDown>:
     d88:	05 02 29 2a 2b 2c 2d 3e 3f 40 41 42                 ..)*+,->?@AB

00000d94 <map_ready>:
     d94:	07 02 43 44 45 46 47 48 49 5b 5c 5d 5e 5f 60 61     ..CDEFGHI[\]^_`a

00000da4 <map_gameOver>:
     da4:	09 02 4a 4b 4c 4d 4e 4f 50 51 52 62 63 64 65 66     ..JKLMNOPQRbcdef
     db4:	67 68 69 6a                                         ghij

00000db8 <map_whack>:
     db8:	07 02 74 75 76 77 78 79 7a 8c 8d 8e 8f 90 91 92     ..tuvwxyz.......

00000dc8 <mole_tileset>:
	...
     e08:	19 6b 19 22 63 22 22 6b 19 6b 22 22 62 22 22 22     .k."c""k.k""b"""
     e18:	22 22 19 22 22 22 6b 6b 19 22 22 19 6b 22 2b 6b     ""."""kk."".k"+k
     e28:	19 22 6b 19 6b 6b 2a 6b 19 6a 6b 6b 22 6b 22 6b     ."k.kk*k.jkk"k"k
     e38:	63 22 74 6b 6b 22 2b 22 6b 62 6b 6b 22 6b 22 6b     c"tkk"+"kbkk"k"k
     e48:	6b 6b 21 22 22 6a 18 2a 6b 6b 6b 22 2a 22 19 6b     kk!""j.*kkk"*".k
     e58:	2a 2a 6b 22 2a 2a 21 22 6b 22 2a 21 2a 6b 21 19     **k"**!"k"*!*k!.
     e68:	6b 6b 21 21 22 73 6b 22 22 bd 19 6a 22 6b 73 22     kk!!"sk""..j"ks"
     e78:	62 bd 21 21 2a 2a 6b 2a 22 73 2a 19 21 2a 2a 73     b.!!**k*"s*.!**s
     e88:	2a 73 6b 6b 22 22 21 22 2a 6b 6b 21 6b 22 2a 21     *skk""!"*kk!k"*!
     e98:	22 6b 6b 19 22 6a 6b 22 21 22 6a 22 19 19 6a 2a     "kk."jk"!"j"..j*
     ea8:	22 21 22 22 22 18 6a 6b 2b 22 19 19 22 19 6b 2a     "!""".jk+"..".k*
     eb8:	22 2a 6b 22 63 22 6b 19 22 22 6b 6b 6b 21 73 6b     "*k"c"k.""kkk!sk
     ec8:	22 2a 6b 22 22 6b 21 2a 22 22 2a 6b 2b 6b 2a 21     "*k""k!*""*k+k*!
     ed8:	21 2a 2a 6b 6b 2a 2a 22 22 2a 74 2a 2b 22 2a 22     !**kk**""*t*+"*"
     ee8:	22 2a 2a 2b 6a 21 21 6b 6b 22 2b 73 19 6a 19 73     "**+j!!kk"+s.j.s
     ef8:	73 22 6a 74 19 22 2a 2a 6b 6b 6b 6a 6b 6b 6b 2a     s"jt."**kkkjkkk*
     f08:	2a 2a 21 6a 2a 21 21 22 19 22 21 22 2a 19 22 19     **!j*!!"."!"*.".
     f18:	21 22 6b 21 22 22 6b 22 6b 22 22 22 22 21 6b 6a     !"k!""k"k""""!kj
     f28:	22 74 21 19 2a 22 2a 6b 6a 6b 73 19 22 6b 2a 19     "t!.*"*kjks."k*.
     f38:	73 2b 74 6b 6b 21 2a 22 6b 62 6b 73 2a 2a 2a 19     s+tkk!*"kbks***.
     f48:	2a 6b 2a 19 19 6b 6b 19 22 22 6b 22 19 21 6b 22     *k*..kk.""k".!k"
     f58:	6b 19 73 21 19 6a 2a 22 74 19 6a 22 19 6b 21 22     k.s!.j*"t.j".k!"
     f68:	2a 6b 21 6b 22 22 2a 2a 2a 2a 22 6b 2a 19 22 6a     *k!k""****"k*."j
     f78:	22 6b 21 22 6a 22 18 6a 6a 6a 22 22 22 22 22 21     "k!"j".jjj"""""!
     f88:	09 09 09 09 09 09 09 09 00 27 27 27 27 27 27 27     .........'''''''
     f98:	00 27 27 27 27 27 27 27 00 27 27 6f ae f6 53 6d     .'''''''.''o..Sm
     fa8:	00 2f 77 ff ff f6 5b ad 00 37 b6 ff ff 00 00 00     ./w...[..7......
     fb8:	00 37 5b ff ff f6 52 1c 00 3f 2d 49 b6 ff ff 09     .7[...R..?-I....
     fc8:	09 09 09 09 09 09 09 09 27 27 27 27 27 27 27 27     ........''''''''
     fd8:	27 27 27 27 27 27 27 27 b6 ae ad 65 6d 65 1c 27     ''''''''...eme.'
     fe8:	ff ff ff ff ff ad 00 1c 00 5b ff ff 00 00 00 5b     .........[.....[
     ff8:	12 5b ff ff 00 00 12 ff 1b 6d ff ff 00 00 7f ff     .[.......m......
    1008:	09 09 09 09 09 09 09 09 27 27 27 27 27 27 27 27     ........''''''''
    1018:	27 27 27 27 27 27 27 27 2f af 13 26 27 27 6f b6     ''''''''/..&''o.
    1028:	b6 ff 5b 13 2f 2f ff ff ff ff ff 52 13 37 ff ff     ..[.//.....R.7..
    1038:	ff ad ff ff 09 1b ff ff ff 52 f6 ff b6 00 ff ff     .........R......
    1048:	09 09 09 09 09 09 09 09 27 27 27 27 27 27 27 27     ........''''''''
    1058:	27 27 27 27 27 27 27 27 ae ae a5 1c 26 b6 ae ae     ''''''''....&...
    1068:	f6 b6 ff ff 52 ff ff ff 5b 00 ad ff ad 00 00 ad     ....R...[.......
    1078:	f6 ad ff ff a4 00 00 ad ff ff ff 5b 00 00 1b ad     ...........[....
    1088:	09 09 09 09 09 09 00 00 27 27 27 27 27 27 1f 00     ........''''''..
    1098:	27 27 27 27 27 27 13 00 a5 65 6d 65 1d 27 13 00     ''''''...eme.'..
    10a8:	ff ff ff 5b 00 25 1b 00 ff ad 00 00 00 1c 1b 00     ...[.%..........
    10b8:	ff ad 00 00 1b 37 1b 00 ff ad 00 12 3f 3f 1b 00     .....7......??..
    10c8:	6b 6b 22 6b 22 6b 6b 22 62 22 19 6b 22 22 74 19     kk"k"kk"b".k""t.
    10d8:	19 6b 73 22 22 22 74 21 22 6b 6b 6b 19 22 6a 73     .ks"""t!"kkk."js
    10e8:	22 22 2a 6a 22 21 21 bc 22 2a 2a 19 6b 21 21 74     ""*j"!!."**.k!!t
    10f8:	22 21 2a 22 19 73 22 62 22 22 6a 22 19 6a 73 21     "!*".s"b""j".js!
    1108:	6b 19 6b 22 22 22 6b 6a 6b 6b 6b 21 2a 22 21 6b     k.k"""kjkkk!*"!k
    1118:	22 6b 6b 10 6a 22 21 74 19 62 6b 11 62 22 22 74     "kk.j"!t.bk.b""t
    1128:	21 22 62 19 22 74 6b 74 6a 18 6b 10 6a 6b 6b 6a     !"b."tktj.k.jkkj
    1138:	6a 22 62 10 62 22 22 22 21 22 21 19 22 22 22 22     j"b.b"""!"!.""""
    1148:	22 2b 6b 19 74 22 2a 73 22 1a 6b 19 6b 6b 21 2a     "+k.t"*s".k.kk!*
    1158:	19 22 74 22 22 2a 6a 21 22 63 74 22 22 22 2a 21     ."t""*j!"ct"""*!
    1168:	1a 6b 6b 22 2a 21 2a 22 62 22 6b 73 2a 21 2a 2a     .kk"*!*"b"ks*!**
    1178:	6a 22 22 73 21 6b 6b 2a 22 6a 19 22 6a 6b 2a 73     j""s!kk*"j."jk*s
    1188:	2a 6b 6b 22 21 6a 2a 6a 6b 22 2a 22 6b 22 2a 73     *kk"!j*jk"*"k"*s
    1198:	2a 2a 73 19 6b 2a 2a 6b 73 22 2a 22 6b 2a 6b 6b     **s.k**ks"*"k*kk
    11a8:	73 73 21 21 22 73 2a 22 2b 6b 21 2a 19 6b 6b 21     ss!!"s*"+k!*.kk!
    11b8:	2a 6b 19 6b 6a 21 6b 2a 2a 2a 22 73 22 6a 73 6b     *k.kj!k***"s"jsk
    11c8:	2a 22 73 2a 2a 73 6b 22 21 22 6b 73 22 6b 74 6b     *"s**sk"!"ks"ktk
    11d8:	2a 22 6a 2a 6b 2a 73 73 6b 22 73 22 6b 6b 2a 2a     *"j*k*ssk"s"kk**
    11e8:	74 22 74 19 2a 73 2a 2a 6b 6b 73 19 10 7c 21 6b     t"t.*s**kks..|!k
    11f8:	19 6b 6b 6b 10 74 22 2a 21 22 73 22 22 6b 73 21     .kkk.t"*!"s""ks!
    1208:	6b 22 2a 21 22 22 22 22 6b 22 22 6b 19 6b 21 21     k"*!""""k""k.k!!
    1218:	6b 6b 6b 73 21 22 2a 10 73 6b 2b 73 2a 21 2a 6b     kkks!"*.sk+s*!*k
    1228:	2a 73 22 73 2a 29 21 73 21 6a 19 2a 2a 73 21 21     *s"s*)!s!j.**s!!
    1238:	6b 21 73 2a 2a 21 6a 19 21 73 21 2a 2a 21 2a 21     k!s**!j.!s!**!*!
    1248:	6b 19 6b 22 22 22 6b 6a 6b 6b 6b 21 2a 22 21 6b     k.k"""kjkkk!*"!k
    1258:	22 6b 6b 10 6a 22 21 74 19 62 6b 11 62 22 22 00     "kk.j"!t.bk.b"".
    1268:	21 22 62 19 22 00 00 13 6a 18 6b 10 00 13 1d 00     !"b."...j.k.....
    1278:	6a 22 62 00 13 1d 00 1d 21 22 00 13 1d 1d 1d ff     j"b.....!"......
    1288:	22 2b 6b 19 74 22 2a 73 22 1a 6b 19 6b 6b 21 2a     "+k.t"*s".k.kk!*
    1298:	19 22 74 22 22 2a 6a 21 00 00 00 00 00 00 00 00     ."t""*j!........
    12a8:	13 13 13 13 13 13 13 13 00 1d 1d 1d 1d 1d 00 00     ................
    12b8:	1d 1d 1d 1d 1d 1d 1d 1d ff ff 1d 1d 1d ff ff ff     ................
    12c8:	2a 6b 6b 22 21 6a 2a 6a 6b 22 2a 22 6b 22 2a 73     *kk"!j*jk"*"k"*s
    12d8:	2a 2a 73 19 6b 2a 2a 6b 73 22 2a 22 6b 2a 6b 6b     **s.k**ks"*"k*kk
    12e8:	00 00 21 21 22 73 2a 22 13 13 00 2a 19 6b 6b 21     ..!!"s*"...*.kk!
    12f8:	00 1d 13 00 6a 21 6b 2a 1d 1d 1d 13 00 6a 73 6b     ....j!k*.....jsk
    1308:	00 3f 3f 64 a4 ff ff 52 00 3f 7f ff ff ff ad 00     .??d...R.?......
    1318:	00 37 2d a4 5b 49 00 00 00 37 37 13 00 00 00 12     .7-.[I...77.....
    1328:	00 2f 2f 26 13 1c 26 2f 00 2f 2f 2f 2f 2f 2f 2f     .//&..&/.///////
    1338:	00 14 0a 0a 0a 0a 0a 0a 00 00 00 00 00 00 00 00     ................
    1348:	00 6d ff ff 09 09 ff ff 00 6e ff ff 52 ad ff ff     .m.......n..R...
    1358:	00 2d 5b 52 00 00 52 52 25 2e 00 00 00 00 00 00     .-[R..RR%.......
    1368:	2f 2f 2e 1c 1d 2e 2e 25 2f 2f 2f 2f 2f 2f 2f 2f     //.....%////////
    1378:	0a 0a 0a 0a 0a 0a 0a 0a 00 00 00 00 00 00 00 00     ................
    1388:	f6 f6 ff ff ff a4 ff ff 49 00 00 a4 ff ff ff ff     ........I.......
    1398:	00 00 09 00 5b 52 49 52 00 13 37 2e 00 00 00 00     ....[RIR..7.....
    13a8:	25 2f 2f 2f 2e 1c 25 26 2f 2f 2f 2f 2f 2f 2f 2f     %///..%&////////
    13b8:	0a 0a 0a 0a 0a 0a 0a 0a 00 00 00 00 00 00 00 00     ................
    13c8:	a4 ff ff 5b 00 1b 36 6d 5b 5b ff ff 09 1b 3f 6d     ...[..6m[[....?m
    13d8:	09 00 5b 52 09 00 36 65 00 00 13 00 00 00 2e 25     ..[R..6e.......%
    13e8:	25 2e 2f 1c 25 2e 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     %./.%.//////////
    13f8:	0a 0a 0a 0a 0a 0a 0a 0a 00 00 00 00 00 00 00 00     ................
    1408:	ff f6 00 12 3f 3f 1b 00 ff ff 00 09 3f 3f 1b 00     ....??......??..
    1418:	5b 52 00 00 37 37 1b 00 00 00 00 13 37 37 1b 00     [R..77......77..
    1428:	25 1c 25 2f 2f 2f 1b 00 2f 2f 2f 2f 2f 2f 13 00     %.%///..//////..
    1438:	0a 0a 0a 0a 0a 0a 0a 00 00 00 00 00 00 00 00 00     ................
    1448:	21 6b 21 22 22 22 22 22 22 21 73 21 22 2a 21 19     !k!""""""!s!"*!.
    1458:	22 6a 22 6a 21 6b 22 10 19 73 19 6a 19 21 6b 62     "j"j!k"..s.j.!kb
    1468:	62 22 74 22 6b 18 6b 62 6b 18 22 22 62 6b 22 62     b"t"k.kbk.""bk"b
    1478:	22 6b 18 19 22 74 21 6a 22 6a 6a 10 19 73 21 21     "k.."t!j"jj..s!!
    1488:	22 21 18 19 22 6b 22 6a 6b 22 10 19 19 6b 21 6b     "!.."k"jk"...k!k
    1498:	19 6b 22 19 08 6b 21 21 10 19 6b 62 10 22 6a 21     .k"..k!!..kb."j!
    14a8:	22 22 19 62 6b 21 10 6a 19 2b 6a 10 6a 73 22 22     "".bk!.j.+j.js""
    14b8:	21 21 74 18 10 22 6b 21 21 19 6b 6a 08 19 19 21     !!t.."k!!.kj...!
    14c8:	22 6a 19 10 62 6b 2a 73 22 2a 6b 10 22 6b 21 73     "j..bk*s"*k."k!s
    14d8:	22 21 19 6b 22 6b 21 73 6b 22 19 62 21 2a 2a 2a     "!.k"k!sk".b!***
    14e8:	21 2a 2a 19 6b 2a 2a 21 2a 21 6a 18 62 2a 2a 2a     !**.k**!*!j.b***
    14f8:	22 21 6a 19 21 21 2a 21 22 21 21 22 22 21 21 19     "!j.!!*!"!!""!!.
    1508:	6b 22 21 73 2a 2a 22 73 6b 19 19 6b 22 73 21 2a     k"!s**"sk..k"s!*
    1518:	6b 21 21 2a 6b 2a 2a 6b 73 19 21 2a 6b 2a 6b 21     k!!*k**ks.!*k*k!
    1528:	2a 22 21 21 2a 21 73 21 6a 62 19 19 2a 21 6b 21     *"!!*!s!jb..*!k!
    1538:	6b 7c 19 21 2a 18 21 73 21 6a 22 2a 21 22 22 2a     k|.!*.!s!j"*!""*
    1548:	6b 18 6a 73 2b 6b 22 22 73 6b 6a 6b 21 73 21 19     k.js+k""skjk!s!.
    1558:	6b 6a 2a 6b 22 22 74 21 2a 21 6a 19 74 21 22 2a     kj*k""t!*!j.t!"*
    1568:	2a 21 2a 10 6b 6a 18 2b 6a 21 29 19 6a 6b 2a 2a     *!*.kj.+j!).jk**
    1578:	2a 21 73 19 6b 21 6b 2a 2a 18 6a 19 2a 22 18 6b     *!s.k!k**.j.*".k
    1588:	18 73 21 2a 2a 21 2a 10 2a 6b 6a 2a 2a 21 73 21     .s!**!*.*kj**!s!
    1598:	22 6b 6a 21 6a 21 6a 21 2a 22 2a 6a 2a 21 21 2a     "kj!j!j!*"*j*!!*
    15a8:	2a 2a 2a 2a 6a 21 21 21 2a 2a 2a 6b 2a 2a 6a 21     ****j!!!***k**j!
    15b8:	2a 6a 2a 19 6b 18 22 6a 21 22 2a 19 6b 21 18 22     *j*.k."j!"*.k!."
    15c8:	22 21 18 19 22 6b 22 6a 6b 22 10 19 19 6b 21 6b     "!.."k"jk"...k!k
    15d8:	19 6b 22 19 08 6b 21 21 10 19 6b 62 10 22 6a 21     .k"..k!!..kb."j!
    15e8:	22 22 19 62 6b 21 10 6a 19 2b 6a 10 6a 73 22 00     "".bk!.j.+j.js".
    15f8:	21 21 74 18 10 00 00 13 21 19 6b 6a 00 13 1d 00     !!t.....!.kj....
    1608:	22 6a 19 10 62 6b 2a 73 22 2a 6b 10 22 6b 21 73     "j..bk*s"*k."k!s
    1618:	22 21 19 6b 22 6b 21 73 6b 22 19 62 21 2a 2a 2a     "!.k"k!sk".b!***
    1628:	21 2a 2a 19 6b 2a 2a 21 00 00 00 00 00 00 00 00     !**.k**!........
    1638:	13 13 13 13 13 13 13 13 00 1d 1d 1d 1d 1d 00 00     ................
    1648:	6b 22 21 73 2a 2a 22 73 6b 19 19 6b 22 73 21 2a     k"!s**"sk..k"s!*
    1658:	6b 21 21 2a 6b 2a 2a 6b 73 19 21 2a 6b 2a 6b 21     k!!*k**ks.!*k*k!
    1668:	2a 22 21 21 2a 21 73 21 6a 62 19 19 2a 21 6b 21     *"!!*!s!jb..*!k!
    1678:	00 00 19 21 2a 18 21 73 13 13 00 2a 21 22 22 2a     ...!*.!s...*!""*
    1688:	22 21 18 19 22 6b 22 00 6b 22 10 19 19 00 00 13     "!.."k".k"......
    1698:	19 6b 22 19 00 13 1d 00 10 19 6b 00 13 1d 00 1d     .k".......k.....
    16a8:	22 22 00 13 1d 1d 1d ff 19 2b 00 13 1d 13 ff ff     "".......+......
    16b8:	21 21 00 1d 1d 13 ff ff 21 19 00 1d 1d 13 ff ff     !!......!.......
	...
    16d0:	13 13 13 13 13 13 13 13 00 1d 1d 1d 1d 1d 00 00     ................
    16e0:	1d 1d 1d 1d 1d 1d 1d 1d ff ff 1d 1d 1d ff ff ff     ................
    16f0:	ff ff ff 1d ff ff ff ff ff 00 00 ff 00 00 ff ff     ................
    1700:	ff 00 00 ff 00 00 ff ff 6b 22 21 73 2a 2a 22 73     ........k"!s**"s
    1710:	00 00 19 6b 22 73 21 2a 13 13 00 2a 6b 2a 2a 6b     ...k"s!*...*k**k
    1720:	00 1d 13 00 6b 2a 6b 21 1d 1d 1d 13 00 21 73 21     ....k*k!.....!s!
    1730:	ff 13 1d 13 00 21 6b 21 ff 13 1d 1d 00 18 21 73     .....!k!......!s
    1740:	ff 13 1d 1d 00 22 22 2a 22 21 00 13 1d 13 ff ff     .....""*"!......
    1750:	6b 22 00 1d 1d 13 ff ff 19 6b 00 1d 1d 13 ff ff     k".......k......
    1760:	10 00 13 1d 1d 13 ff ff 22 00 13 1d 1d 1d 13 ff     ........".......
    1770:	19 00 13 1d 1d 1d 1d 00 00 13 13 1d 1d 1d 1d 00     ................
    1780:	00 13 1d 1d 1d 1d 1d 00 ff ff ff 1d ff ff ff ff     ................
    1790:	ff 00 00 ff 00 00 ff ff ff 00 00 ff 00 00 ff ff     ................
    17a0:	ff ff ff ff ff ff ff ff ff 00 00 00 00 00 ff ff     ................
    17b0:	00 00 52 00 00 00 00 00 00 52 00 00 00 00 00 00     ..R......R......
	...
    17c8:	ff 13 1d 13 00 2a 22 73 ff 13 1d 1d 00 73 21 2a     .....*"s.....s!*
    17d8:	ff 13 1d 1d 00 2a 2a 6b ff 13 1d 1d 13 00 6b 21     .....**k......k!
    17e8:	13 1d 1d 1d 13 00 73 21 1d 1d 1d 1d 13 00 6b 21     ......s!......k!
    17f8:	1d 1d 1d 1d 13 13 00 73 1d 1d 1d 1d 1d 13 00 2a     .......s.......*
	...
    1810:	00 14 14 14 14 14 14 14 00 14 27 27 27 27 27 27     ..........''''''
    1820:	00 14 27 27 27 27 27 27 00 1c 2f 2f 77 b6 f6 53     ..''''''..//w..S
    1830:	00 1c 37 77 ff ff f6 5b 00 1c 37 b6 ff ff 00 00     ..7w...[..7.....
    1840:	00 1c 3f 5b ff ff f6 52 00 00 00 00 00 00 00 00     ..?[...R........
    1850:	14 14 14 14 14 14 14 14 27 27 27 27 27 27 27 27     ........''''''''
    1860:	27 27 27 27 27 27 27 27 6d b6 ae ad 65 6d 65 1c     ''''''''m...eme.
    1870:	ad ff ff ff ff ff ad 00 00 00 5b ff ff 00 00 00     ..........[.....
    1880:	24 12 5b ff ff 00 00 12 00 00 00 00 00 00 00 00     $.[.............
    1890:	14 14 14 14 14 14 14 14 27 27 27 27 27 27 27 27     ........''''''''
    18a0:	27 27 27 27 27 27 27 27 2f 2f b7 13 26 2f 2f 77     ''''''''//..&//w
    18b0:	1c b6 ff 5b 13 2f 37 ff 5b ff ff ff 52 1b 37 ff     ...[./7.[...R.7.
    18c0:	ff ff ad ff ff 09 1b ff 00 00 00 00 00 00 00 00     ................
    18d0:	14 14 14 14 14 14 14 14 27 27 27 27 27 27 27 27     ........''''''''
    18e0:	27 27 27 27 27 27 27 27 b6 ae ae a5 1c 26 b6 b6     ''''''''.....&..
    18f0:	ff f6 b6 ff ff 52 ff ff ff 5b 00 ad ff ad 00 00     .....R...[......
    1900:	ff f6 ad ff ff a4 00 00 00 00 00 00 00 00 00 00     ................
    1910:	14 14 14 14 14 14 14 00 27 27 27 27 27 27 27 00     ........'''''''.
    1920:	27 27 27 27 27 27 27 00 ae a5 65 6d 65 25 2f 00     '''''''...eme%/.
    1930:	ff ff ff ff 5b 00 25 00 ad ff ad 00 00 00 1c 00     ....[.%.........
    1940:	ad ff ad 00 00 1b 36 00 18 22 6b 19 19 6a 19 11     ......6.."k..j..
    1950:	21 18 1a 11 08 00 00 00 19 08 00 00 00 0a 0a 0a     !...............
    1960:	00 00 0a 0a 0a 0a 09 09 08 00 00 0a 09 09 00 00     ................
    1970:	19 11 00 00 00 00 00 00 21 22 22 19 11 08 00 00     ........!"".....
    1980:	19 22 22 19 2a 19 2a 22 11 08 08 08 00 00 00 00     ."".*.*"........
    1990:	00 0a 0a 0a 0a 0a 0a 00 0a 0a 09 09 09 00 00 13     ................
    19a0:	09 09 00 00 00 13 1d 00 00 00 00 00 13 1d 00 1d     ................
    19b0:	00 00 00 13 1d 1d 1d ff 00 00 00 13 1d 13 ff ff     ................
    19c0:	22 19 11 08 08 08 00 00 00 00 00 00 00 00 00 00     "...............
	...
    19d8:	13 13 13 13 13 13 13 13 00 1d 1d 1d 1d 1d 00 00     ................
    19e8:	1d 1d 1d 1d 1d 1d 1d 1d ff ff 1d 1d 1d ff ff ff     ................
    19f8:	ff ff ff 1d ff ff ff ff 00 00 00 00 00 00 00 00     ................
    1a08:	00 00 00 00 08 09 11 19 0a 0a 0a 0a 0a 0a 0a 0a     ................
    1a18:	00 00 09 09 09 09 09 0a 13 13 00 00 00 00 00 09     ................
    1a28:	00 1d 13 00 00 00 00 00 1d 1d 1d 13 00 00 00 00     ................
    1a38:	ff 13 1d 13 00 00 00 00 00 00 00 00 08 11 19 62     ...............b
    1a48:	19 21 21 6b 18 7c 21 18 00 00 00 11 11 6b 73 18     .!!k.|!......ks.
    1a58:	0a 0a 0a 00 00 00 11 19 09 09 0a 0a 0a 00 00 00     ................
    1a68:	00 00 09 00 00 00 00 08 00 00 00 00 00 08 11 22     ..............."
    1a78:	00 00 09 11 19 21 2a 19 10 2a 21 21 6a 22 22 18     .....!*..*!!j"".
    1a88:	6a 21 2a 21 6b 19 19 2a 22 21 22 2a 22 73 10 6a     j!*!k..*"!"*"s.j
    1a98:	10 2a 21 21 2a 6a 2a 18 2a 6b 18 6a 2a 22 2a 21     .*!!*j*.*k.j*"*!
    1aa8:	2a 22 10 6b 2a 22 21 2a 22 22 10 22 22 21 21 21     *".k*"!*"".""!!!
    1ab8:	2a 62 19 19 21 19 19 19 6a 19 19 22 22 19 19 18     *b..!...j..""...
    1ac8:	11 08 08 00 13 1d 00 1d 00 0a 00 13 1d 1d 1d ff     ................
    1ad8:	0a 0a 00 13 1d 13 ff ff 09 09 00 1d 1d 13 ff ff     ................
    1ae8:	00 00 00 1d 1d 13 ff ff 00 00 13 1d 1d 13 ff ff     ................
    1af8:	00 00 13 1d 1d 1d 13 ff 22 19 11 08 08 08 00 00     ........".......
    1b08:	1d 1d 1d 1d 1d 1d 1d 1d ff ff 1d 1d 1d ff ff ff     ................
    1b18:	ff ff ff 1d ff ff ff ff ff 00 00 ff 00 00 ff ff     ................
    1b28:	ff 00 00 ff 00 00 ff ff ff ff ff ff ff ff ff ff     ................
    1b38:	ff 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
    1b48:	00 1d 13 00 08 09 11 19 1d 1d 1d 13 00 0a 0a 0a     ................
    1b58:	ff 13 1d 13 00 09 09 0a ff 13 1d 1d 00 00 00 09     ................
    1b68:	ff 13 1d 1d 00 00 00 00 ff 13 1d 1d 13 00 00 00     ................
    1b78:	13 1d 1d 1d 13 00 00 00 00 00 00 00 08 11 19 62     ...............b
    1b88:	11 00 13 1d 1d 13 ff ff 00 00 13 1d 1d 1d 13 ff     ................
    1b98:	0a 00 13 1d 1d 1d 1d 00 00 13 13 1d 1d 1d 1d 00     ................
    1ba8:	00 13 1d 1d 1d 1d 1d 00 00 13 1d 1d 13 1d 13 1d     ................
    1bb8:	00 13 1d 1d 13 1d 1d 13 22 19 11 08 08 08 00 00     ........".......
    1bc8:	ff ff ff ff ff ff ff ff ff 00 00 00 00 00 ff ff     ................
    1bd8:	00 00 52 00 00 00 00 00 00 52 00 00 00 00 00 00     ..R......R......
	...
    1bf4:	00 00 00 1d 1d 00 00 00 00 00 1d 13 00 00 00 00     ................
    1c04:	00 00 00 00 ff 13 1d 1d 13 00 11 19 13 1d 1d 1d     ................
    1c14:	13 00 0a 0a 1d 1d 1d 1d 13 00 09 0a 1d 1d 1d 1d     ................
    1c24:	13 13 00 09 1d 1d 1d 1d 1d 13 00 00 13 1d 1d 1d     ................
    1c34:	1d 13 00 00 1d 1d 13 1d 1d 13 00 00 00 00 00 00     ................
    1c44:	08 11 19 62 18 22 6b 19 19 6a 19 11 21 18 1a 11     ...b."k..j..!...
    1c54:	08 00 00 00 19 08 00 00 00 0a 0a 0a 00 00 0a 0a     ................
    1c64:	0a 0a 09 09 08 00 00 0a 09 09 00 00 19 11 00 00     ................
    1c74:	00 00 00 00 21 22 22 19 11 00 00 00 19 22 22 19     ....!""......"".
    1c84:	2a 19 2a 22 00 13 1d 1d 13 1d 13 1d 00 13 1d 1d     *.*"............
    1c94:	13 1d 1d 13 00 13 1d 1d 1d 00 1d 1d 09 00 1d 1d     ................
    1ca4:	1d 00 00 00 00 00 1d 1d 1d 1d 00 00 00 13 1d 1d     ................
    1cb4:	1d 1d 1d 00 00 00 00 00 1d 1d 1d 1d 22 19 11 08     ............"...
    1cc4:	08 08 00 00 00 00 00 00 00 00 00 1d 1d 00 00 00     ................
    1cd4:	00 00 1d 13 1d 1d 1d 13 1d 1d 1d 1d 52 52 52 00     ............RRR.
    1ce4:	52 52 52 00 ff ff ff 00 ff ff ff 00 00 ff ff 00     RRR.............
    1cf4:	ff ff 00 00 1d 1d 1d 1d 1d 1d 1d 1d 00 00 00 00     ................
    1d04:	00 00 00 00 13 1d 13 1d 1d 13 00 19 1d 1d 13 1d     ................
    1d14:	1d 13 00 0a 1d 00 1d 1d 1d 13 00 0a 00 00 1d 1d     ................
    1d24:	1d 13 00 09 00 1d 1d 1d 1d 00 00 00 1d 1d 1d 1d     ................
    1d34:	1d 13 00 00 1d 1d 1d 1d 00 00 00 00 00 00 00 00     ................
    1d44:	08 11 19 62 00 24 3f 2d 49 b6 ff ff 00 1c 3f 3f     ...b.$?-I.....??
    1d54:	64 a4 ff ff 00 1c 37 7f ff ff ff ad 00 1c 37 25     d.....7.......7%
    1d64:	a4 5b 49 00 00 1c 2f 2f 13 00 00 00 00 14 2f 2f     .[I...//......//
    1d74:	26 13 14 26 00 14 27 27 27 27 27 27 00 00 00 00     &..&..''''''....
    1d84:	00 00 00 00 09 1b 6d ff ff 00 00 7f 52 00 6d ff     ......m.....R.m.
    1d94:	ff 09 09 ff 00 00 6e ff ff 52 ad ff 00 00 2d 5b     ......n..R....-[
    1da4:	52 00 00 52 0a 25 2e 00 00 00 00 00 2f 2f 2f 26     R..R.%......///&
    1db4:	14 1d 26 26 27 27 27 27 27 27 27 27 00 00 00 00     ..&&''''''''....
    1dc4:	00 00 00 00 ff ff 52 f6 ff b6 00 ff ff f6 f6 ff     ......R.........
    1dd4:	ff ff a4 ff ff 49 00 00 a4 ff ff ff 52 00 00 09     .....I......R...
    1de4:	00 5b 52 49 00 00 13 2f 26 00 00 00 1d 1d 2f 2f     .[RI.../&.....//
    1df4:	2f 26 14 1d 27 27 27 27 27 27 27 27 00 00 00 00     /&..''''''''....
    1e04:	00 00 00 00 ff ff ff ff 5b 00 00 1b ff a4 ff ff     ........[.......
    1e14:	5b 00 1b 36 ff 5b 5b ff ff 09 1b 37 52 09 00 5b     [..6.[[....7R..[
    1e24:	52 09 00 2e 00 00 00 13 00 00 00 2e 26 1d 26 27     R...........&.&'
    1e34:	14 1d 26 2f 27 27 27 27 27 27 27 27 00 00 00 00     ..&/''''''''....
    1e44:	00 00 00 00 ad ff ad 00 12 3f 3f 00 6d ff f6 00     .........??.m...
    1e54:	12 3f 3f 00 6d ff ff 00 09 37 37 00 65 5b 52 00     .??.m....77.e[R.
    1e64:	00 37 37 00 25 00 00 00 13 2f 2f 00 2f 1d 14 1d     .77.%....//./...
    1e74:	2f 2f 27 00 27 27 27 27 27 27 27 00 00 00 00 00     //'.'''''''.....
    1e84:	00 00 00 00 6b 6b 21 22 22 6a 18 2a 6b 6b 6b 22     ....kk!""j.*kkk"
    1e94:	2a 22 19 6b 2a 22 1a 11 11 11 09 09 6a 11 00 00     *".k*"......j...
    1ea4:	00 00 00 00 62 00 09 15 1f 1f 1f 1f 19 00 0a 27     ....b..........'
    1eb4:	27 27 27 27 19 00 0a 2f 2f 2f 13 00 19 00 12 37     ''''...///.....7
    1ec4:	37 37 1b 00 2a 73 6b 6b 22 22 21 22 2a 6b 6b 21     77..*skk""!"*kk!
    1ed4:	6b 22 2a 21 09 11 19 11 19 11 11 11 00 00 00 00     k"*!............
    1ee4:	00 00 00 00 1f 15 14 0a 01 0b 15 15 27 27 27 27     ............''''
    1ef4:	27 27 27 27 00 1c 2f 2f 2f 2f 2f 2f 00 13 37 37     ''''..//////..77
    1f04:	37 37 37 37 22 2a 6b 22 22 6b 21 2a 22 22 2a 6b     7777"*k""k!*""*k
    1f14:	2b 6b 2a 21 08 11 11 11 1a 2a 2a 22 00 00 00 00     +k*!.....**"....
    1f24:	00 21 2a 22 15 15 1f 1f 00 11 21 6b 27 27 27 27     .!*"......!k''''
    1f34:	0a 11 19 63 14 00 00 00 08 22 1a 08 1c 12 12 00     ...c....."......
    1f44:	6b 22 08 00 2a 2a 21 6a 2a 21 21 22 19 22 21 21     k"..**!j*!!"."!!
    1f54:	22 19 22 19 21 22 62 11 09 19 6b 22 6b 19 08 00     ".".!"b...k"k...
    1f64:	00 08 6b 22 19 09 00 0b 15 00 11 19 08 00 0b 27     ..k"...........'
    1f74:	27 13 00 08 00 13 2f 2f 2f 2f 09 00 13 37 37 37     '.....////...777
    1f84:	37 37 2e 00 2a 6b 2a 19 19 6b 6b 19 22 22 6b 22     77..*k*..kk.""k"
    1f94:	19 21 6b 22 62 11 11 08 08 11 11 11 11 00 00 00     .!k"b...........
    1fa4:	00 00 00 00 00 0b 15 1f 1f 1f 1f 15 00 13 27 27     ..............''
    1fb4:	27 1f 27 27 00 13 2f 2f 2f 0a 00 1c 00 1b 37 37     '.''..///.....77
    1fc4:	37 12 00 00 19 6b 19 22 63 22 22 6b 19 6b 22 1a     7....k."c""k.k".
    1fd4:	1a 1a 22 22 11 11 09 09 08 08 19 22 00 00 00 00     ..""......."....
    1fe4:	00 0a 00 09 14 09 0b 1f 1f 1f 14 00 27 27 14 14     ............''..
    1ff4:	27 27 27 14 2f 2f 2f 14 1c 2f 2f 2f 2f 37 37 37     '''.///..////777
    2004:	00 1c 37 37 6b 6b 21 22 22 6a 18 2a 6b 6b 6b 22     ..77kk!""j.*kkk"
    2014:	2a 22 19 6b 2a 22 11 11 11 11 11 19 11 08 00 00     *".k*"..........
    2024:	00 00 00 08 00 00 0b 1e 1f 1f 15 09 0b 1e 27 27     ..............''
    2034:	27 14 01 11 2f 2f 2f 26 0a 08 1a 2a 37 2f 1b 00     '...///&...*7/..
    2044:	11 2a 2a 73 6b 6b 21 22 22 6a 18 2a 6b 6b 6b 22     .**skk!""j.*kkk"
    2054:	2a 22 19 6b 2a 2a 6b 19 11 11 09 09 6b 19 09 00     *".k**k.....k...
    2064:	00 00 00 00 62 09 00 01 14 1f 1f 1f 11 00 09 27     ....b..........'
    2074:	27 27 27 27 09 00 26 2f 2f 13 00 00 00 09 37 37     ''''..&//.....77
    2084:	37 00 00 00 2a 73 6b 6b 22 22 21 22 2a 6b 6b 21     7...*skk""!"*kk!
    2094:	6b 22 2a 21 11 1a 6b 19 22 6a 6b 11 00 00 62 22     k"*!..k."jk...b"
    20a4:	19 19 09 00 1e 0a 11 22 19 08 00 09 27 01 19 19     ......."....'...
    20b4:	08 00 09 1e 00 00 11 08 00 09 26 2f 00 00 00 00     ..........&/....
    20c4:	00 2e 37 25 22 2a 6b 22 22 6b 21 2a 22 22 2a 6b     ..7%"*k""k!*""*k
    20d4:	2b 6b 2a 21 11 1a 2a 6b 6b 22 19 21 00 08 6b 2a     +k*!..*kk".!..k*
    20e4:	22 08 00 11 15 00 11 2a 09 00 0b 00 27 14 00 11     "......*....'...
    20f4:	00 0a 27 13 2f 2f 12 00 00 1d 2f 2f 24 37 37 09     ..'.//....//$77.
    2104:	09 37 37 37 2a 2a 21 6a 2a 21 21 22 19 22 21 22     .777**!j*!!"."!"
    2114:	2a 19 22 19 21 22 1a 11 19 11 11 09 6a 19 00 00     *.".!"......j...
    2124:	00 00 00 00 09 09 00 14 00 0a 1f 1f 00 00 0a 27     ...............'
    2134:	13 0a 27 27 13 00 26 2f 26 12 2f 2f 37 24 37 37     ..''..&/&.//7$77
    2144:	37 1b 37 37 2a 6b 2a 19 19 6b 6b 19 22 22 6b 22     7.77*k*..kk.""k"
    2154:	19 21 6b 22 11 08 11 11 19 6a 2a 22 00 00 00 00     .!k".....j*"....
    2164:	19 6b 21 22 1f 1f 1f 09 11 22 2a 2a 27 27 27 01     .k!"....."**'''.
    2174:	22 19 22 22 1c 00 00 08 6a 22 18 11 37 37 1b 08     ".""....j"..77..
    2184:	22 22 22 11 19 6b 19 22 63 22 22 6b 19 6b 22 22     """..k."c""k.k""
    2194:	62 22 22 22 22 22 11 11 09 11 11 11 19 11 00 00     b"""""..........
    21a4:	00 00 00 00 09 00 01 14 1f 1f 1f 15 00 00 1e 27     ...............'
    21b4:	27 13 27 27 00 13 2f 2f 1c 00 25 2f 00 25 37 37     '.''..//..%/.%77
    21c4:	12 00 2e 37 6b 6b 21 22 22 6a 18 2a 6b 6b 2a 22     ...7kk!""j.*kk*"
    21d4:	2a 22 19 6b 11 11 11 11 19 22 11 11 00 00 00 00     *".k....."......
    21e4:	08 11 00 00 1f 1f 1f 15 00 08 00 1f 1e 27 27 27     .............'''
    21f4:	0a 00 13 27 2f 13 2f 2f 25 00 26 2f 37 12 25 37     ...'/.//%.&/7.%7
    2204:	37 24 37 37 2a 73 6b 6b 22 22 21 22 2a 6b 6b 21     7$77*skk""!"*kk!
    2214:	6b 22 2a 21 09 11 11 08 11 11 11 11 00 00 00 00     k"*!............
    2224:	00 00 00 00 1f 1f 1f 1f 1f 1f 15 1f 27 27 27 27     ............''''
    2234:	27 27 1d 27 2f 2f 2f 1c 00 00 25 2f 36 37 37 37     ''.'///...%/6777
    2244:	37 1b 24 37 22 2a 6b 22 22 6b 21 2a 21 22 2a 6b     7.$7"*k""k!*!"*k
    2254:	2b 6b 2a 21 08 11 11 11 1a 2a 2a 22 00 00 00 00     +k*!.....**"....
    2264:	00 09 19 22 1f 1f 1f 16 0b 00 08 6b 27 1d 27 27     ...".......k'.''
    2274:	27 1e 00 63 2f 09 00 1d 2f 2f 09 19 37 1c 24 37     '..c/...//..7.$7
    2284:	37 37 09 22 6b 19 6b 22 22 22 6b 00 6b 6b 6b 21     77."k.k"""k.kkk!
    2294:	2a 00 00 13 22 6b 6b 10 00 13 1d 00 19 62 6b 00     *..."kk......bk.
    22a4:	13 1d 00 1d 21 22 00 13 1d 1d 1d ff 6a 18 00 13     ....!"......j...
    22b4:	1d 13 ff ff 6a 22 00 1d 1d 13 ff ff 21 22 00 1d     ....j"......!"..
    22c4:	1d 13 ff ff 2a 6b 6b 22 21 6a 2a 6a 00 00 2a 22     ....*kk"!j*j..*"
    22d4:	6b 22 2a 73 13 13 00 19 6b 2a 2a 6b 00 1d 13 00     k"*s....k**k....
    22e4:	6b 2a 6b 6b 1d 1d 1d 13 00 73 2a 22 ff 13 1d 13     k*kk.....s*"....
    22f4:	00 6b 6b 21 ff 13 1d 1d 00 21 6b 2a ff 13 1d 1d     .kk!.....!k*....
    2304:	00 6a 73 6b 6b 19 6b 22 22 22 6b 00 6b 6b 6b 21     .jskk.k"""k.kkk!
    2314:	2a 00 00 13 22 6b 6b 10 00 13 1d 1d 19 62 6b 00     *..."kk......bk.
    2324:	13 1d 1d 1d 21 22 00 13 1d 1d 1d 1d 6a 18 00 13     ....!"......j...
    2334:	1d 1d 1d 00 6a 22 00 1d 1d 1d 00 00 21 22 00 1d     ....j"......!"..
    2344:	1d 1d 1d 00 00 00 00 00 00 00 00 00 13 13 13 13     ................
    2354:	13 13 13 13 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2364:	1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2374:	1d 1d 1d 00 00 1d 1d 1d 1d 1d 00 00 1d 1d 1d 1d     ................
    2384:	1d 1d 1d 00 2a 6b 6b 22 21 6a 2a 6a 00 00 2a 22     ....*kk"!j*j..*"
    2394:	6b 22 2a 73 13 13 00 19 6b 2a 2a 6b 1d 1d 13 00     k"*s....k**k....
    23a4:	6b 2a 6b 6b 1d 1d 1d 13 00 73 2a 22 1d 1d 1d 13     k*kk.....s*"....
    23b4:	00 6b 6b 21 00 1d 1d 1d 00 21 6b 2a 1d 1d 1d 1d     .kk!.....!k*....
    23c4:	00 6a 73 6b 6b 19 6b 22 22 22 6b ff 6b 6b 6b 21     .jskk.k"""k.kkk!
    23d4:	2a ff ff ec 22 6b 6b 10 ff ec e2 e2 19 62 6b ff     *..."kk......bk.
    23e4:	ec e2 e2 e2 21 22 ff ec e2 e2 e2 e2 6a 18 ff ec     ....!"......j...
    23f4:	e2 e2 e2 ff 6a 22 ff e2 e2 e2 ff ff 21 22 ff e2     ....j"......!"..
    2404:	e2 e2 e2 ff ff ff ff ff ff ff ff ff ec ec ec ec     ................
    2414:	ec ec ec ec e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2     ................
    2424:	e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2     ................
    2434:	e2 e2 e2 ff ff e2 e2 e2 e2 e2 ff ff e2 e2 e2 e2     ................
    2444:	e2 e2 e2 ff 2a 6b 6b 22 21 6a 2a 6a ff ff 2a 22     ....*kk"!j*j..*"
    2454:	6b 22 2a 73 ec ec ff 19 6b 2a 2a 6b e2 e2 ec ff     k"*s....k**k....
    2464:	6b 2a 6b 6b e2 e2 e2 ec ff 73 2a 22 e2 e2 e2 ec     k*kk.....s*"....
    2474:	ff 6b 6b 21 ff e2 e2 e2 ff 21 6b 2a e2 e2 e2 e2     .kk!.....!k*....
    2484:	ff 6a 73 6b 1a 00 12 3f 3f 3f 36 2e 5a 00 12 3f     .jsk...???6.Z..?
    2494:	3f 3f 3f 3f 19 00 12 3f 3f 3f 25 37 11 00 12 37     ????...???%7...7
    24a4:	37 37 1b 12 19 08 0a 2f 2f 2f 13 00 6a 08 00 00     77.....///..j...
    24b4:	00 00 09 11 6a 22 62 10 62 21 22 22 21 22 21 19     ....j"b.b!""!"!.
    24c4:	22 22 22 22 3f 3f 3f 3f 37 3f 3f 3f 3f 3f 36 1b     """"????7?????6.
    24d4:	12 3f 3f 3f 3f 3f 37 09 12 3f 3f 3f 37 37 37 2e     .?????7..???777.
    24e4:	12 37 37 37 13 2f 2f 26 0a 2f 2f 2f 00 13 13 00     .777.//&.///....
    24f4:	09 13 13 13 11 08 11 6b 11 08 08 08 22 6a 19 22     .......k...."j."
    2504:	6a 6b 2a 73 3f 3f 3f 00 19 08 00 1b 36 2d 2d 00     jk*s???.....6--.
    2514:	09 00 09 3f 1b 00 00 00 00 09 37 3f 2e 25 25 25     ...?......7?.%%%
    2524:	09 2f 37 37 2f 2f 2f 2f 27 2f 2f 2f 13 0a 0a 13     ./77////'///....
    2534:	0a 13 14 1d 08 11 08 09 09 08 08 08 2a 2a 22 73     ............**"s
    2544:	22 6a 73 6b 3f 3f 3f 1b 36 3f 3f 25 3f 3f 2d 00     "jsk???.6??%??-.
    2554:	1b 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 37 1c 1b 1b     .???????????7...
    2564:	1b 25 37 37 1d 00 09 08 00 00 27 2f 01 5a 73 19     .%77......'/.Zs.
    2574:	08 00 0a 13 10 6b 6b 6b 10 62 08 08 21 22 73 22     .....kkk.b..!"s"
    2584:	22 6b 73 21 00 1b 3f 3f 3f 12 00 00 1b 12 3f 3f     "ks!..???.....??
    2594:	3f 12 00 00 37 1b 3f 3f 3f 12 00 24 37 2e 37 37     ?...7.???..$7.77
    25a4:	37 1c 2e 37 2f 2f 26 2f 2f 2f 2f 2f 0a 0a 00 00     7..7//&/////....
    25b4:	0a 0a 09 00 11 11 6b 19 11 11 19 19 21 73 21 2a     ......k.....!s!*
    25c4:	2a 21 2a 21 2d 3f 3f 3f 12 12 3f 3f 3f 3f 3f 3f     *!*!-???..??????
    25d4:	00 12 3f 3f 3f 3f 3f 1b 00 12 3f 3f 37 37 1c 00     ..?????...??77..
    25e4:	00 12 37 37 1d 0a 08 11 00 0a 2f 2f 08 19 2a 19     ..77......//..*.
    25f4:	11 00 0a 0a 22 21 2a 22 19 5a 09 09 22 22 6a 22     ...."!*".Z..""j"
    2604:	19 6a 73 21 3f 1b 08 22 22 22 6b 6a 3f 1b 08 21     .js!?.."""kj?..!
    2614:	2a 22 21 6b 3f 1b 08 10 6a 22 21 74 37 25 00 11     *"!k?...j"!t7%..
    2624:	62 22 22 74 2f 1d 00 19 22 74 6b 74 0a 09 11 10     b""t/..."tkt....
    2634:	6a 6b 6b 6a 11 11 62 10 62 22 22 22 21 22 21 19     jkkj..b.b"""!"!.
    2644:	22 22 22 22 00 12 3f 3f 36 00 1b 2d 11 00 37 37     """"..??6..-..77
    2654:	37 12 00 1b 11 00 13 2f 2f 2f 2f 2f 19 11 00 0a     7....../////....
    2664:	14 27 27 27 21 22 1a 08 00 00 00 00 6a 18 6b 10     .'''!"......j.k.
    2674:	62 6b 6b 62 6a 22 62 10 62 22 22 22 21 22 21 19     bkkbj"b.b"""!"!.
    2684:	22 22 22 22 3f 3f 24 00 36 3f 3f 24 37 37 1b 2d     """"??$.6??$77.-
    2694:	37 37 37 37 2f 2f 2f 2f 2f 25 00 00 27 1e 1e 27     7777/////%..'..'
    26a4:	27 09 11 21 00 00 00 00 00 08 2a 22 62 22 6b 73     '..!......*"b"ks
    26b4:	2a 21 2a 2a 6a 22 22 73 21 6b 6b 2a 22 6a 19 22     *!**j""s!kk*"j."
    26c4:	6a 6b 2a 73 2d 3f 3f 36 1b 3f 3f 3f 37 37 37 37     jk*s-??6.???7777
    26d4:	37 37 37 09 00 0a 2f 2f 2f 2f 13 00 1a 00 13 0a     777...////......
    26e4:	13 1e 09 11 6b 1a 08 08 00 00 11 22 2b 6b 21 2a     ....k......"+k!*
    26f4:	19 6b 6b 21 2a 6b 19 6b 6a 21 6b 2a 2a 2a 22 73     .kk!*k.kj!k***"s
    2704:	22 6a 73 6b 3f 3f 3f 3f 3f 3f 3f 3f 37 37 37 1b     "jsk????????777.
    2714:	37 37 37 37 12 2f 1c 00 2e 2f 2f 2f 00 14 09 08     7777./...///....
    2724:	00 00 00 13 11 08 63 19 2a 73 19 08 6b 6b 73 19     ......c.*s..kks.
    2734:	10 7c 21 6b 19 6b 6b 6b 10 74 22 2a 21 22 73 22     .|!k.kkk.t"*!"s"
    2744:	22 6b 73 21 3f 3f 1b 08 22 22 22 11 24 00 00 09     "ks!??..""".$...
    2754:	19 6b 21 11 2f 26 13 09 11 22 2a 08 13 14 27 09     .k!./&..."*...'.
    2764:	19 21 2a 6b 08 00 00 09 2a 29 21 73 21 6a 18 2a     .!*k....*)!s!j.*
    2774:	2a 73 21 21 6b 21 73 2a 2a 21 6a 19 21 73 21 2a     *s!!k!s**!j.!s!*
    2784:	2a 21 2a 21 00 2d 3f 3f 12 00 3f 3f 00 25 37 37     *!*!.-??..??.%77
    2794:	24 12 37 37 00 0a 2f 2f 2f 2f 2f 2f 11 00 0a 1e     $.77..//////....
    27a4:	27 27 27 13 22 19 08 00 00 00 00 11 22 2a 2a 19     '''."......."**.
    27b4:	6b 21 21 74 22 21 2a 22 19 73 22 62 22 22 6a 22     k!!t"!*".s"b""j"
    27c4:	19 6a 73 21 3f 12 00 36 3f 3f 3f 36 37 00 00 09     .js!?..6???67...
    27d4:	37 37 37 12 1c 09 1a 00 13 2f 25 00 08 1a 62 08     777....../%...b.
    27e4:	00 14 01 11 19 22 62 11 09 09 1a 74 6a 18 6b 10     ....."b....tj.k.
    27f4:	6a 6b 6b 6a 6a 22 62 10 62 22 22 22 21 22 21 19     jkkjj"b.b"""!"!.
    2804:	22 22 22 22 12 3f 3f 3f 3f 1b 24 3f 12 37 37 24     """".????.$?.77$
    2814:	00 00 24 37 0a 2f 2f 2f 26 13 25 2f 00 00 13 13     ..$7.///&.%/....
    2824:	14 27 09 00 1a 5a 09 08 00 00 09 19 62 22 6b 73     .'...Z......b"ks
    2834:	2a 21 2a 2a 6a 22 22 73 21 6b 6b 2a 22 6a 19 22     *!**j""s!kk*"j."
    2844:	6a 6b 2a 73 3f 3f 3f 3f 1b 09 09 6a 37 1c 37 37     jk*s????...j7.77
    2854:	1b 00 22 73 2f 09 25 2f 2f 09 11 6b 0a 00 09 27     .."s/.%//..k...'
    2864:	1e 13 11 6b 19 19 00 00 00 11 2a 22 2b 6b 21 2a     ...k......*"+k!*
    2874:	19 6b 6b 21 2a 6b 19 6b 6a 21 6b 2a 2a 2a 22 73     .kk!*k.kj!k***"s
    2884:	22 6a 73 6b 22 00 13 1d 1d 13 ff ff 6b 00 13 1d     "jsk".......k...
    2894:	1d 1d 13 ff 19 00 13 1d 1d 1d 1d 00 00 13 13 1d     ................
    28a4:	1d 1d 1d 00 00 13 1d 1d 1d 1d 1d 00 00 13 1d 1d     ................
    28b4:	13 1d 13 1d 00 13 1d 1d 13 1d 1d 13 00 13 1d 1d     ................
    28c4:	1d 00 1d 1d ff ff ff ff ff ff ff ff ff 00 00 00     ................
    28d4:	00 00 ff ff 00 00 52 00 00 00 00 00 00 52 00 00     ......R......R..
	...
    28f4:	00 00 00 1d 1d 00 00 00 00 00 1d 13 1d 1d 1d 13     ................
    2904:	1d 1d 1d 1d ff 13 1d 1d 13 00 22 73 13 1d 1d 1d     .........."s....
    2914:	13 00 21 2a 1d 1d 1d 1d 13 00 2a 6b 1d 1d 1d 1d     ..!*......*k....
    2924:	13 13 00 21 1d 1d 1d 1d 1d 13 00 21 13 1d 13 1d     ...!.......!....
    2934:	1d 13 00 21 1d 1d 13 1d 1d 13 00 73 1d 00 1d 1d     ...!.......s....
    2944:	1d 13 00 2a 22 00 13 1d 1d 1d 1d 1d 6b 00 13 1d     ...*".......k...
    2954:	1d 1d 1d 1d 19 00 13 1d 1d 1d 1d 00 00 13 13 1d     ................
    2964:	1d 1d 1d 00 00 13 1d 1d 1d 1d 13 1d 00 13 1d 1d     ................
    2974:	1d 1d 1d 13 00 13 1d 1d 1d 1d 1d 1d 00 13 1d 1d     ................
    2984:	1d 1d 00 00 1d 1d 1d 1d 1d 1d 1d 1d 00 00 52 00     ..............R.
    2994:	00 00 00 1d 00 52 00 00 00 00 00 00 00 00 00 00     .....R..........
	...
    29ac:	00 00 00 1d 1d 00 00 00 00 00 1d 13 1d 1d 1d 1d     ................
    29bc:	1d 1d 1d 1d 00 00 00 00 00 00 00 00 1d 1d 1d 1d     ................
    29cc:	13 00 22 73 1d 1d 1d 1d 13 00 21 2a 1d 1d 1d 1d     .."s......!*....
    29dc:	13 00 2a 6b 1d 1d 1d 1d 13 13 00 21 13 1d 1d 1d     ..*k.......!....
    29ec:	1d 13 00 21 1d 1d 1d 1d 1d 13 00 21 1d 1d 1d 1d     ...!.......!....
    29fc:	1d 13 00 73 00 1d 1d 1d 1d 13 00 2a 22 ff ec e2     ...s.......*"...
    2a0c:	e2 e2 e2 e2 6b ff ec e2 e2 e2 e2 e2 19 ff ec e2     ....k...........
    2a1c:	e2 e2 e2 ff ff ec ec e2 e2 e2 e2 ff ff ec e2 e2     ................
    2a2c:	e2 e2 ec e2 ff ec e2 e2 e2 e2 e2 ec ff ec e2 e2     ................
    2a3c:	e2 e2 e2 e2 ff ec e2 e2 e2 e2 ff ff e2 e2 e2 e2     ................
    2a4c:	e2 e2 e2 e2 ff ff ad ff ff ff ff e2 ff ad ff ff     ................
    2a5c:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2a6c:	ff ff ff e2 e2 ff ff ff ff ff e2 ec e2 e2 e2 e2     ................
    2a7c:	e2 e2 e2 e2 ff ff ff ff ff ff ff ff e2 e2 e2 e2     ................
    2a8c:	ec ff 22 73 e2 e2 e2 e2 ec ff 21 2a e2 e2 e2 e2     .."s......!*....
    2a9c:	ec ff 2a 6b e2 e2 e2 e2 ec ec ff 21 ec e2 e2 e2     ..*k.......!....
    2aac:	e2 ec ff 21 e2 e2 e2 e2 e2 ec ff 21 e2 e2 e2 e2     ...!.......!....
    2abc:	e2 ec ff 73 ff e2 e2 e2 e2 ec ff 2a 6b 62 11 11     ...s.......*kb..
    2acc:	22 6a 18 1a 11 09 00 00 11 22 11 08 00 00 0a 0b     "j......."......
    2adc:	00 11 00 00 00 1e 1f 1f 0b 00 00 0b 00 14 1f 1f     ................
    2aec:	15 00 01 1f 00 0a 27 27 27 00 1c 27 11 00 2f 2f     ......'''..'..//
    2afc:	2f 13 2f 2f 11 00 24 37 37 37 37 37 19 6b 62 1a     /.//..$77777.kb.
    2b0c:	19 22 19 22 00 11 09 00 00 11 11 08 0b 00 00 0a     ."."............
    2b1c:	0b 00 00 00 1e 00 00 1f 1f 1f 1f 1f 1f 0a 0a 1f     ................
    2b2c:	1f 1f 1f 1f 27 1d 14 27 27 27 27 27 2f 2f 26 2f     ....'..'''''//&/
    2b3c:	2f 2f 2f 2f 37 37 37 37 37 1b 37 37 22 2a 6b 22     ////77777.77"*k"
    2b4c:	22 6b 21 2a 09 11 1a 11 11 11 11 19 00 00 08 00     "k!*............
    2b5c:	00 00 00 08 1f 00 00 0b 1f 1f 15 00 1f 00 00 13     ................
    2b6c:	1f 1f 1d 00 27 00 00 13 27 27 1d 00 2f 1c 13 25     ....'...''../..%
    2b7c:	2f 2f 25 00 37 37 37 37 37 37 25 00 2a 2a 21 62     //%.777777%.**!b
    2b8c:	1a 11 21 22 19 22 19 11 00 00 19 19 21 22 19 00     ..!"."......!"..
    2b9c:	01 0b 08 22 6b 1a 08 00 15 1e 00 1a 21 11 00 0b     ..."k.......!...
    2bac:	1f 1f 0b 08 1a 00 00 26 27 27 1d 00 09 00 1c 2f     .......&''...../
    2bbc:	2f 2f 2f 0a 00 09 37 37 37 37 37 25 2a 6b 2a 19     ///...77777%*k*.
    2bcc:	19 6b 6b 19 22 22 62 11 08 08 11 11 6b 19 09 00     .kk.""b.....k...
    2bdc:	00 00 00 00 6b 08 00 0b 1f 1f 1f 15 11 00 0b 1f     ....k...........
    2bec:	1f 1f 1f 1f 08 00 26 27 27 0a 0a 1d 00 09 2f 2f     ......&''.....//
    2bfc:	2f 00 00 00 00 12 37 37 37 00 11 00 19 6b 19 22     /.....777....k."
    2c0c:	63 22 22 6b 09 11 09 09 11 11 11 11 00 00 00 00     c""k............
    2c1c:	00 00 00 00 0b 1f 1f 1f 00 00 15 1f 1f 1f 1f 1f     ................
    2c2c:	00 1e 1f 1f 13 27 27 27 26 27 27 27 13 2f 2f 2f     .....'''&'''.///
    2c3c:	2f 2f 2f 13 1b 37 37 37 37 37 12 09 6b 6b 21 22     ///..77777..kk!"
    2c4c:	22 62 18 2a 11 11 11 09 11 09 08 19 00 00 00 00     "b.*............
    2c5c:	00 00 00 00 0b 0b 0b 1f 1f 1f 1f 0b 1f 14 0a 1f     ................
    2c6c:	1f 1f 1f 0a 13 00 09 27 27 27 27 09 08 09 09 2f     .......''''..../
    2c7c:	2f 2f 2f 00 22 11 00 37 37 37 2e 00 18 22 6b 19     ///."..777..."k.
    2c8c:	19 6a 19 11 21 18 1a 11 08 00 00 00 19 08 00 00     .j..!...........
    2c9c:	00 0a 00 00 00 00 0a 0a 0a 00 13 13 08 00 00 0a     ................
    2cac:	00 13 1d 1d 19 11 00 00 00 00 00 1d 21 22 22 19     ............!"".
    2cbc:	11 08 00 00 19 22 22 19 2a 19 2a 22 11 00 1d 1d     ....."".*.*"....
    2ccc:	1d 00 00 00 00 00 1d 1d 1d 1d 00 00 00 13 1d 1d     ................
    2cdc:	1d 1d 1d 00 13 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2cec:	1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 00 00 00 00     ................
    2cfc:	00 00 00 00 22 19 11 08 08 08 00 00 52 52 52 00     ....".......RRR.
    2d0c:	52 52 52 00 ff ff ff 00 ff ff ff 00 00 ff ff 00     RRR.............
    2d1c:	ff ff 00 00 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2d2c:	1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 00 00 00 00     ................
	...
    2d48:	00 00 1d 1d 1d 13 00 19 00 1d 1d 1d 1d 00 0a 0a     ................
    2d58:	1d 1d 1d 1d 1d 13 00 00 1d 1d 1d 1d 1d 1d 13 13     ................
    2d68:	1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
	...
    2d84:	08 11 19 62 19 21 21 6b 18 7c 21 18 00 00 00 11     ...b.!!k.|!.....
    2d94:	11 6b 73 18 0a 0a 0a 00 00 00 11 19 00 00 0a 0a     .ks.............
    2da4:	0a 00 00 00 1d 13 00 00 00 00 00 08 00 00 00 00     ................
    2db4:	00 08 11 22 00 00 09 11 19 21 2a 19 10 2a 21 21     ...".....!*..*!!
    2dc4:	6a 22 22 18 18 22 6b 19 19 6a 19 11 21 18 1a 11     j"".."k..j..!...
    2dd4:	08 00 00 00 19 08 00 00 00 0a 00 00 00 00 0a 0a     ................
    2de4:	0a 00 13 13 08 00 00 0a 00 13 1d 1d 19 11 00 00     ................
    2df4:	00 00 00 00 21 22 22 19 11 08 00 00 19 22 22 19     ....!""......"".
    2e04:	2a 19 2a 22 11 00 13 1d 1d 00 ff ff 00 00 13 1d     *.*"............
    2e14:	1d 00 52 52 00 13 1d 1d 1d 00 ff ff 13 1d 1d 1d     ..RR............
    2e24:	1d 1d 00 00 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 13 1d     ................
    2e34:	1d 1d 1d 1d 00 00 00 00 00 00 00 00 22 19 11 08     ............"...
    2e44:	08 08 00 00 52 ff ff 52 ff ff 52 ff 52 52 52 52     ....R..R..R.RRRR
    2e54:	52 52 52 52 52 ff ff 52 ff ff 52 ff 00 00 00 00     RRRRR..R..R.....
    2e64:	00 00 00 00 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2e74:	1d 1d 1d 1d 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e84:	00 00 00 00 ff 00 1d 1d 13 13 00 19 52 00 1d 1d     ............R...
    2e94:	13 00 0a 0a ff 00 1d 1d 1d 13 00 00 00 1d 1d 1d     ................
    2ea4:	1d 1d 13 13 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d 1d     ................
    2eb4:	13 1d 1d 1d 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ec4:	08 11 19 62 18 22 6b 19 19 6a 19 11 21 18 1a 11     ...b."k..j..!...
    2ed4:	08 00 00 00 19 08 00 00 00 0a ff ff 00 00 0a 0a     ................
    2ee4:	0a ff ec ec 08 00 00 0a ff ec e2 e2 19 11 00 00     ................
    2ef4:	00 00 00 00 21 22 22 19 11 08 00 00 19 22 22 19     ....!""......"".
    2f04:	2a 19 2a 22 11 ff ec e2 e2 ff 00 00 00 ff ec e2     *.*"............
    2f14:	e2 ff ad ad ff ec e2 e2 e2 ff 00 00 ec e2 e2 e2     ................
    2f24:	e2 e2 ff ff e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 ec e2     ................
    2f34:	e2 e2 e2 e2 00 00 00 00 00 00 00 00 22 19 11 08     ............"...
    2f44:	08 08 00 00 ad 00 00 ad 00 00 ad 00 ad ad ad ad     ................
    2f54:	ad ad ad ad ad 00 00 ad 00 00 ad 00 ff ff ff ff     ................
    2f64:	ff ff ff ff e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2     ................
    2f74:	e2 e2 e2 e2 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2f84:	00 00 00 00 00 ff e2 e2 ec ec ff 19 ad ff e2 e2     ................
    2f94:	ec ff 0a 0a 00 ff e2 e2 e2 ec ff ff ff e2 e2 e2     ................
    2fa4:	e2 e2 ec ec e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2 e2     ................
    2fb4:	ec e2 e2 e2 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fc4:	08 11 19 62 19 21 21 6b 18 7c 21 18 00 00 00 11     ...b.!!k.|!.....
    2fd4:	11 6b 73 18 0a 0a 0a 00 00 00 11 19 ff ff 0a 0a     .ks.............
    2fe4:	0a 00 00 00 e2 ec ff 00 00 00 00 08 00 00 00 00     ................
    2ff4:	00 08 11 22 00 00 09 11 19 21 2a 19 10 2a 21 21     ...".....!*..*!!
    3004:	6a 22 22 18 11 08 08 08 00 00 00 00 00 0a 0a 0a     j"".............
    3014:	0a 0a 0a 0a 0a 0a 09 09 09 09 09 09 09 09 00 00     ................
	...
    3040:	22 19 11 08 08 08 00 00 00 00 00 00 00 00 00 00     "...............
    3050:	0a 0a 0a 0a 0a 0a 0a 0a 09 09 09 09 09 09 09 09     ................
	...
    308c:	08 09 11 19 0a 0a 0a 0a 0a 0a 0a 0a 09 09 09 09     ................
    309c:	09 09 09 0a 00 00 00 00 00 00 00 09 00 00 00 00     ................
	...
    30c4:	08 11 19 62 1a 00 12 3f 3f 3f 3f 3f 6b 09 00 3f     ...b...?????k..?
    30d4:	3f 3f 3f 3f 22 11 00 2d 3f 3f 3f 24 19 19 00 1b     ????"..-???$....
    30e4:	37 37 2e 00 21 22 09 00 2f 2f 09 08 6a 18 11 00     77..!"..//..j...
    30f4:	1e 13 09 1a 6a 22 19 00 0a 08 22 22 21 22 21 11     ....j"....""!"!.
    3104:	11 22 22 22 3f 3f 3f 3f 37 00 3f 3f 3f 3f 3f 3f     ."""????7.??????
    3114:	24 00 3f 3f 36 3f 3f 3f 12 00 3f 3f 13 37 37 2e     $.??6???..??.77.
    3124:	00 00 37 37 00 26 2f 13 00 00 2e 2f 00 0a 27 01     ..77.&/..../..'.
    3134:	09 00 26 27 19 00 13 09 19 08 00 00 22 11 08 22     ..&'........".."
    3144:	6a 6b 2a 73 3f 3f 3f 3f 3f 3f 2d 00 3f 09 00 1b     jk*s??????-.?...
    3154:	3f 3f 2d 00 3f 09 00 1b 3f 3f 2d 00 37 12 00 1b     ??-.?...??-.7...
    3164:	37 37 2d 1c 2f 0a 00 13 2f 2f 25 2f 27 13 00 13     77-./...//%/'...
    3174:	27 27 27 27 00 09 10 00 00 01 13 13 2a 2a 22 73     ''''........**"s
    3184:	19 11 08 00 00 2d 3f 3f 1b 2e 3f 3f 1b 3f 3f 3f     .....-??..??.???
    3194:	00 24 3f 3f 37 3f 3f 2e 1b 2d 3f 3f 37 37 37 37     .$??7??..-??7777
    31a4:	37 37 37 37 2f 2f 1c 00 00 00 1c 2f 27 27 09 11     7777//...../''..
    31b4:	08 08 0a 27 1f 1d 08 6b 10 11 00 13 00 00 5a 22     ...'...k......Z"
    31c4:	22 6a 19 08 12 12 3f 3f 3f 00 11 00 24 12 3f 3f     "j....???...$.??
    31d4:	3f 00 08 00 3f 09 3f 3f 3f 09 00 00 37 24 37 37     ?...?.???...7$77
    31e4:	37 25 1b 2d 2f 2f 1c 2f 2f 2f 2f 2f 27 27 13 27     7%.-//./////''.'
    31f4:	27 27 27 27 13 09 00 09 1d 27 27 14 08 62 19 08     ''''.....''..b..
    3204:	00 00 00 00 1b 3f 3f 3f 3f 12 00 22 1b 3f 3f 3f     .....????..".???
    3214:	3f 2d 00 08 1b 3f 3f 3f 3f 3f 1b 00 1b 37 37 37     ?-...?????...777
    3224:	37 37 37 12 13 2f 2f 25 13 2f 2f 2f 13 27 27 1d     777..//%.///.''.
    3234:	00 14 27 27 13 1e 13 0b 08 00 0b 00 00 00 08 11     ..''............
    3244:	19 1a 11 19 6b 08 00 36 3f 3f 25 00 6b 11 00 2d     ....k..6??%.k..-
    3254:	3f 3f 24 09 11 19 00 00 00 00 00 5a 00 08 00 2d     ??$........Z...-
    3264:	37 37 12 11 09 00 00 25 2f 2f 09 5a 1e 00 00 1d     77.....%//.Z....
    3274:	27 27 01 62 00 08 08 00 00 00 09 22 21 22 21 19     ''.b......."!"!.
    3284:	22 22 22 22 00 00 00 00 00 2a 22 73 00 00 00 6b     """".....*"s...k
    3294:	22 73 21 2a 00 00 21 2a 6b 2a 2a 6b 00 19 21 2a     "s!*..!*k**k..!*
    32a4:	6b 2a 6b 21 00 22 21 21 2a 21 73 21 6a 62 19 19     k*k!."!!*!s!jb..
    32b4:	2a 21 6b 21 6b 7c 19 21 2a 18 21 73 21 6a 22 2a     *!k!k|.!*.!s!j"*
    32c4:	21 22 22 2a 21 6b 21 00 00 00 00 00 22 21 73 21     !""*!k!....."!s!
    32d4:	22 00 00 00 22 6a 22 6a 21 6b 00 00 19 73 19 6a     "..."j"j!k...s.j
    32e4:	19 21 6b 00 62 22 74 22 6b 18 6b 00 6b 18 22 22     .!k.b"t"k.k.k.""
    32f4:	62 6b 22 62 22 6b 18 19 22 74 21 6a 22 6a 6a 10     bk"b"k.."t!j"jj.
    3304:	19 73 21 21 19 19 10 21 19 6a 2a 6a 19 21 19 19     .s!!...!.j*j.!..
    3314:	19 19 2a 73 08 6a 18 21 6a 18 18 2a 19 19 10 6b     ..*s.j.!j..*...k
    3324:	19 19 19 21 6b 10 10 6b 6a 10 22 22 63 11 11 6a     ...!k..kj.""c..j
    3334:	22 22 22 6b 22 22 22 08 22 21 6a 73 21 10 10 10     """k"""."!js!...
    3344:	19 2a 2a 6b 22 21 21 6b 18 7c 21 18 22 21 19 73     .**k"!!k.|!."!.s
    3354:	21 6b 73 18 6a 18 62 2a 2a 2a 2a 22 10 6b 6b 2b     !ks.j.b****".kk+
    3364:	21 6a 2a 21 19 22 73 2a 21 2a 22 2a 6a 10 73 21     !j*!."s*!*"*j.s!
    3374:	19 22 21 2a 22 19 73 2a 21 21 2a 19 18 2a 21 21     ."!*".s*!!*..*!!
    3384:	6a 22 22 18 18 22 6b 19 19 6a 21 21 21 18 22 22     j"".."k..j!!!.""
    3394:	19 2a 6b 21 22 6a 18 22 2a 19 2b 2a 22 22 21 19     .*k!"j."*.+*""!.
    33a4:	2a 19 19 6b 22 2a 22 19 22 21 2a 73 19 6b 6a 18     *..k"*"."!*s.kj.
    33b4:	6b 22 22 73 21 22 22 21 22 2a 22 2a 19 22 22 19     k""s!""!"*"*."".
    33c4:	2a 19 2a 2a 21 19 19 6b 22 19 21 10 2a 18 19 22     *.**!..k".!.*.."
    33d4:	6a 10 22 6b 6a 21 19 22 22 11 19 21 21 73 22 6b     j."kj!.""..!!s"k
    33e4:	19 22 6a 10 19 21 22 6a 73 22 2a 22 18 19 22 21     ."j..!"js"*".."!
    33f4:	19 73 6a 6b 22 22 2a 21 18 73 21 74 6b 22 2a 21     .sjk""*!.s!tk"*!
    3404:	22 22 19 6b 21 22 21 22 22 22 22 2a 10 21 19 22     "".k!"!""""*.!."
    3414:	22 22 6b 19 22 18 19 19 22 22 6a 62 19 6b 10 22     ""k."...""jb.k."
    3424:	22 6b 2a 6b 19 73 08 1a 19 21 73 22 19 6b 6b 08     "k*k.s...!s".kk.
    3434:	6b 18 2a 6b 74 10 74 19 19 29 22 6b 74 21 21 74     k.*kt.t..)"kt!!t
    3444:	10 73 21 6a 6b 18 6a 73 2b 6b 22 22 73 6b 6a 6b     .s!jk.js+k""skjk
    3454:	21 73 21 19 6b 6a 2a 6b 22 22 74 21 00 21 6a 19     !s!.kj*k""t!.!j.
    3464:	74 21 22 2a 00 21 2a 10 6b 6a 18 2b 00 00 29 19     t!"*.!*.kj.+..).
    3474:	6a 6b 2a 2a 00 00 00 19 6b 21 6b 2a 00 00 00 00     jk**....k!k*....
    3484:	00 22 18 6b 21 6b 21 22 22 22 22 22 22 21 73 21     .".k!k!""""""!s!
    3494:	22 2a 21 19 22 6a 22 6a 21 6b 22 10 19 73 19 6a     "*!."j"j!k"..s.j
    34a4:	19 21 6b 00 62 22 74 22 6b 18 6b 00 6b 18 22 22     .!k.b"t"k.k.k.""
    34b4:	62 6b 00 00 22 6b 18 19 22 00 00 00 22 6a 6a 00     bk.."k.."..."jj.
    34c4:	00 00 00 00                                         ....

000034c8 <font_tileset>:
	...
    3508:	00 00 ff ff ff 00 00 00 00 00 ff ff ff 00 00 00     ................
    3518:	00 00 ff ff ff 00 00 00 00 00 ff ff 00 00 00 00     ................
    3528:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3538:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3548:	00 00 ff 00 ff 00 00 00 00 00 ff 00 ff 00 00 00     ................
    3558:	00 00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3588:	00 ff 00 00 00 ff 00 00 ff ff ff ff ff ff ff 00     ................
    3598:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    35a8:	00 ff 00 00 00 ff 00 00 ff ff ff ff ff ff ff 00     ................
    35b8:	00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    35c8:	00 00 00 ff 00 00 00 00 00 ff ff ff ff ff ff 00     ................
    35d8:	ff 00 00 ff 00 00 00 00 00 ff ff ff ff ff 00 00     ................
    35e8:	00 00 00 ff 00 00 ff 00 ff ff ff ff ff ff 00 00     ................
    35f8:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3608:	ff ff 00 00 00 00 00 00 ff ff 00 00 ff 00 00 00     ................
    3618:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    3628:	00 ff 00 00 00 00 00 00 ff 00 00 ff ff 00 00 00     ................
    3638:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    3648:	00 00 ff ff 00 00 00 00 00 ff 00 00 ff 00 00 00     ................
    3658:	00 ff ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00     ................
    3668:	ff 00 00 ff ff 00 ff 00 ff 00 00 00 ff ff 00 00     ................
    3678:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00     ................
    3688:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    3698:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
    36cc:	ff ff 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    36dc:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00     ................
    36ec:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    36fc:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
	...
    3714:	ff 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    3724:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    3734:	ff 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
    3750:	00 00 00 ff 00 00 00 00 00 ff 00 ff 00 ff 00 00     ................
    3760:	00 00 ff ff ff 00 00 00 00 ff 00 ff 00 ff 00 00     ................
    3770:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3790:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    37a0:	00 ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    37b0:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    37e8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    37f8:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3820:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    3870:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    388c:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    389c:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    38ac:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
	...
    38c8:	00 00 2f 2f 2f 00 00 00 00 2f 00 00 2f 2f 00 00     ..///..../..//..
    38d8:	2f 2f 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     //...//.//...//.
    38e8:	2f 2f 00 00 00 2f 2f 00 00 2f 2f 00 00 2f 00 00     //...//..//../..
    38f8:	00 00 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00     ..///...........
    3908:	00 00 00 2f 2f 00 00 00 00 00 2f 2f 2f 00 00 00     ...//.....///...
    3918:	00 00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00     ...//......//...
    3928:	00 00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00     ...//......//...
    3938:	00 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00     .//////.........
    3948:	00 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 2f 2f 00     ./////..//...//.
    3958:	00 00 00 00 2f 2f 2f 00 00 00 2f 2f 2f 2f 00 00     ....///...////..
    3968:	00 2f 2f 2f 2f 00 00 00 2f 2f 2f 00 00 00 00 00     .////...///.....
    3978:	2f 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00     ///////.........
    3988:	00 2f 2f 2f 2f 2f 2f 00 00 00 00 00 2f 2f 00 00     .//////.....//..
    3998:	00 00 00 2f 2f 00 00 00 00 00 2f 2f 2f 2f 00 00     ...//.....////..
    39a8:	00 00 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     .....//.//...//.
    39b8:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    39c8:	00 00 00 2f 2f 2f 00 00 00 00 2f 2f 2f 2f 00 00     ...///....////..
    39d8:	00 2f 2f 00 2f 2f 00 00 2f 2f 00 00 2f 2f 00 00     .//.//..//..//..
    39e8:	2f 2f 2f 2f 2f 2f 2f 00 00 00 00 00 2f 2f 00 00     ///////.....//..
    39f8:	00 00 00 00 2f 2f 00 00 00 00 00 00 00 00 00 00     ....//..........
    3a08:	2f 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 00 00 00     //////..//......
    3a18:	2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 2f 2f 00     //////.......//.
    3a28:	00 00 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     .....//.//...//.
    3a38:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    3a48:	00 00 2f 2f 2f 2f 00 00 00 2f 2f 00 00 00 00 00     ..////...//.....
    3a58:	2f 2f 00 00 00 00 00 00 2f 2f 2f 2f 2f 2f 00 00     //......//////..
    3a68:	2f 2f 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     //...//.//...//.
    3a78:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    3a88:	2f 2f 2f 2f 2f 2f 2f 00 2f 2f 00 00 00 2f 2f 00     ///////.//...//.
    3a98:	00 00 00 00 2f 2f 00 00 00 00 00 2f 2f 00 00 00     ....//.....//...
    3aa8:	00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00 00     ..//......//....
    3ab8:	00 00 2f 2f 00 00 00 00 00 00 00 00 00 00 00 00     ..//............
    3ac8:	00 2f 2f 2f 2f 00 00 00 2f 2f 00 00 00 2f 00 00     .////...//.../..
    3ad8:	2f 2f 2f 00 00 2f 00 00 00 2f 2f 2f 2f 00 00 00     ///../...////...
    3ae8:	2f 00 00 2f 2f 2f 2f 00 2f 00 00 00 00 2f 2f 00     /..////./....//.
    3af8:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    3b08:	00 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 2f 2f 00     ./////..//...//.
    3b18:	2f 2f 00 00 00 2f 2f 00 00 2f 2f 2f 2f 2f 2f 00     //...//..//////.
    3b28:	00 00 00 00 00 2f 2f 00 00 00 00 00 2f 2f 00 00     .....//.....//..
    3b38:	00 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00     .////...........
	...
    3b50:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    3b68:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    3b90:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    3ba8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    3bb8:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3bc8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    3bd8:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    3be8:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    3bf8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3c18:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    3c28:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    3c48:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    3c58:	00 00 00 00 ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    3c68:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    3c78:	00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3c88:	00 ff ff ff ff ff 00 00 ff ff ff ff ff ff ff 00     ................
    3c98:	ff ff 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00     ................
    3ca8:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    3cb8:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    3cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    3cd8:	ff 00 00 ff 00 ff 00 00 ff 00 ff 00 ff ff 00 00     ................
    3ce8:	ff 00 00 ff ff 00 00 00 00 ff 00 00 00 00 00 00     ................
    3cf8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    3d08:	00 00 ff ff ff 00 00 00 00 ff ff 00 ff ff 00 00     ................
    3d18:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3d28:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3d38:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    3d48:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    3d58:	ff ff 00 00 00 ff ff 00 ff ff ff ff ff ff 00 00     ................
    3d68:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3d78:	ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    3d88:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    3d98:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3da8:	ff ff 00 00 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    3db8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    3dc8:	ff ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00 00     ................
    3dd8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3de8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff 00 00     ................
    3df8:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    3e08:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 00 00 00     ................
    3e18:	ff ff 00 00 00 00 00 00 ff ff ff ff ff ff 00 00     ................
    3e28:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3e38:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    3e48:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 00 00 00     ................
    3e58:	ff ff 00 00 00 00 00 00 ff ff ff ff ff ff 00 00     ................
    3e68:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3e78:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3e88:	00 00 ff ff ff ff ff 00 00 ff ff 00 00 00 00 00     ................
    3e98:	ff ff 00 00 00 00 00 00 ff ff 00 00 ff ff ff 00     ................
    3ea8:	ff ff 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    3eb8:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    3ec8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3ed8:	ff ff 00 00 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    3ee8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    3ef8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    3f08:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    3f18:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    3f28:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    3f38:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    3f48:	00 00 00 ff ff ff ff 00 00 00 00 00 ff ff 00 00     ................
    3f58:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    3f68:	00 00 00 00 ff ff 00 00 ff 00 00 00 ff ff 00 00     ................
    3f78:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    3f88:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff 00 00     ................
    3f98:	ff ff 00 ff ff 00 00 00 ff ff ff ff 00 00 00 00     ................
    3fa8:	ff ff ff ff ff 00 00 00 ff ff 00 ff ff ff 00 00     ................
    3fb8:	ff ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    3fc8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    3fd8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    3fe8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    3ff8:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4008:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    4018:	ff ff ff ff ff ff ff 00 ff ff ff ff ff ff ff 00     ................
    4028:	ff ff 00 ff 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4038:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4048:	ff ff 00 00 00 ff ff 00 ff ff ff 00 00 ff ff 00     ................
    4058:	ff ff ff ff 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    4068:	ff ff 00 ff ff ff ff 00 ff ff 00 00 ff ff ff 00     ................
    4078:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4088:	00 ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    4098:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    40a8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    40b8:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    40c8:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    40d8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    40e8:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 00 00 00     ................
    40f8:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4108:	00 ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    4118:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4128:	ff ff 00 ff ff ff ff 00 ff ff 00 00 ff ff 00 00     ................
    4138:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00     ................
    4148:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    4158:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff ff 00     ................
    4168:	ff ff ff ff ff 00 00 00 ff ff 00 ff ff ff 00 00     ................
    4178:	ff ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4188:	00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00 00     ................
    4198:	ff ff 00 00 00 00 00 00 00 ff ff ff ff ff 00 00     ................
    41a8:	00 00 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    41b8:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    41c8:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    41d8:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    41e8:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    41f8:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4208:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4218:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4228:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4238:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4248:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4258:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    4268:	00 ff ff ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    4278:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4288:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    4298:	ff ff 00 ff 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    42a8:	ff ff ff ff ff ff ff 00 ff ff ff 00 ff ff ff 00     ................
    42b8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    42c8:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    42d8:	00 ff ff ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    42e8:	00 ff ff ff ff ff 00 00 ff ff ff 00 ff ff ff 00     ................
    42f8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4308:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4318:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    4328:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    4338:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4348:	ff ff ff ff ff ff ff 00 00 00 00 00 ff ff ff 00     ................
    4358:	00 00 00 ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    4368:	00 ff ff ff 00 00 00 00 ff ff ff 00 00 00 00 00     ................
    4378:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4388:	00 00 ff ff ff ff 00 00 00 00 ff ff 00 00 00 00     ................
    4398:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    43a8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    43b8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    43c8:	00 00 ff ff ff ff 00 00 00 ff 00 00 00 00 ff 00     ................
    43d8:	ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00 00 ff     ................
    43e8:	ff 00 ff 00 00 00 00 ff ff 00 00 ff ff 00 00 ff     ................
    43f8:	00 ff 00 00 00 00 ff 00 00 00 ff ff ff ff 00 00     ................
    4408:	00 00 ff ff ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    4418:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    4428:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    4438:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4448:	00 00 ff 00 00 00 00 00 00 ff 00 ff 00 00 00 00     ................
    4458:	ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    44b8:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................

000044c8 <title_tileset>:
	...
    4510:	09 0b 0b 15 1f 1f 0b 00 09 1f 1f 1f 1f 1f 15 00     ................
    4520:	00 1e 27 27 27 27 27 00 00 14 27 27 27 27 27 13     ..'''''...'''''.
    4530:	00 09 27 27 27 27 27 1d 00 00 2f 2f 2f 2f 2f 2f     ..'''''...//////
    4540:	00 00 1c 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00     .../////........
    4550:	00 00 00 00 00 0b 00 00 00 00 00 00 09 1f 13 00     ................
    4560:	00 00 00 00 1e 27 1f 00 00 00 00 13 27 27 27 13     .....'......'''.
    4570:	00 00 09 27 27 27 27 27 00 00 1c 2f 2f 2f 2f 2f     ...'''''.../////
    4580:	1b 0a 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00     ..//////........
    4590:	00 00 00 16 1f 15 0b 0b 00 00 09 1f 1f 1f 1f 1f     ................
    45a0:	00 00 13 27 27 27 27 27 00 00 1e 27 27 27 27 27     ...'''''...'''''
    45b0:	00 09 27 27 27 27 27 27 13 13 2f 2f 2f 2f 2f 2f     ..''''''..//////
    45c0:	2f 2e 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00     /.//////........
    45d0:	0b 0b 00 00 00 00 00 00 1f 1e 00 00 00 00 00 00     ................
    45e0:	27 27 27 27 13 00 00 00 27 27 27 27 13 00 00 00     ''''....''''....
    45f0:	27 27 27 27 13 00 00 00 2f 2f 2f 2f 13 00 00 00     ''''....////....
    4600:	2f 2f 2f 2f 1b 00 00 00 00 00 00 00 00 00 00 00     ////............
	...
    4620:	01 13 14 27 27 27 0a 00 0a 27 27 27 27 27 09 00     ...'''...'''''..
    4630:	0a 27 27 27 27 27 09 00 13 2f 2f 2f 2f 2f 09 00     .'''''.../////..
    4640:	13 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
	...
    465c:	14 00 00 00 00 00 00 0a 27 14 00 00 00 00 00 1d     ........'.......
    466c:	27 27 09 00 00 00 09 27 27 27 26 00 00 00 1c 2f     ''.....'''&..../
    467c:	2f 2f 2f 1c 00 09 2f 2f 2f 2f 2f 2f 00 00 00 00     ///...//////....
	...
    46b4:	00 00 00 1c 00 00 00 00 00 00 00 2f 09 00 00 00     .........../....
    46c4:	00 00 12 2f 00 00 00 00 00 00 00 00 00 00 00 00     .../............
    46d4:	00 00 00 00 00 00 13 1e 1f 1f 1f 13 09 1e 27 27     ..............''
    46e4:	27 27 27 27 1e 27 27 27 27 27 27 27 27 27 27 27     ''''.'''''''''''
    46f4:	27 27 27 27 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ''''////////////
    4704:	1b 00 09 25 00 00 00 00 00 00 00 00 00 00 00 00     ...%............
    4714:	00 00 00 00 09 00 1f 15 13 13 0a 00 27 00 27 27     ............'.''
    4724:	27 27 27 13 27 00 27 27 27 27 27 13 26 00 27 27     '''.'.'''''.&.''
    4734:	27 27 27 13 25 00 2f 2f 2f 2f 2f 13 1c 00 2f 2f     '''.%./////...//
    4744:	2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00 00     ////............
	...
    4760:	00 00 00 1d 1e 13 01 00 00 00 1d 27 27 27 27 27     ...........'''''
    4770:	00 1d 27 27 27 27 27 14 25 2f 2f 2f 2f 2f 25 00     ..'''''.%/////%.
    4780:	2f 2f 2f 2f 2f 26 00 00 00 00 00 00 00 00 00 00     /////&..........
	...
    47a8:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    47d4:	00 09 0b 00 00 00 00 00 00 1e 1e 00 00 00 00 00     ................
    47e4:	14 27 27 0b 00 00 00 0a 27 27 27 1e 00 00 00 26     .''.....'''....&
    47f4:	27 27 27 27 00 00 1c 2f 2f 2f 2f 2f 00 12 2f 2f     ''''.../////..//
    4804:	2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00 00     ////............
	...
    4830:	13 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00     ........&.......
    4840:	2f 13 00 00 00 00 00 00 00 00 00 00 00 00 00 0b     /...............
    4850:	00 00 00 00 00 00 00 1f 00 00 00 00 00 00 13 1f     ................
    4860:	00 00 00 00 00 00 1e 27 00 00 00 00 00 09 27 27     .......'......''
    4870:	00 00 00 00 00 14 27 27 00 00 00 00 00 2f 2f 2f     ......''.....///
    4880:	00 00 00 00 12 2f 2f 2f 00 00 00 00 00 00 00 00     .....///........
	...
    4898:	13 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00     ................
    48a8:	27 09 00 00 00 00 00 09 27 13 00 00 00 00 00 26     '.......'......&
    48b8:	2f 26 00 00 00 00 13 2f 2f 2f 0a 00 00 00 2f 2f     /&.....///....//
	...
    48d0:	00 0b 0a 00 00 00 00 00 00 1f 14 00 00 00 00 00     ................
    48e0:	14 27 1e 00 00 00 00 00 27 27 27 09 00 00 00 1e     .'......'''.....
    48f0:	27 27 27 13 00 00 13 27 2f 2f 2f 1d 00 00 2f 2f     '''....'///...//
    4900:	2f 2f 2f 2f 00 12 2f 2f 00 00 00 00 00 00 00 00     ////..//........
	...
    4918:	00 0a 15 1f 1f 1f 1e 13 1d 27 27 27 27 27 27 27     .........'''''''
    4928:	27 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27     ''''''''''''''''
    4938:	2f 2f 2f 26 00 26 2f 2f 2f 2f 2f 12 00 1b 2f 2f     ///&.&/////...//
	...
    4960:	1e 01 00 27 27 27 27 27 27 1e 00 27 27 27 27 27     ...''''''..'''''
    4970:	27 27 13 26 27 27 27 27 2f 2f 26 26 2f 2f 2f 2f     ''.&''''//&&////
    4980:	2f 2f 2f 25 2f 2f 2f 2f 00 00 00 00 00 00 00 00     ///%////........
	...
    499c:	00 1f 1f 1e 27 1d 00 00 00 27 27 27 27 1d 00 00     ....'....''''...
    49ac:	00 27 27 27 27 1d 00 00 00 27 27 27 2f 25 00 00     .''''....'''/%..
    49bc:	00 2f 2f 2f 2f 25 00 00 00 2f 2f 2f 00 00 00 00     .////%...///....
	...
    49d8:	13 13 13 13 13 00 00 00 27 27 27 27 27 27 27 0b     ........'''''''.
    49e8:	27 27 27 27 27 27 27 0a 27 27 27 27 27 27 27 09     '''''''.'''''''.
    49f8:	2f 2f 25 1d 2f 2f 2f 00 2f 2f 1b 00 00 00 00 00     //%.///.//......
    4a08:	00 00 12 37 37 37 37 37 00 00 00 37 37 37 37 37     ...77777...77777
    4a18:	00 00 00 24 3f 3f 3f 3f 00 00 00 12 3f 3f 3f 3f     ...$????....????
    4a28:	00 00 00 00 3f 3f 3f 3f 00 00 00 00 2d 3f 3f 3f     ....????....-???
    4a38:	00 00 00 00 12 3f 3f 3f 00 00 00 00 00 37 37 37     .....???.....777
    4a48:	25 2e 37 37 37 37 37 37 37 37 37 37 37 37 37 37     %.77777777777777
    4a58:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4a68:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4a78:	3f 3f 3f 3f 25 24 3f 3f 37 37 37 37 00 09 37 37     ????%$??7777..77
    4a88:	37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37     7777777777777777
    4a98:	3f 3f 3f 3f 3f 3f 25 3f 3f 3f 3f 3f 3f 3f 12 3f     ??????%???????.?
    4aa8:	3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 1b 00 3f     ??????.??????..?
    4ab8:	3f 3f 3f 3f 3f 09 00 3f 37 37 37 37 2d 00 00 37     ?????..?7777-..7
    4ac8:	37 37 37 37 1b 00 00 00 37 37 37 37 37 37 37 37     7777....77777777
    4ad8:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4ae8:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 1b 00 00 00     ????????????....
    4af8:	3f 3f 3f 3f 1b 00 00 00 37 37 37 37 1b 00 00 00     ????....7777....
    4b08:	1b 37 37 37 37 37 00 00 37 37 37 37 37 37 00 00     .77777..777777..
    4b18:	3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 36 00 09     ??????..?????6..
    4b28:	3f 3f 3f 3f 3f 36 00 24 1b 3f 3f 3f 3f 36 09 3f     ?????6.$.????6.?
    4b38:	24 3f 3f 3f 3f 36 24 3f 24 37 37 37 37 2d 37 37     $????6$?$7777-77
    4b48:	00 24 37 37 37 37 37 37 09 37 37 37 37 37 37 37     .$777777.7777777
    4b58:	24 3f 3f 3f 3f 37 3f 3f 3f 3f 3f 3f 2d 1b 3f 3f     $????7??????-.??
    4b68:	3f 3f 3f 3f 1b 00 3f 3f 3f 3f 3f 3f 09 00 1b 3f     ????..??????...?
    4b78:	3f 3f 3f 2e 00 00 00 37 37 37 37 37 37 37 37 37     ???....777777777
    4b88:	2e 00 00 00 00 00 1c 37 37 1c 00 00 00 00 2d 37     .......77.....-7
    4b98:	3f 3f 12 00 00 00 36 3f 3f 3f 36 00 00 00 3f 3f     ??....6???6...??
    4ba8:	3f 3f 3f 24 00 00 3f 3f 3f 3f 3f 3f 12 00 3f 3f     ???$..??????..??
    4bb8:	3f 3f 3f 3f 36 00 3f 3f 37 37 37 37 37 1c 36 37     ????6.??77777.67
    4bc8:	37 37 37 2f 00 00 00 00 37 37 37 2d 00 00 00 00     777/....777-....
    4bd8:	3f 3f 3f 24 00 00 00 00 3f 3f 3f 1b 00 00 00 00     ???$....???.....
    4be8:	3f 3f 3f 1b 00 00 00 00 3f 3f 3f 1b 00 00 00 00     ???.....???.....
    4bf8:	3f 3f 3f 1b 00 00 00 00 37 37 37 1c 00 00 00 00     ???.....777.....
    4c08:	09 00 37 37 37 37 37 37 00 00 37 37 37 37 37 37     ..777777..777777
    4c18:	00 00 3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 3f     ..??????..??????
    4c28:	00 00 36 3f 3f 3f 3f 3f 00 00 36 3f 3f 3f 3f 3f     ..6?????..6?????
    4c38:	00 00 36 3f 3f 3f 3f 3f 00 00 36 37 37 37 37 37     ..6?????..677777
    4c48:	37 37 37 37 2f 09 00 00 37 37 37 37 09 00 00 00     7777/...7777....
    4c58:	3f 3f 3f 12 00 00 00 2d 3f 3f 1b 00 00 00 00 36     ???....-??.....6
    4c68:	3f 36 00 00 00 00 00 36 3f 3f 2d 00 00 00 00 3f     ?6.....6??-....?
    4c78:	3f 3f 3f 2d 00 00 00 00 37 37 37 37 2e 00 00 00     ???-....7777....
	...
    4c98:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4ca8:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
	...
    4cd8:	3f 3f 37 00 00 00 00 12 3f 3f 36 00 00 00 00 36     ??7.....??6....6
    4ce8:	3f 3f 24 00 00 00 2d 3f 3f 3f 1b 00 00 12 3f 3f     ??$...-???....??
    4cf8:	00 00 00 00 00 37 3f 3f 00 00 00 00 25 37 37 37     .....7??....%777
    4d08:	00 2e 37 37 37 37 37 37 24 37 37 37 37 37 37 37     ..777777$7777777
    4d18:	3f 3f 3f 3f 3f 1b 3f 3f 3f 3f 3f 3f 36 00 36 3f     ?????.??????6.6?
    4d28:	3f 3f 3f 3f 1b 00 24 3f 3f 3f 3f 36 00 00 12 3f     ????..$????6...?
    4d38:	3f 3f 3f 2d 1b 1b 1b 3f 37 37 37 37 37 37 37 37     ???-...?77777777
    4d48:	37 2e 00 00 00 00 00 00 37 37 1b 00 00 00 00 00     7.......77......
    4d58:	3f 3f 36 00 00 00 2d 3f 3f 3f 3f 1b 00 00 36 3f     ??6...-????...6?
    4d68:	3f 3f 3f 36 00 00 36 3f 3f 3f 3f 3f 1b 00 3f 3f     ???6..6?????..??
    4d78:	3f 3f 3f 3f 36 00 00 00 37 37 37 37 37 1b 00 00     ????6...77777...
    4d88:	00 00 00 00 25 37 37 37 00 00 00 00 37 37 37 37     ....%777....7777
    4d98:	3f 37 00 1b 3f 3f 3f 3f 3f 36 00 36 3f 3f 3f 3f     ?7..?????6.6????
    4da8:	3f 24 09 3f 3f 3f 3f 3f 3f 1b 24 3f 3f 3f 3f 3f     ?$.??????.$?????
    4db8:	00 00 37 3f 3f 3f 3f 3f 00 12 37 37 37 37 37 2d     ..7?????..77777-
    4dc8:	37 37 24 00 00 24 37 37 37 37 37 00 09 37 37 37     77$..$77777..777
    4dd8:	3f 3f 3f 12 2e 3f 3f 3f 3f 3f 3f 37 3f 3f 3f 3f     ???..??????7????
    4de8:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4df8:	3f 3f 3f 3f 3f 3f 3f 2e 37 37 37 37 37 37 37 09     ???????.7777777.
    4e08:	37 37 37 37 12 1c 37 37 37 37 37 37 24 2e 37 37     7777..777777$.77
    4e18:	3f 3f 3f 3f 37 36 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????76??????????
    4e28:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f     ????????????????
    4e38:	37 3f 3f 3f 3f 3f 3f 3f 25 37 37 37 37 37 37 37     7???????%7777777
    4e48:	37 37 2f 00 00 12 37 37 37 37 2d 00 00 09 37 37     77/...7777-...77
    4e58:	3f 3f 24 00 00 09 3f 3f 3f 3f 1b 00 00 09 3f 3f     ??$...????....??
    4e68:	3f 3f 1b 00 00 09 3f 3f 3f 3f 1b 00 00 12 3f 3f     ??....????....??
    4e78:	3f 3f 1b 00 00 1b 3f 3f 37 37 1c 00 00 1b 37 37     ??....??77....77
    4e88:	37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37     7777777777777777
    4e98:	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 36 3f 3f 3f 3f     ???????????6????
    4ea8:	3f 3f 3f 2d 3f 3f 3f 3f 3f 3f 3f 1b 3f 3f 3f 3f     ???-???????.????
    4eb8:	3f 3f 3f 1b 3f 3f 3f 3f 37 37 37 1b 37 37 37 37     ???.????777.7777
    4ec8:	37 25 00 00 00 37 37 37 37 2d 00 00 00 37 37 37     7%...7777-...777
    4ed8:	3f 24 00 00 00 3f 3f 3f 3f 24 00 00 00 3f 3f 3f     ?$...????$...???
    4ee8:	3f 24 00 00 00 3f 3f 3f 3f 24 00 00 00 3f 3f 3f     ?$...????$...???
    4ef8:	3f 24 00 00 00 3f 3f 3f 37 24 00 00 00 37 37 37     ?$...???7$...777
    4f08:	37 37 1b 00 00 00 00 00 37 37 1b 00 00 00 00 00     77......77......
    4f18:	3f 3f 3f 3f 3f 2d 00 00 3f 3f 3f 3f 3f 2d 00 00     ?????-..?????-..
    4f28:	3f 3f 3f 3f 3f 2d 00 00 3f 3f 3f 3f 3f 2d 00 00     ?????-..?????-..
    4f38:	3f 3f 1b 00 00 00 00 00 37 37 1b 00 00 00 00 00     ??......77......
    4f48:	00 00 00 00 00 25 37 37 00 00 00 00 00 1b 37 37     .....%77......77
    4f58:	00 00 00 00 00 00 2f 2f 00 00 00 00 00 00 1d 2f     ......//......./
    4f68:	00 00 00 00 00 00 13 27 00 00 00 00 00 00 01 1e     .......'........
	...
    4f88:	37 37 37 12 00 00 24 37 37 37 1c 00 00 00 09 37     777...$777.....7
    4f98:	2f 26 00 00 00 00 00 1c 2f 09 00 00 00 00 00 00     /&....../.......
    4fa8:	13 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4fc8:	37 37 37 37 12 00 00 37 37 37 37 2f 00 00 00 37     7777...7777/...7
    4fd8:	2f 2f 2f 13 00 00 00 2f 27 2f 2f 09 00 00 00 2f     ///..../'//..../
    4fe8:	13 27 1d 00 00 00 00 27 00 1f 0b 00 00 00 00 00     .'.....'........
    4ff8:	00 13 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5008:	37 37 37 37 1b 00 00 00 37 37 37 37 1b 00 00 00     7777....7777....
    5018:	2f 2f 2f 2f 13 00 00 00 2f 2f 2f 2f 13 00 00 00     ////....////....
    5028:	27 27 27 27 13 00 00 00 00 00 13 13 0a 00 00 00     ''''............
	...
    5048:	24 37 37 37 37 25 37 37 25 37 37 37 37 37 37 37     $7777%77%7777777
    5058:	25 2f 2f 2f 2f 2f 2f 2f 1d 2f 2f 2f 2f 2f 2f 2f     %///////.///////
    5068:	1e 27 27 27 27 27 27 27 13 13 1e 27 27 27 13 15     .'''''''...'''..
	...
    5088:	37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37     7777777777777777
    5098:	2f 2f 1c 00 00 00 00 00 2f 2f 0a 00 00 00 00 00     //......//......
    50a8:	27 27 00 00 00 00 00 00 27 14 00 00 00 00 00 00     ''......'.......
	...
    50c8:	37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37     7777777777777777
    50d8:	09 2f 2f 2f 2f 2f 2f 2f 00 1c 2f 2f 2f 2f 2f 2f     .///////..//////
    50e8:	00 09 27 27 27 27 27 27 00 00 14 27 14 13 13 01     ..''''''...'....
	...
    5108:	37 37 37 25 00 00 00 09 37 37 37 37 09 09 1c 37     777%....7777...7
    5118:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    5128:	27 27 27 27 27 27 27 27 00 0a 15 27 27 27 1e 13     ''''''''...'''..
	...
    5148:	09 00 2e 37 37 37 37 37 25 00 2e 37 37 37 37 2e     ...77777%..7777.
    5158:	2f 13 26 2f 2f 2f 2f 26 2f 27 2f 2f 2f 2f 2f 27     /.&////&/'/////'
    5168:	27 1d 27 27 27 27 27 27 01 00 1e 27 1d 13 13 13     '.''''''...'....
	...
    5188:	37 37 37 37 37 2e 09 00 25 37 37 37 37 37 2f 09     77777...%77777/.
    5198:	00 25 2f 2f 2f 2f 2f 2f 00 00 26 2f 2f 2f 2f 2f     .%//////..&/////
    51a8:	00 00 00 1e 27 27 27 27 00 00 00 00 1e 1e 13 13     ....''''........
	...
    51d8:	0a 00 00 00 00 00 00 00 2f 12 00 00 00 00 00 00     ......../.......
    51e8:	27 27 0a 00 00 00 00 00 00 00 00 00 00 00 00 00     ''..............
	...
    5208:	00 00 00 12 37 37 37 37 00 00 09 2f 37 37 37 37     ....7777.../7777
    5218:	00 00 1d 2f 2f 2f 2f 2f 00 13 2f 2f 2f 2f 2f 2f     .../////..//////
    5228:	09 27 27 27 27 27 27 27 00 00 00 13 13 13 1f 1e     .'''''''........
	...
    5248:	37 37 37 37 37 37 37 37 37 37 37 37 25 1b 1b 1b     777777777777%...
    5258:	2f 13 00 00 00 00 00 00 26 00 00 00 00 00 00 00     /.......&.......
    5268:	13 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5288:	37 37 37 37 37 2e 00 00 2f 37 37 37 37 37 13 00     77777.../77777..
    5298:	1d 2f 2f 2f 2f 2f 26 00 13 2f 2f 2f 2f 2f 2f 13     ./////&..//////.
    52a8:	00 27 27 27 27 27 27 1e 00 1d 27 1e 13 13 13 00     .''''''...'.....
	...
    52ec:	00 00 00 09 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5308:	00 25 37 37 37 37 37 12 00 37 37 37 37 37 2e 00     .%77777..77777..
    5318:	13 2f 2f 2f 2f 2f 13 00 26 2f 2f 2f 2f 2f 09 00     ./////..&/////..
    5328:	27 27 27 27 27 1d 00 00 00 00 00 13 13 0a 00 00     '''''...........
	...
    5348:	24 37 37 37 37 37 1c 00 0a 37 37 37 37 2e 00 00     $77777...7777...
    5358:	00 25 2f 2f 2f 0a 00 00 00 0a 2f 2f 14 00 00 00     .%///.....//....
    5368:	00 00 1d 1e 00 00 00 00 00 00 0a 0a 00 00 00 00     ................
	...
    5388:	12 37 37 37 37 37 37 37 00 2f 37 37 37 37 37 37     .7777777./777777
    5398:	00 1d 2f 2f 2f 2f 2f 2f 00 13 2f 2f 2f 2f 2f 2f     ..//////..//////
    53a8:	00 00 27 27 27 27 27 27 00 00 15 27 1f 13 13 13     ..''''''...'....
	...
    53c8:	37 37 2e 00 00 25 37 37 37 37 37 00 09 2f 37 37     77...%77777../77
    53d8:	2f 2f 2f 25 26 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ///%&///////////
    53e8:	27 27 27 27 27 27 27 27 0a 14 27 27 27 1f 13 01     ''''''''..'''...
	...
    5408:	37 37 2e 13 37 37 37 37 37 37 1b 13 37 37 37 37     77..777777..7777
    5418:	2f 2f 00 0a 2f 2f 2f 2f 2f 12 00 0a 2f 2f 2f 2f     //../////...////
    5428:	13 00 00 0a 27 27 27 27 00 00 00 01 27 27 27 27     ....''''....''''
	...
    5448:	37 24 00 00 00 37 37 37 37 26 2f 37 37 37 37 37     7$...7777&/77777
    5458:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    5468:	27 27 27 27 27 27 27 27 1e 13 13 13 13 13 00 00     ''''''''........
	...
    5488:	37 37 1b 00 00 00 00 00 37 37 25 1b 1b 00 00 00     77......77%.....
    5498:	2f 2f 2f 2f 2f 2f 2f 25 2f 2f 2f 2f 2f 2f 2f 14     ///////%///////.
    54a8:	27 27 27 27 27 27 27 13 0a 13 13 13 14 27 27 09     '''''''......''.
	...

000054c8 <font_tileset2>:
	...
    5508:	00 00 ff ff ff 00 00 00 00 00 ff ff ff 00 00 00     ................
    5518:	00 00 ff ff ff 00 00 00 00 00 ff ff 00 00 00 00     ................
    5528:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5538:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5548:	00 00 ff 00 ff 00 00 00 00 00 ff 00 ff 00 00 00     ................
    5558:	00 00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5588:	00 ff 00 00 00 ff 00 00 ff ff ff ff ff ff ff 00     ................
    5598:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    55a8:	00 ff 00 00 00 ff 00 00 ff ff ff ff ff ff ff 00     ................
    55b8:	00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    55c8:	00 00 00 ff 00 00 00 00 00 ff ff ff ff ff ff 00     ................
    55d8:	ff 00 00 ff 00 00 00 00 00 ff ff ff ff ff 00 00     ................
    55e8:	00 00 00 ff 00 00 ff 00 ff ff ff ff ff ff 00 00     ................
    55f8:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5608:	ff ff 00 00 00 00 00 00 ff ff 00 00 ff 00 00 00     ................
    5618:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    5628:	00 ff 00 00 00 00 00 00 ff 00 00 ff ff 00 00 00     ................
    5638:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5648:	00 00 ff ff 00 00 00 00 00 ff 00 00 ff 00 00 00     ................
    5658:	00 ff ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00     ................
    5668:	ff 00 00 ff ff 00 ff 00 ff 00 00 00 ff ff 00 00     ................
    5678:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00     ................
    5688:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    5698:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
    56cc:	ff ff 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    56dc:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00     ................
    56ec:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    56fc:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
	...
    5714:	ff 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    5724:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    5734:	ff 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
    5750:	00 00 00 ff 00 00 00 00 00 ff 00 ff 00 ff 00 00     ................
    5760:	00 00 ff ff ff 00 00 00 00 ff 00 ff 00 ff 00 00     ................
    5770:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5790:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    57a0:	00 ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    57b0:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    57e8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    57f8:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5820:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    5870:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    588c:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    589c:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    58ac:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
	...
    58c8:	00 00 2f 2f 2f 00 00 00 00 2f 00 00 2f 2f 00 00     ..///..../..//..
    58d8:	2f 2f 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     //...//.//...//.
    58e8:	2f 2f 00 00 00 2f 2f 00 00 2f 2f 00 00 2f 00 00     //...//..//../..
    58f8:	00 00 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00     ..///...........
    5908:	00 00 00 2f 2f 00 00 00 00 00 2f 2f 2f 00 00 00     ...//.....///...
    5918:	00 00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00     ...//......//...
    5928:	00 00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00     ...//......//...
    5938:	00 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00     .//////.........
    5948:	00 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 2f 2f 00     ./////..//...//.
    5958:	00 00 00 00 2f 2f 2f 00 00 00 2f 2f 2f 2f 00 00     ....///...////..
    5968:	00 2f 2f 2f 2f 00 00 00 2f 2f 2f 00 00 00 00 00     .////...///.....
    5978:	2f 2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00     ///////.........
    5988:	00 2f 2f 2f 2f 2f 2f 00 00 00 00 00 2f 2f 00 00     .//////.....//..
    5998:	00 00 00 2f 2f 00 00 00 00 00 2f 2f 2f 2f 00 00     ...//.....////..
    59a8:	00 00 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     .....//.//...//.
    59b8:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    59c8:	00 00 00 2f 2f 2f 00 00 00 00 2f 2f 2f 2f 00 00     ...///....////..
    59d8:	00 2f 2f 00 2f 2f 00 00 2f 2f 00 00 2f 2f 00 00     .//.//..//..//..
    59e8:	2f 2f 2f 2f 2f 2f 2f 00 00 00 00 00 2f 2f 00 00     ///////.....//..
    59f8:	00 00 00 00 2f 2f 00 00 00 00 00 00 00 00 00 00     ....//..........
    5a08:	2f 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 00 00 00     //////..//......
    5a18:	2f 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 2f 2f 00     //////.......//.
    5a28:	00 00 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     .....//.//...//.
    5a38:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    5a48:	00 00 2f 2f 2f 2f 00 00 00 2f 2f 00 00 00 00 00     ..////...//.....
    5a58:	2f 2f 00 00 00 00 00 00 2f 2f 2f 2f 2f 2f 00 00     //......//////..
    5a68:	2f 2f 00 00 00 2f 2f 00 2f 2f 00 00 00 2f 2f 00     //...//.//...//.
    5a78:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    5a88:	2f 2f 2f 2f 2f 2f 2f 00 2f 2f 00 00 00 2f 2f 00     ///////.//...//.
    5a98:	00 00 00 00 2f 2f 00 00 00 00 00 2f 2f 00 00 00     ....//.....//...
    5aa8:	00 00 2f 2f 00 00 00 00 00 00 2f 2f 00 00 00 00     ..//......//....
    5ab8:	00 00 2f 2f 00 00 00 00 00 00 00 00 00 00 00 00     ..//............
    5ac8:	00 2f 2f 2f 2f 00 00 00 2f 2f 00 00 00 2f 00 00     .////...//.../..
    5ad8:	2f 2f 2f 00 00 2f 00 00 00 2f 2f 2f 2f 00 00 00     ///../...////...
    5ae8:	2f 00 00 2f 2f 2f 2f 00 2f 00 00 00 00 2f 2f 00     /..////./....//.
    5af8:	00 2f 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00     ./////..........
    5b08:	00 2f 2f 2f 2f 2f 00 00 2f 2f 00 00 00 2f 2f 00     ./////..//...//.
    5b18:	2f 2f 00 00 00 2f 2f 00 00 2f 2f 2f 2f 2f 2f 00     //...//..//////.
    5b28:	00 00 00 00 00 2f 2f 00 00 00 00 00 2f 2f 00 00     .....//.....//..
    5b38:	00 2f 2f 2f 2f 00 00 00 00 00 00 00 00 00 00 00     .////...........
	...
    5b50:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    5b68:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    5b90:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
	...
    5ba8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    5bb8:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5bc8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    5bd8:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    5be8:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    5bf8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5c18:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    5c28:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    5c48:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    5c58:	00 00 00 00 ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    5c68:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    5c78:	00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5c88:	00 ff ff ff ff ff 00 00 ff ff ff ff ff ff ff 00     ................
    5c98:	ff ff 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00     ................
    5ca8:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5cb8:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    5cd8:	ff 00 00 ff 00 ff 00 00 ff 00 ff 00 ff ff 00 00     ................
    5ce8:	ff 00 00 ff ff 00 00 00 00 ff 00 00 00 00 00 00     ................
    5cf8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    5d08:	00 00 ff ff ff 00 00 00 00 ff ff 00 ff ff 00 00     ................
    5d18:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5d28:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5d38:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    5d48:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    5d58:	ff ff 00 00 00 ff ff 00 ff ff ff ff ff ff 00 00     ................
    5d68:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5d78:	ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    5d88:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    5d98:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    5da8:	ff ff 00 00 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    5db8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    5dc8:	ff ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00 00     ................
    5dd8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5de8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff 00 00     ................
    5df8:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5e08:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 00 00 00     ................
    5e18:	ff ff 00 00 00 00 00 00 ff ff ff ff ff ff 00 00     ................
    5e28:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    5e38:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    5e48:	ff ff ff ff ff ff ff 00 ff ff 00 00 00 00 00 00     ................
    5e58:	ff ff 00 00 00 00 00 00 ff ff ff ff ff ff 00 00     ................
    5e68:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    5e78:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    5e88:	00 00 ff ff ff ff ff 00 00 ff ff 00 00 00 00 00     ................
    5e98:	ff ff 00 00 00 00 00 00 ff ff 00 00 ff ff ff 00     ................
    5ea8:	ff ff 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    5eb8:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    5ec8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5ed8:	ff ff 00 00 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    5ee8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    5ef8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    5f08:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    5f18:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    5f28:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    5f38:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    5f48:	00 00 00 ff ff ff ff 00 00 00 00 00 ff ff 00 00     ................
    5f58:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    5f68:	00 00 00 00 ff ff 00 00 ff 00 00 00 ff ff 00 00     ................
    5f78:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5f88:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff 00 00     ................
    5f98:	ff ff 00 ff ff 00 00 00 ff ff ff ff 00 00 00 00     ................
    5fa8:	ff ff ff ff ff 00 00 00 ff ff 00 ff ff ff 00 00     ................
    5fb8:	ff ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    5fc8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    5fd8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    5fe8:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    5ff8:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    6008:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    6018:	ff ff ff ff ff ff ff 00 ff ff ff ff ff ff ff 00     ................
    6028:	ff ff 00 ff 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6038:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    6048:	ff ff 00 00 00 ff ff 00 ff ff ff 00 00 ff ff 00     ................
    6058:	ff ff ff ff 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    6068:	ff ff 00 ff ff ff ff 00 ff ff 00 00 ff ff ff 00     ................
    6078:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    6088:	00 ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    6098:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    60a8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    60b8:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    60c8:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    60d8:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    60e8:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 00 00 00     ................
    60f8:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6108:	00 ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    6118:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6128:	ff ff 00 ff ff ff ff 00 ff ff 00 00 ff ff 00 00     ................
    6138:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00     ................
    6148:	ff ff ff ff ff ff 00 00 ff ff 00 00 00 ff ff 00     ................
    6158:	ff ff 00 00 00 ff ff 00 ff ff 00 00 ff ff ff 00     ................
    6168:	ff ff ff ff ff 00 00 00 ff ff 00 ff ff ff 00 00     ................
    6178:	ff ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    6188:	00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00 00     ................
    6198:	ff ff 00 00 00 00 00 00 00 ff ff ff ff ff 00 00     ................
    61a8:	00 00 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    61b8:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    61c8:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    61d8:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    61e8:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    61f8:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6208:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6218:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6228:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6238:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6248:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6258:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    6268:	00 ff ff ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    6278:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6288:	ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff 00     ................
    6298:	ff ff 00 ff 00 ff ff 00 ff ff ff ff ff ff ff 00     ................
    62a8:	ff ff ff ff ff ff ff 00 ff ff ff 00 ff ff ff 00     ................
    62b8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    62c8:	ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff 00     ................
    62d8:	00 ff ff ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    62e8:	00 ff ff ff ff ff 00 00 ff ff ff 00 ff ff ff 00     ................
    62f8:	ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    6308:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    6318:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    6328:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    6338:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6348:	ff ff ff ff ff ff ff 00 00 00 00 00 ff ff ff 00     ................
    6358:	00 00 00 ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    6368:	00 ff ff ff 00 00 00 00 ff ff ff 00 00 00 00 00     ................
    6378:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    6388:	00 00 ff ff ff ff 00 00 00 00 ff ff 00 00 00 00     ................
    6398:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    63a8:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    63b8:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    63c8:	00 00 ff ff ff ff 00 00 00 ff 00 00 00 00 ff 00     ................
    63d8:	ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00 00 ff     ................
    63e8:	ff 00 ff 00 00 00 00 ff ff 00 00 ff ff 00 00 ff     ................
    63f8:	00 ff 00 00 00 00 ff 00 00 00 ff ff ff ff 00 00     ................
    6408:	00 00 ff ff ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    6418:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    6428:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    6438:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6448:	00 00 ff 00 00 00 00 00 00 ff 00 ff 00 00 00 00     ................
    6458:	ff 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    64b8:	ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................

000064c8 <map_title>:
    64c8:	16 03 01 02 03 04 05 06 07 08 09 0a 0b 00 0c 0d     ................
    64d8:	00 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c     ................
    64e8:	1d 1e 1f 20 21 22 1f 23 24 25 26 27 28 29 2a 2b     ... !".#$%&'()*+
    64f8:	2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b     ,-./0123456789:;
    6508:	3c 3d 3e 3f                                         <=>?

0000650c <strNotDetected>:
    650c:	4d 4f 55 53 45 20 4e 4f 54 20 44 45 54 45 43 54     MOUSE NOT DETECT
    651c:	45 44 21 00                                         ED!.

00006520 <strHighScore>:
    6520:	48 49 2d 53 43 4f 52 45 3a 00                       HI-SCORE:.

0000652a <strWhacked>:
    652a:	4d 4f 4c 45 53 20 57 48 41 43 4b 45 44 3a 00        MOLES WHACKED:.

00006539 <strTime>:
    6539:	54 49 4d 45 3a 00                                   TIME:.

0000653f <strCopy>:
    653f:	5c 32 30 30 39 20 55 5a 45 00                       \2009 UZE.

00006549 <strStart>:
    6549:	50 52 45 53 53 20 41 20 42 55 54 54 4f 4e 00        PRESS A BUTTON.

00006558 <strWeb>:
    6558:	48 54 54 50 3a 2f 2f 42 45 4c 4f 47 49 43 2e 43     HTTP://BELOGIC.C
    6568:	4f 4d 2f 55 5a 45 42 4f 58 00                       OM/UZEBOX.

00006572 <strSpeed>:
    6572:	4d 4f 55 53 45 20 53 50 44 3a 00                    MOUSE SPD:.

0000657d <strLo>:
    657d:	4c 4f 57 20 00                                      LOW .

00006582 <strMed>:
    6582:	4d 45 44 20 00                                      MED .

00006587 <strHi>:
    6587:	48 49 47 48 00                                      HIGH.

0000658c <strError>:
    658c:	45 52 52 4f 52 3a 00 00                             ERROR:..

00006594 <__ctors_end>:
    6594:	11 24       	eor	r1, r1
    6596:	1f be       	out	0x3f, r1	; 63
    6598:	cf ef       	ldi	r28, 0xFF	; 255
    659a:	d0 e1       	ldi	r29, 0x10	; 16
    659c:	de bf       	out	0x3e, r29	; 62
    659e:	cd bf       	out	0x3d, r28	; 61

000065a0 <wdt_init>:

void wdt_init(void) __attribute__((naked)) __attribute__((section(".init3")));
void Initialize(void) __attribute__((naked)) __attribute__((section(".init8")));

void wdt_init(void)
{
    65a0:	14 be       	out	0x34, r1	; 52
    MCUSR = 0;
    wdt_disable();
    65a2:	88 e1       	ldi	r24, 0x18	; 24
    65a4:	0f b6       	in	r0, 0x3f	; 63
    65a6:	f8 94       	cli
    65a8:	80 93 60 00 	sts	0x0060, r24
    65ac:	10 92 60 00 	sts	0x0060, r1
    65b0:	0f be       	out	0x3f, r0	; 63

000065b2 <__do_copy_data>:
    65b2:	11 e0       	ldi	r17, 0x01	; 1
    65b4:	a0 e0       	ldi	r26, 0x00	; 0
    65b6:	b1 e0       	ldi	r27, 0x01	; 1
    65b8:	e6 ea       	ldi	r30, 0xA6	; 166
    65ba:	fe e9       	ldi	r31, 0x9E	; 158
    65bc:	02 c0       	rjmp	.+4      	; 0x65c2 <.do_copy_data_start>

000065be <.do_copy_data_loop>:
    65be:	05 90       	lpm	r0, Z+
    65c0:	0d 92       	st	X+, r0

000065c2 <.do_copy_data_start>:
    65c2:	ac 30       	cpi	r26, 0x0C	; 12
    65c4:	b1 07       	cpc	r27, r17
    65c6:	d9 f7       	brne	.-10     	; 0x65be <.do_copy_data_loop>

000065c8 <__do_clear_bss>:
    65c8:	1c e0       	ldi	r17, 0x0C	; 12
    65ca:	ac e0       	ldi	r26, 0x0C	; 12
    65cc:	b1 e0       	ldi	r27, 0x01	; 1
    65ce:	01 c0       	rjmp	.+2      	; 0x65d2 <.do_clear_bss_start>

000065d0 <.do_clear_bss_loop>:
    65d0:	1d 92       	st	X+, r1

000065d2 <.do_clear_bss_start>:
    65d2:	a2 34       	cpi	r26, 0x42	; 66
    65d4:	b1 07       	cpc	r27, r17
    65d6:	e1 f7       	brne	.-8      	; 0x65d0 <.do_clear_bss_loop>

000065d8 <Initialize>:

/**
 * Called by the assembler initialization routines, should not be called directly.
 */
int i;
void Initialize(void){
    65d8:	f8 94       	cli
    65da:	e1 ee       	ldi	r30, 0xE1	; 225
    65dc:	f8 e0       	ldi	r31, 0x08	; 8
    65de:	80 e0       	ldi	r24, 0x00	; 0
    65e0:	90 e0       	ldi	r25, 0x00	; 0

	cli();

	//Initialize the mixer buffer
	for(i=0;i<MIX_BANK_SIZE*2;i++){
		mix_buf[i]=0x80;
    65e2:	20 e8       	ldi	r18, 0x80	; 128
    65e4:	02 c0       	rjmp	.+4      	; 0x65ea <Initialize+0x12>
    65e6:	21 93       	st	Z+, r18
    65e8:	01 96       	adiw	r24, 0x01	; 1
void Initialize(void){

	cli();

	//Initialize the mixer buffer
	for(i=0;i<MIX_BANK_SIZE*2;i++){
    65ea:	32 e0       	ldi	r19, 0x02	; 2
    65ec:	8c 30       	cpi	r24, 0x0C	; 12
    65ee:	93 07       	cpc	r25, r19
    65f0:	d4 f3       	brlt	.-12     	; 0x65e6 <Initialize+0xe>
		mix_buf[i]=0x80;
	}	
	
	mix_pos=mix_buf;
    65f2:	81 ee       	ldi	r24, 0xE1	; 225
    65f4:	98 e0       	ldi	r25, 0x08	; 8
    65f6:	90 93 ee 0a 	sts	0x0AEE, r25
    65fa:	80 93 ed 0a 	sts	0x0AED, r24
	mix_bank=0;
    65fe:	10 92 ef 0a 	sts	0x0AEF, r1
    6602:	e2 ef       	ldi	r30, 0xF2	; 242
    6604:	fa e0       	ldi	r31, 0x0A	; 10
    6606:	80 e0       	ldi	r24, 0x00	; 0
    6608:	90 e0       	ldi	r25, 0x00	; 0
    660a:	03 c0       	rjmp	.+6      	; 0x6612 <Initialize+0x3a>

	for(i=0;i<CHANNELS;i++){
		mixer.channels.all[i].volume=0;
    660c:	10 82       	st	Z, r1
    660e:	01 96       	adiw	r24, 0x01	; 1
    6610:	3a 96       	adiw	r30, 0x0a	; 10
	}	
	
	mix_pos=mix_buf;
	mix_bank=0;

	for(i=0;i<CHANNELS;i++){
    6612:	84 30       	cpi	r24, 0x04	; 4
    6614:	91 05       	cpc	r25, r1
    6616:	d4 f3       	brlt	.-12     	; 0x660c <Initialize+0x34>
	}

	
	#if MIXER_CHAN4_TYPE == 0
		//initialize LFSR		
		tr4_barrel_lo=1;
    6618:	81 e0       	ldi	r24, 0x01	; 1
    661a:	80 93 12 0b 	sts	0x0B12, r24
		tr4_barrel_hi=1;		
    661e:	80 93 13 0b 	sts	0x0B13, r24
		tr4_params=0b00000001; //15 bits no divider (1)
    6622:	80 93 11 0b 	sts	0x0B11, r24
		UBRR0L=56; //31250 bauds (.5% error)
	#endif

	
	//stop timers
	TCCR1B=0;
    6626:	10 92 81 00 	sts	0x0081, r1
	TCCR0B=0;
    662a:	15 bc       	out	0x25, r1	; 37
    662c:	ec e9       	ldi	r30, 0x9C	; 156
    662e:	fb e0       	ldi	r31, 0x0B	; 11
    6630:	80 e0       	ldi	r24, 0x00	; 0
    6632:	90 e0       	ldi	r25, 0x00	; 0
	#endif
	
	#if VIDEO_MODE == 3
		//clear srpites
		for(i=0;i<MAX_SPRITES;i++){
			sprites[i].y=(SCREEN_TILES_V*TILE_HEIGHT);		
    6634:	20 ee       	ldi	r18, 0xE0	; 224
    6636:	03 c0       	rjmp	.+6      	; 0x663e <Initialize+0x66>
    6638:	20 83       	st	Z, r18
    663a:	01 96       	adiw	r24, 0x01	; 1
    663c:	34 96       	adiw	r30, 0x04	; 4

	#endif
	
	#if VIDEO_MODE == 3
		//clear srpites
		for(i=0;i<MAX_SPRITES;i++){
    663e:	89 30       	cpi	r24, 0x09	; 9
    6640:	91 05       	cpc	r25, r1
    6642:	d4 f3       	brlt	.-12     	; 0x6638 <Initialize+0x60>
    6644:	90 93 2f 0b 	sts	0x0B2F, r25
    6648:	80 93 2e 0b 	sts	0x0B2E, r24
		}

	#endif

	//set ports
	DDRC=0xff; //video dac
    664c:	8f ef       	ldi	r24, 0xFF	; 255
    664e:	87 b9       	out	0x07, r24	; 7
	DDRB=0xff; //h-sync for ad725
    6650:	84 b9       	out	0x04, r24	; 4
	DDRD=0x80; //audio-out, midi-in
    6652:	80 e8       	ldi	r24, 0x80	; 128
    6654:	8a b9       	out	0x0a, r24	; 10

	//setup port A for joypads
	DDRA =0b00001100; //set only control lines as outputs
    6656:	8c e0       	ldi	r24, 0x0C	; 12
    6658:	81 b9       	out	0x01, r24	; 1
	PORTA=0b11111011; //activate pullups on the data lines
    665a:	8b ef       	ldi	r24, 0xFB	; 251
    665c:	82 b9       	out	0x02, r24	; 2

	//set sync parameters. starts at odd field, in pre-eq pulses, line 1
	sync_phase=SYNC_PHASE_PRE_EQ;
    665e:	10 92 b8 08 	sts	0x08B8, r1
	sync_pulse=SYNC_PRE_EQ_PULSES;
    6662:	86 e0       	ldi	r24, 0x06	; 6
    6664:	80 93 b9 08 	sts	0x08B9, r24

	//clear timers
	TCNT1H=0;
    6668:	10 92 85 00 	sts	0x0085, r1
	TCNT1L=0;
    666c:	10 92 84 00 	sts	0x0084, r1

	//set sync generator counter on TIMER1
	OCR1AH=HDRIVE_CL_TWICE>>8;
    6670:	83 e0       	ldi	r24, 0x03	; 3
    6672:	80 93 89 00 	sts	0x0089, r24
	OCR1AL=HDRIVE_CL_TWICE&0xff;
    6676:	8d e8       	ldi	r24, 0x8D	; 141
    6678:	80 93 88 00 	sts	0x0088, r24

	TCCR1B=(1<<WGM12)+(1<<CS10);//CTC mode, use OCR1A for match
    667c:	89 e0       	ldi	r24, 0x09	; 9
    667e:	80 93 81 00 	sts	0x0081, r24
	TIMSK1=(1<<OCIE1A);			//generate interrupt on match
    6682:	82 e0       	ldi	r24, 0x02	; 2
    6684:	80 93 6f 00 	sts	0x006F, r24

	//set clock divider counter for AD725 on TIMER0
	//outputs 14.31818Mhz (4FSC)
	TCCR0A=(1<<COM0A0)+(1<<WGM01); //toggle on compare match + CTC
    6688:	82 e4       	ldi	r24, 0x42	; 66
    668a:	84 bd       	out	0x24, r24	; 36
	OCR0A=0; //divide main clock by 2
    668c:	17 bc       	out	0x27, r1	; 39
	TCCR0B=(1<<CS00); //enable timer, no pre-scaler
    668e:	91 e0       	ldi	r25, 0x01	; 1
    6690:	95 bd       	out	0x25, r25	; 37

	//set sound PWM on TIMER2
	TCCR2A=(1<<COM2A1)+(1<<WGM21)+(1<<WGM20); //Fast PWM	
    6692:	83 e8       	ldi	r24, 0x83	; 131
    6694:	80 93 b0 00 	sts	0x00B0, r24
	OCR2A=0; //duty cycle (amplitude)
    6698:	10 92 b3 00 	sts	0x00B3, r1
	TCCR2B=(1<<CS20);  //enable timer, no pre-scaler
    669c:	90 93 b1 00 	sts	0x00B1, r25

	SYNC_PORT=(1<<SYNC_PIN)|(1<<VIDEOCE_PIN); //set sync & chip enable line to hi
    66a0:	81 e1       	ldi	r24, 0x11	; 17
    66a2:	85 b9       	out	0x05, r24	; 5

	burstOffset=0;
    66a4:	10 92 c9 08 	sts	0x08C9, r1
	curr_frame=0;
    66a8:	10 92 bc 08 	sts	0x08BC, r1
	vsync_phase=0;
    66ac:	10 92 bd 08 	sts	0x08BD, r1
	joypad1_status_hi=0;
    66b0:	10 92 c4 08 	sts	0x08C4, r1
    66b4:	10 92 c3 08 	sts	0x08C3, r1
	joypad2_status_hi=0;
    66b8:	10 92 c8 08 	sts	0x08C8, r1
    66bc:	10 92 c7 08 	sts	0x08C7, r1
	snesMouseEnabled=false;
    66c0:	10 92 30 0b 	sts	0x0B30, r1

	sei();
    66c4:	78 94       	sei
    66c6:	0e 94 70 4c 	call	0x98e0	; 0x98e0 <main>
    66ca:	0c 94 51 4f 	jmp	0x9ea2	; 0x9ea2 <_exit>

000066ce <__bad_interrupt>:
    66ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000066d2 <sync_func_vectors>:
    66d2:	cd 34       	cpi	r28, 0x4D	; 77
    66d4:	d7 34       	cpi	r29, 0x47	; 71
    66d6:	e5 34       	cpi	r30, 0x45	; 69
    66d8:	38 34       	cpi	r19, 0x48	; 72

000066da <test>:
    66da:	a0 e0       	ldi	r26, 0x00	; 0
    66dc:	b0 e0       	ldi	r27, 0x00	; 0
    66de:	2c 91       	ld	r18, X
    66e0:	b0 e1       	ldi	r27, 0x10	; 16
    66e2:	3c 91       	ld	r19, X
    66e4:	a0 e8       	ldi	r26, 0x80	; 128
    66e6:	b2 e0       	ldi	r27, 0x02	; 2
    66e8:	4c 91       	ld	r20, X
    66ea:	b2 e1       	ldi	r27, 0x12	; 18
    66ec:	5c 91       	ld	r21, X
    66ee:	08 95       	ret

000066f0 <sub_video_mode3>:
    66f0:	00 91 bb 08 	lds	r16, 0x08BB
    66f4:	01 30       	cpi	r16, 0x01	; 1
    66f6:	00 00       	nop
    66f8:	80 e0       	ldi	r24, 0x00	; 0
    66fa:	09 f4       	brne	.+2      	; 0x66fe <sub_video_mode3+0xe>
    66fc:	80 e0       	ldi	r24, 0x00	; 0
    66fe:	c8 95       	lpm
    6700:	c8 95       	lpm
    6702:	00 00       	nop
    6704:	ec ed       	ldi	r30, 0xDC	; 220

00006706 <mode0_render_delay>:
    6706:	c8 95       	lpm
    6708:	00 00       	nop
    670a:	ea 95       	dec	r30
    670c:	e1 f7       	brne	.-8      	; 0x6706 <mode0_render_delay>
    670e:	c8 95       	lpm
    6710:	00 00       	nop
    6712:	00 00       	nop
    6714:	00 00       	nop
    6716:	c0 e2       	ldi	r28, 0x20	; 32
    6718:	d1 e0       	ldi	r29, 0x01	; 1
    671a:	00 ee       	ldi	r16, 0xE0	; 224
    671c:	a0 2e       	mov	r10, r16
    671e:	66 27       	eor	r22, r22
    6720:	78 e0       	ldi	r23, 0x08	; 8

00006722 <next_text_line>:
    6722:	2c d1       	rcall	.+600    	; 0x697c <hsync_pulse>
    6724:	33 e2       	ldi	r19, 0x23	; 35

00006726 <text_wait1>:
    6726:	3a 95       	dec	r19
    6728:	f1 f7       	brne	.-4      	; 0x6726 <text_wait1>
    672a:	0e 94 cf 33 	call	0x679e	; 0x679e <render_tile_line>
    672e:	3f e0       	ldi	r19, 0x0F	; 15

00006730 <text_wait2>:
    6730:	3a 95       	dec	r19
    6732:	f1 f7       	brne	.-4      	; 0x6730 <text_wait2>
    6734:	00 c0       	rjmp	.+0      	; 0x6736 <text_wait2+0x6>
    6736:	aa 94       	dec	r10
    6738:	a9 f0       	breq	.+42     	; 0x6764 <text_frame_end>
    673a:	00 00       	nop
    673c:	63 95       	inc	r22
    673e:	00 00       	nop
    6740:	00 00       	nop
    6742:	68 30       	cpi	r22, 0x08	; 8
    6744:	29 f0       	breq	.+10     	; 0x6750 <next_text_row>
    6746:	c8 95       	lpm
    6748:	c8 95       	lpm
    674a:	c8 95       	lpm
    674c:	00 00       	nop
    674e:	e9 cf       	rjmp	.-46     	; 0x6722 <next_text_line>

00006750 <next_text_row>:
    6750:	66 27       	eor	r22, r22
    6752:	00 24       	eor	r0, r0
    6754:	3e e1       	ldi	r19, 0x1E	; 30
    6756:	c3 0f       	add	r28, r19
    6758:	d0 1d       	adc	r29, r0
	...
    6762:	df cf       	rjmp	.-66     	; 0x6722 <next_text_line>

00006764 <text_frame_end>:
    6764:	c8 95       	lpm
    6766:	c8 95       	lpm
    6768:	c8 95       	lpm
    676a:	c8 95       	lpm
    676c:	c8 95       	lpm
    676e:	00 00       	nop
    6770:	00 00       	nop
    6772:	04 d1       	rcall	.+520    	; 0x697c <hsync_pulse>
    6774:	11 e0       	ldi	r17, 0x01	; 1
    6776:	00 91 bb 08 	lds	r16, 0x08BB
    677a:	01 27       	eor	r16, r17
    677c:	00 93 bb 08 	sts	0x08BB, r16
    6780:	20 91 bc 08 	lds	r18, 0x08BC
    6784:	00 23       	and	r16, r16
    6786:	09 f0       	breq	.+2      	; 0x678a <text_frame_end+0x26>
    6788:	21 27       	eor	r18, r17
    678a:	20 93 bc 08 	sts	0x08BC, r18
    678e:	e1 e0       	ldi	r30, 0x01	; 1
    6790:	e0 93 ba 08 	sts	0x08BA, r30
    6794:	e2 e0       	ldi	r30, 0x02	; 2
    6796:	e0 93 36 00 	sts	0x0036, r30
    679a:	11 24       	eor	r1, r1
    679c:	08 95       	ret

0000679e <render_tile_line>:
    679e:	de 01       	movw	r26, r28
    67a0:	67 9f       	mul	r22, r23
    67a2:	00 00       	nop
    67a4:	00 91 be 08 	lds	r16, 0x08BE
    67a8:	10 91 bf 08 	lds	r17, 0x08BF
    67ac:	00 50       	subi	r16, 0x00	; 0
    67ae:	14 40       	sbci	r17, 0x04	; 4
    67b0:	00 0d       	add	r16, r0
    67b2:	11 1d       	adc	r17, r1
    67b4:	18 01       	movw	r2, r16
    67b6:	06 e8       	ldi	r16, 0x86	; 134
    67b8:	14 e0       	ldi	r17, 0x04	; 4
    67ba:	00 0d       	add	r16, r0
    67bc:	11 1d       	adc	r17, r1
    67be:	28 01       	movw	r4, r16
    67c0:	30 e4       	ldi	r19, 0x40	; 64
    67c2:	1e e1       	ldi	r17, 0x1E	; 30
    67c4:	2d 91       	ld	r18, X+
    67c6:	20 31       	cpi	r18, 0x10	; 16
    67c8:	6f b6       	in	r6, 0x3f	; 63
    67ca:	60 fa       	bst	r6, 0
    67cc:	23 9f       	mul	r18, r19
    67ce:	a1 01       	movw	r20, r2
    67d0:	0e f4       	brtc	.+2      	; 0x67d4 <render_tile_line+0x36>
    67d2:	a2 01       	movw	r20, r4
    67d4:	04 0e       	add	r0, r20
    67d6:	15 1e       	adc	r1, r21
    67d8:	f0 01       	movw	r30, r0
    67da:	f6 f0       	brts	.+60     	; 0x6818 <ramloop>

000067dc <romloop>:
    67dc:	05 91       	lpm	r16, Z+
    67de:	08 b9       	out	0x08, r16	; 8
    67e0:	2d 91       	ld	r18, X+
    67e2:	05 91       	lpm	r16, Z+
    67e4:	08 b9       	out	0x08, r16	; 8
    67e6:	23 9f       	mul	r18, r19
    67e8:	05 91       	lpm	r16, Z+
    67ea:	08 b9       	out	0x08, r16	; 8
    67ec:	20 31       	cpi	r18, 0x10	; 16
    67ee:	6f b6       	in	r6, 0x3f	; 63
    67f0:	05 91       	lpm	r16, Z+
    67f2:	08 b9       	out	0x08, r16	; 8
    67f4:	08 f4       	brcc	.+2      	; 0x67f8 <romloop+0x1c>
    67f6:	a2 01       	movw	r20, r4
    67f8:	05 91       	lpm	r16, Z+
    67fa:	08 b9       	out	0x08, r16	; 8
    67fc:	60 fa       	bst	r6, 0
    67fe:	04 0e       	add	r0, r20
    6800:	05 91       	lpm	r16, Z+
    6802:	08 b9       	out	0x08, r16	; 8
    6804:	15 1e       	adc	r1, r21
    6806:	1a 95       	dec	r17
    6808:	05 91       	lpm	r16, Z+
    680a:	08 b9       	out	0x08, r16	; 8
    680c:	05 91       	lpm	r16, Z+
    680e:	39 f1       	breq	.+78     	; 0x685e <end>
    6810:	f0 01       	movw	r30, r0
    6812:	08 b9       	out	0x08, r16	; 8
    6814:	1e f7       	brtc	.-58     	; 0x67dc <romloop>
    6816:	00 c0       	rjmp	.+0      	; 0x6818 <ramloop>

00006818 <ramloop>:
    6818:	01 91       	ld	r16, Z+
    681a:	08 b9       	out	0x08, r16	; 8
    681c:	2d 91       	ld	r18, X+
    681e:	01 91       	ld	r16, Z+
    6820:	00 00       	nop
    6822:	08 b9       	out	0x08, r16	; 8
    6824:	23 9f       	mul	r18, r19
    6826:	01 91       	ld	r16, Z+
    6828:	00 00       	nop
    682a:	08 b9       	out	0x08, r16	; 8
    682c:	20 31       	cpi	r18, 0x10	; 16
    682e:	6f b6       	in	r6, 0x3f	; 63
    6830:	60 fa       	bst	r6, 0
    6832:	01 91       	ld	r16, Z+
    6834:	08 b9       	out	0x08, r16	; 8
    6836:	0e f0       	brts	.+2      	; 0x683a <ramloop+0x22>
    6838:	a1 01       	movw	r20, r2
    683a:	01 91       	ld	r16, Z+
    683c:	04 0e       	add	r0, r20
    683e:	08 b9       	out	0x08, r16	; 8
    6840:	15 1e       	adc	r1, r21
    6842:	00 c0       	rjmp	.+0      	; 0x6844 <ramloop+0x2c>
    6844:	01 91       	ld	r16, Z+
    6846:	08 b9       	out	0x08, r16	; 8
    6848:	00 00       	nop
    684a:	00 c0       	rjmp	.+0      	; 0x684c <ramloop+0x34>
    684c:	01 91       	ld	r16, Z+
    684e:	08 b9       	out	0x08, r16	; 8
    6850:	01 91       	ld	r16, Z+
    6852:	1a 95       	dec	r17
    6854:	21 f0       	breq	.+8      	; 0x685e <end>
    6856:	f0 01       	movw	r30, r0
    6858:	08 b9       	out	0x08, r16	; 8
    685a:	06 f6       	brtc	.-128    	; 0x67dc <romloop>
    685c:	dd cf       	rjmp	.-70     	; 0x6818 <ramloop>

0000685e <end>:
    685e:	08 b9       	out	0x08, r16	; 8
    6860:	00 27       	eor	r16, r16
    6862:	c8 95       	lpm
    6864:	00 00       	nop
    6866:	08 b9       	out	0x08, r16	; 8
    6868:	05 e0       	ldi	r16, 0x05	; 5
    686a:	0a 95       	dec	r16
    686c:	f1 f7       	brne	.-4      	; 0x686a <end+0xc>
    686e:	08 95       	ret

00006870 <do_hsync>:
    6870:	28 98       	cbi	0x05, 0	; 5
    6872:	0e 94 81 3e 	call	0x7d02	; 0x7d02 <update_sound_buffer>
    6876:	e7 e1       	ldi	r30, 0x17	; 23

00006878 <do_hsync_delay>:
    6878:	ea 95       	dec	r30
    687a:	f1 f7       	brne	.-4      	; 0x6878 <do_hsync_delay>
    687c:	28 9a       	sbi	0x05, 0	; 5
    687e:	e4 d0       	rcall	.+456    	; 0x6a48 <set_normal_rate_HDRIVE>
    6880:	e0 e0       	ldi	r30, 0x00	; 0
    6882:	f6 e0       	ldi	r31, 0x06	; 6
    6884:	c7 d0       	rcall	.+398    	; 0x6a14 <update_sync_phase>
    6886:	e0 ff       	sbrs	r30, 0
    6888:	06 d0       	rcall	.+12     	; 0x6896 <render>
    688a:	e0 ff       	sbrs	r30, 0
    688c:	02 c0       	rjmp	.+4      	; 0x6892 <not_start_of_frame>
    688e:	0e 94 c7 3d 	call	0x7b8e	; 0x7b8e <MixSound>

00006892 <not_start_of_frame>:
    6892:	08 95       	ret

00006894 <read_joypads>:
    6894:	08 95       	ret

00006896 <render>:
    6896:	ef 93       	push	r30
    6898:	e0 91 b9 08 	lds	r30, 0x08B9
    689c:	e9 3e       	cpi	r30, 0xE9	; 233
    689e:	e0 f5       	brcc	.+120    	; 0x6918 <render_end>
    68a0:	e9 30       	cpi	r30, 0x09	; 9
    68a2:	d0 f1       	brcs	.+116    	; 0x6918 <render_end>
    68a4:	2f 92       	push	r2
    68a6:	3f 92       	push	r3
    68a8:	4f 92       	push	r4
    68aa:	5f 92       	push	r5
    68ac:	6f 92       	push	r6
    68ae:	7f 92       	push	r7
    68b0:	8f 92       	push	r8
    68b2:	9f 92       	push	r9
    68b4:	af 92       	push	r10
    68b6:	bf 92       	push	r11
    68b8:	cf 92       	push	r12
    68ba:	df 92       	push	r13
    68bc:	ef 92       	push	r14
    68be:	ff 92       	push	r15
    68c0:	0f 93       	push	r16
    68c2:	1f 93       	push	r17
    68c4:	2f 93       	push	r18
    68c6:	3f 93       	push	r19
    68c8:	4f 93       	push	r20
    68ca:	5f 93       	push	r21
    68cc:	6f 93       	push	r22
    68ce:	7f 93       	push	r23
    68d0:	8f 93       	push	r24
    68d2:	9f 93       	push	r25
    68d4:	af 93       	push	r26
    68d6:	bf 93       	push	r27
    68d8:	cf 93       	push	r28
    68da:	df 93       	push	r29
    68dc:	0e 94 78 33 	call	0x66f0	; 0x66f0 <sub_video_mode3>
    68e0:	df 91       	pop	r29
    68e2:	cf 91       	pop	r28
    68e4:	bf 91       	pop	r27
    68e6:	af 91       	pop	r26
    68e8:	9f 91       	pop	r25
    68ea:	8f 91       	pop	r24
    68ec:	7f 91       	pop	r23
    68ee:	6f 91       	pop	r22
    68f0:	5f 91       	pop	r21
    68f2:	4f 91       	pop	r20
    68f4:	3f 91       	pop	r19
    68f6:	2f 91       	pop	r18
    68f8:	1f 91       	pop	r17
    68fa:	0f 91       	pop	r16
    68fc:	ff 90       	pop	r15
    68fe:	ef 90       	pop	r14
    6900:	df 90       	pop	r13
    6902:	cf 90       	pop	r12
    6904:	bf 90       	pop	r11
    6906:	af 90       	pop	r10
    6908:	9f 90       	pop	r9
    690a:	8f 90       	pop	r8
    690c:	7f 90       	pop	r7
    690e:	6f 90       	pop	r6
    6910:	5f 90       	pop	r5
    6912:	4f 90       	pop	r4
    6914:	3f 90       	pop	r3
    6916:	2f 90       	pop	r2

00006918 <render_end>:
    6918:	ef 91       	pop	r30
    691a:	08 95       	ret

0000691c <__vector_13>:
    691c:	ff 93       	push	r31
    691e:	ef 93       	push	r30
    6920:	ef b7       	in	r30, 0x3f	; 63
    6922:	ef 93       	push	r30
    6924:	e0 91 84 00 	lds	r30, 0x0084
    6928:	ee 50       	subi	r30, 0x0E	; 14
    692a:	e1 30       	cpi	r30, 0x01	; 1
    692c:	00 f0       	brcs	.+0      	; 0x692e <__vector_13+0x12>
    692e:	e2 30       	cpi	r30, 0x02	; 2
    6930:	00 f0       	brcs	.+0      	; 0x6932 <__vector_13+0x16>
    6932:	e3 30       	cpi	r30, 0x03	; 3
    6934:	00 f0       	brcs	.+0      	; 0x6936 <__vector_13+0x1a>
    6936:	e4 30       	cpi	r30, 0x04	; 4
    6938:	00 f0       	brcs	.+0      	; 0x693a <__vector_13+0x1e>
    693a:	e5 30       	cpi	r30, 0x05	; 5
    693c:	00 f0       	brcs	.+0      	; 0x693e <__vector_13+0x22>
    693e:	e6 30       	cpi	r30, 0x06	; 6
    6940:	00 f0       	brcs	.+0      	; 0x6942 <__vector_13+0x26>
    6942:	e7 30       	cpi	r30, 0x07	; 7
    6944:	00 f0       	brcs	.+0      	; 0x6946 <__vector_13+0x2a>
    6946:	e8 30       	cpi	r30, 0x08	; 8
    6948:	00 f0       	brcs	.+0      	; 0x694a <__vector_13+0x2e>
    694a:	e9 30       	cpi	r30, 0x09	; 9
    694c:	00 f0       	brcs	.+0      	; 0x694e <__vector_13+0x32>
    694e:	05 d0       	rcall	.+10     	; 0x695a <sync>
    6950:	ef 91       	pop	r30
    6952:	ef bf       	out	0x3f, r30	; 63
    6954:	ef 91       	pop	r30
    6956:	ff 91       	pop	r31
    6958:	18 95       	reti

0000695a <sync>:
    695a:	0f 92       	push	r0
    695c:	1f 92       	push	r1
    695e:	e2 ed       	ldi	r30, 0xD2	; 210
    6960:	f6 e6       	ldi	r31, 0x66	; 102
    6962:	00 90 b8 08 	lds	r0, 0x08B8
    6966:	00 0c       	add	r0, r0
    6968:	11 24       	eor	r1, r1
    696a:	e0 0d       	add	r30, r0
    696c:	f1 1d       	adc	r31, r1
    696e:	05 90       	lpm	r0, Z+
    6970:	14 90       	lpm	r1, Z+
    6972:	f0 01       	movw	r30, r0
    6974:	09 95       	icall
    6976:	1f 90       	pop	r1
    6978:	0f 90       	pop	r0
    697a:	08 95       	ret

0000697c <hsync_pulse>:
    697c:	28 98       	cbi	0x05, 0	; 5
    697e:	0e 94 81 3e 	call	0x7d02	; 0x7d02 <update_sound_buffer>
    6982:	e5 e1       	ldi	r30, 0x15	; 21
    6984:	ea 95       	dec	r30
    6986:	f1 f7       	brne	.-4      	; 0x6984 <hsync_pulse+0x8>
    6988:	e0 91 b9 08 	lds	r30, 0x08B9
    698c:	ea 95       	dec	r30
    698e:	e0 93 b9 08 	sts	0x08B9, r30
    6992:	28 9a       	sbi	0x05, 0	; 5
    6994:	00 00       	nop
    6996:	00 00       	nop
    6998:	08 95       	ret

0000699a <do_pre_eq>:
    699a:	28 98       	cbi	0x05, 0	; 5
    699c:	0e 94 aa 3e 	call	0x7d54	; 0x7d54 <update_sound_buffer_2>
    69a0:	28 9a       	sbi	0x05, 0	; 5
    69a2:	00 00       	nop
    69a4:	e1 e0       	ldi	r30, 0x01	; 1
    69a6:	f6 e0       	ldi	r31, 0x06	; 6
    69a8:	35 d0       	rcall	.+106    	; 0x6a14 <update_sync_phase>
    69aa:	47 d0       	rcall	.+142    	; 0x6a3a <set_double_rate_HDRIVE>
    69ac:	08 95       	ret

000069ae <do_eq>:
    69ae:	28 98       	cbi	0x05, 0	; 5
    69b0:	0e 94 aa 3e 	call	0x7d54	; 0x7d54 <update_sound_buffer_2>
    69b4:	e0 eb       	ldi	r30, 0xB0	; 176

000069b6 <do_eq_delay>:
    69b6:	00 00       	nop
    69b8:	ea 95       	dec	r30
    69ba:	e9 f7       	brne	.-6      	; 0x69b6 <do_eq_delay>
    69bc:	00 00       	nop
    69be:	00 00       	nop
    69c0:	28 9a       	sbi	0x05, 0	; 5
    69c2:	f6 e0       	ldi	r31, 0x06	; 6
    69c4:	e2 e0       	ldi	r30, 0x02	; 2
    69c6:	26 d0       	rcall	.+76     	; 0x6a14 <update_sync_phase>
    69c8:	08 95       	ret

000069ca <do_post_eq>:
    69ca:	28 98       	cbi	0x05, 0	; 5
    69cc:	0e 94 aa 3e 	call	0x7d54	; 0x7d54 <update_sound_buffer_2>
    69d0:	28 9a       	sbi	0x05, 0	; 5
    69d2:	00 00       	nop
    69d4:	e3 e0       	ldi	r30, 0x03	; 3
    69d6:	fd ef       	ldi	r31, 0xFD	; 253
    69d8:	1d d0       	rcall	.+58     	; 0x6a14 <update_sync_phase>
    69da:	e0 91 b9 08 	lds	r30, 0x08B9
    69de:	e5 30       	cpi	r30, 0x05	; 5
    69e0:	91 f4       	brne	.+36     	; 0x6a06 <noshift>
    69e2:	e0 91 bb 08 	lds	r30, 0x08BB
    69e6:	e1 30       	cpi	r30, 0x01	; 1
    69e8:	00 00       	nop
    69ea:	f0 91 c9 08 	lds	r31, 0x08C9
    69ee:	19 f4       	brne	.+6      	; 0x69f6 <peq_odd>
    69f0:	f0 91 c9 08 	lds	r31, 0x08C9
    69f4:	f1 95       	neg	r31

000069f6 <peq_odd>:
    69f6:	e3 e0       	ldi	r30, 0x03	; 3
    69f8:	e0 93 89 00 	sts	0x0089, r30
    69fc:	ed e8       	ldi	r30, 0x8D	; 141
    69fe:	ef 0f       	add	r30, r31
    6a00:	e0 93 88 00 	sts	0x0088, r30
    6a04:	08 95       	ret

00006a06 <noshift>:
    6a06:	e3 e0       	ldi	r30, 0x03	; 3
    6a08:	e0 93 89 00 	sts	0x0089, r30
    6a0c:	ed e8       	ldi	r30, 0x8D	; 141
    6a0e:	e0 93 88 00 	sts	0x0088, r30
    6a12:	08 95       	ret

00006a14 <update_sync_phase>:
    6a14:	00 90 b9 08 	lds	r0, 0x08B9
    6a18:	0a 94       	dec	r0
    6a1a:	10 90 5f 00 	lds	r1, 0x005F
    6a1e:	11 fc       	sbrc	r1, 1
    6a20:	0f 2e       	mov	r0, r31
    6a22:	00 92 b9 08 	sts	0x08B9, r0
    6a26:	00 90 b8 08 	lds	r0, 0x08B8
    6a2a:	11 fc       	sbrc	r1, 1
    6a2c:	0e 2e       	mov	r0, r30
    6a2e:	00 92 b8 08 	sts	0x08B8, r0
    6a32:	e0 e0       	ldi	r30, 0x00	; 0
    6a34:	11 fc       	sbrc	r1, 1
    6a36:	e1 e0       	ldi	r30, 0x01	; 1
    6a38:	08 95       	ret

00006a3a <set_double_rate_HDRIVE>:
    6a3a:	e3 e0       	ldi	r30, 0x03	; 3
    6a3c:	e0 93 89 00 	sts	0x0089, r30
    6a40:	ed e8       	ldi	r30, 0x8D	; 141
    6a42:	e0 93 88 00 	sts	0x0088, r30
    6a46:	08 95       	ret

00006a48 <set_normal_rate_HDRIVE>:
    6a48:	e7 e0       	ldi	r30, 0x07	; 7
    6a4a:	e0 93 89 00 	sts	0x0089, r30
    6a4e:	eb e1       	ldi	r30, 0x1B	; 27
    6a50:	e0 93 88 00 	sts	0x0088, r30
    6a54:	08 95       	ret

00006a56 <ClearVram>:
    6a56:	e6 e6       	ldi	r30, 0x66	; 102
    6a58:	f3 e0       	ldi	r31, 0x03	; 3
    6a5a:	a0 e2       	ldi	r26, 0x20	; 32
    6a5c:	b1 e0       	ldi	r27, 0x01	; 1
    6a5e:	60 e1       	ldi	r22, 0x10	; 16

00006a60 <fill_vram_loop>:
    6a60:	6d 93       	st	X+, r22
    6a62:	31 97       	sbiw	r30, 0x01	; 1
    6a64:	e9 f7       	brne	.-6      	; 0x6a60 <fill_vram_loop>
    6a66:	11 24       	eor	r1, r1
    6a68:	08 95       	ret

00006a6a <SetTile>:
    6a6a:	99 27       	eor	r25, r25
    6a6c:	77 27       	eor	r23, r23
    6a6e:	2e e1       	ldi	r18, 0x1E	; 30
    6a70:	62 9f       	mul	r22, r18
    6a72:	08 0e       	add	r0, r24
    6a74:	19 1e       	adc	r1, r25
    6a76:	a0 e2       	ldi	r26, 0x20	; 32
    6a78:	b1 e0       	ldi	r27, 0x01	; 1
    6a7a:	a0 0d       	add	r26, r0
    6a7c:	b1 1d       	adc	r27, r1
    6a7e:	4c 93       	st	X, r20
    6a80:	11 24       	eor	r1, r1
    6a82:	08 95       	ret

00006a84 <LoadMap>:
    6a84:	08 95       	ret

00006a86 <SetFont>:
    6a86:	99 27       	eor	r25, r25
    6a88:	2e e1       	ldi	r18, 0x1E	; 30
    6a8a:	62 9f       	mul	r22, r18
    6a8c:	08 0e       	add	r0, r24
    6a8e:	19 1e       	adc	r1, r25
    6a90:	a0 e2       	ldi	r26, 0x20	; 32
    6a92:	b1 e0       	ldi	r27, 0x01	; 1
    6a94:	a0 0d       	add	r26, r0
    6a96:	b1 1d       	adc	r27, r1
    6a98:	50 91 c0 08 	lds	r21, 0x08C0
    6a9c:	45 0f       	add	r20, r21
    6a9e:	4c 93       	st	X, r20
    6aa0:	11 24       	eor	r1, r1
    6aa2:	08 95       	ret

00006aa4 <SetFontTilesIndex>:
    6aa4:	80 93 c0 08 	sts	0x08C0, r24
    6aa8:	08 95       	ret

00006aaa <SetSpritesTileTable>:
    6aaa:	80 93 b6 08 	sts	0x08B6, r24
    6aae:	90 93 b7 08 	sts	0x08B7, r25
    6ab2:	08 95       	ret

00006ab4 <SetTileTable>:
    6ab4:	80 93 be 08 	sts	0x08BE, r24
    6ab8:	90 93 bf 08 	sts	0x08BF, r25
    6abc:	08 95       	ret

00006abe <GetVsyncFlag>:
    6abe:	80 91 ba 08 	lds	r24, 0x08BA
    6ac2:	08 95       	ret

00006ac4 <ClearVsyncFlag>:
    6ac4:	11 24       	eor	r1, r1
    6ac6:	10 92 ba 08 	sts	0x08BA, r1
    6aca:	08 95       	ret

00006acc <SetLowSpeed>:
    6acc:	80 e8       	ldi	r24, 0x80	; 128
    6ace:	91 e0       	ldi	r25, 0x01	; 1
    6ad0:	80 93 61 00 	sts	0x0061, r24
    6ad4:	90 93 61 00 	sts	0x0061, r25
    6ad8:	08 95       	ret

00006ada <SetFullSpeed>:
    6ada:	80 e8       	ldi	r24, 0x80	; 128
    6adc:	90 e0       	ldi	r25, 0x00	; 0
    6ade:	80 93 61 00 	sts	0x0061, r24
    6ae2:	90 93 61 00 	sts	0x0061, r25
    6ae6:	08 95       	ret

00006ae8 <CopyTileToRam>:
    6ae8:	20 e4       	ldi	r18, 0x40	; 64
    6aea:	e0 91 be 08 	lds	r30, 0x08BE
    6aee:	f0 91 bf 08 	lds	r31, 0x08BF
    6af2:	80 51       	subi	r24, 0x10	; 16
    6af4:	82 9f       	mul	r24, r18
    6af6:	e0 0d       	add	r30, r0
    6af8:	f1 1d       	adc	r31, r1
    6afa:	a6 e8       	ldi	r26, 0x86	; 134
    6afc:	b4 e0       	ldi	r27, 0x04	; 4
    6afe:	62 9f       	mul	r22, r18
    6b00:	a0 0d       	add	r26, r0
    6b02:	b1 1d       	adc	r27, r1
    6b04:	00 24       	eor	r0, r0
    6b06:	05 90       	lpm	r0, Z+
    6b08:	0d 92       	st	X+, r0
    6b0a:	05 90       	lpm	r0, Z+
    6b0c:	0d 92       	st	X+, r0
    6b0e:	05 90       	lpm	r0, Z+
    6b10:	0d 92       	st	X+, r0
    6b12:	05 90       	lpm	r0, Z+
    6b14:	0d 92       	st	X+, r0
    6b16:	05 90       	lpm	r0, Z+
    6b18:	0d 92       	st	X+, r0
    6b1a:	05 90       	lpm	r0, Z+
    6b1c:	0d 92       	st	X+, r0
    6b1e:	05 90       	lpm	r0, Z+
    6b20:	0d 92       	st	X+, r0
    6b22:	05 90       	lpm	r0, Z+
    6b24:	0d 92       	st	X+, r0
    6b26:	05 90       	lpm	r0, Z+
    6b28:	0d 92       	st	X+, r0
    6b2a:	05 90       	lpm	r0, Z+
    6b2c:	0d 92       	st	X+, r0
    6b2e:	05 90       	lpm	r0, Z+
    6b30:	0d 92       	st	X+, r0
    6b32:	05 90       	lpm	r0, Z+
    6b34:	0d 92       	st	X+, r0
    6b36:	05 90       	lpm	r0, Z+
    6b38:	0d 92       	st	X+, r0
    6b3a:	05 90       	lpm	r0, Z+
    6b3c:	0d 92       	st	X+, r0
    6b3e:	05 90       	lpm	r0, Z+
    6b40:	0d 92       	st	X+, r0
    6b42:	05 90       	lpm	r0, Z+
    6b44:	0d 92       	st	X+, r0
    6b46:	05 90       	lpm	r0, Z+
    6b48:	0d 92       	st	X+, r0
    6b4a:	05 90       	lpm	r0, Z+
    6b4c:	0d 92       	st	X+, r0
    6b4e:	05 90       	lpm	r0, Z+
    6b50:	0d 92       	st	X+, r0
    6b52:	05 90       	lpm	r0, Z+
    6b54:	0d 92       	st	X+, r0
    6b56:	05 90       	lpm	r0, Z+
    6b58:	0d 92       	st	X+, r0
    6b5a:	05 90       	lpm	r0, Z+
    6b5c:	0d 92       	st	X+, r0
    6b5e:	05 90       	lpm	r0, Z+
    6b60:	0d 92       	st	X+, r0
    6b62:	05 90       	lpm	r0, Z+
    6b64:	0d 92       	st	X+, r0
    6b66:	05 90       	lpm	r0, Z+
    6b68:	0d 92       	st	X+, r0
    6b6a:	05 90       	lpm	r0, Z+
    6b6c:	0d 92       	st	X+, r0
    6b6e:	05 90       	lpm	r0, Z+
    6b70:	0d 92       	st	X+, r0
    6b72:	05 90       	lpm	r0, Z+
    6b74:	0d 92       	st	X+, r0
    6b76:	05 90       	lpm	r0, Z+
    6b78:	0d 92       	st	X+, r0
    6b7a:	05 90       	lpm	r0, Z+
    6b7c:	0d 92       	st	X+, r0
    6b7e:	05 90       	lpm	r0, Z+
    6b80:	0d 92       	st	X+, r0
    6b82:	05 90       	lpm	r0, Z+
    6b84:	0d 92       	st	X+, r0
    6b86:	05 90       	lpm	r0, Z+
    6b88:	0d 92       	st	X+, r0
    6b8a:	05 90       	lpm	r0, Z+
    6b8c:	0d 92       	st	X+, r0
    6b8e:	05 90       	lpm	r0, Z+
    6b90:	0d 92       	st	X+, r0
    6b92:	05 90       	lpm	r0, Z+
    6b94:	0d 92       	st	X+, r0
    6b96:	05 90       	lpm	r0, Z+
    6b98:	0d 92       	st	X+, r0
    6b9a:	05 90       	lpm	r0, Z+
    6b9c:	0d 92       	st	X+, r0
    6b9e:	05 90       	lpm	r0, Z+
    6ba0:	0d 92       	st	X+, r0
    6ba2:	05 90       	lpm	r0, Z+
    6ba4:	0d 92       	st	X+, r0
    6ba6:	05 90       	lpm	r0, Z+
    6ba8:	0d 92       	st	X+, r0
    6baa:	05 90       	lpm	r0, Z+
    6bac:	0d 92       	st	X+, r0
    6bae:	05 90       	lpm	r0, Z+
    6bb0:	0d 92       	st	X+, r0
    6bb2:	05 90       	lpm	r0, Z+
    6bb4:	0d 92       	st	X+, r0
    6bb6:	05 90       	lpm	r0, Z+
    6bb8:	0d 92       	st	X+, r0
    6bba:	05 90       	lpm	r0, Z+
    6bbc:	0d 92       	st	X+, r0
    6bbe:	05 90       	lpm	r0, Z+
    6bc0:	0d 92       	st	X+, r0
    6bc2:	05 90       	lpm	r0, Z+
    6bc4:	0d 92       	st	X+, r0
    6bc6:	05 90       	lpm	r0, Z+
    6bc8:	0d 92       	st	X+, r0
    6bca:	05 90       	lpm	r0, Z+
    6bcc:	0d 92       	st	X+, r0
    6bce:	05 90       	lpm	r0, Z+
    6bd0:	0d 92       	st	X+, r0
    6bd2:	05 90       	lpm	r0, Z+
    6bd4:	0d 92       	st	X+, r0
    6bd6:	05 90       	lpm	r0, Z+
    6bd8:	0d 92       	st	X+, r0
    6bda:	05 90       	lpm	r0, Z+
    6bdc:	0d 92       	st	X+, r0
    6bde:	05 90       	lpm	r0, Z+
    6be0:	0d 92       	st	X+, r0
    6be2:	05 90       	lpm	r0, Z+
    6be4:	0d 92       	st	X+, r0
    6be6:	05 90       	lpm	r0, Z+
    6be8:	0d 92       	st	X+, r0
    6bea:	05 90       	lpm	r0, Z+
    6bec:	0d 92       	st	X+, r0
    6bee:	05 90       	lpm	r0, Z+
    6bf0:	0d 92       	st	X+, r0
    6bf2:	05 90       	lpm	r0, Z+
    6bf4:	0d 92       	st	X+, r0
    6bf6:	05 90       	lpm	r0, Z+
    6bf8:	0d 92       	st	X+, r0
    6bfa:	05 90       	lpm	r0, Z+
    6bfc:	0d 92       	st	X+, r0
    6bfe:	05 90       	lpm	r0, Z+
    6c00:	0d 92       	st	X+, r0
    6c02:	05 90       	lpm	r0, Z+
    6c04:	0d 92       	st	X+, r0
    6c06:	11 24       	eor	r1, r1
    6c08:	08 95       	ret

00006c0a <BlitSprite>:
    6c0a:	94 e0       	ldi	r25, 0x04	; 4
    6c0c:	89 9f       	mul	r24, r25
    6c0e:	eb e9       	ldi	r30, 0x9B	; 155
    6c10:	fb e0       	ldi	r31, 0x0B	; 11
    6c12:	e0 0d       	add	r30, r0
    6c14:	f1 1d       	adc	r31, r1
    6c16:	82 81       	ldd	r24, Z+2	; 0x02
    6c18:	e0 91 b6 08 	lds	r30, 0x08B6
    6c1c:	f0 91 b7 08 	lds	r31, 0x08B7
    6c20:	90 e4       	ldi	r25, 0x40	; 64
    6c22:	89 9f       	mul	r24, r25
    6c24:	e0 0d       	add	r30, r0
    6c26:	f1 1d       	adc	r31, r1
    6c28:	a6 e8       	ldi	r26, 0x86	; 134
    6c2a:	b4 e0       	ldi	r27, 0x04	; 4
    6c2c:	69 9f       	mul	r22, r25
    6c2e:	a0 0d       	add	r26, r0
    6c30:	b1 1d       	adc	r27, r1
    6c32:	11 24       	eor	r1, r1
    6c34:	40 30       	cpi	r20, 0x00	; 0
    6c36:	21 f4       	brne	.+8      	; 0x6c40 <x_2nd_tile>
    6c38:	a2 0f       	add	r26, r18
    6c3a:	b1 1d       	adc	r27, r1
    6c3c:	82 2f       	mov	r24, r18
    6c3e:	04 c0       	rjmp	.+8      	; 0x6c48 <x_check_end>

00006c40 <x_2nd_tile>:
    6c40:	88 e0       	ldi	r24, 0x08	; 8
    6c42:	82 1b       	sub	r24, r18
    6c44:	e8 0f       	add	r30, r24
    6c46:	f1 1d       	adc	r31, r1

00006c48 <x_check_end>:
    6c48:	50 30       	cpi	r21, 0x00	; 0
    6c4a:	31 f4       	brne	.+12     	; 0x6c58 <y_2nd_tile>
    6c4c:	98 e0       	ldi	r25, 0x08	; 8
    6c4e:	93 9f       	mul	r25, r19
    6c50:	a0 0d       	add	r26, r0
    6c52:	b1 1d       	adc	r27, r1
    6c54:	93 2f       	mov	r25, r19
    6c56:	06 c0       	rjmp	.+12     	; 0x6c64 <y_check_end>

00006c58 <y_2nd_tile>:
    6c58:	98 e0       	ldi	r25, 0x08	; 8
    6c5a:	93 1b       	sub	r25, r19
    6c5c:	58 e0       	ldi	r21, 0x08	; 8
    6c5e:	59 9f       	mul	r21, r25
    6c60:	e0 0d       	add	r30, r0
    6c62:	f1 1d       	adc	r31, r1

00006c64 <y_check_end>:
    6c64:	11 24       	eor	r1, r1
    6c66:	3e ef       	ldi	r19, 0xFE	; 254
    6c68:	58 e0       	ldi	r21, 0x08	; 8
    6c6a:	59 1b       	sub	r21, r25

00006c6c <y2_loop>:
    6c6c:	48 e0       	ldi	r20, 0x08	; 8
    6c6e:	48 1b       	sub	r20, r24

00006c70 <x2_loop>:
    6c70:	25 91       	lpm	r18, Z+
    6c72:	23 13       	cpse	r18, r19
    6c74:	2c 93       	st	X, r18
    6c76:	11 96       	adiw	r26, 0x01	; 1
    6c78:	4a 95       	dec	r20
    6c7a:	d1 f7       	brne	.-12     	; 0x6c70 <x2_loop>
    6c7c:	e8 0f       	add	r30, r24
    6c7e:	f1 1d       	adc	r31, r1
    6c80:	a8 0f       	add	r26, r24
    6c82:	b1 1d       	adc	r27, r1
    6c84:	5a 95       	dec	r21
    6c86:	91 f7       	brne	.-28     	; 0x6c6c <y2_loop>
    6c88:	11 24       	eor	r1, r1
    6c8a:	08 95       	ret

00006c8c <SetColorBurstOffset>:
    6c8c:	80 93 c9 08 	sts	0x08C9, r24
    6c90:	08 95       	ret

00006c92 <ReadJoypad>:
    6c92:	88 23       	and	r24, r24
    6c94:	29 f4       	brne	.+10     	; 0x6ca0 <rj_p2>
    6c96:	80 91 c1 08 	lds	r24, 0x08C1
    6c9a:	90 91 c2 08 	lds	r25, 0x08C2
    6c9e:	08 95       	ret

00006ca0 <rj_p2>:
    6ca0:	80 91 c5 08 	lds	r24, 0x08C5
    6ca4:	90 91 c6 08 	lds	r25, 0x08C6
    6ca8:	08 95       	ret

00006caa <ReadJoypadExt>:
    6caa:	88 23       	and	r24, r24
    6cac:	29 f4       	brne	.+10     	; 0x6cb8 <rj_p2m>
    6cae:	80 91 c3 08 	lds	r24, 0x08C3
    6cb2:	90 91 c4 08 	lds	r25, 0x08C4
    6cb6:	08 95       	ret

00006cb8 <rj_p2m>:
    6cb8:	80 91 c7 08 	lds	r24, 0x08C7
    6cbc:	90 91 c8 08 	lds	r25, 0x08C8
    6cc0:	08 95       	ret

00006cc2 <WaitUs>:
    6cc2:	78 e0       	ldi	r23, 0x08	; 8
    6cc4:	7a 95       	dec	r23
    6cc6:	f1 f7       	brne	.-4      	; 0x6cc4 <WaitUs+0x2>
    6cc8:	00 00       	nop
    6cca:	01 97       	sbiw	r24, 0x01	; 1
    6ccc:	d1 f7       	brne	.-12     	; 0x6cc2 <WaitUs>
    6cce:	08 95       	ret

00006cd0 <WriteEeprom>:
    6cd0:	f9 99       	sbic	0x1f, 1	; 31
    6cd2:	fe cf       	rjmp	.-4      	; 0x6cd0 <WriteEeprom>
    6cd4:	92 bd       	out	0x22, r25	; 34
    6cd6:	81 bd       	out	0x21, r24	; 33
    6cd8:	60 bd       	out	0x20, r22	; 32
    6cda:	f8 94       	cli
    6cdc:	fa 9a       	sbi	0x1f, 2	; 31
    6cde:	f9 9a       	sbi	0x1f, 1	; 31
    6ce0:	78 94       	sei
    6ce2:	08 95       	ret

00006ce4 <ReadEeprom>:
    6ce4:	f9 99       	sbic	0x1f, 1	; 31
    6ce6:	fe cf       	rjmp	.-4      	; 0x6ce4 <ReadEeprom>
    6ce8:	92 bd       	out	0x22, r25	; 34
    6cea:	81 bd       	out	0x21, r24	; 33
    6cec:	f8 94       	cli
    6cee:	f8 9a       	sbi	0x1f, 0	; 31
    6cf0:	80 b5       	in	r24, 0x20	; 32
    6cf2:	78 94       	sei
    6cf4:	08 95       	ret

00006cf6 <SoftReset>:
}

/**
 * Performs a software reset
 */
void SoftReset(void){        
    6cf6:	08 95       	ret

00006cf8 <EnableSnesMouse>:

/*
 This method activates teh code to read the mouse. 
 Currently reading the mouse takes a much a 2.5 scanlines.
*/
void EnableSnesMouse(){
    6cf8:	81 e0       	ldi	r24, 0x01	; 1
    6cfa:	80 93 30 0b 	sts	0x0B30, r24
	snesMouseEnabled=true;
}
    6cfe:	08 95       	ret

00006d00 <logo>:

void logo(){
    6d00:	08 95       	ret

00006d02 <isEepromFormatted>:

	return false;
}

//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    6d02:	1f 93       	push	r17
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    6d04:	80 e0       	ldi	r24, 0x00	; 0
    6d06:	90 e0       	ldi	r25, 0x00	; 0
    6d08:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6d0c:	18 2f       	mov	r17, r24
    6d0e:	81 e0       	ldi	r24, 0x01	; 1
    6d10:	90 e0       	ldi	r25, 0x00	; 0
    6d12:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6d16:	90 e0       	ldi	r25, 0x00	; 0
    6d18:	38 2f       	mov	r19, r24
    6d1a:	20 e0       	ldi	r18, 0x00	; 0
    6d1c:	21 0f       	add	r18, r17
    6d1e:	31 1d       	adc	r19, r1
    6d20:	2a 55       	subi	r18, 0x5A	; 90
    6d22:	35 45       	sbci	r19, 0x55	; 85
    6d24:	09 f4       	brne	.+2      	; 0x6d28 <isEepromFormatted+0x26>
    6d26:	91 e0       	ldi	r25, 0x01	; 1
	return (id==EEPROM_SIGNATURE);
}
    6d28:	89 2f       	mov	r24, r25
    6d2a:	1f 91       	pop	r17
    6d2c:	08 95       	ret

00006d2e <EepromReadBlock>:
/*
 * Reads a data block in the specified structure.
 *
 * Returns: 0 on success or error codes
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
    6d2e:	bf 92       	push	r11
    6d30:	cf 92       	push	r12
    6d32:	df 92       	push	r13
    6d34:	ef 92       	push	r14
    6d36:	ff 92       	push	r15
    6d38:	0f 93       	push	r16
    6d3a:	1f 93       	push	r17
    6d3c:	cf 93       	push	r28
    6d3e:	df 93       	push	r29
    6d40:	6c 01       	movw	r12, r24
    6d42:	06 2f       	mov	r16, r22
    6d44:	b7 2e       	mov	r11, r23
	unsigned char i;
	unsigned int destAddr=0,id;
	unsigned char *destPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    6d46:	0e 94 81 36 	call	0x6d02	; 0x6d02 <isEepromFormatted>
    6d4a:	88 23       	and	r24, r24
    6d4c:	f1 f1       	breq	.+124    	; 0x6dca <EepromReadBlock+0x9c>
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;
    6d4e:	8f ef       	ldi	r24, 0xFF	; 255
    6d50:	c8 16       	cp	r12, r24
    6d52:	8f ef       	ldi	r24, 0xFF	; 255
    6d54:	d8 06       	cpc	r13, r24
    6d56:	11 f4       	brne	.+4      	; 0x6d5c <EepromReadBlock+0x2e>
    6d58:	81 e0       	ldi	r24, 0x01	; 1
    6d5a:	3a c0       	rjmp	.+116    	; 0x6dd0 <EepromReadBlock+0xa2>
    6d5c:	ee 24       	eor	r14, r14
    6d5e:	ff 24       	eor	r15, r15

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    6d60:	c7 01       	movw	r24, r14
    6d62:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6d66:	18 2f       	mov	r17, r24
    6d68:	c7 01       	movw	r24, r14
    6d6a:	01 96       	adiw	r24, 0x01	; 1
    6d6c:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
		if(id==blockId){
    6d70:	d8 2f       	mov	r29, r24
    6d72:	c0 e0       	ldi	r28, 0x00	; 0
    6d74:	ce 01       	movw	r24, r28
    6d76:	81 0f       	add	r24, r17
    6d78:	91 1d       	adc	r25, r1
    6d7a:	8c 15       	cp	r24, r12
    6d7c:	9d 05       	cpc	r25, r13
    6d7e:	21 f4       	brne	.+8      	; 0x6d88 <EepromReadBlock+0x5a>
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
	}

	if(destAddr==0) return EEPROM_ERROR_BLOCK_NOT_FOUND;			
    6d80:	e1 14       	cp	r14, r1
    6d82:	f1 04       	cpc	r15, r1
    6d84:	59 f4       	brne	.+22     	; 0x6d9c <EepromReadBlock+0x6e>
    6d86:	23 c0       	rjmp	.+70     	; 0x6dce <EepromReadBlock+0xa0>
    6d88:	80 e2       	ldi	r24, 0x20	; 32
    6d8a:	90 e0       	ldi	r25, 0x00	; 0
    6d8c:	e8 0e       	add	r14, r24
    6d8e:	f9 1e       	adc	r15, r25

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
    6d90:	90 e0       	ldi	r25, 0x00	; 0
    6d92:	e9 16       	cp	r14, r25
    6d94:	94 e0       	ldi	r25, 0x04	; 4
    6d96:	f9 06       	cpc	r15, r25
    6d98:	19 f7       	brne	.-58     	; 0x6d60 <EepromReadBlock+0x32>
    6d9a:	19 c0       	rjmp	.+50     	; 0x6dce <EepromReadBlock+0xa0>
 * Returns: 0 on success or error codes
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
	unsigned char i;
	unsigned int destAddr=0,id;
	unsigned char *destPtr=(unsigned char *)block;
    6d9c:	80 2f       	mov	r24, r16
    6d9e:	9b 2d       	mov	r25, r11
    6da0:	9c 01       	movw	r18, r24
    6da2:	e9 01       	movw	r28, r18
		}
	}

	if(destAddr==0) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    6da4:	80 e2       	ldi	r24, 0x20	; 32
    6da6:	c8 2e       	mov	r12, r24
    6da8:	d1 2c       	mov	r13, r1
    6daa:	c2 0e       	add	r12, r18
    6dac:	d3 1e       	adc	r13, r19
		*destPtr=ReadEeprom(destAddr++);
    6dae:	87 01       	movw	r16, r14
    6db0:	0f 5f       	subi	r16, 0xFF	; 255
    6db2:	1f 4f       	sbci	r17, 0xFF	; 255
    6db4:	c7 01       	movw	r24, r14
    6db6:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6dba:	89 93       	st	Y+, r24
		}
	}

	if(destAddr==0) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    6dbc:	cc 15       	cp	r28, r12
    6dbe:	dd 05       	cpc	r29, r13
    6dc0:	11 f4       	brne	.+4      	; 0x6dc6 <EepromReadBlock+0x98>
    6dc2:	80 e0       	ldi	r24, 0x00	; 0
    6dc4:	05 c0       	rjmp	.+10     	; 0x6dd0 <EepromReadBlock+0xa2>
    6dc6:	78 01       	movw	r14, r16
    6dc8:	f2 cf       	rjmp	.-28     	; 0x6dae <EepromReadBlock+0x80>
    6dca:	84 e0       	ldi	r24, 0x04	; 4
    6dcc:	01 c0       	rjmp	.+2      	; 0x6dd0 <EepromReadBlock+0xa2>
    6dce:	83 e0       	ldi	r24, 0x03	; 3
		*destPtr=ReadEeprom(destAddr++);
		destPtr++;	
	}
	
	return 0;
}
    6dd0:	df 91       	pop	r29
    6dd2:	cf 91       	pop	r28
    6dd4:	1f 91       	pop	r17
    6dd6:	0f 91       	pop	r16
    6dd8:	ff 90       	pop	r15
    6dda:	ef 90       	pop	r14
    6ddc:	df 90       	pop	r13
    6dde:	cf 90       	pop	r12
    6de0:	bf 90       	pop	r11
    6de2:	08 95       	ret

00006de4 <EepromWriteBlock>:
/*
 * Write a data block in the specified block id. If the block does not exist, it is created.
 *
 * Returns: 0 on success or error codes
 */
char EepromWriteBlock(struct EepromBlockStruct *block){
    6de4:	bf 92       	push	r11
    6de6:	cf 92       	push	r12
    6de8:	df 92       	push	r13
    6dea:	ef 92       	push	r14
    6dec:	ff 92       	push	r15
    6dee:	0f 93       	push	r16
    6df0:	1f 93       	push	r17
    6df2:	cf 93       	push	r28
    6df4:	df 93       	push	r29
    6df6:	6c 01       	movw	r12, r24
	unsigned char i,nextFreeBlock=0,c;
	unsigned int destAddr=0,id;
	unsigned char *srcPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    6df8:	0e 94 81 36 	call	0x6d02	; 0x6d02 <isEepromFormatted>
    6dfc:	88 23       	and	r24, r24
    6dfe:	11 f4       	brne	.+4      	; 0x6e04 <EepromWriteBlock+0x20>
    6e00:	84 e0       	ldi	r24, 0x04	; 4
    6e02:	4e c0       	rjmp	.+156    	; 0x6ea0 <EepromWriteBlock+0xbc>
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;
    6e04:	f6 01       	movw	r30, r12
    6e06:	80 81       	ld	r24, Z
    6e08:	91 81       	ldd	r25, Z+1	; 0x01
    6e0a:	ff ef       	ldi	r31, 0xFF	; 255
    6e0c:	8f 3f       	cpi	r24, 0xFF	; 255
    6e0e:	9f 07       	cpc	r25, r31
    6e10:	09 f4       	brne	.+2      	; 0x6e14 <EepromWriteBlock+0x30>
    6e12:	45 c0       	rjmp	.+138    	; 0x6e9e <EepromWriteBlock+0xba>
    6e14:	8a 55       	subi	r24, 0x5A	; 90
    6e16:	95 45       	sbci	r25, 0x55	; 85
    6e18:	09 f4       	brne	.+2      	; 0x6e1c <EepromWriteBlock+0x38>
    6e1a:	41 c0       	rjmp	.+130    	; 0x6e9e <EepromWriteBlock+0xba>
    6e1c:	02 e0       	ldi	r16, 0x02	; 2
    6e1e:	10 e0       	ldi	r17, 0x00	; 0
    6e20:	20 e4       	ldi	r18, 0x40	; 64
    6e22:	e2 2e       	mov	r14, r18
    6e24:	f1 2c       	mov	r15, r1

	//scan all blocks and get the adress of that block or the next free one.
	for(i=2;i<64;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    6e26:	c7 01       	movw	r24, r14
    6e28:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6e2c:	b8 2e       	mov	r11, r24
    6e2e:	c7 01       	movw	r24, r14
    6e30:	01 96       	adiw	r24, 0x01	; 1
    6e32:	0e 94 72 36 	call	0x6ce4	; 0x6ce4 <ReadEeprom>
    6e36:	d8 2f       	mov	r29, r24
    6e38:	c0 e0       	ldi	r28, 0x00	; 0
    6e3a:	9e 01       	movw	r18, r28
    6e3c:	2b 0d       	add	r18, r11
    6e3e:	31 1d       	adc	r19, r1
		if(id==block->id){
    6e40:	f6 01       	movw	r30, r12
    6e42:	80 81       	ld	r24, Z
    6e44:	91 81       	ldd	r25, Z+1	; 0x01
    6e46:	28 17       	cp	r18, r24
    6e48:	39 07       	cpc	r19, r25
    6e4a:	19 f4       	brne	.+6      	; 0x6e52 <EepromWriteBlock+0x6e>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    6e4c:	11 23       	and	r17, r17
    6e4e:	b1 f0       	breq	.+44     	; 0x6e7c <EepromWriteBlock+0x98>
    6e50:	0e c0       	rjmp	.+28     	; 0x6e6e <EepromWriteBlock+0x8a>
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
		if(id==block->id){
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
    6e52:	2f 5f       	subi	r18, 0xFF	; 255
    6e54:	3f 4f       	sbci	r19, 0xFF	; 255
    6e56:	19 f4       	brne	.+6      	; 0x6e5e <EepromWriteBlock+0x7a>
    6e58:	11 23       	and	r17, r17
    6e5a:	09 f4       	brne	.+2      	; 0x6e5e <EepromWriteBlock+0x7a>
    6e5c:	10 2f       	mov	r17, r16

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block or the next free one.
	for(i=2;i<64;i++){
    6e5e:	0f 5f       	subi	r16, 0xFF	; 255
    6e60:	80 e2       	ldi	r24, 0x20	; 32
    6e62:	90 e0       	ldi	r25, 0x00	; 0
    6e64:	e8 0e       	add	r14, r24
    6e66:	f9 1e       	adc	r15, r25
    6e68:	00 34       	cpi	r16, 0x40	; 64
    6e6a:	e9 f6       	brne	.-70     	; 0x6e26 <EepromWriteBlock+0x42>
    6e6c:	23 c0       	rjmp	.+70     	; 0x6eb4 <EepromWriteBlock+0xd0>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    6e6e:	e1 2e       	mov	r14, r17
    6e70:	ff 24       	eor	r15, r15
    6e72:	95 e0       	ldi	r25, 0x05	; 5
    6e74:	ee 0c       	add	r14, r14
    6e76:	ff 1c       	adc	r15, r15
    6e78:	9a 95       	dec	r25
    6e7a:	e1 f7       	brne	.-8      	; 0x6e74 <EepromWriteBlock+0x90>
    6e7c:	c0 e0       	ldi	r28, 0x00	; 0
    6e7e:	d0 e0       	ldi	r29, 0x00	; 0

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
		c=*srcPtr;
		WriteEeprom(destAddr++,c);
    6e80:	f6 01       	movw	r30, r12
    6e82:	ec 0f       	add	r30, r28
    6e84:	fd 1f       	adc	r31, r29
    6e86:	60 81       	ld	r22, Z
    6e88:	ce 01       	movw	r24, r28
    6e8a:	8e 0d       	add	r24, r14
    6e8c:	9f 1d       	adc	r25, r15
    6e8e:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <WriteEeprom>
    6e92:	21 96       	adiw	r28, 0x01	; 1
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    6e94:	c0 32       	cpi	r28, 0x20	; 32
    6e96:	d1 05       	cpc	r29, r1
    6e98:	99 f7       	brne	.-26     	; 0x6e80 <EepromWriteBlock+0x9c>
    6e9a:	80 e0       	ldi	r24, 0x00	; 0
    6e9c:	01 c0       	rjmp	.+2      	; 0x6ea0 <EepromWriteBlock+0xbc>
    6e9e:	81 e0       	ldi	r24, 0x01	; 1
		WriteEeprom(destAddr++,c);
		srcPtr++;	
	}
	
	return 0;
}
    6ea0:	df 91       	pop	r29
    6ea2:	cf 91       	pop	r28
    6ea4:	1f 91       	pop	r17
    6ea6:	0f 91       	pop	r16
    6ea8:	ff 90       	pop	r15
    6eaa:	ef 90       	pop	r14
    6eac:	df 90       	pop	r13
    6eae:	cf 90       	pop	r12
    6eb0:	bf 90       	pop	r11
    6eb2:	08 95       	ret
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
    6eb4:	11 23       	and	r17, r17
    6eb6:	d9 f6       	brne	.-74     	; 0x6e6e <EepromWriteBlock+0x8a>
    6eb8:	82 e0       	ldi	r24, 0x02	; 2
    6eba:	f2 cf       	rjmp	.-28     	; 0x6ea0 <EepromWriteBlock+0xbc>

00006ebc <ReadButtons>:
	sei();

	logo();
}

void ReadButtons(){
    6ebc:	ff 92       	push	r15
    6ebe:	0f 93       	push	r16
    6ec0:	1f 93       	push	r17
    6ec2:	cf 93       	push	r28
    6ec4:	df 93       	push	r29
	unsigned int p1ButtonsLo=0,p2ButtonsLo=0;
	unsigned char i;

	//latch controllers
	JOYPAD_OUT_PORT|=_BV(JOYPAD_LATCH_PIN);
    6ec6:	12 9a       	sbi	0x02, 2	; 2
	if(snesMouseEnabled){
    6ec8:	80 91 30 0b 	lds	r24, 0x0B30
    6ecc:	88 23       	and	r24, r24
    6ece:	29 f0       	breq	.+10     	; 0x6eda <ReadButtons+0x1e>
		WaitUs(1);
    6ed0:	81 e0       	ldi	r24, 0x01	; 1
    6ed2:	90 e0       	ldi	r25, 0x00	; 0
    6ed4:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
    6ed8:	02 c0       	rjmp	.+4      	; 0x6ede <ReadButtons+0x22>
	}else{
		Wait200ns();
    6eda:	c8 95       	lpm
    6edc:	c8 95       	lpm
	}	
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));
    6ede:	12 98       	cbi	0x02, 2	; 2
    6ee0:	00 e0       	ldi	r16, 0x00	; 0
    6ee2:	10 e0       	ldi	r17, 0x00	; 0
    6ee4:	c0 e0       	ldi	r28, 0x00	; 0
    6ee6:	d0 e0       	ldi	r29, 0x00	; 0
    6ee8:	ff 24       	eor	r15, r15


	//read button states
	for(i=0;i<16;i++){
		
		p1ButtonsLo>>=1;
    6eea:	16 95       	lsr	r17
    6eec:	07 95       	ror	r16
		p2ButtonsLo>>=1;
    6eee:	d6 95       	lsr	r29
    6ef0:	c7 95       	ror	r28
	
		//pulse clock pin		
		JOYPAD_OUT_PORT&=~(_BV(JOYPAD_CLOCK_PIN));
    6ef2:	13 98       	cbi	0x02, 3	; 2
		if(snesMouseEnabled){
    6ef4:	80 91 30 0b 	lds	r24, 0x0B30
    6ef8:	88 23       	and	r24, r24
    6efa:	29 f0       	breq	.+10     	; 0x6f06 <ReadButtons+0x4a>
			WaitUs(5);
    6efc:	85 e0       	ldi	r24, 0x05	; 5
    6efe:	90 e0       	ldi	r25, 0x00	; 0
    6f00:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
    6f04:	02 c0       	rjmp	.+4      	; 0x6f0a <ReadButtons+0x4e>
		}else{
			Wait200ns();
    6f06:	c8 95       	lpm
    6f08:	c8 95       	lpm
		}
		
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) p1ButtonsLo|=(1<<15);
    6f0a:	00 9b       	sbis	0x00, 0	; 0
    6f0c:	10 68       	ori	r17, 0x80	; 128
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) p2ButtonsLo|=(1<<15);
    6f0e:	01 9b       	sbis	0x00, 1	; 0
    6f10:	d0 68       	ori	r29, 0x80	; 128
		
		JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
    6f12:	13 9a       	sbi	0x02, 3	; 2
		if(snesMouseEnabled){
    6f14:	80 91 30 0b 	lds	r24, 0x0B30
    6f18:	88 23       	and	r24, r24
    6f1a:	29 f0       	breq	.+10     	; 0x6f26 <ReadButtons+0x6a>
			WaitUs(5);
    6f1c:	85 e0       	ldi	r24, 0x05	; 5
    6f1e:	90 e0       	ldi	r25, 0x00	; 0
    6f20:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
    6f24:	02 c0       	rjmp	.+4      	; 0x6f2a <ReadButtons+0x6e>
		}else{
			Wait200ns();
    6f26:	c8 95       	lpm
    6f28:	c8 95       	lpm
	}	
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));


	//read button states
	for(i=0;i<16;i++){
    6f2a:	f3 94       	inc	r15
    6f2c:	80 e1       	ldi	r24, 0x10	; 16
    6f2e:	f8 16       	cp	r15, r24
    6f30:	e1 f6       	brne	.-72     	; 0x6eea <ReadButtons+0x2e>
			Wait200ns();
		}

	}

	joypad1_status_lo=p1ButtonsLo;
    6f32:	10 93 c2 08 	sts	0x08C2, r17
    6f36:	00 93 c1 08 	sts	0x08C1, r16
	joypad2_status_lo=p2ButtonsLo;
    6f3a:	d0 93 c6 08 	sts	0x08C6, r29
    6f3e:	c0 93 c5 08 	sts	0x08C5, r28

}
    6f42:	df 91       	pop	r29
    6f44:	cf 91       	pop	r28
    6f46:	1f 91       	pop	r17
    6f48:	0f 91       	pop	r16
    6f4a:	ff 90       	pop	r15
    6f4c:	08 95       	ret

00006f4e <GetMouseSensitivity>:

	}

}

unsigned char GetMouseSensitivity(){
    6f4e:	80 91 30 0b 	lds	r24, 0x0B30
    6f52:	88 23       	and	r24, r24
    6f54:	e1 f0       	breq	.+56     	; 0x6f8e <GetMouseSensitivity+0x40>
	unsigned char sens=-1;

	if(snesMouseEnabled){
		ReadButtons();
    6f56:	0e 94 5e 37 	call	0x6ebc	; 0x6ebc <ReadButtons>

		if(joypad1_status_lo&(1<<15)){
    6f5a:	80 91 c1 08 	lds	r24, 0x08C1
    6f5e:	90 91 c2 08 	lds	r25, 0x08C2
    6f62:	97 ff       	sbrs	r25, 7
    6f64:	05 c0       	rjmp	.+10     	; 0x6f70 <GetMouseSensitivity+0x22>
			sens=(joypad1_status_lo>>10)&3;
    6f66:	80 91 c1 08 	lds	r24, 0x08C1
    6f6a:	90 91 c2 08 	lds	r25, 0x08C2
    6f6e:	0a c0       	rjmp	.+20     	; 0x6f84 <GetMouseSensitivity+0x36>
		}else if(joypad2_status_lo&(1<<15)){
    6f70:	80 91 c5 08 	lds	r24, 0x08C5
    6f74:	90 91 c6 08 	lds	r25, 0x08C6
    6f78:	97 ff       	sbrs	r25, 7
    6f7a:	09 c0       	rjmp	.+18     	; 0x6f8e <GetMouseSensitivity+0x40>
			sens=(joypad2_status_lo>>10)&3;
    6f7c:	80 91 c5 08 	lds	r24, 0x08C5
    6f80:	90 91 c6 08 	lds	r25, 0x08C6
    6f84:	89 2f       	mov	r24, r25
    6f86:	86 95       	lsr	r24
    6f88:	86 95       	lsr	r24
    6f8a:	83 70       	andi	r24, 0x03	; 3
    6f8c:	08 95       	ret
    6f8e:	8f ef       	ldi	r24, 0xFF	; 255
		}

	}

	return sens;
}
    6f90:	08 95       	ret

00006f92 <SetMouseSensitivity>:

bool SetMouseSensitivity(unsigned char value){
    6f92:	ff 92       	push	r15
    6f94:	0f 93       	push	r16
    6f96:	1f 93       	push	r17
    6f98:	f8 2e       	mov	r15, r24
	unsigned char i,retries=6;

	if(snesMouseEnabled){	
    6f9a:	80 91 30 0b 	lds	r24, 0x0B30
    6f9e:	88 23       	and	r24, r24
    6fa0:	09 f4       	brne	.+2      	; 0x6fa4 <SetMouseSensitivity+0x12>
    6fa2:	28 c0       	rjmp	.+80     	; 0x6ff4 <SetMouseSensitivity+0x62>
    6fa4:	06 e0       	ldi	r16, 0x06	; 6
		while(retries>0){
			
			if(GetMouseSensitivity()==value){
    6fa6:	0e 94 a7 37 	call	0x6f4e	; 0x6f4e <GetMouseSensitivity>
    6faa:	8f 15       	cp	r24, r15
    6fac:	11 f4       	brne	.+4      	; 0x6fb2 <SetMouseSensitivity+0x20>
    6fae:	81 e0       	ldi	r24, 0x01	; 1
    6fb0:	22 c0       	rjmp	.+68     	; 0x6ff6 <SetMouseSensitivity+0x64>
				return true;
			}

			WaitUs(1000);
    6fb2:	88 ee       	ldi	r24, 0xE8	; 232
    6fb4:	93 e0       	ldi	r25, 0x03	; 3
    6fb6:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
    6fba:	10 e0       	ldi	r17, 0x00	; 0

			for(i=0;i<31;i++){	
				JOYPAD_OUT_PORT|=_BV(JOYPAD_LATCH_PIN);	
    6fbc:	12 9a       	sbi	0x02, 2	; 2

				//pulse clock pin		
				JOYPAD_OUT_PORT&=~(_BV(JOYPAD_CLOCK_PIN));
    6fbe:	13 98       	cbi	0x02, 3	; 2
				Wait200ns();
    6fc0:	c8 95       	lpm
    6fc2:	c8 95       	lpm
				Wait200ns();
    6fc4:	c8 95       	lpm
    6fc6:	c8 95       	lpm
				Wait200ns();			
    6fc8:	c8 95       	lpm
    6fca:	c8 95       	lpm
				Wait100ns();			
    6fcc:	c8 95       	lpm
				JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
    6fce:	13 9a       	sbi	0x02, 3	; 2

				JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));	
    6fd0:	12 98       	cbi	0x02, 2	; 2
			
				WaitUs(2);
    6fd2:	82 e0       	ldi	r24, 0x02	; 2
    6fd4:	90 e0       	ldi	r25, 0x00	; 0
    6fd6:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
				Wait200ns();
    6fda:	c8 95       	lpm
    6fdc:	c8 95       	lpm
				Wait200ns();
    6fde:	c8 95       	lpm
    6fe0:	c8 95       	lpm
				Wait200ns();			
    6fe2:	c8 95       	lpm
    6fe4:	c8 95       	lpm
				Wait100ns();
    6fe6:	c8 95       	lpm
				return true;
			}

			WaitUs(1000);

			for(i=0;i<31;i++){	
    6fe8:	1f 5f       	subi	r17, 0xFF	; 255
    6fea:	1f 31       	cpi	r17, 0x1F	; 31
    6fec:	39 f7       	brne	.-50     	; 0x6fbc <SetMouseSensitivity+0x2a>
				Wait200ns();
				Wait200ns();			
				Wait100ns();
			}	
			
			retries++;
    6fee:	0f 5f       	subi	r16, 0xFF	; 255

bool SetMouseSensitivity(unsigned char value){
	unsigned char i,retries=6;

	if(snesMouseEnabled){	
		while(retries>0){
    6ff0:	09 f0       	breq	.+2      	; 0x6ff4 <SetMouseSensitivity+0x62>
    6ff2:	d9 cf       	rjmp	.-78     	; 0x6fa6 <SetMouseSensitivity+0x14>
    6ff4:	80 e0       	ldi	r24, 0x00	; 0
			retries++;
		}
	}

	return false;
}
    6ff6:	1f 91       	pop	r17
    6ff8:	0f 91       	pop	r16
    6ffa:	ff 90       	pop	r15
    6ffc:	08 95       	ret

00006ffe <ReadControllers>:
	joypad1_status_lo=p1ButtonsLo;
	joypad2_status_lo=p2ButtonsLo;

}

void ReadControllers(){
    6ffe:	ff 92       	push	r15
    7000:	0f 93       	push	r16
    7002:	1f 93       	push	r17
    7004:	cf 93       	push	r28
    7006:	df 93       	push	r29
	unsigned int p1ButtonsHi=0,p2ButtonsHi=0;
	unsigned char i;

	//read the standard buttons
	ReadButtons();
    7008:	0e 94 5e 37 	call	0x6ebc	; 0x6ebc <ReadButtons>

	//read the extended bits. Applies only if the mouse is plugged.
	//if bit 15 of standard word is 1, a mouse is plugged.
	if(joypad1_status_lo&(1<<15) || joypad2_status_lo&(1<<15)){
    700c:	80 91 c1 08 	lds	r24, 0x08C1
    7010:	90 91 c2 08 	lds	r25, 0x08C2
    7014:	97 fd       	sbrc	r25, 7
    7016:	06 c0       	rjmp	.+12     	; 0x7024 <ReadControllers+0x26>
    7018:	80 91 c5 08 	lds	r24, 0x08C5
    701c:	90 91 c6 08 	lds	r25, 0x08C6
    7020:	97 ff       	sbrs	r25, 7
    7022:	27 c0       	rjmp	.+78     	; 0x7072 <ReadControllers+0x74>

		WaitUs(1);
    7024:	81 e0       	ldi	r24, 0x01	; 1
    7026:	90 e0       	ldi	r25, 0x00	; 0
    7028:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
    702c:	00 e0       	ldi	r16, 0x00	; 0
    702e:	10 e0       	ldi	r17, 0x00	; 0
    7030:	c0 e0       	ldi	r28, 0x00	; 0
    7032:	d0 e0       	ldi	r29, 0x00	; 0
    7034:	ff 24       	eor	r15, r15

		for(i=0;i<16;i++){
		
			p1ButtonsHi<<=1;
    7036:	00 0f       	add	r16, r16
    7038:	11 1f       	adc	r17, r17
			p2ButtonsHi<<=1;
    703a:	cc 0f       	add	r28, r28
    703c:	dd 1f       	adc	r29, r29
	
			//pulse clock pin		
			JOYPAD_OUT_PORT&=~(_BV(JOYPAD_CLOCK_PIN));
    703e:	13 98       	cbi	0x02, 3	; 2
			Wait200ns();
    7040:	c8 95       	lpm
    7042:	c8 95       	lpm
			Wait200ns();
    7044:	c8 95       	lpm
    7046:	c8 95       	lpm
		
			if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) p1ButtonsHi|=1;
    7048:	00 9b       	sbis	0x00, 0	; 0
    704a:	01 60       	ori	r16, 0x01	; 1
			if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) p2ButtonsHi|=1;
    704c:	01 9b       	sbis	0x00, 1	; 0
    704e:	c1 60       	ori	r28, 0x01	; 1

			JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
    7050:	13 9a       	sbi	0x02, 3	; 2
			WaitUs(8);
    7052:	88 e0       	ldi	r24, 0x08	; 8
    7054:	90 e0       	ldi	r25, 0x00	; 0
    7056:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <WaitUs>
	//if bit 15 of standard word is 1, a mouse is plugged.
	if(joypad1_status_lo&(1<<15) || joypad2_status_lo&(1<<15)){

		WaitUs(1);

		for(i=0;i<16;i++){
    705a:	f3 94       	inc	r15
    705c:	80 e1       	ldi	r24, 0x10	; 16
    705e:	f8 16       	cp	r15, r24
    7060:	51 f7       	brne	.-44     	; 0x7036 <ReadControllers+0x38>

			JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
			WaitUs(8);
		}
		
		joypad1_status_hi=p1ButtonsHi;
    7062:	10 93 c4 08 	sts	0x08C4, r17
    7066:	00 93 c3 08 	sts	0x08C3, r16
		joypad2_status_hi=p2ButtonsHi;
    706a:	d0 93 c8 08 	sts	0x08C8, r29
    706e:	c0 93 c7 08 	sts	0x08C7, r28

	}

}
    7072:	df 91       	pop	r29
    7074:	cf 91       	pop	r28
    7076:	1f 91       	pop	r17
    7078:	0f 91       	pop	r16
    707a:	ff 90       	pop	r15
    707c:	08 95       	ret

0000707e <PatchCommand00>:


/*
* Command 00: Set envelope speed per frame +127/-128, 0=no enveloppe
*/
void PatchCommand00(unsigned char track, char param){
    707e:	90 e0       	ldi	r25, 0x00	; 0
    7080:	26 e1       	ldi	r18, 0x16	; 22
    7082:	30 e0       	ldi	r19, 0x00	; 0
    7084:	82 9f       	mul	r24, r18
    7086:	f0 01       	movw	r30, r0
    7088:	83 9f       	mul	r24, r19
    708a:	f0 0d       	add	r31, r0
    708c:	92 9f       	mul	r25, r18
    708e:	f0 0d       	add	r31, r0
    7090:	11 24       	eor	r1, r1
    7092:	ed 5c       	subi	r30, 0xCD	; 205
    7094:	f4 4f       	sbci	r31, 0xF4	; 244
    7096:	62 87       	std	Z+10, r22	; 0x0a
	tracks[track].envelopeStep=param;
}
    7098:	08 95       	ret

0000709a <PatchCommand01>:
/*
* Command 01: Set noise channel params
*/
void PatchCommand01(unsigned char track, char param){
    709a:	60 93 11 0b 	sts	0x0B11, r22

	mixer.channels.type.noise.params=param;
}
    709e:	08 95       	ret

000070a0 <PatchCommand05>:
	SetMixerNote(track,tracks[track].note);
}
/*
* Command 05: End of note/fx
*/
void PatchCommand05(unsigned char track, char param){
    70a0:	90 e0       	ldi	r25, 0x00	; 0
    70a2:	26 e1       	ldi	r18, 0x16	; 22
    70a4:	30 e0       	ldi	r19, 0x00	; 0
    70a6:	82 9f       	mul	r24, r18
    70a8:	f0 01       	movw	r30, r0
    70aa:	83 9f       	mul	r24, r19
    70ac:	f0 0d       	add	r31, r0
    70ae:	92 9f       	mul	r25, r18
    70b0:	f0 0d       	add	r31, r0
    70b2:	11 24       	eor	r1, r1
    70b4:	ed 5c       	subi	r30, 0xCD	; 205
    70b6:	f4 4f       	sbci	r31, 0xF4	; 244
    70b8:	13 86       	std	Z+11, r1	; 0x0b
	tracks[track].patchPlaying=false;
	tracks[track].priority=0;
    70ba:	11 82       	std	Z+1, r1	; 0x01
}
    70bc:	08 95       	ret

000070be <PatchCommand06>:

/*
* Command 06: Note hold
*/
void PatchCommand06(unsigned char track, char param){
    70be:	90 e0       	ldi	r25, 0x00	; 0
    70c0:	26 e1       	ldi	r18, 0x16	; 22
    70c2:	30 e0       	ldi	r19, 0x00	; 0
    70c4:	82 9f       	mul	r24, r18
    70c6:	f0 01       	movw	r30, r0
    70c8:	83 9f       	mul	r24, r19
    70ca:	f0 0d       	add	r31, r0
    70cc:	92 9f       	mul	r25, r18
    70ce:	f0 0d       	add	r31, r0
    70d0:	11 24       	eor	r1, r1
    70d2:	ed 5c       	subi	r30, 0xCD	; 205
    70d4:	f4 4f       	sbci	r31, 0xF4	; 244
    70d6:	81 e0       	ldi	r24, 0x01	; 1
    70d8:	83 8b       	std	Z+19, r24	; 0x13
	tracks[track].patchEnvelopeHold=true;
}
    70da:	08 95       	ret

000070dc <PatchCommand07>:

/*
* Command 07: Set envelope volume
*/

void PatchCommand07(unsigned char track, char param){
    70dc:	90 e0       	ldi	r25, 0x00	; 0
    70de:	26 e1       	ldi	r18, 0x16	; 22
    70e0:	30 e0       	ldi	r19, 0x00	; 0
    70e2:	82 9f       	mul	r24, r18
    70e4:	f0 01       	movw	r30, r0
    70e6:	83 9f       	mul	r24, r19
    70e8:	f0 0d       	add	r31, r0
    70ea:	92 9f       	mul	r25, r18
    70ec:	f0 0d       	add	r31, r0
    70ee:	11 24       	eor	r1, r1
    70f0:	ed 5c       	subi	r30, 0xCD	; 205
    70f2:	f4 4f       	sbci	r31, 0xF4	; 244
    70f4:	61 87       	std	Z+9, r22	; 0x09
	tracks[track].envelopeVol=param;
}
    70f6:	08 95       	ret

000070f8 <PatchCommand09>:

/*
* Command 09: Set tremolo level
*/

void PatchCommand09(unsigned char track, char param){
    70f8:	90 e0       	ldi	r25, 0x00	; 0
    70fa:	26 e1       	ldi	r18, 0x16	; 22
    70fc:	30 e0       	ldi	r19, 0x00	; 0
    70fe:	82 9f       	mul	r24, r18
    7100:	f0 01       	movw	r30, r0
    7102:	83 9f       	mul	r24, r19
    7104:	f0 0d       	add	r31, r0
    7106:	92 9f       	mul	r25, r18
    7108:	f0 0d       	add	r31, r0
    710a:	11 24       	eor	r1, r1
    710c:	ed 5c       	subi	r30, 0xCD	; 205
    710e:	f4 4f       	sbci	r31, 0xF4	; 244
    7110:	64 83       	std	Z+4, r22	; 0x04
	tracks[track].tremoloLevel=param;
}
    7112:	08 95       	ret

00007114 <PatchCommand10>:

/*
* Command 10: Set tremolo rate
*/
void PatchCommand10(unsigned char track, char param){
    7114:	90 e0       	ldi	r25, 0x00	; 0
    7116:	26 e1       	ldi	r18, 0x16	; 22
    7118:	30 e0       	ldi	r19, 0x00	; 0
    711a:	82 9f       	mul	r24, r18
    711c:	f0 01       	movw	r30, r0
    711e:	83 9f       	mul	r24, r19
    7120:	f0 0d       	add	r31, r0
    7122:	92 9f       	mul	r25, r18
    7124:	f0 0d       	add	r31, r0
    7126:	11 24       	eor	r1, r1
    7128:	ed 5c       	subi	r30, 0xCD	; 205
    712a:	f4 4f       	sbci	r31, 0xF4	; 244
    712c:	65 83       	std	Z+5, r22	; 0x05
	tracks[track].tremoloRate=param;
}
    712e:	08 95       	ret

00007130 <InitMusicPlayer>:
//const char **patchPointers; //data in PROGMEM

const struct PatchStruct *patchPointers;

//void InitMusicPlayer(const char *patchPointersParam[]){
void InitMusicPlayer(const struct PatchStruct *patchPointersParam){
    7130:	90 93 8e 0b 	sts	0x0B8E, r25
    7134:	80 93 8d 0b 	sts	0x0B8D, r24


	//patchPointers=(const char **)patchPointersParam;
	patchPointers=patchPointersParam;

	masterVolume=DEFAULT_MASTER_VOL;
    7138:	8f e6       	ldi	r24, 0x6F	; 111
    713a:	80 93 93 0b 	sts	0x0B93, r24
	midi_rx_buf_start=0;
	midi_rx_buf_end=0;
	lastMidiInStatus=0;
#endif

	playSong=false;
    713e:	10 92 e0 08 	sts	0x08E0, r1
    7142:	e3 e3       	ldi	r30, 0x33	; 51
    7144:	fb e0       	ldi	r31, 0x0B	; 11

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].allocated=true;
    7146:	21 e0       	ldi	r18, 0x01	; 1
		tracks[t].noteVol=0;
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    7148:	8f ef       	ldi	r24, 0xFF	; 255
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
		tracks[t].patchNo=DEFAULT_PATCH;
		tracks[t].priority=0;
		tracks[t].tremoloRate=24; //~6hz
    714a:	98 e1       	ldi	r25, 0x18	; 24

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].allocated=true;
    714c:	20 83       	st	Z, r18
		tracks[t].noteVol=0;
    714e:	10 86       	std	Z+8, r1	; 0x08
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    7150:	86 83       	std	Z+6, r24	; 0x06
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
    7152:	87 83       	std	Z+7, r24	; 0x07
		tracks[t].patchNo=DEFAULT_PATCH;
    7154:	14 86       	std	Z+12, r1	; 0x0c
		tracks[t].priority=0;
    7156:	11 82       	std	Z+1, r1	; 0x01
		tracks[t].tremoloRate=24; //~6hz
    7158:	95 83       	std	Z+5, r25	; 0x05
    715a:	76 96       	adiw	r30, 0x16	; 22
#endif

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
    715c:	3b e0       	ldi	r19, 0x0B	; 11
    715e:	eb 38       	cpi	r30, 0x8B	; 139
    7160:	f3 07       	cpc	r31, r19
    7162:	a1 f7       	brne	.-24     	; 0x714c <InitMusicPlayer+0x1c>
		tracks[t].tremoloRate=24; //~6hz
	}

	//tracks[0].tremoloRate=24;
	//tracks[0].tremoloLevel=80;
}
    7164:	08 95       	ret

00007166 <StartSong>:

void StartSong(const char *midiSong){
    7166:	10 92 34 0b 	sts	0x0B34, r1
    716a:	10 92 4a 0b 	sts	0x0B4A, r1
    716e:	10 92 60 0b 	sts	0x0B60, r1
    7172:	10 92 76 0b 	sts	0x0B76, r1
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].priority=0;	
	}

	songPos=midiSong+1; //skip first delta-time
    7176:	01 96       	adiw	r24, 0x01	; 1
    7178:	90 93 97 0b 	sts	0x0B97, r25
    717c:	80 93 96 0b 	sts	0x0B96, r24
	songStart=midiSong+1;//skip first delta-time
    7180:	90 93 32 0b 	sts	0x0B32, r25
    7184:	80 93 31 0b 	sts	0x0B31, r24
	loopStart=midiSong+1;
    7188:	90 93 9a 0b 	sts	0x0B9A, r25
    718c:	80 93 99 0b 	sts	0x0B99, r24
	nextDeltaTime=0;
    7190:	10 92 95 0b 	sts	0x0B95, r1
    7194:	10 92 94 0b 	sts	0x0B94, r1
	currDeltaTime=0;
    7198:	10 92 8c 0b 	sts	0x0B8C, r1
    719c:	10 92 8b 0b 	sts	0x0B8B, r1
	lastStatus=0;
    71a0:	10 92 8f 0b 	sts	0x0B8F, r1
	playSong=true;
    71a4:	81 e0       	ldi	r24, 0x01	; 1
    71a6:	80 93 e0 08 	sts	0x08E0, r24
	absoluteTime=0;
    71aa:	10 92 92 0b 	sts	0x0B92, r1
    71ae:	10 92 91 0b 	sts	0x0B91, r1

	
}
    71b2:	08 95       	ret

000071b4 <RestartSong>:

void RestartSong(){	
    71b4:	80 91 31 0b 	lds	r24, 0x0B31
    71b8:	90 91 32 0b 	lds	r25, 0x0B32
    71bc:	0e 94 b3 38 	call	0x7166	; 0x7166 <StartSong>
	StartSong(songStart);
}
    71c0:	08 95       	ret

000071c2 <StopSong>:


void StopSong(){
    71c2:	80 91 3d 0b 	lds	r24, 0x0B3D
    71c6:	87 fd       	sbrc	r24, 7
    71c8:	03 c0       	rjmp	.+6      	; 0x71d0 <StopSong+0xe>
    71ca:	8a ef       	ldi	r24, 0xFA	; 250
    71cc:	80 93 3d 0b 	sts	0x0B3D, r24
	//fade out all channels
	if(tracks[0].envelopeStep>=0) tracks[0].envelopeStep=-6;
	if(tracks[1].envelopeStep>=0) tracks[1].envelopeStep=-6;
    71d0:	80 91 53 0b 	lds	r24, 0x0B53
    71d4:	87 fd       	sbrc	r24, 7
    71d6:	03 c0       	rjmp	.+6      	; 0x71de <StopSong+0x1c>
    71d8:	8a ef       	ldi	r24, 0xFA	; 250
    71da:	80 93 53 0b 	sts	0x0B53, r24
	if(tracks[2].envelopeStep>=0) tracks[2].envelopeStep=-6;
    71de:	80 91 69 0b 	lds	r24, 0x0B69
    71e2:	87 fd       	sbrc	r24, 7
    71e4:	03 c0       	rjmp	.+6      	; 0x71ec <StopSong+0x2a>
    71e6:	8a ef       	ldi	r24, 0xFA	; 250
    71e8:	80 93 69 0b 	sts	0x0B69, r24
	if(tracks[3].envelopeStep>=0) tracks[3].envelopeStep=-6;
    71ec:	80 91 7f 0b 	lds	r24, 0x0B7F
    71f0:	87 fd       	sbrc	r24, 7
    71f2:	03 c0       	rjmp	.+6      	; 0x71fa <StopSong+0x38>
    71f4:	8a ef       	ldi	r24, 0xFA	; 250
    71f6:	80 93 7f 0b 	sts	0x0B7F, r24
	playSong=false;
    71fa:	10 92 e0 08 	sts	0x08E0, r1
}
    71fe:	08 95       	ret

00007200 <ResumeSong>:


void ResumeSong(){
    7200:	81 e0       	ldi	r24, 0x01	; 1
    7202:	80 93 e0 08 	sts	0x08E0, r24
	playSong=true;
}
    7206:	08 95       	ret

00007208 <ReadVarLen>:


}

unsigned int ReadVarLen(const char **songPos)
{
    7208:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    720a:	ed 91       	ld	r30, X+
    720c:	fc 91       	ld	r31, X
    720e:	11 97       	sbiw	r26, 0x01	; 1
    7210:	af 01       	movw	r20, r30
    7212:	4f 5f       	subi	r20, 0xFF	; 255
    7214:	5f 4f       	sbci	r21, 0xFF	; 255
    7216:	11 96       	adiw	r26, 0x01	; 1
    7218:	5c 93       	st	X, r21
    721a:	4e 93       	st	-X, r20
    721c:	e4 91       	lpm	r30, Z+
    721e:	2e 2f       	mov	r18, r30
    7220:	30 e0       	ldi	r19, 0x00	; 0
    7222:	e7 ff       	sbrs	r30, 7
    7224:	13 c0       	rjmp	.+38     	; 0x724c <ReadVarLen+0x44>
    {
       value &= 0x7F;
    7226:	2f 77       	andi	r18, 0x7F	; 127
    7228:	30 70       	andi	r19, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    722a:	36 95       	lsr	r19
    722c:	32 2f       	mov	r19, r18
    722e:	22 27       	eor	r18, r18
    7230:	37 95       	ror	r19
    7232:	27 95       	ror	r18
    7234:	fa 01       	movw	r30, r20
    7236:	4f 5f       	subi	r20, 0xFF	; 255
    7238:	5f 4f       	sbci	r21, 0xFF	; 255
    723a:	e4 91       	lpm	r30, Z+
    723c:	8e 2f       	mov	r24, r30
    723e:	8f 77       	andi	r24, 0x7F	; 127
    7240:	28 0f       	add	r18, r24
    7242:	31 1d       	adc	r19, r1
       } while (c & 0x80);
    7244:	e7 fd       	sbrc	r30, 7
    7246:	f1 cf       	rjmp	.-30     	; 0x722a <ReadVarLen+0x22>
    7248:	4d 93       	st	X+, r20
    724a:	5c 93       	st	X, r21
    }


    return value;
}
    724c:	c9 01       	movw	r24, r18
    724e:	08 95       	ret

00007250 <SetMasterVolume>:
		}

	}
}

void SetMasterVolume(unsigned char vol){
    7250:	80 93 93 0b 	sts	0x0B93, r24
	masterVolume=vol;
}
    7254:	08 95       	ret

00007256 <PatchCommand02>:
	mixer.channels.type.noise.params=param;
}
/*
* Command 02: Set wave
*/
void PatchCommand02(unsigned char track, char param){
    7256:	0e 94 9f 3d 	call	0x7b3e	; 0x7b3e <SetMixerWave>
	SetMixerWave(track,param);
}
    725a:	08 95       	ret

0000725c <TriggerNote>:
	#endif

}


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    725c:	ef 92       	push	r14
    725e:	ff 92       	push	r15
    7260:	0f 93       	push	r16
    7262:	1f 93       	push	r17
    7264:	cf 93       	push	r28
    7266:	df 93       	push	r29
    7268:	18 2f       	mov	r17, r24
    726a:	06 2f       	mov	r16, r22
    726c:	f4 2e       	mov	r15, r20
    726e:	e2 2e       	mov	r14, r18

	//allow only other music notes 
	if(!tracks[channel].patchPlaying || tracks[channel].priority==0){
    7270:	c8 2f       	mov	r28, r24
    7272:	d0 e0       	ldi	r29, 0x00	; 0
    7274:	86 e1       	ldi	r24, 0x16	; 22
    7276:	90 e0       	ldi	r25, 0x00	; 0
    7278:	c8 9f       	mul	r28, r24
    727a:	f0 01       	movw	r30, r0
    727c:	c9 9f       	mul	r28, r25
    727e:	f0 0d       	add	r31, r0
    7280:	d8 9f       	mul	r29, r24
    7282:	f0 0d       	add	r31, r0
    7284:	11 24       	eor	r1, r1
    7286:	ed 5c       	subi	r30, 0xCD	; 205
    7288:	f4 4f       	sbci	r31, 0xF4	; 244
    728a:	83 85       	ldd	r24, Z+11	; 0x0b
    728c:	88 23       	and	r24, r24
    728e:	21 f0       	breq	.+8      	; 0x7298 <TriggerNote+0x3c>
    7290:	81 81       	ldd	r24, Z+1	; 0x01
    7292:	88 23       	and	r24, r24
    7294:	09 f0       	breq	.+2      	; 0x7298 <TriggerNote+0x3c>
    7296:	ac c0       	rjmp	.+344    	; 0x73f0 <TriggerNote+0x194>
			
		if(volume==0){ //note-off received
    7298:	ee 20       	and	r14, r14
    729a:	91 f4       	brne	.+36     	; 0x72c0 <TriggerNote+0x64>
			tracks[channel].patchEnvelopeHold=false;
    729c:	86 e1       	ldi	r24, 0x16	; 22
    729e:	90 e0       	ldi	r25, 0x00	; 0
    72a0:	c8 9f       	mul	r28, r24
    72a2:	f0 01       	movw	r30, r0
    72a4:	c9 9f       	mul	r28, r25
    72a6:	f0 0d       	add	r31, r0
    72a8:	d8 9f       	mul	r29, r24
    72aa:	f0 0d       	add	r31, r0
    72ac:	11 24       	eor	r1, r1
    72ae:	ed 5c       	subi	r30, 0xCD	; 205
    72b0:	f4 4f       	sbci	r31, 0xF4	; 244
    72b2:	13 8a       	std	Z+19, r1	; 0x13
			
			//cut note if theres not envelope
			if(tracks[channel].envelopeStep==0){
    72b4:	82 85       	ldd	r24, Z+10	; 0x0a
    72b6:	88 23       	and	r24, r24
    72b8:	09 f0       	breq	.+2      	; 0x72bc <TriggerNote+0x60>
    72ba:	9a c0       	rjmp	.+308    	; 0x73f0 <TriggerNote+0x194>
				tracks[channel].noteVol=0;	
    72bc:	10 86       	std	Z+8, r1	; 0x08
    72be:	98 c0       	rjmp	.+304    	; 0x73f0 <TriggerNote+0x194>
			}
		}else{

			#if MIXER_CHAN4_TYPE == 0		
				if(channel==3){
    72c0:	13 30       	cpi	r17, 0x03	; 3
    72c2:	59 f4       	brne	.+22     	; 0x72da <TriggerNote+0x7e>
					patch=note;
					mixer.channels.type.noise.barrel=0x0101;				
    72c4:	81 e0       	ldi	r24, 0x01	; 1
    72c6:	91 e0       	ldi	r25, 0x01	; 1
    72c8:	90 93 13 0b 	sts	0x0B13, r25
    72cc:	80 93 12 0b 	sts	0x0B12, r24
					mixer.channels.type.noise.params=1; //default (15bits,no divider)
    72d0:	81 e0       	ldi	r24, 0x01	; 1
    72d2:	80 93 11 0b 	sts	0x0B11, r24
    72d6:	0f 2d       	mov	r16, r15
    72d8:	08 c0       	rjmp	.+16     	; 0x72ea <TriggerNote+0x8e>

				}else{
					SetMixerWave(channel,0); //default wave
    72da:	60 e0       	ldi	r22, 0x00	; 0
    72dc:	81 2f       	mov	r24, r17
    72de:	0e 94 9f 3d 	call	0x7b3e	; 0x7b3e <SetMixerWave>
					SetMixerNote(channel,note);
    72e2:	6f 2d       	mov	r22, r15
    72e4:	81 2f       	mov	r24, r17
    72e6:	0e 94 80 3d 	call	0x7b00	; 0x7b00 <SetMixerNote>
				
				SetMixerNote(channel,note);
			#endif


			if(patch==127){
    72ea:	0f 37       	cpi	r16, 0x7F	; 127
    72ec:	99 f4       	brne	.+38     	; 0x7314 <TriggerNote+0xb8>
 				unsigned char *pos = ramPatch;
				tracks[channel].patchNextDeltaTime=*(pos++);
    72ee:	86 e1       	ldi	r24, 0x16	; 22
    72f0:	90 e0       	ldi	r25, 0x00	; 0
    72f2:	c8 9f       	mul	r28, r24
    72f4:	f0 01       	movw	r30, r0
    72f6:	c9 9f       	mul	r28, r25
    72f8:	f0 0d       	add	r31, r0
    72fa:	d8 9f       	mul	r29, r24
    72fc:	f0 0d       	add	r31, r0
    72fe:	11 24       	eor	r1, r1
    7300:	ed 5c       	subi	r30, 0xCD	; 205
    7302:	f4 4f       	sbci	r31, 0xF4	; 244
    7304:	80 91 90 0b 	lds	r24, 0x0B90
    7308:	87 87       	std	Z+15, r24	; 0x0f
				tracks[channel].patchCommandStreamPos=(char *)pos;
    730a:	81 e9       	ldi	r24, 0x91	; 145
    730c:	9b e0       	ldi	r25, 0x0B	; 11
    730e:	95 8b       	std	Z+21, r25	; 0x15
    7310:	84 8b       	std	Z+20, r24	; 0x14
    7312:	30 c0       	rjmp	.+96     	; 0x7374 <TriggerNote+0x118>
			}else{
				const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    7314:	89 e0       	ldi	r24, 0x09	; 9
    7316:	08 9f       	mul	r16, r24
    7318:	c0 01       	movw	r24, r0
    731a:	11 24       	eor	r1, r1
    731c:	e0 91 8d 0b 	lds	r30, 0x0B8D
    7320:	f0 91 8e 0b 	lds	r31, 0x0B8E
    7324:	e8 0f       	add	r30, r24
    7326:	f9 1f       	adc	r31, r25
    7328:	33 96       	adiw	r30, 0x03	; 3
    732a:	45 91       	lpm	r20, Z+
    732c:	54 91       	lpm	r21, Z+
				if(pos==NULL){
    732e:	41 15       	cp	r20, r1
    7330:	51 05       	cpc	r21, r1
    7332:	71 f4       	brne	.+28     	; 0x7350 <TriggerNote+0xf4>
					tracks[channel].patchCommandStreamPos=NULL;
    7334:	86 e1       	ldi	r24, 0x16	; 22
    7336:	90 e0       	ldi	r25, 0x00	; 0
    7338:	c8 9f       	mul	r28, r24
    733a:	f0 01       	movw	r30, r0
    733c:	c9 9f       	mul	r28, r25
    733e:	f0 0d       	add	r31, r0
    7340:	d8 9f       	mul	r29, r24
    7342:	f0 0d       	add	r31, r0
    7344:	11 24       	eor	r1, r1
    7346:	ed 5c       	subi	r30, 0xCD	; 205
    7348:	f4 4f       	sbci	r31, 0xF4	; 244
    734a:	15 8a       	std	Z+21, r1	; 0x15
    734c:	14 8a       	std	Z+20, r1	; 0x14
    734e:	12 c0       	rjmp	.+36     	; 0x7374 <TriggerNote+0x118>
				}else{
					tracks[channel].patchNextDeltaTime=pgm_read_byte(pos++);
    7350:	fa 01       	movw	r30, r20
    7352:	24 91       	lpm	r18, Z+
    7354:	86 e1       	ldi	r24, 0x16	; 22
    7356:	90 e0       	ldi	r25, 0x00	; 0
    7358:	c8 9f       	mul	r28, r24
    735a:	f0 01       	movw	r30, r0
    735c:	c9 9f       	mul	r28, r25
    735e:	f0 0d       	add	r31, r0
    7360:	d8 9f       	mul	r29, r24
    7362:	f0 0d       	add	r31, r0
    7364:	11 24       	eor	r1, r1
    7366:	ed 5c       	subi	r30, 0xCD	; 205
    7368:	f4 4f       	sbci	r31, 0xF4	; 244
    736a:	27 87       	std	Z+15, r18	; 0x0f
					tracks[channel].patchCommandStreamPos=pos;
    736c:	4f 5f       	subi	r20, 0xFF	; 255
    736e:	5f 4f       	sbci	r21, 0xFF	; 255
    7370:	55 8b       	std	Z+21, r21	; 0x15
    7372:	44 8b       	std	Z+20, r20	; 0x14
				}
			}

			
			
			tracks[channel].patchCurrDeltaTime=0;
    7374:	86 e1       	ldi	r24, 0x16	; 22
    7376:	90 e0       	ldi	r25, 0x00	; 0
    7378:	c8 9f       	mul	r28, r24
    737a:	d0 01       	movw	r26, r0
    737c:	c9 9f       	mul	r28, r25
    737e:	b0 0d       	add	r27, r0
    7380:	d8 9f       	mul	r29, r24
    7382:	b0 0d       	add	r27, r0
    7384:	11 24       	eor	r1, r1
    7386:	ad 5c       	subi	r26, 0xCD	; 205
    7388:	b4 4f       	sbci	r27, 0xF4	; 244
    738a:	50 96       	adiw	r26, 0x10	; 16
    738c:	1c 92       	st	X, r1
    738e:	50 97       	sbiw	r26, 0x10	; 16
			tracks[channel].envelopeStep=0; 
    7390:	1a 96       	adiw	r26, 0x0a	; 10
    7392:	1c 92       	st	X, r1
    7394:	1a 97       	sbiw	r26, 0x0a	; 10
			tracks[channel].patchNo=patch;	
    7396:	1c 96       	adiw	r26, 0x0c	; 12
    7398:	0c 93       	st	X, r16
    739a:	1c 97       	sbiw	r26, 0x0c	; 12
			tracks[channel].priority=0;	
    739c:	11 96       	adiw	r26, 0x01	; 1
    739e:	1c 92       	st	X, r1
    73a0:	11 97       	sbiw	r26, 0x01	; 1
			tracks[channel].envelopeVol=0xff; 
    73a2:	2f ef       	ldi	r18, 0xFF	; 255
    73a4:	19 96       	adiw	r26, 0x09	; 9
    73a6:	2c 93       	st	X, r18
    73a8:	19 97       	sbiw	r26, 0x09	; 9
			tracks[channel].noteVol=volume;
    73aa:	18 96       	adiw	r26, 0x08	; 8
    73ac:	ec 92       	st	X, r14
    73ae:	18 97       	sbiw	r26, 0x08	; 8
			tracks[channel].note=note;
    73b0:	8b e0       	ldi	r24, 0x0B	; 11
    73b2:	90 e0       	ldi	r25, 0x00	; 0
    73b4:	c8 9f       	mul	r28, r24
    73b6:	f0 01       	movw	r30, r0
    73b8:	c9 9f       	mul	r28, r25
    73ba:	f0 0d       	add	r31, r0
    73bc:	d8 9f       	mul	r29, r24
    73be:	f0 0d       	add	r31, r0
    73c0:	11 24       	eor	r1, r1
    73c2:	ee 0f       	add	r30, r30
    73c4:	ff 1f       	adc	r31, r31
    73c6:	eb 5c       	subi	r30, 0xCB	; 203
    73c8:	f4 4f       	sbci	r31, 0xF4	; 244
    73ca:	f0 82       	st	Z, r15
			tracks[channel].patchPlayingTime=0;
    73cc:	51 96       	adiw	r26, 0x11	; 17
    73ce:	1c 92       	st	X, r1
    73d0:	51 97       	sbiw	r26, 0x11	; 17
			tracks[channel].patchPlaying=true;
    73d2:	81 e0       	ldi	r24, 0x01	; 1
    73d4:	1b 96       	adiw	r26, 0x0b	; 11
    73d6:	8c 93       	st	X, r24
    73d8:	1b 97       	sbiw	r26, 0x0b	; 11
			tracks[channel].patchEnvelopeHold=false;
    73da:	53 96       	adiw	r26, 0x13	; 19
    73dc:	1c 92       	st	X, r1
    73de:	53 97       	sbiw	r26, 0x13	; 19
			tracks[channel].patchWave=0;
    73e0:	52 96       	adiw	r26, 0x12	; 18
    73e2:	1c 92       	st	X, r1
    73e4:	52 97       	sbiw	r26, 0x12	; 18
			tracks[channel].tremoloLevel=0;
    73e6:	14 96       	adiw	r26, 0x04	; 4
    73e8:	1c 92       	st	X, r1
    73ea:	14 97       	sbiw	r26, 0x04	; 4
			tracks[channel].expressionVol=DEFAULT_EXPRESSION_VOL;
    73ec:	16 96       	adiw	r26, 0x06	; 6
    73ee:	2c 93       	st	X, r18
		}

	}
}
    73f0:	df 91       	pop	r29
    73f2:	cf 91       	pop	r28
    73f4:	1f 91       	pop	r17
    73f6:	0f 91       	pop	r16
    73f8:	ff 90       	pop	r15
    73fa:	ef 90       	pop	r14
    73fc:	08 95       	ret

000073fe <ProcessMusic>:
		}
	}
#endif

//static char wait=0;
void ProcessMusic(void){
    73fe:	cf 92       	push	r12
    7400:	df 92       	push	r13
    7402:	ff 92       	push	r15
    7404:	0f 93       	push	r16
    7406:	1f 93       	push	r17
    7408:	cf 93       	push	r28
    740a:	df 93       	push	r29
    740c:	ec e3       	ldi	r30, 0x3C	; 60
    740e:	fb e0       	ldi	r31, 0x0B	; 11

	//process patches envelopes
	for(unsigned char track=0;track<CHANNELS;track++){

		//update envelope
		vol=tracks[track].envelopeVol+tracks[track].envelopeStep;		
    7410:	81 81       	ldd	r24, Z+1	; 0x01
    7412:	28 2f       	mov	r18, r24
    7414:	33 27       	eor	r19, r19
    7416:	27 fd       	sbrc	r18, 7
    7418:	30 95       	com	r19
    741a:	80 81       	ld	r24, Z
    741c:	28 0f       	add	r18, r24
    741e:	31 1d       	adc	r19, r1
    7420:	2f 3f       	cpi	r18, 0xFF	; 255
    7422:	31 05       	cpc	r19, r1
    7424:	19 f0       	breq	.+6      	; 0x742c <ProcessMusic+0x2e>
    7426:	14 f0       	brlt	.+4      	; 0x742c <ProcessMusic+0x2e>
    7428:	2f ef       	ldi	r18, 0xFF	; 255
    742a:	30 e0       	ldi	r19, 0x00	; 0
		if(vol<0){
			vol=0;			
		}else if(vol>0xff){
			vol=0xff;						
		}
		tracks[track].envelopeVol=vol;
    742c:	c9 01       	movw	r24, r18
    742e:	37 ff       	sbrs	r19, 7
    7430:	02 c0       	rjmp	.+4      	; 0x7436 <ProcessMusic+0x38>
    7432:	80 e0       	ldi	r24, 0x00	; 0
    7434:	90 e0       	ldi	r25, 0x00	; 0
    7436:	80 83       	st	Z, r24
    7438:	76 96       	adiw	r30, 0x16	; 22
	unsigned int uVol,tVol;	

	

	//process patches envelopes
	for(unsigned char track=0;track<CHANNELS;track++){
    743a:	4b e0       	ldi	r20, 0x0B	; 11
    743c:	e4 39       	cpi	r30, 0x94	; 148
    743e:	f4 07       	cpc	r31, r20
    7440:	39 f7       	brne	.-50     	; 0x7410 <ProcessMusic+0x12>
	}



	//Process song MIDI notes
	if(playSong){
    7442:	80 91 e0 08 	lds	r24, 0x08E0
    7446:	88 23       	and	r24, r24
    7448:	09 f0       	breq	.+2      	; 0x744c <ProcessMusic+0x4e>
    744a:	27 c1       	rjmp	.+590    	; 0x769a <ProcessMusic+0x29c>
    744c:	43 c1       	rjmp	.+646    	; 0x76d4 <ProcessMusic+0x2d6>
	

			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){

				c1=pgm_read_byte(songPos++);
    744e:	e0 91 96 0b 	lds	r30, 0x0B96
    7452:	f0 91 97 0b 	lds	r31, 0x0B97
    7456:	9f 01       	movw	r18, r30
    7458:	2f 5f       	subi	r18, 0xFF	; 255
    745a:	3f 4f       	sbci	r19, 0xFF	; 255
    745c:	30 93 97 0b 	sts	0x0B97, r19
    7460:	20 93 96 0b 	sts	0x0B96, r18
    7464:	44 91       	lpm	r20, Z+
				
				if(c1==0xff){
    7466:	4f 3f       	cpi	r20, 0xFF	; 255
    7468:	69 f5       	brne	.+90     	; 0x74c4 <ProcessMusic+0xc6>
					//META data type event
					c1=pgm_read_byte(songPos++);
    746a:	a9 01       	movw	r20, r18
    746c:	4f 5f       	subi	r20, 0xFF	; 255
    746e:	5f 4f       	sbci	r21, 0xFF	; 255
    7470:	50 93 97 0b 	sts	0x0B97, r21
    7474:	40 93 96 0b 	sts	0x0B96, r20
    7478:	f9 01       	movw	r30, r18
    747a:	84 91       	lpm	r24, Z+

					
					if(c1==0x2f){ //end of song
    747c:	8f 32       	cpi	r24, 0x2F	; 47
    747e:	19 f4       	brne	.+6      	; 0x7486 <ProcessMusic+0x88>
						playSong=false;
    7480:	10 92 e0 08 	sts	0x08E0, r1
    7484:	18 c1       	rjmp	.+560    	; 0x76b6 <ProcessMusic+0x2b8>
						break;	
					}else if(c1==0x6){ //marker
    7486:	86 30       	cpi	r24, 0x06	; 6
    7488:	09 f0       	breq	.+2      	; 0x748c <ProcessMusic+0x8e>
    748a:	fa c0       	rjmp	.+500    	; 0x7680 <ProcessMusic+0x282>
						c1=pgm_read_byte(songPos++); //read len
    748c:	fa 01       	movw	r30, r20
    748e:	31 96       	adiw	r30, 0x01	; 1
						c2=pgm_read_byte(songPos++); //read data
    7490:	cf 01       	movw	r24, r30
    7492:	01 96       	adiw	r24, 0x01	; 1
    7494:	90 93 97 0b 	sts	0x0B97, r25
    7498:	80 93 96 0b 	sts	0x0B96, r24
    749c:	e4 91       	lpm	r30, Z+
						if(c2=='S'){ //loop start
    749e:	e3 35       	cpi	r30, 0x53	; 83
    74a0:	29 f4       	brne	.+10     	; 0x74ac <ProcessMusic+0xae>
							loopStart=songPos;
    74a2:	90 93 9a 0b 	sts	0x0B9A, r25
    74a6:	80 93 99 0b 	sts	0x0B99, r24
    74aa:	ea c0       	rjmp	.+468    	; 0x7680 <ProcessMusic+0x282>
						}else if(c2=='E'){//loop end
    74ac:	e5 34       	cpi	r30, 0x45	; 69
    74ae:	09 f0       	breq	.+2      	; 0x74b2 <ProcessMusic+0xb4>
    74b0:	e7 c0       	rjmp	.+462    	; 0x7680 <ProcessMusic+0x282>
							songPos=loopStart;
    74b2:	80 91 99 0b 	lds	r24, 0x0B99
    74b6:	90 91 9a 0b 	lds	r25, 0x0B9A
    74ba:	90 93 97 0b 	sts	0x0B97, r25
    74be:	80 93 96 0b 	sts	0x0B96, r24
    74c2:	de c0       	rjmp	.+444    	; 0x7680 <ProcessMusic+0x282>
					}
					

				}else{

					if(c1&0x80) lastStatus=c1;					
    74c4:	47 ff       	sbrs	r20, 7
    74c6:	02 c0       	rjmp	.+4      	; 0x74cc <ProcessMusic+0xce>
    74c8:	40 93 8f 0b 	sts	0x0B8F, r20
					channel=c1&0x0f;
    74cc:	54 2f       	mov	r21, r20
    74ce:	5f 70       	andi	r21, 0x0F	; 15

					switch(c1&0xf0){
    74d0:	84 2f       	mov	r24, r20
    74d2:	90 e0       	ldi	r25, 0x00	; 0
    74d4:	80 7f       	andi	r24, 0xF0	; 240
    74d6:	90 70       	andi	r25, 0x00	; 0
    74d8:	80 3b       	cpi	r24, 0xB0	; 176
    74da:	91 05       	cpc	r25, r1
    74dc:	29 f1       	breq	.+74     	; 0x7528 <ProcessMusic+0x12a>
    74de:	80 3c       	cpi	r24, 0xC0	; 192
    74e0:	91 05       	cpc	r25, r1
    74e2:	79 f1       	breq	.+94     	; 0x7542 <ProcessMusic+0x144>
    74e4:	80 39       	cpi	r24, 0x90	; 144
    74e6:	91 05       	cpc	r25, r1
    74e8:	09 f0       	breq	.+2      	; 0x74ec <ProcessMusic+0xee>
    74ea:	42 c0       	rjmp	.+132    	; 0x7570 <ProcessMusic+0x172>
	
						//note-on
						case 0x90:
							c1=pgm_read_byte(songPos++); //get note
    74ec:	c9 01       	movw	r24, r18
    74ee:	01 96       	adiw	r24, 0x01	; 1
    74f0:	f9 01       	movw	r30, r18
    74f2:	44 91       	lpm	r20, Z+
							c2=pgm_read_byte(songPos++)<<1; //get volume															
    74f4:	01 96       	adiw	r24, 0x01	; 1
    74f6:	90 93 97 0b 	sts	0x0B97, r25
    74fa:	80 93 96 0b 	sts	0x0B96, r24
    74fe:	01 97       	sbiw	r24, 0x01	; 1
    7500:	fc 01       	movw	r30, r24
    7502:	24 91       	lpm	r18, Z+
							if(tracks[channel].allocated==true){
    7504:	85 2f       	mov	r24, r21
    7506:	90 e0       	ldi	r25, 0x00	; 0
    7508:	8c 9f       	mul	r24, r28
    750a:	f0 01       	movw	r30, r0
    750c:	8d 9f       	mul	r24, r29
    750e:	f0 0d       	add	r31, r0
    7510:	9c 9f       	mul	r25, r28
    7512:	f0 0d       	add	r31, r0
    7514:	11 24       	eor	r1, r1
    7516:	ed 5c       	subi	r30, 0xCD	; 205
    7518:	f4 4f       	sbci	r31, 0xF4	; 244
    751a:	80 81       	ld	r24, Z
    751c:	88 23       	and	r24, r24
    751e:	09 f4       	brne	.+2      	; 0x7522 <ProcessMusic+0x124>
    7520:	af c0       	rjmp	.+350    	; 0x7680 <ProcessMusic+0x282>
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    7522:	22 0f       	add	r18, r18
    7524:	64 85       	ldd	r22, Z+12	; 0x0c
    7526:	52 c0       	rjmp	.+164    	; 0x75cc <ProcessMusic+0x1ce>
							}
							break;

						//controllers
						case 0xb0:
							c1=pgm_read_byte(songPos++); //get controller #
    7528:	c9 01       	movw	r24, r18
    752a:	01 96       	adiw	r24, 0x01	; 1
    752c:	f9 01       	movw	r30, r18
    752e:	44 91       	lpm	r20, Z+
							c2=pgm_read_byte(songPos++); //get value
    7530:	01 96       	adiw	r24, 0x01	; 1
    7532:	90 93 97 0b 	sts	0x0B97, r25
    7536:	80 93 96 0b 	sts	0x0B96, r24
    753a:	01 97       	sbiw	r24, 0x01	; 1
    753c:	fc 01       	movw	r30, r24
    753e:	24 91       	lpm	r18, Z+
    7540:	53 c0       	rjmp	.+166    	; 0x75e8 <ProcessMusic+0x1ea>
							
							break;

						//program change
						case 0xc0:
							c1=pgm_read_byte(songPos++); //get patch
    7542:	2f 5f       	subi	r18, 0xFF	; 255
    7544:	3f 4f       	sbci	r19, 0xFF	; 255
    7546:	30 93 97 0b 	sts	0x0B97, r19
    754a:	20 93 96 0b 	sts	0x0B96, r18
    754e:	21 50       	subi	r18, 0x01	; 1
    7550:	30 40       	sbci	r19, 0x00	; 0
    7552:	f9 01       	movw	r30, r18
    7554:	24 91       	lpm	r18, Z+
							tracks[channel].patchNo=c1;								
    7556:	85 2f       	mov	r24, r21
    7558:	90 e0       	ldi	r25, 0x00	; 0
    755a:	8c 9f       	mul	r24, r28
    755c:	f0 01       	movw	r30, r0
    755e:	8d 9f       	mul	r24, r29
    7560:	f0 0d       	add	r31, r0
    7562:	9c 9f       	mul	r25, r28
    7564:	f0 0d       	add	r31, r0
    7566:	11 24       	eor	r1, r1
    7568:	ed 5c       	subi	r30, 0xCD	; 205
    756a:	f4 4f       	sbci	r31, 0xF4	; 244
    756c:	24 87       	std	Z+12, r18	; 0x0c
    756e:	88 c0       	rjmp	.+272    	; 0x7680 <ProcessMusic+0x282>
							break;							

						//running status
						default:
							channel=lastStatus&0x0f;
    7570:	80 91 8f 0b 	lds	r24, 0x0B8F
    7574:	58 2f       	mov	r21, r24
    7576:	5f 70       	andi	r21, 0x0F	; 15

							switch(lastStatus&0xf0){
    7578:	90 e0       	ldi	r25, 0x00	; 0
    757a:	80 7f       	andi	r24, 0xF0	; 240
    757c:	90 70       	andi	r25, 0x00	; 0
    757e:	80 3b       	cpi	r24, 0xB0	; 176
    7580:	91 05       	cpc	r25, r1
    7582:	41 f1       	breq	.+80     	; 0x75d4 <ProcessMusic+0x1d6>
    7584:	80 3c       	cpi	r24, 0xC0	; 192
    7586:	91 05       	cpc	r25, r1
    7588:	09 f4       	brne	.+2      	; 0x758c <ProcessMusic+0x18e>
    758a:	6e c0       	rjmp	.+220    	; 0x7668 <ProcessMusic+0x26a>
    758c:	80 39       	cpi	r24, 0x90	; 144
    758e:	91 05       	cpc	r25, r1
    7590:	09 f0       	breq	.+2      	; 0x7594 <ProcessMusic+0x196>
    7592:	76 c0       	rjmp	.+236    	; 0x7680 <ProcessMusic+0x282>
		
								//note-on
								case 0x90:
									c2=pgm_read_byte(songPos++)<<1; //get volume
    7594:	2f 5f       	subi	r18, 0xFF	; 255
    7596:	3f 4f       	sbci	r19, 0xFF	; 255
    7598:	30 93 97 0b 	sts	0x0B97, r19
    759c:	20 93 96 0b 	sts	0x0B96, r18
    75a0:	21 50       	subi	r18, 0x01	; 1
    75a2:	30 40       	sbci	r19, 0x00	; 0
    75a4:	f9 01       	movw	r30, r18
    75a6:	24 91       	lpm	r18, Z+
									if(tracks[channel].allocated==true){
    75a8:	85 2f       	mov	r24, r21
    75aa:	90 e0       	ldi	r25, 0x00	; 0
    75ac:	8c 9f       	mul	r24, r28
    75ae:	d0 01       	movw	r26, r0
    75b0:	8d 9f       	mul	r24, r29
    75b2:	b0 0d       	add	r27, r0
    75b4:	9c 9f       	mul	r25, r28
    75b6:	b0 0d       	add	r27, r0
    75b8:	11 24       	eor	r1, r1
    75ba:	ad 5c       	subi	r26, 0xCD	; 205
    75bc:	b4 4f       	sbci	r27, 0xF4	; 244
    75be:	8c 91       	ld	r24, X
    75c0:	88 23       	and	r24, r24
    75c2:	09 f4       	brne	.+2      	; 0x75c6 <ProcessMusic+0x1c8>
    75c4:	5d c0       	rjmp	.+186    	; 0x7680 <ProcessMusic+0x282>
										TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    75c6:	22 0f       	add	r18, r18
    75c8:	1c 96       	adiw	r26, 0x0c	; 12
    75ca:	6c 91       	ld	r22, X
    75cc:	85 2f       	mov	r24, r21
    75ce:	0e 94 2e 39 	call	0x725c	; 0x725c <TriggerNote>
    75d2:	56 c0       	rjmp	.+172    	; 0x7680 <ProcessMusic+0x282>
									}
									break;

								//controllers
								case 0xb0:
									c2=pgm_read_byte(songPos++); //get value	
    75d4:	2f 5f       	subi	r18, 0xFF	; 255
    75d6:	3f 4f       	sbci	r19, 0xFF	; 255
    75d8:	30 93 97 0b 	sts	0x0B97, r19
    75dc:	20 93 96 0b 	sts	0x0B96, r18
    75e0:	21 50       	subi	r18, 0x01	; 1
    75e2:	30 40       	sbci	r19, 0x00	; 0
    75e4:	f9 01       	movw	r30, r18
    75e6:	24 91       	lpm	r18, Z+
									
									if(c1==CONTROLER_VOL){
    75e8:	47 30       	cpi	r20, 0x07	; 7
    75ea:	71 f4       	brne	.+28     	; 0x7608 <ProcessMusic+0x20a>
										tracks[channel].trackVol=c2<<1;
    75ec:	85 2f       	mov	r24, r21
    75ee:	90 e0       	ldi	r25, 0x00	; 0
    75f0:	8c 9f       	mul	r24, r28
    75f2:	f0 01       	movw	r30, r0
    75f4:	8d 9f       	mul	r24, r29
    75f6:	f0 0d       	add	r31, r0
    75f8:	9c 9f       	mul	r25, r28
    75fa:	f0 0d       	add	r31, r0
    75fc:	11 24       	eor	r1, r1
    75fe:	ed 5c       	subi	r30, 0xCD	; 205
    7600:	f4 4f       	sbci	r31, 0xF4	; 244
    7602:	22 0f       	add	r18, r18
    7604:	27 83       	std	Z+7, r18	; 0x07
    7606:	3c c0       	rjmp	.+120    	; 0x7680 <ProcessMusic+0x282>
									}else if(c1==CONTROLER_EXPRESSION){
    7608:	4b 30       	cpi	r20, 0x0B	; 11
    760a:	71 f4       	brne	.+28     	; 0x7628 <ProcessMusic+0x22a>
										tracks[channel].expressionVol=c2<<1;
    760c:	85 2f       	mov	r24, r21
    760e:	90 e0       	ldi	r25, 0x00	; 0
    7610:	8c 9f       	mul	r24, r28
    7612:	f0 01       	movw	r30, r0
    7614:	8d 9f       	mul	r24, r29
    7616:	f0 0d       	add	r31, r0
    7618:	9c 9f       	mul	r25, r28
    761a:	f0 0d       	add	r31, r0
    761c:	11 24       	eor	r1, r1
    761e:	ed 5c       	subi	r30, 0xCD	; 205
    7620:	f4 4f       	sbci	r31, 0xF4	; 244
    7622:	22 0f       	add	r18, r18
    7624:	26 83       	std	Z+6, r18	; 0x06
    7626:	2c c0       	rjmp	.+88     	; 0x7680 <ProcessMusic+0x282>
									}else if(c1==CONTROLER_TREMOLO){
    7628:	4c 35       	cpi	r20, 0x5C	; 92
    762a:	71 f4       	brne	.+28     	; 0x7648 <ProcessMusic+0x24a>
										tracks[channel].tremoloLevel=c2<<1;
    762c:	85 2f       	mov	r24, r21
    762e:	90 e0       	ldi	r25, 0x00	; 0
    7630:	8c 9f       	mul	r24, r28
    7632:	f0 01       	movw	r30, r0
    7634:	8d 9f       	mul	r24, r29
    7636:	f0 0d       	add	r31, r0
    7638:	9c 9f       	mul	r25, r28
    763a:	f0 0d       	add	r31, r0
    763c:	11 24       	eor	r1, r1
    763e:	ed 5c       	subi	r30, 0xCD	; 205
    7640:	f4 4f       	sbci	r31, 0xF4	; 244
    7642:	22 0f       	add	r18, r18
    7644:	24 83       	std	Z+4, r18	; 0x04
    7646:	1c c0       	rjmp	.+56     	; 0x7680 <ProcessMusic+0x282>
									}else if(c1==CONTROLER_TREMOLO_RATE){
    7648:	44 36       	cpi	r20, 0x64	; 100
    764a:	d1 f4       	brne	.+52     	; 0x7680 <ProcessMusic+0x282>
										tracks[channel].tremoloRate=c2<<1;
    764c:	85 2f       	mov	r24, r21
    764e:	90 e0       	ldi	r25, 0x00	; 0
    7650:	8c 9f       	mul	r24, r28
    7652:	f0 01       	movw	r30, r0
    7654:	8d 9f       	mul	r24, r29
    7656:	f0 0d       	add	r31, r0
    7658:	9c 9f       	mul	r25, r28
    765a:	f0 0d       	add	r31, r0
    765c:	11 24       	eor	r1, r1
    765e:	ed 5c       	subi	r30, 0xCD	; 205
    7660:	f4 4f       	sbci	r31, 0xF4	; 244
    7662:	22 0f       	add	r18, r18
    7664:	25 83       	std	Z+5, r18	; 0x05
    7666:	0c c0       	rjmp	.+24     	; 0x7680 <ProcessMusic+0x282>
																
									break;
								
								//program change
								case 0xc0:
									tracks[channel].patchNo=c1;
    7668:	85 2f       	mov	r24, r21
    766a:	90 e0       	ldi	r25, 0x00	; 0
    766c:	8c 9f       	mul	r24, r28
    766e:	f0 01       	movw	r30, r0
    7670:	8d 9f       	mul	r24, r29
    7672:	f0 0d       	add	r31, r0
    7674:	9c 9f       	mul	r25, r28
    7676:	f0 0d       	add	r31, r0
    7678:	11 24       	eor	r1, r1
    767a:	ed 5c       	subi	r30, 0xCD	; 205
    767c:	f4 4f       	sbci	r31, 0xF4	; 244
    767e:	44 87       	std	Z+12, r20	; 0x0c

					}

				}
				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos); //Bug fix: remove divide by two 			
    7680:	86 e9       	ldi	r24, 0x96	; 150
    7682:	9b e0       	ldi	r25, 0x0B	; 11
    7684:	0e 94 04 39 	call	0x7208	; 0x7208 <ReadVarLen>
    7688:	90 93 95 0b 	sts	0x0B95, r25
    768c:	80 93 94 0b 	sts	0x0B94, r24
				currDeltaTime=0;
    7690:	10 92 8c 0b 	sts	0x0B8C, r1
    7694:	10 92 8b 0b 	sts	0x0B8B, r1
    7698:	02 c0       	rjmp	.+4      	; 0x769e <ProcessMusic+0x2a0>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    769a:	c6 e1       	ldi	r28, 0x16	; 22
    769c:	d0 e0       	ldi	r29, 0x00	; 0
	//Process song MIDI notes
	if(playSong){
	

			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    769e:	60 91 8b 0b 	lds	r22, 0x0B8B
    76a2:	70 91 8c 0b 	lds	r23, 0x0B8C
    76a6:	80 91 94 0b 	lds	r24, 0x0B94
    76aa:	90 91 95 0b 	lds	r25, 0x0B95
    76ae:	68 17       	cp	r22, r24
    76b0:	79 07       	cpc	r23, r25
    76b2:	09 f4       	brne	.+2      	; 0x76b6 <ProcessMusic+0x2b8>
    76b4:	cc ce       	rjmp	.-616    	; 0x744e <ProcessMusic+0x50>
				currDeltaTime=0;
			
			}//end while

			
			currDeltaTime++;
    76b6:	6f 5f       	subi	r22, 0xFF	; 255
    76b8:	7f 4f       	sbci	r23, 0xFF	; 255
    76ba:	70 93 8c 0b 	sts	0x0B8C, r23
    76be:	60 93 8b 0b 	sts	0x0B8B, r22
			absoluteTime++;
    76c2:	80 91 91 0b 	lds	r24, 0x0B91
    76c6:	90 91 92 0b 	lds	r25, 0x0B92
    76ca:	01 96       	adiw	r24, 0x01	; 1
    76cc:	90 93 92 0b 	sts	0x0B92, r25
    76d0:	80 93 91 0b 	sts	0x0B91, r24
    76d4:	02 ef       	ldi	r16, 0xF2	; 242
    76d6:	1a e0       	ldi	r17, 0x0A	; 10
    76d8:	c4 e3       	ldi	r28, 0x34	; 52
    76da:	db e0       	ldi	r29, 0x0B	; 11
    76dc:	ff 24       	eor	r15, r15
					tmp-=128; //convert to unsigned

					tVol=(tracks[track].tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    76de:	bf ef       	ldi	r27, 0xFF	; 255
    76e0:	cb 2e       	mov	r12, r27
    76e2:	d1 2c       	mov	r13, r1
	// Process patches command streams & final volume
	//
	
	for(unsigned char track=0;track<CHANNELS;track++){
		//process patch command stream
		if(tracks[track].patchEnvelopeHold==false){
    76e4:	8a 89       	ldd	r24, Y+18	; 0x12
    76e6:	88 23       	and	r24, r24
    76e8:	09 f0       	breq	.+2      	; 0x76ec <ProcessMusic+0x2ee>
    76ea:	5e c0       	rjmp	.+188    	; 0x77a8 <ProcessMusic+0x3aa>

			if(tracks[track].patchCommandStreamPos!=NULL && 
    76ec:	8b 89       	ldd	r24, Y+19	; 0x13
    76ee:	9c 89       	ldd	r25, Y+20	; 0x14
    76f0:	89 2b       	or	r24, r25
    76f2:	09 f4       	brne	.+2      	; 0x76f6 <ProcessMusic+0x2f8>
    76f4:	56 c0       	rjmp	.+172    	; 0x77a2 <ProcessMusic+0x3a4>
    76f6:	9f 85       	ldd	r25, Y+15	; 0x0f
    76f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    76fa:	98 17       	cp	r25, r24
    76fc:	08 f0       	brcs	.+2      	; 0x7700 <ProcessMusic+0x302>
    76fe:	4c c0       	rjmp	.+152    	; 0x7798 <ProcessMusic+0x39a>
    7700:	50 c0       	rjmp	.+160    	; 0x77a2 <ProcessMusic+0x3a4>

				//process all simultaneous events
				while(tracks[track].patchCurrDeltaTime==tracks[track].patchNextDeltaTime){	
					
					//RAM Patch
					if(tracks[track].patchNo==127){
    7702:	8b 85       	ldd	r24, Y+11	; 0x0b
    7704:	2b 89       	ldd	r18, Y+19	; 0x13
    7706:	3c 89       	ldd	r19, Y+20	; 0x14
    7708:	8f 37       	cpi	r24, 0x7F	; 127
    770a:	e9 f4       	brne	.+58     	; 0x7746 <ProcessMusic+0x348>
						c1=*(tracks[track].patchCommandStreamPos++);
    770c:	d9 01       	movw	r26, r18
    770e:	8d 91       	ld	r24, X+
    7710:	bc 8b       	std	Y+20, r27	; 0x14
    7712:	ab 8b       	std	Y+19, r26	; 0x13
						if(c1==0xff){					
    7714:	8f 3f       	cpi	r24, 0xFF	; 255
    7716:	01 f1       	breq	.+64     	; 0x7758 <ProcessMusic+0x35a>
							//end of stream!
							tracks[track].priority=0;
							tracks[track].patchCommandStreamPos=NULL;
							break;
						}else{
							c2=*(tracks[track].patchCommandStreamPos++);
    7718:	f9 01       	movw	r30, r18
    771a:	61 81       	ldd	r22, Z+1	; 0x01
    771c:	11 96       	adiw	r26, 0x01	; 1
    771e:	bc 8b       	std	Y+20, r27	; 0x14
    7720:	ab 8b       	std	Y+19, r26	; 0x13
							//invoke patch command function
							(patchCommands[c1])(track,c2);				
    7722:	e8 2f       	mov	r30, r24
    7724:	f0 e0       	ldi	r31, 0x00	; 0
    7726:	ee 0f       	add	r30, r30
    7728:	ff 1f       	adc	r31, r31
    772a:	e0 59       	subi	r30, 0x90	; 144
    772c:	ff 4f       	sbci	r31, 0xFF	; 255
    772e:	01 90       	ld	r0, Z+
    7730:	f0 81       	ld	r31, Z
    7732:	e0 2d       	mov	r30, r0
    7734:	8f 2d       	mov	r24, r15
    7736:	09 95       	icall
						}			
				
						//read next delta time
						tracks[track].patchNextDeltaTime=*(tracks[track].patchCommandStreamPos++);
    7738:	eb 89       	ldd	r30, Y+19	; 0x13
    773a:	fc 89       	ldd	r31, Y+20	; 0x14
    773c:	81 91       	ld	r24, Z+
    773e:	8e 87       	std	Y+14, r24	; 0x0e
    7740:	fc 8b       	std	Y+20, r31	; 0x14
    7742:	eb 8b       	std	Y+19, r30	; 0x13
    7744:	28 c0       	rjmp	.+80     	; 0x7796 <ProcessMusic+0x398>
				
					}else{
						//ROM patches
						c1=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    7746:	a9 01       	movw	r20, r18
    7748:	4f 5f       	subi	r20, 0xFF	; 255
    774a:	5f 4f       	sbci	r21, 0xFF	; 255
    774c:	5c 8b       	std	Y+20, r21	; 0x14
    774e:	4b 8b       	std	Y+19, r20	; 0x13
    7750:	f9 01       	movw	r30, r18
    7752:	84 91       	lpm	r24, Z+
						if(c1==0xff){					
    7754:	8f 3f       	cpi	r24, 0xFF	; 255
    7756:	21 f4       	brne	.+8      	; 0x7760 <ProcessMusic+0x362>
							//end of stream!
							tracks[track].priority=0;
    7758:	18 82       	st	Y, r1
							tracks[track].patchCommandStreamPos=NULL;
    775a:	1c 8a       	std	Y+20, r1	; 0x14
    775c:	1b 8a       	std	Y+19, r1	; 0x13
    775e:	21 c0       	rjmp	.+66     	; 0x77a2 <ProcessMusic+0x3a4>
							break;

						}else{
							c2=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    7760:	4f 5f       	subi	r20, 0xFF	; 255
    7762:	5f 4f       	sbci	r21, 0xFF	; 255
    7764:	5c 8b       	std	Y+20, r21	; 0x14
    7766:	4b 8b       	std	Y+19, r20	; 0x13
    7768:	41 50       	subi	r20, 0x01	; 1
    776a:	50 40       	sbci	r21, 0x00	; 0
    776c:	fa 01       	movw	r30, r20
    776e:	64 91       	lpm	r22, Z+
							//invoke patch command function
							( (PatchCommand)pgm_read_word(&patchCommands[c1]) )(track,c2);				
    7770:	90 e0       	ldi	r25, 0x00	; 0
    7772:	88 0f       	add	r24, r24
    7774:	99 1f       	adc	r25, r25
    7776:	80 59       	subi	r24, 0x90	; 144
    7778:	9f 4f       	sbci	r25, 0xFF	; 255
    777a:	fc 01       	movw	r30, r24
    777c:	25 91       	lpm	r18, Z+
    777e:	34 91       	lpm	r19, Z+
    7780:	8f 2d       	mov	r24, r15
    7782:	f9 01       	movw	r30, r18
    7784:	09 95       	icall
						}			
				
						//read next delta time
						tracks[track].patchNextDeltaTime=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    7786:	eb 89       	ldd	r30, Y+19	; 0x13
    7788:	fc 89       	ldd	r31, Y+20	; 0x14
    778a:	31 96       	adiw	r30, 0x01	; 1
    778c:	fc 8b       	std	Y+20, r31	; 0x14
    778e:	eb 8b       	std	Y+19, r30	; 0x13
    7790:	31 97       	sbiw	r30, 0x01	; 1
    7792:	e4 91       	lpm	r30, Z+
    7794:	ee 87       	std	Y+14, r30	; 0x0e
						
					}				
					tracks[track].patchCurrDeltaTime=0;	
    7796:	1f 86       	std	Y+15, r1	; 0x0f

			if(tracks[track].patchCommandStreamPos!=NULL && 
				tracks[track].patchCurrDeltaTime>=tracks[track].patchNextDeltaTime){			

				//process all simultaneous events
				while(tracks[track].patchCurrDeltaTime==tracks[track].patchNextDeltaTime){	
    7798:	9f 85       	ldd	r25, Y+15	; 0x0f
    779a:	8e 85       	ldd	r24, Y+14	; 0x0e
    779c:	98 17       	cp	r25, r24
    779e:	09 f4       	brne	.+2      	; 0x77a2 <ProcessMusic+0x3a4>
    77a0:	b0 cf       	rjmp	.-160    	; 0x7702 <ProcessMusic+0x304>
					tracks[track].patchCurrDeltaTime=0;	

				}		
			}				
			
			tracks[track].patchCurrDeltaTime++;
    77a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    77a4:	8f 5f       	subi	r24, 0xFF	; 255
    77a6:	8f 87       	std	Y+15, r24	; 0x0f
		}
	


		if(tracks[track].patchPlaying){
    77a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    77aa:	88 23       	and	r24, r24
    77ac:	19 f4       	brne	.+6      	; 0x77b4 <ProcessMusic+0x3b6>
    77ae:	20 e0       	ldi	r18, 0x00	; 0
    77b0:	30 e0       	ldi	r19, 0x00	; 0
    77b2:	6b c0       	rjmp	.+214    	; 0x788a <ProcessMusic+0x48c>
		
			if(tracks[track].patchPlayingTime<0xff){
    77b4:	88 89       	ldd	r24, Y+16	; 0x10
    77b6:	8f 3f       	cpi	r24, 0xFF	; 255
    77b8:	11 f0       	breq	.+4      	; 0x77be <ProcessMusic+0x3c0>
				tracks[track].patchPlayingTime++;
    77ba:	8f 5f       	subi	r24, 0xFF	; 255
    77bc:	88 8b       	std	Y+16, r24	; 0x10
			}

			//process final frame volume
			if(tracks[track].noteVol!=0 && tracks[track].envelopeVol!=0 && tracks[track].trackVol!=0 && masterVolume!=0){
    77be:	9f 81       	ldd	r25, Y+7	; 0x07
    77c0:	99 23       	and	r25, r25
    77c2:	09 f4       	brne	.+2      	; 0x77c6 <ProcessMusic+0x3c8>
    77c4:	5c c0       	rjmp	.+184    	; 0x787e <ProcessMusic+0x480>
    77c6:	28 85       	ldd	r18, Y+8	; 0x08
    77c8:	22 23       	and	r18, r18
    77ca:	09 f4       	brne	.+2      	; 0x77ce <ProcessMusic+0x3d0>
    77cc:	58 c0       	rjmp	.+176    	; 0x787e <ProcessMusic+0x480>
    77ce:	8e 81       	ldd	r24, Y+6	; 0x06
    77d0:	88 23       	and	r24, r24
    77d2:	09 f4       	brne	.+2      	; 0x77d6 <ProcessMusic+0x3d8>
    77d4:	54 c0       	rjmp	.+168    	; 0x787e <ProcessMusic+0x480>
    77d6:	40 91 93 0b 	lds	r20, 0x0B93
    77da:	44 23       	and	r20, r20
    77dc:	09 f4       	brne	.+2      	; 0x77e0 <ProcessMusic+0x3e2>
    77de:	4f c0       	rjmp	.+158    	; 0x787e <ProcessMusic+0x480>

				uVol=(tracks[track].noteVol*tracks[track].trackVol)+0x100;
    77e0:	89 9f       	mul	r24, r25
    77e2:	c0 01       	movw	r24, r0
    77e4:	11 24       	eor	r1, r1
    77e6:	80 50       	subi	r24, 0x00	; 0
    77e8:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*tracks[track].envelopeVol)+0x100;
    77ea:	89 2f       	mov	r24, r25
    77ec:	99 27       	eor	r25, r25
    77ee:	30 e0       	ldi	r19, 0x00	; 0
    77f0:	b9 01       	movw	r22, r18
    77f2:	86 9f       	mul	r24, r22
    77f4:	90 01       	movw	r18, r0
    77f6:	87 9f       	mul	r24, r23
    77f8:	30 0d       	add	r19, r0
    77fa:	96 9f       	mul	r25, r22
    77fc:	30 0d       	add	r19, r0
    77fe:	11 24       	eor	r1, r1
    7800:	20 50       	subi	r18, 0x00	; 0
    7802:	3f 4f       	sbci	r19, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*tracks[track].expressionVol)+0x100;
    7804:	23 2f       	mov	r18, r19
    7806:	33 27       	eor	r19, r19
    7808:	8d 81       	ldd	r24, Y+5	; 0x05
    780a:	90 e0       	ldi	r25, 0x00	; 0
    780c:	fc 01       	movw	r30, r24
    780e:	2e 9f       	mul	r18, r30
    7810:	c0 01       	movw	r24, r0
    7812:	2f 9f       	mul	r18, r31
    7814:	90 0d       	add	r25, r0
    7816:	3e 9f       	mul	r19, r30
    7818:	90 0d       	add	r25, r0
    781a:	11 24       	eor	r1, r1
    781c:	80 50       	subi	r24, 0x00	; 0
    781e:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*masterVolume)+0x100;
    7820:	89 2f       	mov	r24, r25
    7822:	99 27       	eor	r25, r25
    7824:	24 2f       	mov	r18, r20
    7826:	30 e0       	ldi	r19, 0x00	; 0
    7828:	ac 01       	movw	r20, r24
    782a:	42 9f       	mul	r20, r18
    782c:	c0 01       	movw	r24, r0
    782e:	43 9f       	mul	r20, r19
    7830:	90 0d       	add	r25, r0
    7832:	52 9f       	mul	r21, r18
    7834:	90 0d       	add	r25, r0
    7836:	11 24       	eor	r1, r1
    7838:	80 50       	subi	r24, 0x00	; 0
    783a:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
    783c:	29 2f       	mov	r18, r25
    783e:	33 27       	eor	r19, r19

				if(tracks[track].tremoloLevel>0){					
    7840:	8b 81       	ldd	r24, Y+3	; 0x03
    7842:	88 23       	and	r24, r24
    7844:	f1 f0       	breq	.+60     	; 0x7882 <ProcessMusic+0x484>
					tmp=pgm_read_byte(&(waves[tracks[track].tremoloPos]));
    7846:	ea 81       	ldd	r30, Y+2	; 0x02
    7848:	f0 e0       	ldi	r31, 0x00	; 0
    784a:	e0 50       	subi	r30, 0x00	; 0
    784c:	f2 48       	sbci	r31, 0x82	; 130
    784e:	e4 91       	lpm	r30, Z+
					tmp-=128; //convert to unsigned

					tVol=(tracks[track].tremoloLevel*tmp)+0x100;
    7850:	e0 58       	subi	r30, 0x80	; 128
    7852:	e8 9f       	mul	r30, r24
    7854:	c0 01       	movw	r24, r0
    7856:	11 24       	eor	r1, r1
    7858:	80 50       	subi	r24, 0x00	; 0
    785a:	9f 4f       	sbci	r25, 0xFF	; 255
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    785c:	89 2f       	mov	r24, r25
    785e:	99 27       	eor	r25, r25
    7860:	b6 01       	movw	r22, r12
    7862:	68 1b       	sub	r22, r24
    7864:	79 0b       	sbc	r23, r25
    7866:	62 9f       	mul	r22, r18
    7868:	c0 01       	movw	r24, r0
    786a:	63 9f       	mul	r22, r19
    786c:	90 0d       	add	r25, r0
    786e:	72 9f       	mul	r23, r18
    7870:	90 0d       	add	r25, r0
    7872:	11 24       	eor	r1, r1
    7874:	80 50       	subi	r24, 0x00	; 0
    7876:	9f 4f       	sbci	r25, 0xFF	; 255
					uVol>>=8;
    7878:	29 2f       	mov	r18, r25
    787a:	33 27       	eor	r19, r19
    787c:	02 c0       	rjmp	.+4      	; 0x7882 <ProcessMusic+0x484>
    787e:	20 e0       	ldi	r18, 0x00	; 0
    7880:	30 e0       	ldi	r19, 0x00	; 0
			
			}else{
				uVol=0;
			}	

			tracks[track].tremoloPos+=tracks[track].tremoloRate;	
    7882:	8a 81       	ldd	r24, Y+2	; 0x02
    7884:	9c 81       	ldd	r25, Y+4	; 0x04
    7886:	89 0f       	add	r24, r25
    7888:	8a 83       	std	Y+2, r24	; 0x02

		}else{
			uVol=0;
		}
		
		mixer.channels.all[track].volume=(uVol&0xff);
    788a:	f8 01       	movw	r30, r16
    788c:	20 83       	st	Z, r18

	//
	// Process patches command streams & final volume
	//
	
	for(unsigned char track=0;track<CHANNELS;track++){
    788e:	f3 94       	inc	r15
    7890:	06 5f       	subi	r16, 0xF6	; 246
    7892:	1f 4f       	sbci	r17, 0xFF	; 255
    7894:	66 96       	adiw	r28, 0x16	; 22
    7896:	f4 e0       	ldi	r31, 0x04	; 4
    7898:	ff 16       	cp	r15, r31
    789a:	09 f0       	breq	.+2      	; 0x789e <ProcessMusic+0x4a0>
    789c:	23 cf       	rjmp	.-442    	; 0x76e4 <ProcessMusic+0x2e6>
		mixer.channels.all[track].volume=(uVol&0xff);
	}



}
    789e:	df 91       	pop	r29
    78a0:	cf 91       	pop	r28
    78a2:	1f 91       	pop	r17
    78a4:	0f 91       	pop	r16
    78a6:	ff 90       	pop	r15
    78a8:	df 90       	pop	r13
    78aa:	cf 90       	pop	r12
    78ac:	08 95       	ret

000078ae <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    78ae:	1f 93       	push	r17
    78b0:	cf 93       	push	r28
    78b2:	df 93       	push	r29
    78b4:	58 2f       	mov	r21, r24
	unsigned char channel;
	
	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    78b6:	89 e0       	ldi	r24, 0x09	; 9
    78b8:	58 9f       	mul	r21, r24
    78ba:	c0 01       	movw	r24, r0
    78bc:	11 24       	eor	r1, r1
    78be:	20 91 8d 0b 	lds	r18, 0x0B8D
    78c2:	30 91 8e 0b 	lds	r19, 0x0B8E
    78c6:	28 0f       	add	r18, r24
    78c8:	39 1f       	adc	r19, r25
    78ca:	c9 01       	movw	r24, r18
    78cc:	03 96       	adiw	r24, 0x03	; 3
    78ce:	fc 01       	movw	r30, r24
    78d0:	a5 91       	lpm	r26, Z+
    78d2:	b4 91       	lpm	r27, Z+
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    78d4:	f9 01       	movw	r30, r18
    78d6:	84 91       	lpm	r24, Z+

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || type==2){
    78d8:	81 50       	subi	r24, 0x01	; 1
    78da:	82 30       	cpi	r24, 0x02	; 2
    78dc:	10 f4       	brcc	.+4      	; 0x78e2 <TriggerFx+0x34>
    78de:	13 e0       	ldi	r17, 0x03	; 3
    78e0:	1d c0       	rjmp	.+58     	; 0x791c <TriggerFx+0x6e>
		//noise or PCM channel fx
		channel=3;
	}else if(tracks[1].priority==0 || (tracks[1].fxPatchNo==patch && tracks[1].priority>0 && retrig==true)){ //fx already playing
    78e2:	80 91 4a 0b 	lds	r24, 0x0B4A
    78e6:	88 23       	and	r24, r24
    78e8:	b1 f0       	breq	.+44     	; 0x7916 <TriggerFx+0x68>
    78ea:	80 91 56 0b 	lds	r24, 0x0B56
    78ee:	85 17       	cp	r24, r21
    78f0:	11 f4       	brne	.+4      	; 0x78f6 <TriggerFx+0x48>
    78f2:	44 23       	and	r20, r20
    78f4:	81 f4       	brne	.+32     	; 0x7916 <TriggerFx+0x68>
		channel=1;
	}else if(tracks[2].priority==0 || (tracks[2].fxPatchNo==patch && tracks[2].priority>0 && retrig==true)){ //fx already playing				
    78f6:	80 91 60 0b 	lds	r24, 0x0B60
    78fa:	88 23       	and	r24, r24
    78fc:	71 f0       	breq	.+28     	; 0x791a <TriggerFx+0x6c>
    78fe:	80 91 6c 0b 	lds	r24, 0x0B6C
    7902:	85 17       	cp	r24, r21
    7904:	11 f4       	brne	.+4      	; 0x790a <TriggerFx+0x5c>
    7906:	44 23       	and	r20, r20
    7908:	41 f4       	brne	.+16     	; 0x791a <TriggerFx+0x6c>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    790a:	90 91 5a 0b 	lds	r25, 0x0B5A
    790e:	80 91 70 0b 	lds	r24, 0x0B70
    7912:	89 17       	cp	r24, r25
    7914:	10 f4       	brcc	.+4      	; 0x791a <TriggerFx+0x6c>
    7916:	11 e0       	ldi	r17, 0x01	; 1
    7918:	01 c0       	rjmp	.+2      	; 0x791c <TriggerFx+0x6e>
    791a:	12 e0       	ldi	r17, 0x02	; 2
		}
	}				
	
	

	tracks[channel].patchNextDeltaTime=pgm_read_byte(pos++); //pgm_read_byte(tracks[channel].patchCommandStreamPos++);
    791c:	21 2f       	mov	r18, r17
    791e:	30 e0       	ldi	r19, 0x00	; 0
    7920:	fd 01       	movw	r30, r26
    7922:	44 91       	lpm	r20, Z+
    7924:	86 e1       	ldi	r24, 0x16	; 22
    7926:	90 e0       	ldi	r25, 0x00	; 0
    7928:	28 9f       	mul	r18, r24
    792a:	e0 01       	movw	r28, r0
    792c:	29 9f       	mul	r18, r25
    792e:	d0 0d       	add	r29, r0
    7930:	38 9f       	mul	r19, r24
    7932:	d0 0d       	add	r29, r0
    7934:	11 24       	eor	r1, r1
    7936:	cd 5c       	subi	r28, 0xCD	; 205
    7938:	d4 4f       	sbci	r29, 0xF4	; 244
    793a:	4f 87       	std	Y+15, r20	; 0x0f
	tracks[channel].patchCommandStreamPos=pos;
    793c:	11 96       	adiw	r26, 0x01	; 1
    793e:	bd 8b       	std	Y+21, r27	; 0x15
    7940:	ac 8b       	std	Y+20, r26	; 0x14
	tracks[channel].patchCurrDeltaTime=0;		
    7942:	18 8a       	std	Y+16, r1	; 0x10
	tracks[channel].note=80; //default 
    7944:	8b e0       	ldi	r24, 0x0B	; 11
    7946:	90 e0       	ldi	r25, 0x00	; 0
    7948:	28 9f       	mul	r18, r24
    794a:	f0 01       	movw	r30, r0
    794c:	29 9f       	mul	r18, r25
    794e:	f0 0d       	add	r31, r0
    7950:	38 9f       	mul	r19, r24
    7952:	f0 0d       	add	r31, r0
    7954:	11 24       	eor	r1, r1
    7956:	ee 0f       	add	r30, r30
    7958:	ff 1f       	adc	r31, r31
    795a:	eb 5c       	subi	r30, 0xCB	; 203
    795c:	f4 4f       	sbci	r31, 0xF4	; 244
    795e:	80 e5       	ldi	r24, 0x50	; 80
    7960:	80 83       	st	Z, r24
	tracks[channel].noteVol=volume;
    7962:	68 87       	std	Y+8, r22	; 0x08
	tracks[channel].envelopeVol=0xff;
    7964:	8f ef       	ldi	r24, 0xFF	; 255
    7966:	89 87       	std	Y+9, r24	; 0x09
	tracks[channel].envelopeStep=0; 
    7968:	1a 86       	std	Y+10, r1	; 0x0a
	tracks[channel].patchEnvelopeHold=false;
    796a:	1b 8a       	std	Y+19, r1	; 0x13
	tracks[channel].patchPlayingTime=0;
    796c:	19 8a       	std	Y+17, r1	; 0x11
	tracks[channel].patchPlaying=true;	
    796e:	21 e0       	ldi	r18, 0x01	; 1
    7970:	2b 87       	std	Y+11, r18	; 0x0b
	tracks[channel].patchWave=0;
    7972:	1a 8a       	std	Y+18, r1	; 0x12
	tracks[channel].fxPatchNo=patch;
    7974:	5d 87       	std	Y+13, r21	; 0x0d
	tracks[channel].priority=1;	
    7976:	29 83       	std	Y+1, r18	; 0x01
	tracks[channel].tremoloLevel=0;
    7978:	1c 82       	std	Y+4, r1	; 0x04
	tracks[channel].expressionVol=DEFAULT_EXPRESSION_VOL;
    797a:	8e 83       	std	Y+6, r24	; 0x06

	#if MIXER_CHAN4_TYPE == 0
		if(channel==3){
    797c:	13 30       	cpi	r17, 0x03	; 3
    797e:	49 f4       	brne	.+18     	; 0x7992 <TriggerFx+0xe4>
			mixer.channels.type.noise.barrel=0x0101;				
    7980:	81 e0       	ldi	r24, 0x01	; 1
    7982:	91 e0       	ldi	r25, 0x01	; 1
    7984:	90 93 13 0b 	sts	0x0B13, r25
    7988:	80 93 12 0b 	sts	0x0B12, r24
			mixer.channels.type.noise.params=1; //default 
    798c:	20 93 11 0b 	sts	0x0B11, r18
    7990:	08 c0       	rjmp	.+16     	; 0x79a2 <TriggerFx+0xf4>
		}else{
			SetMixerNote(channel,tracks[channel].note);
    7992:	60 e5       	ldi	r22, 0x50	; 80
    7994:	81 2f       	mov	r24, r17
    7996:	0e 94 80 3d 	call	0x7b00	; 0x7b00 <SetMixerNote>
			SetMixerWave(channel,tracks[channel].patchWave);
    799a:	6a 89       	ldd	r22, Y+18	; 0x12
    799c:	81 2f       	mov	r24, r17
    799e:	0e 94 9f 3d 	call	0x7b3e	; 0x7b3e <SetMixerWave>

		SetMixerNote(channel,tracks[channel].note);
		
	#endif

}
    79a2:	df 91       	pop	r29
    79a4:	cf 91       	pop	r28
    79a6:	1f 91       	pop	r17
    79a8:	08 95       	ret

000079aa <PatchCommand08>:

/*
* Command 08: Set Note/Pitch
*/

void PatchCommand08(unsigned char track, char param){
    79aa:	ff 92       	push	r15
    79ac:	0f 93       	push	r16
    79ae:	1f 93       	push	r17
    79b0:	08 2f       	mov	r16, r24
    79b2:	f6 2e       	mov	r15, r22
	SetMixerNote(track,param);
    79b4:	0e 94 80 3d 	call	0x7b00	; 0x7b00 <SetMixerNote>
	tracks[track].note=param;
    79b8:	10 e0       	ldi	r17, 0x00	; 0
    79ba:	8b e0       	ldi	r24, 0x0B	; 11
    79bc:	90 e0       	ldi	r25, 0x00	; 0
    79be:	08 9f       	mul	r16, r24
    79c0:	f0 01       	movw	r30, r0
    79c2:	09 9f       	mul	r16, r25
    79c4:	f0 0d       	add	r31, r0
    79c6:	18 9f       	mul	r17, r24
    79c8:	f0 0d       	add	r31, r0
    79ca:	11 24       	eor	r1, r1
    79cc:	ee 0f       	add	r30, r30
    79ce:	ff 1f       	adc	r31, r31
    79d0:	eb 5c       	subi	r30, 0xCB	; 203
    79d2:	f4 4f       	sbci	r31, 0xF4	; 244
    79d4:	f0 82       	st	Z, r15
}
    79d6:	1f 91       	pop	r17
    79d8:	0f 91       	pop	r16
    79da:	ff 90       	pop	r15
    79dc:	08 95       	ret

000079de <PatchCommand04>:
	tracks[track].note+=param;
	SetMixerNote(track,tracks[track].note);
}/*
* Command 04: Note down * param
*/
void PatchCommand04(unsigned char track, char param){
    79de:	96 2f       	mov	r25, r22
	tracks[track].note-=param;
    79e0:	48 2f       	mov	r20, r24
    79e2:	50 e0       	ldi	r21, 0x00	; 0
    79e4:	2b e0       	ldi	r18, 0x0B	; 11
    79e6:	30 e0       	ldi	r19, 0x00	; 0
    79e8:	42 9f       	mul	r20, r18
    79ea:	f0 01       	movw	r30, r0
    79ec:	43 9f       	mul	r20, r19
    79ee:	f0 0d       	add	r31, r0
    79f0:	52 9f       	mul	r21, r18
    79f2:	f0 0d       	add	r31, r0
    79f4:	11 24       	eor	r1, r1
    79f6:	ee 0f       	add	r30, r30
    79f8:	ff 1f       	adc	r31, r31
    79fa:	eb 5c       	subi	r30, 0xCB	; 203
    79fc:	f4 4f       	sbci	r31, 0xF4	; 244
    79fe:	60 81       	ld	r22, Z
    7a00:	69 1b       	sub	r22, r25
    7a02:	60 83       	st	Z, r22
	SetMixerNote(track,tracks[track].note);
    7a04:	0e 94 80 3d 	call	0x7b00	; 0x7b00 <SetMixerNote>
}
    7a08:	08 95       	ret

00007a0a <PatchCommand03>:
	SetMixerWave(track,param);
}
/*
* Command 03: Note up * param
*/
void PatchCommand03(unsigned char track, char param){
    7a0a:	48 2f       	mov	r20, r24
    7a0c:	50 e0       	ldi	r21, 0x00	; 0
    7a0e:	2b e0       	ldi	r18, 0x0B	; 11
    7a10:	30 e0       	ldi	r19, 0x00	; 0
    7a12:	42 9f       	mul	r20, r18
    7a14:	f0 01       	movw	r30, r0
    7a16:	43 9f       	mul	r20, r19
    7a18:	f0 0d       	add	r31, r0
    7a1a:	52 9f       	mul	r21, r18
    7a1c:	f0 0d       	add	r31, r0
    7a1e:	11 24       	eor	r1, r1
    7a20:	ee 0f       	add	r30, r30
    7a22:	ff 1f       	adc	r31, r31
    7a24:	eb 5c       	subi	r30, 0xCB	; 203
    7a26:	f4 4f       	sbci	r31, 0xF4	; 244
    7a28:	90 81       	ld	r25, Z
    7a2a:	69 0f       	add	r22, r25
    7a2c:	60 83       	st	Z, r22
	tracks[track].note+=param;
	SetMixerNote(track,tracks[track].note);
    7a2e:	0e 94 80 3d 	call	0x7b00	; 0x7b00 <SetMixerNote>
}/*
    7a32:	08 95       	ret
	...

00007b00 <SetMixerNote>:
    7b00:	99 27       	eor	r25, r25
    7b02:	77 27       	eor	r23, r23
    7b04:	83 30       	cpi	r24, 0x03	; 3
    7b06:	08 f0       	brcs	.+2      	; 0x7b0a <set_note_waves>
    7b08:	08 95       	ret

00007b0a <set_note_waves>:
    7b0a:	e0 e0       	ldi	r30, 0x00	; 0
    7b0c:	f8 e8       	ldi	r31, 0x88	; 136
    7b0e:	66 0f       	add	r22, r22
    7b10:	77 1f       	adc	r23, r23
    7b12:	e6 0f       	add	r30, r22
    7b14:	f7 1f       	adc	r31, r23
    7b16:	a5 91       	lpm	r26, Z+
    7b18:	b4 91       	lpm	r27, Z+
    7b1a:	e2 ef       	ldi	r30, 0xF2	; 242
    7b1c:	fa e0       	ldi	r31, 0x0A	; 10
    7b1e:	2a e0       	ldi	r18, 0x0A	; 10
    7b20:	28 9f       	mul	r18, r24
    7b22:	e0 0d       	add	r30, r0
    7b24:	f1 1d       	adc	r31, r1
    7b26:	a1 83       	std	Z+1, r26	; 0x01
    7b28:	b2 83       	std	Z+2, r27	; 0x02
    7b2a:	11 24       	eor	r1, r1
    7b2c:	08 95       	ret

00007b2e <SetMixerNoiseParams>:
    7b2e:	90 91 11 0b 	lds	r25, 0x0B11
    7b32:	91 70       	andi	r25, 0x01	; 1
    7b34:	88 0f       	add	r24, r24
    7b36:	89 2b       	or	r24, r25
    7b38:	80 93 11 0b 	sts	0x0B11, r24
    7b3c:	08 95       	ret

00007b3e <SetMixerWave>:
    7b3e:	99 27       	eor	r25, r25
    7b40:	77 27       	eor	r23, r23
    7b42:	e2 ef       	ldi	r30, 0xF2	; 242
    7b44:	fa e0       	ldi	r31, 0x0A	; 10
    7b46:	2a e0       	ldi	r18, 0x0A	; 10
    7b48:	28 9f       	mul	r18, r24
    7b4a:	e0 0d       	add	r30, r0
    7b4c:	f1 1d       	adc	r31, r1
    7b4e:	6e 3f       	cpi	r22, 0xFE	; 254
    7b50:	31 f4       	brne	.+12     	; 0x7b5e <smw1>
    7b52:	60 91 11 0b 	lds	r22, 0x0B11
    7b56:	6e 7f       	andi	r22, 0xFE	; 254
    7b58:	60 93 11 0b 	sts	0x0B11, r22
    7b5c:	0b c0       	rjmp	.+22     	; 0x7b74 <esmw>

00007b5e <smw1>:
    7b5e:	6f 3f       	cpi	r22, 0xFF	; 255
    7b60:	31 f4       	brne	.+12     	; 0x7b6e <smw2>
    7b62:	60 91 11 0b 	lds	r22, 0x0B11
    7b66:	6e 6f       	ori	r22, 0xFE	; 254
    7b68:	60 93 11 0b 	sts	0x0B11, r22
    7b6c:	03 c0       	rjmp	.+6      	; 0x7b74 <esmw>

00007b6e <smw2>:
    7b6e:	7e e7       	ldi	r23, 0x7E	; 126
    7b70:	76 0f       	add	r23, r22
    7b72:	75 83       	std	Z+5, r23	; 0x05

00007b74 <esmw>:
    7b74:	11 24       	eor	r1, r1
    7b76:	08 95       	ret

00007b78 <SetMixerVolume>:
    7b78:	99 27       	eor	r25, r25
    7b7a:	77 27       	eor	r23, r23
    7b7c:	e2 ef       	ldi	r30, 0xF2	; 242
    7b7e:	fa e0       	ldi	r31, 0x0A	; 10
    7b80:	2a e0       	ldi	r18, 0x0A	; 10
    7b82:	28 9f       	mul	r18, r24
    7b84:	e0 0d       	add	r30, r0
    7b86:	f1 1d       	adc	r31, r1
    7b88:	60 83       	st	Z, r22
    7b8a:	11 24       	eor	r1, r1
    7b8c:	08 95       	ret

00007b8e <MixSound>:
    7b8e:	2f 93       	push	r18
    7b90:	3f 93       	push	r19
    7b92:	4f 93       	push	r20
    7b94:	5f 93       	push	r21
    7b96:	6f 93       	push	r22
    7b98:	7f 93       	push	r23
    7b9a:	8f 93       	push	r24
    7b9c:	9f 93       	push	r25
    7b9e:	af 93       	push	r26
    7ba0:	bf 93       	push	r27
    7ba2:	78 94       	sei
    7ba4:	11 24       	eor	r1, r1
    7ba6:	0e 94 fe 46 	call	0x8dfc	; 0x8dfc <ProcessSprites>
    7baa:	0e 94 ff 37 	call	0x6ffe	; 0x6ffe <ReadControllers>
    7bae:	0e 94 ff 39 	call	0x73fe	; 0x73fe <ProcessMusic>
    7bb2:	2f 92       	push	r2
    7bb4:	3f 92       	push	r3
    7bb6:	4f 92       	push	r4
    7bb8:	5f 92       	push	r5
    7bba:	6f 92       	push	r6
    7bbc:	7f 92       	push	r7
    7bbe:	8f 92       	push	r8
    7bc0:	9f 92       	push	r9
    7bc2:	af 92       	push	r10
    7bc4:	bf 92       	push	r11
    7bc6:	cf 92       	push	r12
    7bc8:	df 92       	push	r13
    7bca:	ef 92       	push	r14
    7bcc:	ff 92       	push	r15
    7bce:	0f 93       	push	r16
    7bd0:	1f 93       	push	r17
    7bd2:	cf 93       	push	r28
    7bd4:	df 93       	push	r29
    7bd6:	00 90 ef 0a 	lds	r0, 0x0AEF
    7bda:	00 20       	and	r0, r0
    7bdc:	19 f4       	brne	.+6      	; 0x7be4 <set_hi_bank>
    7bde:	a1 ee       	ldi	r26, 0xE1	; 225
    7be0:	b8 e0       	ldi	r27, 0x08	; 8
    7be2:	02 c0       	rjmp	.+4      	; 0x7be8 <end_set_bank>

00007be4 <set_hi_bank>:
    7be4:	a7 ee       	ldi	r26, 0xE7	; 231
    7be6:	b9 e0       	ldi	r27, 0x09	; 9

00007be8 <end_set_bank>:
    7be8:	01 e0       	ldi	r16, 0x01	; 1
    7bea:	00 26       	eor	r0, r16
    7bec:	00 92 ef 0a 	sts	0x0AEF, r0
    7bf0:	02 e0       	ldi	r16, 0x02	; 2
    7bf2:	00 93 f0 0a 	sts	0x0AF0, r16
    7bf6:	20 90 f3 0a 	lds	r2, 0x0AF3
    7bfa:	30 90 f4 0a 	lds	r3, 0x0AF4
    7bfe:	40 90 f6 0a 	lds	r4, 0x0AF6
    7c02:	50 90 f7 0a 	lds	r5, 0x0AF7
    7c06:	60 90 f5 0a 	lds	r6, 0x0AF5
    7c0a:	10 91 f2 0a 	lds	r17, 0x0AF2
    7c0e:	70 90 fd 0a 	lds	r7, 0x0AFD
    7c12:	80 90 fe 0a 	lds	r8, 0x0AFE
    7c16:	90 90 ff 0a 	lds	r9, 0x0AFF
    7c1a:	a0 90 00 0b 	lds	r10, 0x0B00
    7c1e:	b0 90 01 0b 	lds	r11, 0x0B01
    7c22:	20 91 fc 0a 	lds	r18, 0x0AFC
    7c26:	c0 90 07 0b 	lds	r12, 0x0B07
    7c2a:	d0 90 08 0b 	lds	r13, 0x0B08
    7c2e:	e0 90 0a 0b 	lds	r14, 0x0B0A
    7c32:	f0 90 0b 0b 	lds	r15, 0x0B0B
    7c36:	00 91 09 0b 	lds	r16, 0x0B09
    7c3a:	30 91 06 0b 	lds	r19, 0x0B06
    7c3e:	9f ef       	ldi	r25, 0xFF	; 255

00007c40 <mix_loop>:
    7c40:	62 0c       	add	r6, r2
    7c42:	43 1c       	adc	r4, r3
    7c44:	f2 01       	movw	r30, r4
    7c46:	44 91       	lpm	r20, Z+
    7c48:	41 03       	mulsu	r20, r17
    7c4a:	00 24       	eor	r0, r0
    7c4c:	00 08       	sbc	r0, r0
    7c4e:	c1 2d       	mov	r28, r1
    7c50:	d0 2d       	mov	r29, r0
    7c52:	97 0c       	add	r9, r7
    7c54:	a8 1c       	adc	r10, r8
    7c56:	f5 01       	movw	r30, r10
    7c58:	44 91       	lpm	r20, Z+
    7c5a:	42 03       	mulsu	r20, r18
    7c5c:	00 24       	eor	r0, r0
    7c5e:	00 08       	sbc	r0, r0
    7c60:	c1 0d       	add	r28, r1
    7c62:	d0 1d       	adc	r29, r0
    7c64:	0c 0d       	add	r16, r12
    7c66:	ed 1c       	adc	r14, r13
    7c68:	f7 01       	movw	r30, r14
    7c6a:	44 91       	lpm	r20, Z+
    7c6c:	43 03       	mulsu	r20, r19
    7c6e:	00 24       	eor	r0, r0
    7c70:	00 08       	sbc	r0, r0
    7c72:	c1 0d       	add	r28, r1
    7c74:	d0 1d       	adc	r29, r0
    7c76:	00 24       	eor	r0, r0
    7c78:	c0 38       	cpi	r28, 0x80	; 128
    7c7a:	d0 05       	cpc	r29, r0
    7c7c:	0c f0       	brlt	.+2      	; 0x7c80 <mix_loop+0x40>
    7c7e:	cf e7       	ldi	r28, 0x7F	; 127
    7c80:	0a 94       	dec	r0
    7c82:	c0 38       	cpi	r28, 0x80	; 128
    7c84:	d0 05       	cpc	r29, r0
    7c86:	0c f4       	brge	.+2      	; 0x7c8a <mix_loop+0x4a>
    7c88:	c0 e8       	ldi	r28, 0x80	; 128
    7c8a:	c0 58       	subi	r28, 0x80	; 128
    7c8c:	cd 93       	st	X+, r28
    7c8e:	9a 95       	dec	r25
    7c90:	09 f0       	breq	.+2      	; 0x7c94 <mix_loop+0x54>
    7c92:	d6 cf       	rjmp	.-84     	; 0x7c40 <mix_loop>
    7c94:	40 91 f0 0a 	lds	r20, 0x0AF0
    7c98:	4a 95       	dec	r20
    7c9a:	40 93 f0 0a 	sts	0x0AF0, r20
    7c9e:	97 e0       	ldi	r25, 0x07	; 7
    7ca0:	09 f0       	breq	.+2      	; 0x7ca4 <mix_loop+0x64>
    7ca2:	ce cf       	rjmp	.-100    	; 0x7c40 <mix_loop>
    7ca4:	60 92 f5 0a 	sts	0x0AF5, r6
    7ca8:	40 92 f6 0a 	sts	0x0AF6, r4
    7cac:	90 92 ff 0a 	sts	0x0AFF, r9
    7cb0:	a0 92 00 0b 	sts	0x0B00, r10
    7cb4:	00 93 09 0b 	sts	0x0B09, r16
    7cb8:	e0 92 0a 0b 	sts	0x0B0A, r14
    7cbc:	60 93 12 0b 	sts	0x0B12, r22
    7cc0:	70 93 13 0b 	sts	0x0B13, r23
    7cc4:	80 93 14 0b 	sts	0x0B14, r24
    7cc8:	df 91       	pop	r29
    7cca:	cf 91       	pop	r28
    7ccc:	1f 91       	pop	r17
    7cce:	0f 91       	pop	r16
    7cd0:	ff 90       	pop	r15
    7cd2:	ef 90       	pop	r14
    7cd4:	df 90       	pop	r13
    7cd6:	cf 90       	pop	r12
    7cd8:	bf 90       	pop	r11
    7cda:	af 90       	pop	r10
    7cdc:	9f 90       	pop	r9
    7cde:	8f 90       	pop	r8
    7ce0:	7f 90       	pop	r7
    7ce2:	6f 90       	pop	r6
    7ce4:	5f 90       	pop	r5
    7ce6:	4f 90       	pop	r4
    7ce8:	3f 90       	pop	r3
    7cea:	2f 90       	pop	r2
    7cec:	bf 91       	pop	r27
    7cee:	af 91       	pop	r26
    7cf0:	9f 91       	pop	r25
    7cf2:	8f 91       	pop	r24
    7cf4:	7f 91       	pop	r23
    7cf6:	6f 91       	pop	r22
    7cf8:	5f 91       	pop	r21
    7cfa:	4f 91       	pop	r20
    7cfc:	3f 91       	pop	r19
    7cfe:	2f 91       	pop	r18
    7d00:	08 95       	ret

00007d02 <update_sound_buffer>:
    7d02:	0c 94 83 3e 	jmp	0x7d06	; 0x7d06 <update_sound_buffer+0x4>
    7d06:	0c 94 85 3e 	jmp	0x7d0a	; 0x7d0a <update_sound_buffer_2b>

00007d0a <update_sound_buffer_2b>:
    7d0a:	0f 93       	push	r16
    7d0c:	1f 93       	push	r17
    7d0e:	2a bd       	out	0x2a, r18	; 42
    7d10:	e0 91 ed 0a 	lds	r30, 0x0AED
    7d14:	f0 91 ee 0a 	lds	r31, 0x0AEE
    7d18:	01 91       	ld	r16, Z+
    7d1a:	00 00       	nop
    7d1c:	00 93 b3 00 	sts	0x00B3, r16
    7d20:	0a e0       	ldi	r16, 0x0A	; 10
    7d22:	ed 3e       	cpi	r30, 0xED	; 237
    7d24:	f0 07       	cpc	r31, r16
    7d26:	10 f4       	brcc	.+4      	; 0x7d2c <s1>
    7d28:	00 00       	nop
	...

00007d2c <s1>:
    7d2c:	10 f0       	brcs	.+4      	; 0x7d32 <s2>
    7d2e:	e1 ee       	ldi	r30, 0xE1	; 225
    7d30:	f8 e0       	ldi	r31, 0x08	; 8

00007d32 <s2>:
    7d32:	e0 93 ed 0a 	sts	0x0AED, r30
    7d36:	f0 93 ee 0a 	sts	0x0AEE, r31
    7d3a:	c8 95       	lpm
    7d3c:	c8 95       	lpm
    7d3e:	c8 95       	lpm
    7d40:	c8 95       	lpm
    7d42:	c8 95       	lpm
    7d44:	c8 95       	lpm
    7d46:	00 00       	nop
    7d48:	00 00       	nop
    7d4a:	00 00       	nop
    7d4c:	2a b5       	in	r18, 0x2a	; 42
    7d4e:	1f 91       	pop	r17
    7d50:	0f 91       	pop	r16
    7d52:	08 95       	ret

00007d54 <update_sound_buffer_2>:
    7d54:	00 00       	nop
    7d56:	e0 91 b9 08 	lds	r30, 0x08B9
    7d5a:	e0 ff       	sbrs	r30, 0
    7d5c:	d6 cf       	rjmp	.-84     	; 0x7d0a <update_sound_buffer_2b>
    7d5e:	e1 e1       	ldi	r30, 0x11	; 17

00007d60 <usb2>:
    7d60:	ea 95       	dec	r30
    7d62:	f1 f7       	brne	.-4      	; 0x7d60 <usb2>
    7d64:	00 00       	nop
    7d66:	00 00       	nop
    7d68:	08 95       	ret
	...

00007e00 <waves>:
    7e00:	00 03       	mulsu	r16, r16
    7e02:	06 09       	sbc	r16, r6
    7e04:	0c 10       	cpse	r0, r12
    7e06:	13 16       	cp	r1, r19
    7e08:	19 1c       	adc	r1, r9
    7e0a:	1f 22       	and	r1, r31
    7e0c:	25 28       	or	r2, r5
    7e0e:	2b 2e       	mov	r2, r27
    7e10:	31 33       	cpi	r19, 0x31	; 49
    7e12:	36 39       	cpi	r19, 0x96	; 150
    7e14:	3c 3f       	cpi	r19, 0xFC	; 252
    7e16:	41 44       	sbci	r20, 0x41	; 65
    7e18:	47 49       	sbci	r20, 0x97	; 151
    7e1a:	4c 4e       	sbci	r20, 0xEC	; 236
    7e1c:	51 53       	subi	r21, 0x31	; 49
    7e1e:	55 58       	subi	r21, 0x85	; 133
    7e20:	5a 5c       	subi	r21, 0xCA	; 202
    7e22:	5e 60       	ori	r21, 0x0E	; 14
    7e24:	62 64       	ori	r22, 0x42	; 66
    7e26:	66 68       	ori	r22, 0x86	; 134
    7e28:	6a 6b       	ori	r22, 0xBA	; 186
    7e2a:	6d 6f       	ori	r22, 0xFD	; 253
    7e2c:	70 71       	andi	r23, 0x10	; 16
    7e2e:	73 74       	andi	r23, 0x43	; 67
    7e30:	75 76       	andi	r23, 0x65	; 101
    7e32:	78 79       	andi	r23, 0x98	; 152
    7e34:	7a 7a       	andi	r23, 0xAA	; 170
    7e36:	7b 7c       	andi	r23, 0xCB	; 203
    7e38:	7d 7d       	andi	r23, 0xDD	; 221
    7e3a:	7e 7e       	andi	r23, 0xEE	; 238
    7e3c:	7e 7f       	andi	r23, 0xFE	; 254
    7e3e:	7f 7f       	andi	r23, 0xFF	; 255
    7e40:	7f 7f       	andi	r23, 0xFF	; 255
    7e42:	7f 7f       	andi	r23, 0xFF	; 255
    7e44:	7e 7e       	andi	r23, 0xEE	; 238
    7e46:	7e 7d       	andi	r23, 0xDE	; 222
    7e48:	7d 7c       	andi	r23, 0xCD	; 205
    7e4a:	7b 7a       	andi	r23, 0xAB	; 171
    7e4c:	7a 79       	andi	r23, 0x9A	; 154
    7e4e:	78 76       	andi	r23, 0x68	; 104
    7e50:	75 74       	andi	r23, 0x45	; 69
    7e52:	73 71       	andi	r23, 0x13	; 19
    7e54:	70 6f       	ori	r23, 0xF0	; 240
    7e56:	6d 6b       	ori	r22, 0xBD	; 189
    7e58:	6a 68       	ori	r22, 0x8A	; 138
    7e5a:	66 64       	ori	r22, 0x46	; 70
    7e5c:	62 60       	ori	r22, 0x02	; 2
    7e5e:	5e 5c       	subi	r21, 0xCE	; 206
    7e60:	5a 58       	subi	r21, 0x8A	; 138
    7e62:	55 53       	subi	r21, 0x35	; 53
    7e64:	51 4e       	sbci	r21, 0xE1	; 225
    7e66:	4c 49       	sbci	r20, 0x9C	; 156
    7e68:	47 44       	sbci	r20, 0x47	; 71
    7e6a:	41 3f       	cpi	r20, 0xF1	; 241
    7e6c:	3c 39       	cpi	r19, 0x9C	; 156
    7e6e:	36 33       	cpi	r19, 0x36	; 54
    7e70:	31 2e       	mov	r3, r17
    7e72:	2b 28       	or	r2, r11
    7e74:	25 22       	and	r2, r21
    7e76:	1f 1c       	adc	r1, r15
    7e78:	19 16       	cp	r1, r25
    7e7a:	13 10       	cpse	r1, r3
    7e7c:	0c 09       	sbc	r16, r12
    7e7e:	06 03       	mulsu	r16, r22
    7e80:	00 fd       	sbrc	r16, 0
    7e82:	fa f7       	brpl	.-2      	; 0x7e82 <waves+0x82>
    7e84:	f4 f0       	brlt	.+60     	; 0x7ec2 <waves+0xc2>
    7e86:	ed ea       	ldi	r30, 0xAD	; 173
    7e88:	e7 e4       	ldi	r30, 0x47	; 71
    7e8a:	e1 de       	rcall	.-574    	; 0x7c4e <mix_loop+0xe>
    7e8c:	db d8       	rcall	.-3658   	; 0x7044 <ReadControllers+0x46>
    7e8e:	d5 d2       	rcall	.+1450   	; 0x843a <waves+0x63a>
    7e90:	cf cd       	rjmp	.-1122   	; 0x7a30 <PatchCommand03+0x26>
    7e92:	ca c7       	rjmp	.+3988   	; 0x8e28 <ProcessSprites+0x2c>
    7e94:	c4 c1       	rjmp	.+904    	; 0x821e <waves+0x41e>
    7e96:	bf bc       	out	0x2f, r11	; 47
    7e98:	b9 b7       	in	r27, 0x39	; 57
    7e9a:	b4 b2       	in	r11, 0x14	; 20
    7e9c:	af ad       	ldd	r26, Y+63	; 0x3f
    7e9e:	ab a8       	ldd	r10, Y+51	; 0x33
    7ea0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    7ea2:	a2 a0       	ldd	r10, Z+34	; 0x22
    7ea4:	9e 9c       	mul	r9, r14
    7ea6:	9a 98       	cbi	0x13, 2	; 19
    7ea8:	96 95       	lsr	r25
    7eaa:	93 91       	.word	0x9193	; ????
    7eac:	90 8f       	std	Z+24, r25	; 0x18
    7eae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    7eb0:	8b 8a       	std	Y+19, r8	; 0x13
    7eb2:	88 87       	std	Y+8, r24	; 0x08
    7eb4:	86 86       	std	Z+14, r8	; 0x0e
    7eb6:	85 84       	ldd	r8, Z+13	; 0x0d
    7eb8:	83 83       	std	Z+3, r24	; 0x03
    7eba:	82 82       	std	Z+2, r8	; 0x02
    7ebc:	82 81       	ldd	r24, Z+2	; 0x02
    7ebe:	81 81       	ldd	r24, Z+1	; 0x01
    7ec0:	81 81       	ldd	r24, Z+1	; 0x01
    7ec2:	81 81       	ldd	r24, Z+1	; 0x01
    7ec4:	82 82       	std	Z+2, r8	; 0x02
    7ec6:	82 83       	std	Z+2, r24	; 0x02
    7ec8:	83 84       	ldd	r8, Z+11	; 0x0b
    7eca:	85 86       	std	Z+13, r8	; 0x0d
    7ecc:	86 87       	std	Z+14, r24	; 0x0e
    7ece:	88 8a       	std	Y+16, r8	; 0x10
    7ed0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    7ed2:	8d 8f       	std	Y+29, r24	; 0x1d
    7ed4:	90 91 93 95 	lds	r25, 0x9593
    7ed8:	96 98       	cbi	0x12, 6	; 18
    7eda:	9a 9c       	mul	r9, r10
    7edc:	9e a0       	ldd	r9, Y+38	; 0x26
    7ede:	a2 a4       	ldd	r10, Z+42	; 0x2a
    7ee0:	a6 a8       	ldd	r10, Z+54	; 0x36
    7ee2:	ab ad       	ldd	r26, Y+59	; 0x3b
    7ee4:	af b2       	in	r10, 0x1f	; 31
    7ee6:	b4 b7       	in	r27, 0x34	; 52
    7ee8:	b9 bc       	out	0x29, r11	; 41
    7eea:	bf c1       	rjmp	.+894    	; 0x826a <waves+0x46a>
    7eec:	c4 c7       	rjmp	.+3976   	; 0x8e76 <ProcessSprites+0x7a>
    7eee:	ca cd       	rjmp	.-1132   	; 0x7a84 <PatchCommand03+0x7a>
    7ef0:	cf d2       	rcall	.+1438   	; 0x8490 <waves+0x690>
    7ef2:	d5 d8       	rcall	.-3670   	; 0x709e <PatchCommand01+0x4>
    7ef4:	db de       	rcall	.-586    	; 0x7cac <mix_loop+0x6c>
    7ef6:	e1 e4       	ldi	r30, 0x41	; 65
    7ef8:	e7 ea       	ldi	r30, 0xA7	; 167
    7efa:	ed f0       	brhs	.+58     	; 0x7f36 <waves+0x136>
    7efc:	f4 f7       	brge	.-4      	; 0x7efa <waves+0xfa>
    7efe:	fa fd       	.word	0xfdfa	; ????
    7f00:	80 81       	ld	r24, Z
    7f02:	82 83       	std	Z+2, r24	; 0x02
    7f04:	84 85       	ldd	r24, Z+12	; 0x0c
    7f06:	86 87       	std	Z+14, r24	; 0x0e
    7f08:	88 89       	ldd	r24, Y+16	; 0x10
    7f0a:	8a 8b       	std	Y+18, r24	; 0x12
    7f0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    7f0e:	8e 8f       	std	Y+30, r24	; 0x1e
    7f10:	90 91 92 93 	lds	r25, 0x9392
    7f14:	94 95       	.word	0x9594	; ????
    7f16:	96 97       	sbiw	r26, 0x26	; 38
    7f18:	98 99       	sbic	0x13, 0	; 19
    7f1a:	9a 9b       	sbis	0x13, 2	; 19
    7f1c:	9c 9d       	mul	r25, r12
    7f1e:	9e 9f       	mul	r25, r30
    7f20:	a0 a1       	ldd	r26, Z+32	; 0x20
    7f22:	a2 a3       	std	Z+34, r26	; 0x22
    7f24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    7f26:	a6 a7       	std	Z+46, r26	; 0x2e
    7f28:	a8 a9       	ldd	r26, Y+48	; 0x30
    7f2a:	aa ab       	std	Y+50, r26	; 0x32
    7f2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    7f2e:	ae af       	std	Y+62, r26	; 0x3e
    7f30:	b0 b1       	in	r27, 0x00	; 0
    7f32:	b2 b3       	in	r27, 0x12	; 18
    7f34:	b4 b5       	in	r27, 0x24	; 36
    7f36:	b6 b7       	in	r27, 0x36	; 54
    7f38:	b8 b9       	out	0x08, r27	; 8
    7f3a:	ba bb       	out	0x1a, r27	; 26
    7f3c:	bc bd       	out	0x2c, r27	; 44
    7f3e:	be bf       	out	0x3e, r27	; 62
    7f40:	c0 c1       	rjmp	.+896    	; 0x82c2 <waves+0x4c2>
    7f42:	c2 c3       	rjmp	.+1924   	; 0x86c8 <waves+0x8c8>
    7f44:	c4 c5       	rjmp	.+2952   	; 0x8ace <Print+0x6>
    7f46:	c6 c7       	rjmp	.+3980   	; 0x8ed4 <ProcessSprites+0xd8>
    7f48:	c8 c9       	rjmp	.-3184   	; 0x72da <TriggerNote+0x7e>
    7f4a:	ca cb       	rjmp	.-2156   	; 0x76e0 <ProcessMusic+0x2e2>
    7f4c:	cc cd       	rjmp	.-1128   	; 0x7ae6 <PatchCommand03+0xdc>
    7f4e:	ce cf       	rjmp	.-100    	; 0x7eec <waves+0xec>
    7f50:	d0 d1       	rcall	.+928    	; 0x82f2 <waves+0x4f2>
    7f52:	d2 d3       	rcall	.+1956   	; 0x86f8 <waves+0x8f8>
    7f54:	d4 d5       	rcall	.+2984   	; 0x8afe <Print+0x36>
    7f56:	d6 d7       	rcall	.+4012   	; 0x8f04 <ProcessSprites+0x108>
    7f58:	d8 d9       	rcall	.-3152   	; 0x730a <TriggerNote+0xae>
    7f5a:	da db       	rcall	.-2124   	; 0x7710 <ProcessMusic+0x312>
    7f5c:	dc dd       	rcall	.-1096   	; 0x7b16 <set_note_waves+0xc>
    7f5e:	de df       	rcall	.-68     	; 0x7f1c <waves+0x11c>
    7f60:	e0 e1       	ldi	r30, 0x10	; 16
    7f62:	e2 e3       	ldi	r30, 0x32	; 50
    7f64:	e4 e5       	ldi	r30, 0x54	; 84
    7f66:	e6 e7       	ldi	r30, 0x76	; 118
    7f68:	e8 e9       	ldi	r30, 0x98	; 152
    7f6a:	ea eb       	ldi	r30, 0xBA	; 186
    7f6c:	ec ed       	ldi	r30, 0xDC	; 220
    7f6e:	ee ef       	ldi	r30, 0xFE	; 254
    7f70:	f0 f1       	brcs	.+124    	; 0x7fee <waves+0x1ee>
    7f72:	f2 f3       	brmi	.-4      	; 0x7f70 <waves+0x170>
    7f74:	f4 f5       	brge	.+124    	; 0x7ff2 <waves+0x1f2>
    7f76:	f6 f7       	brtc	.-4      	; 0x7f74 <waves+0x174>
    7f78:	f8 f9       	.word	0xf9f8	; ????
    7f7a:	fa fb       	.word	0xfbfa	; ????
    7f7c:	fc fd       	.word	0xfdfc	; ????
    7f7e:	fe ff       	.word	0xfffe	; ????
    7f80:	00 01       	movw	r0, r0
    7f82:	02 03       	mulsu	r16, r18
    7f84:	04 05       	cpc	r16, r4
    7f86:	06 07       	cpc	r16, r22
    7f88:	08 09       	sbc	r16, r8
    7f8a:	0a 0b       	sbc	r16, r26
    7f8c:	0c 0d       	add	r16, r12
    7f8e:	0e 0f       	add	r16, r30
    7f90:	10 11       	cpse	r17, r0
    7f92:	12 13       	cpse	r17, r18
    7f94:	14 15       	cp	r17, r4
    7f96:	16 17       	cp	r17, r22
    7f98:	18 19       	sub	r17, r8
    7f9a:	1a 1b       	sub	r17, r26
    7f9c:	1c 1d       	adc	r17, r12
    7f9e:	1e 1f       	adc	r17, r30
    7fa0:	20 21       	and	r18, r0
    7fa2:	22 23       	and	r18, r18
    7fa4:	24 25       	eor	r18, r4
    7fa6:	26 27       	eor	r18, r22
    7fa8:	28 29       	or	r18, r8
    7faa:	2a 2b       	or	r18, r26
    7fac:	2c 2d       	mov	r18, r12
    7fae:	2e 2f       	mov	r18, r30
    7fb0:	30 31       	cpi	r19, 0x10	; 16
    7fb2:	32 33       	cpi	r19, 0x32	; 50
    7fb4:	34 35       	cpi	r19, 0x54	; 84
    7fb6:	36 37       	cpi	r19, 0x76	; 118
    7fb8:	38 39       	cpi	r19, 0x98	; 152
    7fba:	3a 3b       	cpi	r19, 0xBA	; 186
    7fbc:	3c 3d       	cpi	r19, 0xDC	; 220
    7fbe:	3e 3f       	cpi	r19, 0xFE	; 254
    7fc0:	40 41       	sbci	r20, 0x10	; 16
    7fc2:	42 43       	sbci	r20, 0x32	; 50
    7fc4:	44 45       	sbci	r20, 0x54	; 84
    7fc6:	46 47       	sbci	r20, 0x76	; 118
    7fc8:	48 49       	sbci	r20, 0x98	; 152
    7fca:	4a 4b       	sbci	r20, 0xBA	; 186
    7fcc:	4c 4d       	sbci	r20, 0xDC	; 220
    7fce:	4e 4f       	sbci	r20, 0xFE	; 254
    7fd0:	50 51       	subi	r21, 0x10	; 16
    7fd2:	52 53       	subi	r21, 0x32	; 50
    7fd4:	54 55       	subi	r21, 0x54	; 84
    7fd6:	56 57       	subi	r21, 0x76	; 118
    7fd8:	58 59       	subi	r21, 0x98	; 152
    7fda:	5a 5b       	subi	r21, 0xBA	; 186
    7fdc:	5c 5d       	subi	r21, 0xDC	; 220
    7fde:	5e 5f       	subi	r21, 0xFE	; 254
    7fe0:	60 61       	ori	r22, 0x10	; 16
    7fe2:	62 63       	ori	r22, 0x32	; 50
    7fe4:	64 65       	ori	r22, 0x54	; 84
    7fe6:	66 67       	ori	r22, 0x76	; 118
    7fe8:	68 69       	ori	r22, 0x98	; 152
    7fea:	6a 6b       	ori	r22, 0xBA	; 186
    7fec:	6c 6d       	ori	r22, 0xDC	; 220
    7fee:	6e 6f       	ori	r22, 0xFE	; 254
    7ff0:	70 71       	andi	r23, 0x10	; 16
    7ff2:	72 73       	andi	r23, 0x32	; 50
    7ff4:	74 75       	andi	r23, 0x54	; 84
    7ff6:	76 77       	andi	r23, 0x76	; 118
    7ff8:	78 79       	andi	r23, 0x98	; 152
    7ffa:	7a 7b       	andi	r23, 0xBA	; 186
    7ffc:	7c 7d       	andi	r23, 0xDC	; 220
    7ffe:	7e 7f       	andi	r23, 0xFE	; 254
    8000:	00 02       	muls	r16, r16
    8002:	04 06       	cpc	r0, r20
    8004:	08 0a       	sbc	r0, r24
    8006:	0c 0e       	add	r0, r28
    8008:	10 12       	cpse	r1, r16
    800a:	14 16       	cp	r1, r20
    800c:	18 1a       	sub	r1, r24
    800e:	1c 1e       	adc	r1, r28
    8010:	20 22       	and	r2, r16
    8012:	24 26       	eor	r2, r20
    8014:	28 2a       	or	r2, r24
    8016:	2c 2e       	mov	r2, r28
    8018:	30 32       	cpi	r19, 0x20	; 32
    801a:	34 36       	cpi	r19, 0x64	; 100
    801c:	38 3a       	cpi	r19, 0xA8	; 168
    801e:	3c 3e       	cpi	r19, 0xEC	; 236
    8020:	40 42       	sbci	r20, 0x20	; 32
    8022:	44 46       	sbci	r20, 0x64	; 100
    8024:	48 4a       	sbci	r20, 0xA8	; 168
    8026:	4c 4e       	sbci	r20, 0xEC	; 236
    8028:	50 52       	subi	r21, 0x20	; 32
    802a:	54 56       	subi	r21, 0x64	; 100
    802c:	58 5a       	subi	r21, 0xA8	; 168
    802e:	5c 5e       	subi	r21, 0xEC	; 236
    8030:	60 62       	ori	r22, 0x20	; 32
    8032:	64 66       	ori	r22, 0x64	; 100
    8034:	68 6a       	ori	r22, 0xA8	; 168
    8036:	6c 6e       	ori	r22, 0xEC	; 236
    8038:	70 72       	andi	r23, 0x20	; 32
    803a:	74 76       	andi	r23, 0x64	; 100
    803c:	78 7a       	andi	r23, 0xA8	; 168
    803e:	7c 7e       	andi	r23, 0xEC	; 236
    8040:	7f 7d       	andi	r23, 0xDF	; 223
    8042:	7b 79       	andi	r23, 0x9B	; 155
    8044:	77 75       	andi	r23, 0x57	; 87
    8046:	73 71       	andi	r23, 0x13	; 19
    8048:	6f 6d       	ori	r22, 0xDF	; 223
    804a:	6b 69       	ori	r22, 0x9B	; 155
    804c:	67 65       	ori	r22, 0x57	; 87
    804e:	63 61       	ori	r22, 0x13	; 19
    8050:	5f 5d       	subi	r21, 0xDF	; 223
    8052:	5b 59       	subi	r21, 0x9B	; 155
    8054:	57 55       	subi	r21, 0x57	; 87
    8056:	53 51       	subi	r21, 0x13	; 19
    8058:	4f 4d       	sbci	r20, 0xDF	; 223
    805a:	4b 49       	sbci	r20, 0x9B	; 155
    805c:	47 45       	sbci	r20, 0x57	; 87
    805e:	43 41       	sbci	r20, 0x13	; 19
    8060:	3f 3d       	cpi	r19, 0xDF	; 223
    8062:	3b 39       	cpi	r19, 0x9B	; 155
    8064:	37 35       	cpi	r19, 0x57	; 87
    8066:	33 31       	cpi	r19, 0x13	; 19
    8068:	2f 2d       	mov	r18, r15
    806a:	2b 29       	or	r18, r11
    806c:	27 25       	eor	r18, r7
    806e:	23 21       	and	r18, r3
    8070:	1f 1d       	adc	r17, r15
    8072:	1b 19       	sub	r17, r11
    8074:	17 15       	cp	r17, r7
    8076:	13 11       	cpse	r17, r3
    8078:	0f 0d       	add	r16, r15
    807a:	0b 09       	sbc	r16, r11
    807c:	07 05       	cpc	r16, r7
    807e:	03 01       	movw	r0, r6
    8080:	ff fd       	.word	0xfdff	; ????
    8082:	fb f9       	.word	0xf9fb	; ????
    8084:	f7 f5       	brid	.+124    	; 0x8102 <waves+0x302>
    8086:	f3 f1       	brvs	.+124    	; 0x8104 <waves+0x304>
    8088:	ef ed       	ldi	r30, 0xDF	; 223
    808a:	eb e9       	ldi	r30, 0x9B	; 155
    808c:	e7 e5       	ldi	r30, 0x57	; 87
    808e:	e3 e1       	ldi	r30, 0x13	; 19
    8090:	df dd       	rcall	.-1090   	; 0x7c50 <mix_loop+0x10>
    8092:	db d9       	rcall	.-3146   	; 0x744a <ProcessMusic+0x4c>
    8094:	d7 d5       	rcall	.+2990   	; 0x8c44 <PrintByte+0x36>
    8096:	d3 d1       	rcall	.+934    	; 0x843e <waves+0x63e>
    8098:	cf cd       	rjmp	.-1122   	; 0x7c38 <end_set_bank+0x50>
    809a:	cb c9       	rjmp	.-3178   	; 0x7432 <ProcessMusic+0x34>
    809c:	c7 c5       	rjmp	.+2958   	; 0x8c2c <PrintByte+0x1e>
    809e:	c3 c1       	rjmp	.+902    	; 0x8426 <waves+0x626>
    80a0:	bf bd       	out	0x2f, r27	; 47
    80a2:	bb b9       	out	0x0b, r27	; 11
    80a4:	b7 b5       	in	r27, 0x27	; 39
    80a6:	b3 b1       	in	r27, 0x03	; 3
    80a8:	af ad       	ldd	r26, Y+63	; 0x3f
    80aa:	ab a9       	ldd	r26, Y+51	; 0x33
    80ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    80ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    80b0:	9f 9d       	mul	r25, r15
    80b2:	9b 99       	sbic	0x13, 3	; 19
    80b4:	97 95       	ror	r25
    80b6:	93 91       	.word	0x9193	; ????
    80b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    80ba:	8b 89       	ldd	r24, Y+19	; 0x13
    80bc:	87 85       	ldd	r24, Z+15	; 0x0f
    80be:	83 81       	ldd	r24, Z+3	; 0x03
    80c0:	80 82       	st	Z, r8
    80c2:	84 86       	std	Z+12, r8	; 0x0c
    80c4:	88 8a       	std	Y+16, r8	; 0x10
    80c6:	8c 8e       	std	Y+28, r8	; 0x1c
    80c8:	90 92 94 96 	sts	0x9694, r9
    80cc:	98 9a       	sbi	0x13, 0	; 19
    80ce:	9c 9e       	mul	r9, r28
    80d0:	a0 a2       	std	Z+32, r10	; 0x20
    80d2:	a4 a6       	std	Z+44, r10	; 0x2c
    80d4:	a8 aa       	std	Y+48, r10	; 0x30
    80d6:	ac ae       	std	Y+60, r10	; 0x3c
    80d8:	b0 b2       	in	r11, 0x10	; 16
    80da:	b4 b6       	in	r11, 0x34	; 52
    80dc:	b8 ba       	out	0x18, r11	; 24
    80de:	bc be       	out	0x3c, r11	; 60
    80e0:	c0 c2       	rjmp	.+1408   	; 0x8662 <waves+0x862>
    80e2:	c4 c6       	rjmp	.+3464   	; 0x8e6c <ProcessSprites+0x70>
    80e4:	c8 ca       	rjmp	.-2672   	; 0x7676 <ProcessMusic+0x278>
    80e6:	cc ce       	rjmp	.-616    	; 0x7e80 <waves+0x80>
    80e8:	d0 d2       	rcall	.+1440   	; 0x868a <waves+0x88a>
    80ea:	d4 d6       	rcall	.+3496   	; 0x8e94 <ProcessSprites+0x98>
    80ec:	d8 da       	rcall	.-2640   	; 0x769e <ProcessMusic+0x2a0>
    80ee:	dc de       	rcall	.-584    	; 0x7ea8 <waves+0xa8>
    80f0:	e0 e2       	ldi	r30, 0x20	; 32
    80f2:	e4 e6       	ldi	r30, 0x64	; 100
    80f4:	e8 ea       	ldi	r30, 0xA8	; 168
    80f6:	ec ee       	ldi	r30, 0xEC	; 236
    80f8:	f0 f2       	brcs	.-68     	; 0x80b6 <waves+0x2b6>
    80fa:	f4 f6       	brge	.-68     	; 0x80b8 <waves+0x2b8>
    80fc:	f8 fa       	.word	0xfaf8	; ????
    80fe:	fc fe       	.word	0xfefc	; ????
    8100:	7f 7f       	andi	r23, 0xFF	; 255
    8102:	7f 7f       	andi	r23, 0xFF	; 255
    8104:	7f 7f       	andi	r23, 0xFF	; 255
    8106:	7f 7f       	andi	r23, 0xFF	; 255
    8108:	7f 7f       	andi	r23, 0xFF	; 255
    810a:	7f 7f       	andi	r23, 0xFF	; 255
    810c:	7f 7f       	andi	r23, 0xFF	; 255
    810e:	7f 7f       	andi	r23, 0xFF	; 255
    8110:	7f 7f       	andi	r23, 0xFF	; 255
    8112:	7f 7f       	andi	r23, 0xFF	; 255
    8114:	7f 7f       	andi	r23, 0xFF	; 255
    8116:	7f 7f       	andi	r23, 0xFF	; 255
    8118:	7f 7f       	andi	r23, 0xFF	; 255
    811a:	7f 7f       	andi	r23, 0xFF	; 255
    811c:	7f 7f       	andi	r23, 0xFF	; 255
    811e:	7f 7f       	andi	r23, 0xFF	; 255
    8120:	7f 7f       	andi	r23, 0xFF	; 255
    8122:	7f 7f       	andi	r23, 0xFF	; 255
    8124:	7f 7f       	andi	r23, 0xFF	; 255
    8126:	7f 7f       	andi	r23, 0xFF	; 255
    8128:	7f 7f       	andi	r23, 0xFF	; 255
    812a:	7f 7f       	andi	r23, 0xFF	; 255
    812c:	7f 7f       	andi	r23, 0xFF	; 255
    812e:	7f 7f       	andi	r23, 0xFF	; 255
    8130:	7f 7f       	andi	r23, 0xFF	; 255
    8132:	7f 7f       	andi	r23, 0xFF	; 255
    8134:	7f 7f       	andi	r23, 0xFF	; 255
    8136:	7f 7f       	andi	r23, 0xFF	; 255
    8138:	7f 7f       	andi	r23, 0xFF	; 255
    813a:	7f 7f       	andi	r23, 0xFF	; 255
    813c:	7f 7f       	andi	r23, 0xFF	; 255
    813e:	7f 7f       	andi	r23, 0xFF	; 255
    8140:	80 80       	ld	r8, Z
    8142:	80 80       	ld	r8, Z
    8144:	80 80       	ld	r8, Z
    8146:	80 80       	ld	r8, Z
    8148:	80 80       	ld	r8, Z
    814a:	80 80       	ld	r8, Z
    814c:	80 80       	ld	r8, Z
    814e:	80 80       	ld	r8, Z
    8150:	80 80       	ld	r8, Z
    8152:	80 80       	ld	r8, Z
    8154:	80 80       	ld	r8, Z
    8156:	80 80       	ld	r8, Z
    8158:	80 80       	ld	r8, Z
    815a:	80 80       	ld	r8, Z
    815c:	80 80       	ld	r8, Z
    815e:	80 80       	ld	r8, Z
    8160:	80 80       	ld	r8, Z
    8162:	80 80       	ld	r8, Z
    8164:	80 80       	ld	r8, Z
    8166:	80 80       	ld	r8, Z
    8168:	80 80       	ld	r8, Z
    816a:	80 80       	ld	r8, Z
    816c:	80 80       	ld	r8, Z
    816e:	80 80       	ld	r8, Z
    8170:	80 80       	ld	r8, Z
    8172:	80 80       	ld	r8, Z
    8174:	80 80       	ld	r8, Z
    8176:	80 80       	ld	r8, Z
    8178:	80 80       	ld	r8, Z
    817a:	80 80       	ld	r8, Z
    817c:	80 80       	ld	r8, Z
    817e:	80 80       	ld	r8, Z
    8180:	80 80       	ld	r8, Z
    8182:	80 80       	ld	r8, Z
    8184:	80 80       	ld	r8, Z
    8186:	80 80       	ld	r8, Z
    8188:	80 80       	ld	r8, Z
    818a:	80 80       	ld	r8, Z
    818c:	80 80       	ld	r8, Z
    818e:	80 80       	ld	r8, Z
    8190:	80 80       	ld	r8, Z
    8192:	80 80       	ld	r8, Z
    8194:	80 80       	ld	r8, Z
    8196:	80 80       	ld	r8, Z
    8198:	80 80       	ld	r8, Z
    819a:	80 80       	ld	r8, Z
    819c:	80 80       	ld	r8, Z
    819e:	80 80       	ld	r8, Z
    81a0:	80 80       	ld	r8, Z
    81a2:	80 80       	ld	r8, Z
    81a4:	80 80       	ld	r8, Z
    81a6:	80 80       	ld	r8, Z
    81a8:	80 80       	ld	r8, Z
    81aa:	80 80       	ld	r8, Z
    81ac:	80 80       	ld	r8, Z
    81ae:	80 80       	ld	r8, Z
    81b0:	80 80       	ld	r8, Z
    81b2:	80 80       	ld	r8, Z
    81b4:	80 80       	ld	r8, Z
    81b6:	80 80       	ld	r8, Z
    81b8:	80 80       	ld	r8, Z
    81ba:	80 80       	ld	r8, Z
    81bc:	80 80       	ld	r8, Z
    81be:	80 80       	ld	r8, Z
    81c0:	80 80       	ld	r8, Z
    81c2:	80 80       	ld	r8, Z
    81c4:	80 80       	ld	r8, Z
    81c6:	80 80       	ld	r8, Z
    81c8:	80 80       	ld	r8, Z
    81ca:	80 80       	ld	r8, Z
    81cc:	80 80       	ld	r8, Z
    81ce:	80 80       	ld	r8, Z
    81d0:	80 80       	ld	r8, Z
    81d2:	80 80       	ld	r8, Z
    81d4:	80 80       	ld	r8, Z
    81d6:	80 80       	ld	r8, Z
    81d8:	80 80       	ld	r8, Z
    81da:	80 80       	ld	r8, Z
    81dc:	80 80       	ld	r8, Z
    81de:	80 80       	ld	r8, Z
    81e0:	80 80       	ld	r8, Z
    81e2:	80 80       	ld	r8, Z
    81e4:	80 80       	ld	r8, Z
    81e6:	80 80       	ld	r8, Z
    81e8:	80 80       	ld	r8, Z
    81ea:	80 80       	ld	r8, Z
    81ec:	80 80       	ld	r8, Z
    81ee:	80 80       	ld	r8, Z
    81f0:	80 80       	ld	r8, Z
    81f2:	80 80       	ld	r8, Z
    81f4:	80 80       	ld	r8, Z
    81f6:	80 80       	ld	r8, Z
    81f8:	80 80       	ld	r8, Z
    81fa:	80 80       	ld	r8, Z
    81fc:	80 80       	ld	r8, Z
    81fe:	80 80       	ld	r8, Z
    8200:	7f 7f       	andi	r23, 0xFF	; 255
    8202:	7f 7f       	andi	r23, 0xFF	; 255
    8204:	7f 7f       	andi	r23, 0xFF	; 255
    8206:	7f 7f       	andi	r23, 0xFF	; 255
    8208:	7f 7f       	andi	r23, 0xFF	; 255
    820a:	7f 7f       	andi	r23, 0xFF	; 255
    820c:	7f 7f       	andi	r23, 0xFF	; 255
    820e:	7f 7f       	andi	r23, 0xFF	; 255
    8210:	7f 7f       	andi	r23, 0xFF	; 255
    8212:	7f 7f       	andi	r23, 0xFF	; 255
    8214:	7f 7f       	andi	r23, 0xFF	; 255
    8216:	7f 7f       	andi	r23, 0xFF	; 255
    8218:	7f 7f       	andi	r23, 0xFF	; 255
    821a:	7f 7f       	andi	r23, 0xFF	; 255
    821c:	7f 7f       	andi	r23, 0xFF	; 255
    821e:	7f 7f       	andi	r23, 0xFF	; 255
    8220:	7f 7f       	andi	r23, 0xFF	; 255
    8222:	7f 7f       	andi	r23, 0xFF	; 255
    8224:	7f 7f       	andi	r23, 0xFF	; 255
    8226:	7f 7f       	andi	r23, 0xFF	; 255
    8228:	7f 7f       	andi	r23, 0xFF	; 255
    822a:	7f 7f       	andi	r23, 0xFF	; 255
    822c:	7f 7f       	andi	r23, 0xFF	; 255
    822e:	7f 7f       	andi	r23, 0xFF	; 255
    8230:	7f 7f       	andi	r23, 0xFF	; 255
    8232:	7f 7f       	andi	r23, 0xFF	; 255
    8234:	7f 7f       	andi	r23, 0xFF	; 255
    8236:	7f 7f       	andi	r23, 0xFF	; 255
    8238:	7f 7f       	andi	r23, 0xFF	; 255
    823a:	7f 7f       	andi	r23, 0xFF	; 255
    823c:	7f 7f       	andi	r23, 0xFF	; 255
    823e:	7f 7f       	andi	r23, 0xFF	; 255
    8240:	7f 7f       	andi	r23, 0xFF	; 255
    8242:	7f 7f       	andi	r23, 0xFF	; 255
    8244:	7f 7f       	andi	r23, 0xFF	; 255
    8246:	7f 7f       	andi	r23, 0xFF	; 255
    8248:	7f 7f       	andi	r23, 0xFF	; 255
    824a:	7f 7f       	andi	r23, 0xFF	; 255
    824c:	7f 7f       	andi	r23, 0xFF	; 255
    824e:	7f 7f       	andi	r23, 0xFF	; 255
    8250:	7f 7f       	andi	r23, 0xFF	; 255
    8252:	7f 7f       	andi	r23, 0xFF	; 255
    8254:	7f 7f       	andi	r23, 0xFF	; 255
    8256:	7f 7f       	andi	r23, 0xFF	; 255
    8258:	7f 7f       	andi	r23, 0xFF	; 255
    825a:	7f 7f       	andi	r23, 0xFF	; 255
    825c:	7f 7f       	andi	r23, 0xFF	; 255
    825e:	7f 7f       	andi	r23, 0xFF	; 255
    8260:	7f 7f       	andi	r23, 0xFF	; 255
    8262:	7f 7f       	andi	r23, 0xFF	; 255
    8264:	7f 7f       	andi	r23, 0xFF	; 255
    8266:	7f 7f       	andi	r23, 0xFF	; 255
    8268:	7f 7f       	andi	r23, 0xFF	; 255
    826a:	7f 7f       	andi	r23, 0xFF	; 255
    826c:	7f 7f       	andi	r23, 0xFF	; 255
    826e:	7f 7f       	andi	r23, 0xFF	; 255
    8270:	7f 7f       	andi	r23, 0xFF	; 255
    8272:	7f 7f       	andi	r23, 0xFF	; 255
    8274:	7f 7f       	andi	r23, 0xFF	; 255
    8276:	7f 7f       	andi	r23, 0xFF	; 255
    8278:	7f 7f       	andi	r23, 0xFF	; 255
    827a:	7f 7f       	andi	r23, 0xFF	; 255
    827c:	7f 7f       	andi	r23, 0xFF	; 255
    827e:	7f 7f       	andi	r23, 0xFF	; 255
    8280:	80 80       	ld	r8, Z
    8282:	80 80       	ld	r8, Z
    8284:	80 80       	ld	r8, Z
    8286:	80 80       	ld	r8, Z
    8288:	80 80       	ld	r8, Z
    828a:	80 80       	ld	r8, Z
    828c:	80 80       	ld	r8, Z
    828e:	80 80       	ld	r8, Z
    8290:	80 80       	ld	r8, Z
    8292:	80 80       	ld	r8, Z
    8294:	80 80       	ld	r8, Z
    8296:	80 80       	ld	r8, Z
    8298:	80 80       	ld	r8, Z
    829a:	80 80       	ld	r8, Z
    829c:	80 80       	ld	r8, Z
    829e:	80 80       	ld	r8, Z
    82a0:	80 80       	ld	r8, Z
    82a2:	80 80       	ld	r8, Z
    82a4:	80 80       	ld	r8, Z
    82a6:	80 80       	ld	r8, Z
    82a8:	80 80       	ld	r8, Z
    82aa:	80 80       	ld	r8, Z
    82ac:	80 80       	ld	r8, Z
    82ae:	80 80       	ld	r8, Z
    82b0:	80 80       	ld	r8, Z
    82b2:	80 80       	ld	r8, Z
    82b4:	80 80       	ld	r8, Z
    82b6:	80 80       	ld	r8, Z
    82b8:	80 80       	ld	r8, Z
    82ba:	80 80       	ld	r8, Z
    82bc:	80 80       	ld	r8, Z
    82be:	80 80       	ld	r8, Z
    82c0:	80 80       	ld	r8, Z
    82c2:	80 80       	ld	r8, Z
    82c4:	80 80       	ld	r8, Z
    82c6:	80 80       	ld	r8, Z
    82c8:	80 80       	ld	r8, Z
    82ca:	80 80       	ld	r8, Z
    82cc:	80 80       	ld	r8, Z
    82ce:	80 80       	ld	r8, Z
    82d0:	80 80       	ld	r8, Z
    82d2:	80 80       	ld	r8, Z
    82d4:	80 80       	ld	r8, Z
    82d6:	80 80       	ld	r8, Z
    82d8:	80 80       	ld	r8, Z
    82da:	80 80       	ld	r8, Z
    82dc:	80 80       	ld	r8, Z
    82de:	80 80       	ld	r8, Z
    82e0:	80 80       	ld	r8, Z
    82e2:	80 80       	ld	r8, Z
    82e4:	80 80       	ld	r8, Z
    82e6:	80 80       	ld	r8, Z
    82e8:	80 80       	ld	r8, Z
    82ea:	80 80       	ld	r8, Z
    82ec:	80 80       	ld	r8, Z
    82ee:	80 80       	ld	r8, Z
    82f0:	80 80       	ld	r8, Z
    82f2:	80 80       	ld	r8, Z
    82f4:	80 80       	ld	r8, Z
    82f6:	80 80       	ld	r8, Z
    82f8:	80 80       	ld	r8, Z
    82fa:	80 80       	ld	r8, Z
    82fc:	80 80       	ld	r8, Z
    82fe:	80 80       	ld	r8, Z
    8300:	7f 7f       	andi	r23, 0xFF	; 255
    8302:	7f 7f       	andi	r23, 0xFF	; 255
    8304:	7f 7f       	andi	r23, 0xFF	; 255
    8306:	7f 7f       	andi	r23, 0xFF	; 255
    8308:	7f 7f       	andi	r23, 0xFF	; 255
    830a:	7f 7f       	andi	r23, 0xFF	; 255
    830c:	7f 7f       	andi	r23, 0xFF	; 255
    830e:	7f 7f       	andi	r23, 0xFF	; 255
    8310:	7f 7f       	andi	r23, 0xFF	; 255
    8312:	7f 7f       	andi	r23, 0xFF	; 255
    8314:	7f 7f       	andi	r23, 0xFF	; 255
    8316:	7f 7f       	andi	r23, 0xFF	; 255
    8318:	7f 7f       	andi	r23, 0xFF	; 255
    831a:	7f 7f       	andi	r23, 0xFF	; 255
    831c:	7f 7f       	andi	r23, 0xFF	; 255
    831e:	7f 7f       	andi	r23, 0xFF	; 255
    8320:	7f 7f       	andi	r23, 0xFF	; 255
    8322:	7f 7f       	andi	r23, 0xFF	; 255
    8324:	7f 7f       	andi	r23, 0xFF	; 255
    8326:	7f 7f       	andi	r23, 0xFF	; 255
    8328:	7f 7f       	andi	r23, 0xFF	; 255
    832a:	7f 7f       	andi	r23, 0xFF	; 255
    832c:	7f 7f       	andi	r23, 0xFF	; 255
    832e:	7f 7f       	andi	r23, 0xFF	; 255
    8330:	7f 7f       	andi	r23, 0xFF	; 255
    8332:	7f 7f       	andi	r23, 0xFF	; 255
    8334:	7f 7f       	andi	r23, 0xFF	; 255
    8336:	7f 7f       	andi	r23, 0xFF	; 255
    8338:	7f 7f       	andi	r23, 0xFF	; 255
    833a:	7f 7f       	andi	r23, 0xFF	; 255
    833c:	7f 7f       	andi	r23, 0xFF	; 255
    833e:	7f 7f       	andi	r23, 0xFF	; 255
    8340:	7f 7f       	andi	r23, 0xFF	; 255
    8342:	7f 7f       	andi	r23, 0xFF	; 255
    8344:	7f 7f       	andi	r23, 0xFF	; 255
    8346:	7f 7f       	andi	r23, 0xFF	; 255
    8348:	7f 7f       	andi	r23, 0xFF	; 255
    834a:	7f 7f       	andi	r23, 0xFF	; 255
    834c:	7f 7f       	andi	r23, 0xFF	; 255
    834e:	7f 7f       	andi	r23, 0xFF	; 255
    8350:	7f 7f       	andi	r23, 0xFF	; 255
    8352:	7f 7f       	andi	r23, 0xFF	; 255
    8354:	7f 7f       	andi	r23, 0xFF	; 255
    8356:	7f 7f       	andi	r23, 0xFF	; 255
    8358:	7f 7f       	andi	r23, 0xFF	; 255
    835a:	7f 7f       	andi	r23, 0xFF	; 255
    835c:	7f 7f       	andi	r23, 0xFF	; 255
    835e:	7f 7f       	andi	r23, 0xFF	; 255
    8360:	7f 7f       	andi	r23, 0xFF	; 255
    8362:	7f 7f       	andi	r23, 0xFF	; 255
    8364:	7f 7f       	andi	r23, 0xFF	; 255
    8366:	7f 7f       	andi	r23, 0xFF	; 255
    8368:	7f 7f       	andi	r23, 0xFF	; 255
    836a:	7f 7f       	andi	r23, 0xFF	; 255
    836c:	7f 7f       	andi	r23, 0xFF	; 255
    836e:	7f 7f       	andi	r23, 0xFF	; 255
    8370:	7f 7f       	andi	r23, 0xFF	; 255
    8372:	7f 7f       	andi	r23, 0xFF	; 255
    8374:	7f 7f       	andi	r23, 0xFF	; 255
    8376:	7f 7f       	andi	r23, 0xFF	; 255
    8378:	7f 7f       	andi	r23, 0xFF	; 255
    837a:	7f 7f       	andi	r23, 0xFF	; 255
    837c:	7f 7f       	andi	r23, 0xFF	; 255
    837e:	7f 7f       	andi	r23, 0xFF	; 255
    8380:	7f 7f       	andi	r23, 0xFF	; 255
    8382:	7f 7f       	andi	r23, 0xFF	; 255
    8384:	7f 7f       	andi	r23, 0xFF	; 255
    8386:	7f 7f       	andi	r23, 0xFF	; 255
    8388:	7f 7f       	andi	r23, 0xFF	; 255
    838a:	7f 7f       	andi	r23, 0xFF	; 255
    838c:	7f 7f       	andi	r23, 0xFF	; 255
    838e:	7f 7f       	andi	r23, 0xFF	; 255
    8390:	7f 7f       	andi	r23, 0xFF	; 255
    8392:	7f 7f       	andi	r23, 0xFF	; 255
    8394:	7f 7f       	andi	r23, 0xFF	; 255
    8396:	7f 7f       	andi	r23, 0xFF	; 255
    8398:	7f 7f       	andi	r23, 0xFF	; 255
    839a:	7f 7f       	andi	r23, 0xFF	; 255
    839c:	7f 7f       	andi	r23, 0xFF	; 255
    839e:	7f 7f       	andi	r23, 0xFF	; 255
    83a0:	7f 7f       	andi	r23, 0xFF	; 255
    83a2:	7f 7f       	andi	r23, 0xFF	; 255
    83a4:	7f 7f       	andi	r23, 0xFF	; 255
    83a6:	7f 7f       	andi	r23, 0xFF	; 255
    83a8:	7f 7f       	andi	r23, 0xFF	; 255
    83aa:	7f 7f       	andi	r23, 0xFF	; 255
    83ac:	7f 7f       	andi	r23, 0xFF	; 255
    83ae:	7f 7f       	andi	r23, 0xFF	; 255
    83b0:	7f 7f       	andi	r23, 0xFF	; 255
    83b2:	7f 7f       	andi	r23, 0xFF	; 255
    83b4:	7f 7f       	andi	r23, 0xFF	; 255
    83b6:	7f 7f       	andi	r23, 0xFF	; 255
    83b8:	7f 7f       	andi	r23, 0xFF	; 255
    83ba:	7f 7f       	andi	r23, 0xFF	; 255
    83bc:	7f 7f       	andi	r23, 0xFF	; 255
    83be:	7f 7f       	andi	r23, 0xFF	; 255
    83c0:	80 80       	ld	r8, Z
    83c2:	80 80       	ld	r8, Z
    83c4:	80 80       	ld	r8, Z
    83c6:	80 80       	ld	r8, Z
    83c8:	80 80       	ld	r8, Z
    83ca:	80 80       	ld	r8, Z
    83cc:	80 80       	ld	r8, Z
    83ce:	80 80       	ld	r8, Z
    83d0:	80 80       	ld	r8, Z
    83d2:	80 80       	ld	r8, Z
    83d4:	80 80       	ld	r8, Z
    83d6:	80 80       	ld	r8, Z
    83d8:	80 80       	ld	r8, Z
    83da:	80 80       	ld	r8, Z
    83dc:	80 80       	ld	r8, Z
    83de:	80 80       	ld	r8, Z
    83e0:	80 80       	ld	r8, Z
    83e2:	80 80       	ld	r8, Z
    83e4:	80 80       	ld	r8, Z
    83e6:	80 80       	ld	r8, Z
    83e8:	80 80       	ld	r8, Z
    83ea:	80 80       	ld	r8, Z
    83ec:	80 80       	ld	r8, Z
    83ee:	80 80       	ld	r8, Z
    83f0:	80 80       	ld	r8, Z
    83f2:	80 80       	ld	r8, Z
    83f4:	80 80       	ld	r8, Z
    83f6:	80 80       	ld	r8, Z
    83f8:	80 80       	ld	r8, Z
    83fa:	80 80       	ld	r8, Z
    83fc:	80 80       	ld	r8, Z
    83fe:	80 80       	ld	r8, Z
    8400:	03 09       	sbc	r16, r3
    8402:	13 1e       	adc	r1, r19
    8404:	28 31       	cpi	r18, 0x18	; 24
    8406:	3a 40       	sbci	r19, 0x0A	; 10
    8408:	46 4c       	sbci	r20, 0xC6	; 198
    840a:	50 54       	subi	r21, 0x40	; 64
    840c:	58 5b       	subi	r21, 0xB8	; 184
    840e:	5e 61       	ori	r21, 0x1E	; 30
    8410:	63 65       	ori	r22, 0x53	; 83
    8412:	67 69       	ori	r22, 0x97	; 151
    8414:	6b 6c       	ori	r22, 0xCB	; 203
    8416:	6e 6f       	ori	r22, 0xFE	; 254
    8418:	70 71       	andi	r23, 0x10	; 16
    841a:	72 73       	andi	r23, 0x32	; 50
    841c:	74 75       	andi	r23, 0x54	; 84
    841e:	76 77       	andi	r23, 0x76	; 118
    8420:	77 78       	andi	r23, 0x87	; 135
    8422:	79 79       	andi	r23, 0x99	; 153
    8424:	7a 7a       	andi	r23, 0xAA	; 170
    8426:	7b 7b       	andi	r23, 0xBB	; 187
    8428:	7c 7c       	andi	r23, 0xCC	; 204
    842a:	7c 7d       	andi	r23, 0xDC	; 220
    842c:	7d 7d       	andi	r23, 0xDD	; 221
    842e:	7e 7e       	andi	r23, 0xEE	; 238
    8430:	7e 7e       	andi	r23, 0xEE	; 238
    8432:	7f 7f       	andi	r23, 0xFF	; 255
    8434:	7f 7f       	andi	r23, 0xFF	; 255
    8436:	7f 7f       	andi	r23, 0xFF	; 255
    8438:	7f 7f       	andi	r23, 0xFF	; 255
    843a:	7f 7f       	andi	r23, 0xFF	; 255
    843c:	7f 7f       	andi	r23, 0xFF	; 255
    843e:	7f 7f       	andi	r23, 0xFF	; 255
    8440:	7f 7f       	andi	r23, 0xFF	; 255
    8442:	7f 7f       	andi	r23, 0xFF	; 255
    8444:	7f 7f       	andi	r23, 0xFF	; 255
    8446:	7f 7f       	andi	r23, 0xFF	; 255
    8448:	7f 7f       	andi	r23, 0xFF	; 255
    844a:	7f 7f       	andi	r23, 0xFF	; 255
    844c:	7f 7e       	andi	r23, 0xEF	; 239
    844e:	7e 7e       	andi	r23, 0xEE	; 238
    8450:	7e 7d       	andi	r23, 0xDE	; 222
    8452:	7d 7d       	andi	r23, 0xDD	; 221
    8454:	7c 7c       	andi	r23, 0xCC	; 204
    8456:	7c 7b       	andi	r23, 0xBC	; 188
    8458:	7b 7a       	andi	r23, 0xAB	; 171
    845a:	7a 79       	andi	r23, 0x9A	; 154
    845c:	79 78       	andi	r23, 0x89	; 137
    845e:	77 77       	andi	r23, 0x77	; 119
    8460:	76 75       	andi	r23, 0x56	; 86
    8462:	74 73       	andi	r23, 0x34	; 52
    8464:	72 71       	andi	r23, 0x12	; 18
    8466:	70 6f       	ori	r23, 0xF0	; 240
    8468:	6e 6c       	ori	r22, 0xCE	; 206
    846a:	6b 69       	ori	r22, 0x9B	; 155
    846c:	67 65       	ori	r22, 0x57	; 87
    846e:	63 61       	ori	r22, 0x13	; 19
    8470:	5e 5b       	subi	r21, 0xBE	; 190
    8472:	58 54       	subi	r21, 0x48	; 72
    8474:	50 4c       	sbci	r21, 0xC0	; 192
    8476:	46 40       	sbci	r20, 0x06	; 6
    8478:	3a 31       	cpi	r19, 0x1A	; 26
    847a:	28 1e       	adc	r2, r24
    847c:	13 09       	sbc	r17, r3
    847e:	03 00       	.word	0x0003	; ????
    8480:	c6 cc       	rjmp	.-1652   	; 0x7e0e <waves+0xe>
    8482:	d5 db       	rcall	.-2134   	; 0x7c2e <end_set_bank+0x46>
    8484:	df e3       	ldi	r29, 0x3F	; 63
    8486:	e5 e7       	ldi	r30, 0x75	; 117
    8488:	e9 ea       	ldi	r30, 0xA9	; 169
    848a:	eb ec       	ldi	r30, 0xCB	; 203
    848c:	ed ee       	ldi	r30, 0xED	; 237
    848e:	ef ef       	ldi	r30, 0xFF	; 255
    8490:	f0 f0       	brcs	.+60     	; 0x84ce <waves+0x6ce>
    8492:	f0 f1       	brcs	.+124    	; 0x8510 <waves+0x710>
    8494:	f1 f1       	breq	.+124    	; 0x8512 <waves+0x712>
    8496:	f1 f2       	breq	.-68     	; 0x8454 <waves+0x654>
    8498:	f2 f2       	brmi	.-68     	; 0x8456 <waves+0x656>
    849a:	f2 f2       	brmi	.-68     	; 0x8458 <waves+0x658>
    849c:	f2 f2       	brmi	.-68     	; 0x845a <waves+0x65a>
    849e:	f2 f3       	brmi	.-4      	; 0x849c <waves+0x69c>
    84a0:	f3 f3       	brvs	.-4      	; 0x849e <waves+0x69e>
    84a2:	f3 f3       	brvs	.-4      	; 0x84a0 <waves+0x6a0>
    84a4:	f3 f3       	brvs	.-4      	; 0x84a2 <waves+0x6a2>
    84a6:	f3 f3       	brvs	.-4      	; 0x84a4 <waves+0x6a4>
    84a8:	f3 f3       	brvs	.-4      	; 0x84a6 <waves+0x6a6>
    84aa:	f3 f3       	brvs	.-4      	; 0x84a8 <waves+0x6a8>
    84ac:	f3 f3       	brvs	.-4      	; 0x84aa <waves+0x6aa>
    84ae:	f3 f3       	brvs	.-4      	; 0x84ac <waves+0x6ac>
    84b0:	f3 f3       	brvs	.-4      	; 0x84ae <waves+0x6ae>
    84b2:	f3 f3       	brvs	.-4      	; 0x84b0 <waves+0x6b0>
    84b4:	f3 f3       	brvs	.-4      	; 0x84b2 <waves+0x6b2>
    84b6:	f3 f3       	brvs	.-4      	; 0x84b4 <waves+0x6b4>
    84b8:	f3 f3       	brvs	.-4      	; 0x84b6 <waves+0x6b6>
    84ba:	f3 f3       	brvs	.-4      	; 0x84b8 <waves+0x6b8>
    84bc:	f3 f3       	brvs	.-4      	; 0x84ba <waves+0x6ba>
    84be:	f3 f3       	brvs	.-4      	; 0x84bc <waves+0x6bc>
    84c0:	f3 f3       	brvs	.-4      	; 0x84be <waves+0x6be>
    84c2:	f3 f3       	brvs	.-4      	; 0x84c0 <waves+0x6c0>
    84c4:	f3 f3       	brvs	.-4      	; 0x84c2 <waves+0x6c2>
    84c6:	f3 f3       	brvs	.-4      	; 0x84c4 <waves+0x6c4>
    84c8:	f3 f3       	brvs	.-4      	; 0x84c6 <waves+0x6c6>
    84ca:	f3 f3       	brvs	.-4      	; 0x84c8 <waves+0x6c8>
    84cc:	f3 f3       	brvs	.-4      	; 0x84ca <waves+0x6ca>
    84ce:	f3 f3       	brvs	.-4      	; 0x84cc <waves+0x6cc>
    84d0:	f3 f3       	brvs	.-4      	; 0x84ce <waves+0x6ce>
    84d2:	f3 f3       	brvs	.-4      	; 0x84d0 <waves+0x6d0>
    84d4:	f3 f3       	brvs	.-4      	; 0x84d2 <waves+0x6d2>
    84d6:	f3 f3       	brvs	.-4      	; 0x84d4 <waves+0x6d4>
    84d8:	f3 f3       	brvs	.-4      	; 0x84d6 <waves+0x6d6>
    84da:	f3 f3       	brvs	.-4      	; 0x84d8 <waves+0x6d8>
    84dc:	f3 f3       	brvs	.-4      	; 0x84da <waves+0x6da>
    84de:	f3 f3       	brvs	.-4      	; 0x84dc <waves+0x6dc>
    84e0:	f2 f2       	brmi	.-68     	; 0x849e <waves+0x69e>
    84e2:	f2 f2       	brmi	.-68     	; 0x84a0 <waves+0x6a0>
    84e4:	f2 f2       	brmi	.-68     	; 0x84a2 <waves+0x6a2>
    84e6:	f2 f2       	brmi	.-68     	; 0x84a4 <waves+0x6a4>
    84e8:	f1 f1       	breq	.+124    	; 0x8566 <waves+0x766>
    84ea:	f1 f1       	breq	.+124    	; 0x8568 <waves+0x768>
    84ec:	f0 f0       	brcs	.+60     	; 0x852a <waves+0x72a>
    84ee:	f0 ef       	ldi	r31, 0xF0	; 240
    84f0:	ef ee       	ldi	r30, 0xEF	; 239
    84f2:	ed ec       	ldi	r30, 0xCD	; 205
    84f4:	eb ea       	ldi	r30, 0xAB	; 171
    84f6:	e9 e7       	ldi	r30, 0x79	; 121
    84f8:	e5 e3       	ldi	r30, 0x35	; 53
    84fa:	df db       	rcall	.-2114   	; 0x7cba <mix_loop+0x7a>
    84fc:	d5 cc       	rjmp	.-1622   	; 0x7ea8 <waves+0xa8>
    84fe:	c6 00       	.word	0x00c6	; ????
    8500:	00 28       	or	r0, r0
    8502:	3d 42       	sbci	r19, 0x2D	; 45
    8504:	30 2d       	mov	r19, r0
    8506:	2c 2b       	or	r18, r28
    8508:	2c 2d       	mov	r18, r12
    850a:	2e 2f       	mov	r18, r30
    850c:	30 32       	cpi	r19, 0x20	; 32
    850e:	33 35       	cpi	r19, 0x53	; 83
    8510:	37 39       	cpi	r19, 0x97	; 151
    8512:	3b 3d       	cpi	r19, 0xDB	; 219
    8514:	3f 41       	sbci	r19, 0x1F	; 31
    8516:	43 45       	sbci	r20, 0x53	; 83
    8518:	48 4a       	sbci	r20, 0xA8	; 168
    851a:	4c 4e       	sbci	r20, 0xEC	; 236
    851c:	50 53       	subi	r21, 0x30	; 48
    851e:	55 57       	subi	r21, 0x75	; 117
    8520:	59 5b       	subi	r21, 0xB9	; 185
    8522:	5d 5f       	subi	r21, 0xFD	; 253
    8524:	61 63       	ori	r22, 0x31	; 49
    8526:	65 67       	ori	r22, 0x75	; 117
    8528:	69 6b       	ori	r22, 0xB9	; 185
    852a:	6c 6e       	ori	r22, 0xEC	; 236
    852c:	70 71       	andi	r23, 0x10	; 16
    852e:	73 74       	andi	r23, 0x43	; 67
    8530:	75 77       	andi	r23, 0x75	; 117
    8532:	78 79       	andi	r23, 0x98	; 152
    8534:	7a 7b       	andi	r23, 0xBA	; 186
    8536:	7c 7d       	andi	r23, 0xDC	; 220
    8538:	7d 7e       	andi	r23, 0xED	; 237
    853a:	7e 7f       	andi	r23, 0xFE	; 254
    853c:	7f 7f       	andi	r23, 0xFF	; 255
    853e:	7f 7f       	andi	r23, 0xFF	; 255
    8540:	7f 7f       	andi	r23, 0xFF	; 255
    8542:	7f 7f       	andi	r23, 0xFF	; 255
    8544:	7f 7f       	andi	r23, 0xFF	; 255
    8546:	7e 7e       	andi	r23, 0xEE	; 238
    8548:	7d 7d       	andi	r23, 0xDD	; 221
    854a:	7c 7b       	andi	r23, 0xBC	; 188
    854c:	7a 79       	andi	r23, 0x9A	; 154
    854e:	78 77       	andi	r23, 0x78	; 120
    8550:	75 74       	andi	r23, 0x45	; 69
    8552:	73 71       	andi	r23, 0x13	; 19
    8554:	70 6e       	ori	r23, 0xE0	; 224
    8556:	6c 6b       	ori	r22, 0xBC	; 188
    8558:	69 67       	ori	r22, 0x79	; 121
    855a:	65 63       	ori	r22, 0x35	; 53
    855c:	61 5f       	subi	r22, 0xF1	; 241
    855e:	5d 5b       	subi	r21, 0xBD	; 189
    8560:	59 57       	subi	r21, 0x79	; 121
    8562:	55 53       	subi	r21, 0x35	; 53
    8564:	50 4e       	sbci	r21, 0xE0	; 224
    8566:	4c 4a       	sbci	r20, 0xAC	; 172
    8568:	48 45       	sbci	r20, 0x58	; 88
    856a:	43 41       	sbci	r20, 0x13	; 19
    856c:	3f 3d       	cpi	r19, 0xDF	; 223
    856e:	3b 39       	cpi	r19, 0x9B	; 155
    8570:	37 35       	cpi	r19, 0x57	; 87
    8572:	33 32       	cpi	r19, 0x23	; 35
    8574:	30 2f       	mov	r19, r16
    8576:	2e 2d       	mov	r18, r14
    8578:	2c 2b       	or	r18, r28
    857a:	2c 2d       	mov	r18, r12
    857c:	30 42       	sbci	r19, 0x20	; 32
    857e:	3d 28       	or	r3, r13
    8580:	00 e9       	ldi	r16, 0x90	; 144
    8582:	e5 fe       	sbrs	r14, 5
    8584:	d4 d7       	rcall	.+4008   	; 0x952e <processMoles+0x1a0>
    8586:	d7 d7       	rcall	.+4014   	; 0x9536 <processMoles+0x1a8>
    8588:	d6 d4       	rcall	.+2476   	; 0x8f36 <ProcessSprites+0x13a>
    858a:	d2 d0       	rcall	.+420    	; 0x8730 <waves+0x930>
    858c:	ce cc       	rjmp	.-1636   	; 0x7f2a <waves+0x12a>
    858e:	ca c8       	rjmp	.-3692   	; 0x7724 <ProcessMusic+0x326>
    8590:	c6 c3       	rjmp	.+1932   	; 0x8d1e <Fill+0x32>
    8592:	c1 bf       	out	0x31, r28	; 49
    8594:	bd ba       	out	0x1d, r11	; 29
    8596:	b8 b6       	in	r11, 0x38	; 56
    8598:	b4 b1       	in	r27, 0x04	; 4
    859a:	af ad       	ldd	r26, Y+63	; 0x3f
    859c:	ab a9       	ldd	r26, Y+51	; 0x33
    859e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    85a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    85a2:	9f 9e       	mul	r9, r31
    85a4:	9c 9a       	sbi	0x13, 4	; 19
    85a6:	99 97       	sbiw	r26, 0x29	; 41
    85a8:	95 94       	asr	r9
    85aa:	93 91       	.word	0x9193	; ????
    85ac:	90 8f       	std	Z+24, r25	; 0x18
    85ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    85b0:	8b 8a       	std	Y+19, r8	; 0x13
    85b2:	89 88       	ldd	r8, Y+17	; 0x11
    85b4:	88 87       	std	Y+8, r24	; 0x08
    85b6:	86 85       	ldd	r24, Z+14	; 0x0e
    85b8:	85 84       	ldd	r8, Z+13	; 0x0d
    85ba:	84 84       	ldd	r8, Z+12	; 0x0c
    85bc:	83 83       	std	Z+3, r24	; 0x03
    85be:	83 83       	std	Z+3, r24	; 0x03
    85c0:	83 83       	std	Z+3, r24	; 0x03
    85c2:	83 83       	std	Z+3, r24	; 0x03
    85c4:	83 84       	ldd	r8, Z+11	; 0x0b
    85c6:	84 84       	ldd	r8, Z+12	; 0x0c
    85c8:	85 85       	ldd	r24, Z+13	; 0x0d
    85ca:	86 87       	std	Z+14, r24	; 0x0e
    85cc:	88 88       	ldd	r8, Y+16	; 0x10
    85ce:	89 8a       	std	Y+17, r8	; 0x11
    85d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    85d2:	8d 8f       	std	Y+29, r24	; 0x1d
    85d4:	90 91 93 94 	lds	r25, 0x9493
    85d8:	95 97       	sbiw	r26, 0x25	; 37
    85da:	99 9a       	sbi	0x13, 1	; 19
    85dc:	9c 9e       	mul	r9, r28
    85de:	9f a1       	ldd	r25, Y+39	; 0x27
    85e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    85e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    85e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    85e6:	af b1       	in	r26, 0x0f	; 15
    85e8:	b4 b6       	in	r11, 0x34	; 52
    85ea:	b8 ba       	out	0x18, r11	; 24
    85ec:	bd bf       	out	0x3d, r27	; 61
    85ee:	c1 c3       	rjmp	.+1922   	; 0x8d72 <DrawMap+0x10>
    85f0:	c6 c8       	rjmp	.-3700   	; 0x777e <ProcessMusic+0x380>
    85f2:	ca cc       	rjmp	.-1644   	; 0x7f88 <waves+0x188>
    85f4:	ce d0       	rcall	.+412    	; 0x8792 <waves+0x992>
    85f6:	d2 d4       	rcall	.+2468   	; 0x8f9c <WaitKey+0x6>
    85f8:	d6 d7       	rcall	.+4012   	; 0x95a6 <PrintSpeed+0x22>
    85fa:	d7 d7       	rcall	.+4014   	; 0x95aa <PrintSpeed+0x26>
    85fc:	d4 fe       	sbrs	r13, 4
    85fe:	e5 e9       	ldi	r30, 0x95	; 149
    8600:	f9 f8       	.word	0xf8f9	; ????
    8602:	f9 f5       	brne	.+126    	; 0x8682 <waves+0x882>
    8604:	eb e1       	ldi	r30, 0x1B	; 27
    8606:	dd de       	rcall	.-582    	; 0x83c2 <waves+0x5c2>
    8608:	e0 e2       	ldi	r30, 0x20	; 32
    860a:	e4 e5       	ldi	r30, 0x54	; 84
    860c:	e6 e5       	ldi	r30, 0x56	; 86
    860e:	e4 e2       	ldi	r30, 0x24	; 36
    8610:	de d9       	rcall	.-3140   	; 0x79ce <PatchCommand08+0x24>
    8612:	d2 ca       	rjmp	.-2652   	; 0x7bb8 <MixSound+0x2a>
    8614:	c1 b7       	in	r28, 0x31	; 49
    8616:	ac a2       	std	Y+36, r10	; 0x24
    8618:	99 91       	ld	r25, Y+
    861a:	8a 86       	std	Y+10, r8	; 0x0a
    861c:	83 81       	ldd	r24, Z+3	; 0x03
    861e:	80 80       	ld	r8, Z
    8620:	81 82       	std	Z+1, r8	; 0x01
    8622:	83 85       	ldd	r24, Z+11	; 0x0b
    8624:	86 88       	ldd	r8, Z+22	; 0x16
    8626:	8a 8c       	ldd	r8, Y+26	; 0x1a
    8628:	8d 8f       	std	Y+29, r24	; 0x1d
    862a:	90 92 93 95 	sts	0x9593, r9
    862e:	96 97       	sbiw	r26, 0x26	; 38
    8630:	98 99       	sbic	0x13, 0	; 19
    8632:	9a 9b       	sbis	0x13, 2	; 19
    8634:	9b 9c       	mul	r9, r11
    8636:	9d 9d       	mul	r25, r13
    8638:	9d 9e       	mul	r9, r29
    863a:	9e 9e       	mul	r9, r30
    863c:	9f 9f       	mul	r25, r31
    863e:	9f 9f       	mul	r25, r31
    8640:	9f 9f       	mul	r25, r31
    8642:	9f 9e       	mul	r9, r31
    8644:	9e 9e       	mul	r9, r30
    8646:	9d 9d       	mul	r25, r13
    8648:	9d 9c       	mul	r9, r13
    864a:	9b 9b       	sbis	0x13, 3	; 19
    864c:	9a 99       	sbic	0x13, 2	; 19
    864e:	98 97       	sbiw	r26, 0x28	; 40
    8650:	96 95       	lsr	r25
    8652:	93 92       	.word	0x9293	; ????
    8654:	90 8f       	std	Z+24, r25	; 0x18
    8656:	8d 8c       	ldd	r8, Y+29	; 0x1d
    8658:	8a 88       	ldd	r8, Y+18	; 0x12
    865a:	86 85       	ldd	r24, Z+14	; 0x0e
    865c:	83 82       	std	Z+3, r8	; 0x03
    865e:	81 80       	ldd	r8, Z+1	; 0x01
    8660:	80 81       	ld	r24, Z
    8662:	83 86       	std	Z+11, r8	; 0x0b
    8664:	8a 91       	ld	r24, -Y
    8666:	99 a2       	std	Y+33, r9	; 0x21
    8668:	ac b7       	in	r26, 0x3c	; 60
    866a:	c1 ca       	rjmp	.-2686   	; 0x7bee <end_set_bank+0x6>
    866c:	d2 d9       	rcall	.-3164   	; 0x7a12 <PatchCommand03+0x8>
    866e:	de e2       	ldi	r29, 0x2E	; 46
    8670:	e4 e5       	ldi	r30, 0x54	; 84
    8672:	e6 e5       	ldi	r30, 0x56	; 86
    8674:	e4 e2       	ldi	r30, 0x24	; 36
    8676:	e0 de       	rcall	.-576    	; 0x8438 <waves+0x638>
    8678:	dd e1       	ldi	r29, 0x1D	; 29
    867a:	eb f5       	brvc	.+122    	; 0x86f6 <waves+0x8f6>
    867c:	f9 f8       	.word	0xf8f9	; ????
    867e:	f9 00       	.word	0x00f9	; ????
    8680:	07 08       	sbc	r0, r7
    8682:	07 0b       	sbc	r16, r23
    8684:	15 1f       	adc	r17, r21
    8686:	23 22       	and	r2, r19
    8688:	20 1e       	adc	r2, r16
    868a:	1c 1b       	sub	r17, r28
    868c:	1a 1b       	sub	r17, r26
    868e:	1c 1e       	adc	r1, r28
    8690:	22 27       	eor	r18, r18
    8692:	2e 36       	cpi	r18, 0x6E	; 110
    8694:	3f 49       	sbci	r19, 0x9F	; 159
    8696:	54 5e       	subi	r21, 0xE4	; 228
    8698:	67 6f       	ori	r22, 0xF7	; 247
    869a:	76 7a       	andi	r23, 0xA6	; 166
    869c:	7e 7f       	andi	r23, 0xFE	; 254
    869e:	7f 7f       	andi	r23, 0xFF	; 255
    86a0:	7f 7e       	andi	r23, 0xEF	; 239
    86a2:	7d 7b       	andi	r23, 0xBD	; 189
    86a4:	7a 78       	andi	r23, 0x8A	; 138
    86a6:	76 74       	andi	r23, 0x46	; 70
    86a8:	73 71       	andi	r23, 0x13	; 19
    86aa:	70 6e       	ori	r23, 0xE0	; 224
    86ac:	6d 6b       	ori	r22, 0xBD	; 189
    86ae:	6a 69       	ori	r22, 0x9A	; 154
    86b0:	68 67       	ori	r22, 0x78	; 120
    86b2:	66 65       	ori	r22, 0x56	; 86
    86b4:	65 64       	ori	r22, 0x45	; 69
    86b6:	64 63       	ori	r22, 0x34	; 52
    86b8:	63 62       	ori	r22, 0x23	; 35
    86ba:	62 62       	ori	r22, 0x22	; 34
    86bc:	61 61       	ori	r22, 0x11	; 17
    86be:	61 61       	ori	r22, 0x11	; 17
    86c0:	61 61       	ori	r22, 0x11	; 17
    86c2:	61 62       	ori	r22, 0x21	; 33
    86c4:	62 62       	ori	r22, 0x22	; 34
    86c6:	63 63       	ori	r22, 0x33	; 51
    86c8:	63 64       	ori	r22, 0x43	; 67
    86ca:	65 65       	ori	r22, 0x55	; 85
    86cc:	66 67       	ori	r22, 0x76	; 118
    86ce:	68 69       	ori	r22, 0x98	; 152
    86d0:	6a 6b       	ori	r22, 0xBA	; 186
    86d2:	6d 6e       	ori	r22, 0xED	; 237
    86d4:	70 71       	andi	r23, 0x10	; 16
    86d6:	73 74       	andi	r23, 0x43	; 67
    86d8:	76 78       	andi	r23, 0x86	; 134
    86da:	7a 7b       	andi	r23, 0xBA	; 186
    86dc:	7d 7e       	andi	r23, 0xED	; 237
    86de:	7f 7f       	andi	r23, 0xFF	; 255
    86e0:	7f 7f       	andi	r23, 0xFF	; 255
    86e2:	7e 7a       	andi	r23, 0xAE	; 174
    86e4:	76 6f       	ori	r23, 0xF6	; 246
    86e6:	67 5e       	subi	r22, 0xE7	; 231
    86e8:	54 49       	sbci	r21, 0x94	; 148
    86ea:	3f 36       	cpi	r19, 0x6F	; 111
    86ec:	2e 27       	eor	r18, r30
    86ee:	22 1e       	adc	r2, r18
    86f0:	1c 1b       	sub	r17, r28
    86f2:	1a 1b       	sub	r17, r26
    86f4:	1c 1e       	adc	r1, r28
    86f6:	20 22       	and	r2, r16
    86f8:	23 1f       	adc	r18, r19
    86fa:	15 0b       	sbc	r17, r21
    86fc:	07 08       	sbc	r0, r7
    86fe:	07 00       	.word	0x0007	; ????
    8700:	1f 31       	cpi	r17, 0x1F	; 31
    8702:	3d 44       	sbci	r19, 0x4D	; 77
    8704:	4e 53       	subi	r20, 0x3E	; 62
    8706:	54 56       	subi	r21, 0x64	; 100
    8708:	5a 5f       	subi	r21, 0xFA	; 250
    870a:	64 69       	ori	r22, 0x94	; 148
    870c:	6e 74       	andi	r22, 0x4E	; 78
    870e:	76 79       	andi	r23, 0x96	; 150
    8710:	7c 7f       	andi	r23, 0xFC	; 252
    8712:	7f 7f       	andi	r23, 0xFF	; 255
    8714:	7f 7f       	andi	r23, 0xFF	; 255
    8716:	7f 7f       	andi	r23, 0xFF	; 255
    8718:	7f 7f       	andi	r23, 0xFF	; 255
    871a:	7f 7f       	andi	r23, 0xFF	; 255
    871c:	7f 7f       	andi	r23, 0xFF	; 255
    871e:	7f 7f       	andi	r23, 0xFF	; 255
    8720:	7f 7f       	andi	r23, 0xFF	; 255
    8722:	7f 7f       	andi	r23, 0xFF	; 255
    8724:	7f 7f       	andi	r23, 0xFF	; 255
    8726:	7f 7f       	andi	r23, 0xFF	; 255
    8728:	7f 7f       	andi	r23, 0xFF	; 255
    872a:	7f 7f       	andi	r23, 0xFF	; 255
    872c:	7f 7f       	andi	r23, 0xFF	; 255
    872e:	7f 7f       	andi	r23, 0xFF	; 255
    8730:	7f 7f       	andi	r23, 0xFF	; 255
    8732:	7f 7f       	andi	r23, 0xFF	; 255
    8734:	7f 7f       	andi	r23, 0xFF	; 255
    8736:	7f 7f       	andi	r23, 0xFF	; 255
    8738:	7f 7f       	andi	r23, 0xFF	; 255
    873a:	7f 7f       	andi	r23, 0xFF	; 255
    873c:	7f 7f       	andi	r23, 0xFF	; 255
    873e:	7f 7f       	andi	r23, 0xFF	; 255
    8740:	7f 7f       	andi	r23, 0xFF	; 255
    8742:	7f 7f       	andi	r23, 0xFF	; 255
    8744:	7f 7f       	andi	r23, 0xFF	; 255
    8746:	7f 7f       	andi	r23, 0xFF	; 255
    8748:	7f 7f       	andi	r23, 0xFF	; 255
    874a:	7f 7f       	andi	r23, 0xFF	; 255
    874c:	7f 7f       	andi	r23, 0xFF	; 255
    874e:	7f 7f       	andi	r23, 0xFF	; 255
    8750:	7f 7f       	andi	r23, 0xFF	; 255
    8752:	7f 7f       	andi	r23, 0xFF	; 255
    8754:	7f 7f       	andi	r23, 0xFF	; 255
    8756:	7f 7f       	andi	r23, 0xFF	; 255
    8758:	7f 7f       	andi	r23, 0xFF	; 255
    875a:	7f 7f       	andi	r23, 0xFF	; 255
    875c:	7f 7f       	andi	r23, 0xFF	; 255
    875e:	7f 7f       	andi	r23, 0xFF	; 255
    8760:	7f 7f       	andi	r23, 0xFF	; 255
    8762:	7f 7f       	andi	r23, 0xFF	; 255
    8764:	7f 7f       	andi	r23, 0xFF	; 255
    8766:	7f 7f       	andi	r23, 0xFF	; 255
    8768:	7f 7f       	andi	r23, 0xFF	; 255
    876a:	7f 7f       	andi	r23, 0xFF	; 255
    876c:	7f 7f       	andi	r23, 0xFF	; 255
    876e:	7f 7f       	andi	r23, 0xFF	; 255
    8770:	7f 7f       	andi	r23, 0xFF	; 255
    8772:	7f 7f       	andi	r23, 0xFF	; 255
    8774:	7f 7f       	andi	r23, 0xFF	; 255
    8776:	7f 7f       	andi	r23, 0xFF	; 255
    8778:	7f 7f       	andi	r23, 0xFF	; 255
    877a:	7f 7c       	andi	r23, 0xCF	; 207
    877c:	78 71       	andi	r23, 0x18	; 24
    877e:	68 4c       	sbci	r22, 0xC8	; 200
    8780:	2c 1c       	adc	r2, r12
    8782:	12 0c       	add	r1, r2
    8784:	0a 0b       	sbc	r16, r26
    8786:	0a 05       	cpc	r16, r10
    8788:	fd f3       	brhs	.-2      	; 0x8788 <waves+0x988>
    878a:	e9 df       	rcall	.-46     	; 0x875e <waves+0x95e>
    878c:	d4 ca       	rjmp	.-2648   	; 0x7d36 <s2+0x4>
    878e:	c0 b7       	in	r28, 0x30	; 48
    8790:	ae a6       	std	Y+46, r10	; 0x2e
    8792:	9e 97       	sbiw	r26, 0x2e	; 46
    8794:	91 8b       	std	Z+17, r25	; 0x11
    8796:	86 85       	ldd	r24, Z+14	; 0x0e
    8798:	82 80       	ldd	r8, Z+2	; 0x02
    879a:	80 80       	ld	r8, Z
    879c:	80 80       	ld	r8, Z
    879e:	80 80       	ld	r8, Z
    87a0:	80 80       	ld	r8, Z
    87a2:	80 80       	ld	r8, Z
    87a4:	80 80       	ld	r8, Z
    87a6:	80 80       	ld	r8, Z
    87a8:	80 80       	ld	r8, Z
    87aa:	80 80       	ld	r8, Z
    87ac:	80 80       	ld	r8, Z
    87ae:	80 80       	ld	r8, Z
    87b0:	80 80       	ld	r8, Z
    87b2:	80 80       	ld	r8, Z
    87b4:	80 80       	ld	r8, Z
    87b6:	80 80       	ld	r8, Z
    87b8:	80 80       	ld	r8, Z
    87ba:	80 80       	ld	r8, Z
    87bc:	80 80       	ld	r8, Z
    87be:	80 80       	ld	r8, Z
    87c0:	80 80       	ld	r8, Z
    87c2:	80 80       	ld	r8, Z
    87c4:	80 80       	ld	r8, Z
    87c6:	80 80       	ld	r8, Z
    87c8:	80 80       	ld	r8, Z
    87ca:	80 80       	ld	r8, Z
    87cc:	80 80       	ld	r8, Z
    87ce:	80 80       	ld	r8, Z
    87d0:	80 80       	ld	r8, Z
    87d2:	80 80       	ld	r8, Z
    87d4:	80 80       	ld	r8, Z
    87d6:	80 80       	ld	r8, Z
    87d8:	80 80       	ld	r8, Z
    87da:	80 80       	ld	r8, Z
    87dc:	80 80       	ld	r8, Z
    87de:	80 80       	ld	r8, Z
    87e0:	80 80       	ld	r8, Z
    87e2:	80 80       	ld	r8, Z
    87e4:	80 80       	ld	r8, Z
    87e6:	80 80       	ld	r8, Z
    87e8:	80 80       	ld	r8, Z
    87ea:	80 80       	ld	r8, Z
    87ec:	80 80       	ld	r8, Z
    87ee:	80 80       	ld	r8, Z
    87f0:	80 80       	ld	r8, Z
    87f2:	80 80       	ld	r8, Z
    87f4:	80 87       	std	Z+8, r24	; 0x08
    87f6:	91 9d       	mul	r25, r1
    87f8:	ac c4       	rjmp	.+2392   	; 0x9152 <processHammer+0x1a2>
    87fa:	cb d4       	rcall	.+2454   	; 0x9192 <processMouseMovement+0x26>
    87fc:	dd f2       	brhs	.-74     	; 0x87b4 <waves+0x9b4>
    87fe:	fa fa       	.word	0xfafa	; ????

00008800 <steptable>:
    8800:	22 00       	.word	0x0022	; ????
    8802:	24 00       	.word	0x0024	; ????
    8804:	26 00       	.word	0x0026	; ????
    8806:	28 00       	.word	0x0028	; ????
    8808:	2b 00       	.word	0x002b	; ????
    880a:	2d 00       	.word	0x002d	; ????
    880c:	30 00       	.word	0x0030	; ????
    880e:	33 00       	.word	0x0033	; ????
    8810:	36 00       	.word	0x0036	; ????
    8812:	39 00       	.word	0x0039	; ????
    8814:	3d 00       	.word	0x003d	; ????
    8816:	40 00       	.word	0x0040	; ????
    8818:	44 00       	.word	0x0044	; ????
    881a:	48 00       	.word	0x0048	; ????
    881c:	4c 00       	.word	0x004c	; ????
    881e:	51 00       	.word	0x0051	; ????
    8820:	56 00       	.word	0x0056	; ????
    8822:	5b 00       	.word	0x005b	; ????
    8824:	60 00       	.word	0x0060	; ????
    8826:	66 00       	.word	0x0066	; ????
    8828:	6c 00       	.word	0x006c	; ????
    882a:	73 00       	.word	0x0073	; ????
    882c:	79 00       	.word	0x0079	; ????
    882e:	81 00       	.word	0x0081	; ????
    8830:	88 00       	.word	0x0088	; ????
    8832:	90 00       	.word	0x0090	; ????
    8834:	99 00       	.word	0x0099	; ????
    8836:	a2 00       	.word	0x00a2	; ????
    8838:	ac 00       	.word	0x00ac	; ????
    883a:	b6 00       	.word	0x00b6	; ????
    883c:	c1 00       	.word	0x00c1	; ????
    883e:	cc 00       	.word	0x00cc	; ????
    8840:	d8 00       	.word	0x00d8	; ????
    8842:	e5 00       	.word	0x00e5	; ????
    8844:	f3 00       	.word	0x00f3	; ????
    8846:	01 01       	movw	r0, r2
    8848:	10 01       	movw	r2, r0
    884a:	21 01       	movw	r4, r2
    884c:	32 01       	movw	r6, r4
    884e:	44 01       	movw	r8, r8
    8850:	57 01       	movw	r10, r14
    8852:	6c 01       	movw	r12, r24
    8854:	81 01       	movw	r16, r2
    8856:	98 01       	movw	r18, r16
    8858:	b0 01       	movw	r22, r0
    885a:	ca 01       	movw	r24, r20
    885c:	e5 01       	movw	r28, r10
    885e:	02 02       	muls	r16, r18
    8860:	21 02       	muls	r18, r17
    8862:	41 02       	muls	r20, r17
    8864:	64 02       	muls	r22, r20
    8866:	88 02       	muls	r24, r24
    8868:	ae 02       	muls	r26, r30
    886a:	d7 02       	muls	r29, r23
    886c:	03 03       	mulsu	r16, r19
    886e:	30 03       	mulsu	r19, r16
    8870:	61 03       	mulsu	r22, r17
    8872:	94 03       	fmuls	r17, r20
    8874:	cb 03       	fmulsu	r20, r19
    8876:	05 04       	cpc	r0, r5
    8878:	42 04       	cpc	r4, r2
    887a:	83 04       	cpc	r8, r3
    887c:	c7 04       	cpc	r12, r7
    887e:	10 05       	cpc	r17, r0
    8880:	5d 05       	cpc	r21, r13
    8882:	af 05       	cpc	r26, r15
    8884:	05 06       	cpc	r0, r21
    8886:	61 06       	cpc	r6, r17
    8888:	c2 06       	cpc	r12, r18
    888a:	29 07       	cpc	r18, r25
    888c:	96 07       	cpc	r25, r22
    888e:	09 08       	sbc	r0, r9
    8890:	83 08       	sbc	r8, r3
    8892:	05 09       	sbc	r16, r5
    8894:	8e 09       	sbc	r24, r14
    8896:	20 0a       	sbc	r2, r16
    8898:	ba 0a       	sbc	r11, r26
    889a:	5d 0b       	sbc	r21, r29
    889c:	0a 0c       	add	r0, r10
    889e:	c1 0c       	add	r12, r1
    88a0:	84 0d       	add	r24, r4
    88a2:	51 0e       	add	r5, r17
    88a4:	2b 0f       	add	r18, r27
    88a6:	12 10       	cpse	r1, r2
    88a8:	07 11       	cpse	r16, r7
    88aa:	0a 12       	cpse	r0, r26
    88ac:	1d 13       	cpse	r17, r29
    88ae:	40 14       	cp	r4, r0
    88b0:	74 15       	cp	r23, r4
    88b2:	ba 16       	cp	r11, r26
    88b4:	14 18       	sub	r1, r4
    88b6:	83 19       	sub	r24, r3
    88b8:	07 1b       	sub	r16, r23
    88ba:	a3 1c       	adc	r10, r3
    88bc:	57 1e       	adc	r5, r23
    88be:	24 20       	and	r2, r4
    88c0:	0e 22       	and	r0, r30
    88c2:	14 24       	eor	r1, r4
    88c4:	39 26       	eor	r3, r25
    88c6:	7f 28       	or	r7, r15
    88c8:	e8 2a       	or	r14, r24
    88ca:	75 2d       	mov	r23, r5
    88cc:	29 30       	cpi	r18, 0x09	; 9
    88ce:	06 33       	cpi	r16, 0x36	; 54
    88d0:	0f 36       	cpi	r16, 0x6F	; 111
    88d2:	45 39       	cpi	r20, 0x95	; 149
    88d4:	ad 3c       	cpi	r26, 0xCD	; 205
    88d6:	49 40       	sbci	r20, 0x09	; 9
    88d8:	1b 44       	sbci	r17, 0x4B	; 75
    88da:	28 48       	sbci	r18, 0x88	; 136
    88dc:	73 4c       	sbci	r23, 0xC3	; 195
    88de:	fe 50       	subi	r31, 0x0E	; 14
    88e0:	cf 55       	subi	r28, 0x5F	; 95
    88e2:	ea 5a       	subi	r30, 0xAA	; 170
    88e4:	51 60       	ori	r21, 0x01	; 1
    88e6:	0c 66       	ori	r16, 0x6C	; 108
    88e8:	1d 6c       	ori	r17, 0xCD	; 205
    88ea:	8b 72       	andi	r24, 0x2B	; 43
    88ec:	5a 79       	andi	r21, 0x9A	; 154
    88ee:	92 80       	ldd	r9, Z+2	; 0x02
    88f0:	37 88       	ldd	r3, Z+23	; 0x17
    88f2:	50 90 e5 98 	lds	r5, 0x98E5
    88f6:	fd a1       	ldd	r31, Y+37	; 0x25
    88f8:	9f ab       	std	Y+55, r25	; 0x37
    88fa:	d3 b5       	in	r29, 0x23	; 35
    88fc:	a3 c0       	rjmp	.+326    	; 0x8a44 <WaitVsync+0x20>
	...

00008900 <RestoreBackground>:
	extern void BlitSprite(unsigned char spriteNo,unsigned char ramTileNo,unsigned int xy,unsigned int dxdy);

	unsigned char free_tile_index=0;
	bool spritesOn=true;

	void RestoreBackground(){
    8900:	30 91 1a 0b 	lds	r19, 0x0B1A
    8904:	20 e0       	ldi	r18, 0x00	; 0
    8906:	10 c0       	rjmp	.+32     	; 0x8928 <RestoreBackground+0x28>
		unsigned char i;
		for(i=0;i<free_tile_index;i++){
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
    8908:	82 2f       	mov	r24, r18
    890a:	90 e0       	ldi	r25, 0x00	; 0
    890c:	fc 01       	movw	r30, r24
    890e:	ee 0f       	add	r30, r30
    8910:	ff 1f       	adc	r31, r31
    8912:	e8 0f       	add	r30, r24
    8914:	f9 1f       	adc	r31, r25
    8916:	ea 57       	subi	r30, 0x7A	; 122
    8918:	f7 4f       	sbci	r31, 0xF7	; 247
    891a:	a0 81       	ld	r26, Z
    891c:	b1 81       	ldd	r27, Z+1	; 0x01
    891e:	a0 5e       	subi	r26, 0xE0	; 224
    8920:	be 4f       	sbci	r27, 0xFE	; 254
    8922:	82 81       	ldd	r24, Z+2	; 0x02
    8924:	8c 93       	st	X, r24
	unsigned char free_tile_index=0;
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i;
		for(i=0;i<free_tile_index;i++){
    8926:	2f 5f       	subi	r18, 0xFF	; 255
    8928:	23 17       	cp	r18, r19
    892a:	70 f3       	brcs	.-36     	; 0x8908 <RestoreBackground+0x8>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}
	
		free_tile_index=0;
    892c:	10 92 1a 0b 	sts	0x0B1A, r1
	}
    8930:	08 95       	ret

00008932 <SetSpriteVisibility>:


	void SetSpriteVisibility(bool visible){
    8932:	80 93 00 01 	sts	0x0100, r24
		spritesOn=visible;
	}
    8936:	08 95       	ret

00008938 <DrawMap2>:



//Draws a map of tile at the specified position

void DrawMap2(unsigned char x,unsigned char y,const char *map){
    8938:	1f 93       	push	r17
    893a:	cf 93       	push	r28
    893c:	df 93       	push	r29
    893e:	fa 01       	movw	r30, r20
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
    8940:	74 91       	lpm	r23, Z+
	unsigned char mapHeight=pgm_read_byte(&(map[1]));
    8942:	31 96       	adiw	r30, 0x01	; 1
    8944:	14 91       	lpm	r17, Z+
    8946:	c7 2f       	mov	r28, r23
    8948:	d0 e0       	ldi	r29, 0x00	; 0
    894a:	af 01       	movw	r20, r30
    894c:	4f 5f       	subi	r20, 0xFF	; 255
    894e:	5f 4f       	sbci	r21, 0xFF	; 255
    8950:	9e e1       	ldi	r25, 0x1E	; 30
    8952:	69 9f       	mul	r22, r25
    8954:	90 01       	movw	r18, r0
    8956:	11 24       	eor	r1, r1
    8958:	28 0f       	add	r18, r24
    895a:	31 1d       	adc	r19, r1
    895c:	60 e0       	ldi	r22, 0x00	; 0
    895e:	0c c0       	rjmp	.+24     	; 0x8978 <DrawMap2+0x40>

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
			
			i=pgm_read_byte(&(map[(dy*mapWidth)+dx+2]));
    8960:	84 91       	lpm	r24, Z+
			
			vram[((y+dy)*VRAM_TILES_H)+x+dx]=(i + RAM_TILES_COUNT) ;
    8962:	80 5f       	subi	r24, 0xF0	; 240
    8964:	8d 93       	st	X+, r24
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
	unsigned char mapHeight=pgm_read_byte(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
    8966:	9f 5f       	subi	r25, 0xFF	; 255
    8968:	31 96       	adiw	r30, 0x01	; 1
    896a:	97 17       	cp	r25, r23
    896c:	c8 f3       	brcs	.-14     	; 0x8960 <DrawMap2+0x28>
void DrawMap2(unsigned char x,unsigned char y,const char *map){
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
	unsigned char mapHeight=pgm_read_byte(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
    896e:	6f 5f       	subi	r22, 0xFF	; 255
    8970:	4c 0f       	add	r20, r28
    8972:	5d 1f       	adc	r21, r29
    8974:	22 5e       	subi	r18, 0xE2	; 226
    8976:	3f 4f       	sbci	r19, 0xFF	; 255
    8978:	61 17       	cp	r22, r17
    897a:	30 f4       	brcc	.+12     	; 0x8988 <DrawMap2+0x50>
    897c:	d9 01       	movw	r26, r18
    897e:	a0 5e       	subi	r26, 0xE0	; 224
    8980:	be 4f       	sbci	r27, 0xFE	; 254
    8982:	fa 01       	movw	r30, r20
    8984:	90 e0       	ldi	r25, 0x00	; 0
    8986:	f1 cf       	rjmp	.-30     	; 0x896a <DrawMap2+0x32>
			
		
		}
	}

}
    8988:	df 91       	pop	r29
    898a:	cf 91       	pop	r28
    898c:	1f 91       	pop	r17
    898e:	08 95       	ret

00008990 <MapSprite>:
		ClearVsyncFlag();		
	}
}

#if SPRITES_ENABLED == 1
	void MapSprite(unsigned char startSprite,const char *map){
    8990:	1f 93       	push	r17
    8992:	cf 93       	push	r28
    8994:	df 93       	push	r29
    8996:	a8 2f       	mov	r26, r24
    8998:	fb 01       	movw	r30, r22
		unsigned char tile;
		unsigned char mapWidth=pgm_read_byte(&(map[0]));
    899a:	74 91       	lpm	r23, Z+
		unsigned char mapHeight=pgm_read_byte(&(map[1]));
    899c:	31 96       	adiw	r30, 0x01	; 1
    899e:	b4 91       	lpm	r27, Z+
    89a0:	c7 2f       	mov	r28, r23
    89a2:	d0 e0       	ldi	r29, 0x00	; 0
    89a4:	af 01       	movw	r20, r30
    89a6:	4f 5f       	subi	r20, 0xFF	; 255
    89a8:	5f 4f       	sbci	r21, 0xFF	; 255
    89aa:	60 e0       	ldi	r22, 0x00	; 0
    89ac:	16 c0       	rjmp	.+44     	; 0x89da <MapSprite+0x4a>

		for(unsigned char dy=0;dy<mapHeight;dy++){
			for(unsigned char dx=0;dx<mapWidth;dx++){
			
			 	tile=pgm_read_byte(&(map[(dy*mapWidth)+dx+2]));		
    89ae:	f9 01       	movw	r30, r18
    89b0:	84 91       	lpm	r24, Z+
				sprites[startSprite++].tileIndex=tile ;
    89b2:	e1 2f       	mov	r30, r17
    89b4:	f0 e0       	ldi	r31, 0x00	; 0
    89b6:	ee 0f       	add	r30, r30
    89b8:	ff 1f       	adc	r31, r31
    89ba:	ee 0f       	add	r30, r30
    89bc:	ff 1f       	adc	r31, r31
    89be:	e3 56       	subi	r30, 0x63	; 99
    89c0:	f4 4f       	sbci	r31, 0xF4	; 244
    89c2:	80 83       	st	Z, r24
		unsigned char tile;
		unsigned char mapWidth=pgm_read_byte(&(map[0]));
		unsigned char mapHeight=pgm_read_byte(&(map[1]));

		for(unsigned char dy=0;dy<mapHeight;dy++){
			for(unsigned char dx=0;dx<mapWidth;dx++){
    89c4:	9f 5f       	subi	r25, 0xFF	; 255
    89c6:	2f 5f       	subi	r18, 0xFF	; 255
    89c8:	3f 4f       	sbci	r19, 0xFF	; 255
    89ca:	19 2f       	mov	r17, r25
    89cc:	1a 0f       	add	r17, r26
    89ce:	97 17       	cp	r25, r23
    89d0:	70 f3       	brcs	.-36     	; 0x89ae <MapSprite+0x1e>
    89d2:	a7 0f       	add	r26, r23
	void MapSprite(unsigned char startSprite,const char *map){
		unsigned char tile;
		unsigned char mapWidth=pgm_read_byte(&(map[0]));
		unsigned char mapHeight=pgm_read_byte(&(map[1]));

		for(unsigned char dy=0;dy<mapHeight;dy++){
    89d4:	6f 5f       	subi	r22, 0xFF	; 255
    89d6:	4c 0f       	add	r20, r28
    89d8:	5d 1f       	adc	r21, r29
    89da:	6b 17       	cp	r22, r27
    89dc:	18 f4       	brcc	.+6      	; 0x89e4 <MapSprite+0x54>
    89de:	9a 01       	movw	r18, r20
    89e0:	90 e0       	ldi	r25, 0x00	; 0
    89e2:	f3 cf       	rjmp	.-26     	; 0x89ca <MapSprite+0x3a>
			 	tile=pgm_read_byte(&(map[(dy*mapWidth)+dx+2]));		
				sprites[startSprite++].tileIndex=tile ;
			}
		}

	}
    89e4:	df 91       	pop	r29
    89e6:	cf 91       	pop	r28
    89e8:	1f 91       	pop	r17
    89ea:	08 95       	ret

000089ec <MoveSprite>:

	void MoveSprite(unsigned char startSprite,unsigned char x,unsigned char y,unsigned char width,unsigned char height){
    89ec:	0f 93       	push	r16
    89ee:	50 e0       	ldi	r21, 0x00	; 0
    89f0:	12 c0       	rjmp	.+36     	; 0x8a16 <MoveSprite+0x2a>
	
		for(unsigned char dy=0;dy<height;dy++){
			for(unsigned char dx=0;dx<width;dx++){
				
				sprites[startSprite].x=x+(8*dx);
    89f2:	f0 e0       	ldi	r31, 0x00	; 0
    89f4:	ee 0f       	add	r30, r30
    89f6:	ff 1f       	adc	r31, r31
    89f8:	ee 0f       	add	r30, r30
    89fa:	ff 1f       	adc	r31, r31
    89fc:	e5 56       	subi	r30, 0x65	; 101
    89fe:	f4 4f       	sbci	r31, 0xF4	; 244
    8a00:	30 83       	st	Z, r19
				sprites[startSprite].y=y+(8*dy);
    8a02:	41 83       	std	Z+1, r20	; 0x01
	}

	void MoveSprite(unsigned char startSprite,unsigned char x,unsigned char y,unsigned char width,unsigned char height){
	
		for(unsigned char dy=0;dy<height;dy++){
			for(unsigned char dx=0;dx<width;dx++){
    8a04:	9f 5f       	subi	r25, 0xFF	; 255
    8a06:	38 5f       	subi	r19, 0xF8	; 248
    8a08:	e9 2f       	mov	r30, r25
    8a0a:	e8 0f       	add	r30, r24
    8a0c:	92 17       	cp	r25, r18
    8a0e:	88 f3       	brcs	.-30     	; 0x89f2 <MoveSprite+0x6>
    8a10:	82 0f       	add	r24, r18

	}

	void MoveSprite(unsigned char startSprite,unsigned char x,unsigned char y,unsigned char width,unsigned char height){
	
		for(unsigned char dy=0;dy<height;dy++){
    8a12:	5f 5f       	subi	r21, 0xFF	; 255
    8a14:	48 5f       	subi	r20, 0xF8	; 248
    8a16:	50 17       	cp	r21, r16
    8a18:	18 f4       	brcc	.+6      	; 0x8a20 <MoveSprite+0x34>
    8a1a:	36 2f       	mov	r19, r22
    8a1c:	90 e0       	ldi	r25, 0x00	; 0
    8a1e:	f4 cf       	rjmp	.-24     	; 0x8a08 <MoveSprite+0x1c>
				sprites[startSprite].y=y+(8*dy);
				startSprite++;
			}
		}	

	}
    8a20:	0f 91       	pop	r16
    8a22:	08 95       	ret

00008a24 <WaitVsync>:
		}
	}
}

//Wait for the beginning of next frame (30hz)
void WaitVsync(int count){
    8a24:	0f 93       	push	r16
    8a26:	1f 93       	push	r17
    8a28:	cf 93       	push	r28
    8a2a:	df 93       	push	r29
    8a2c:	8c 01       	movw	r16, r24
    8a2e:	c0 e0       	ldi	r28, 0x00	; 0
    8a30:	d0 e0       	ldi	r29, 0x00	; 0
    8a32:	07 c0       	rjmp	.+14     	; 0x8a42 <WaitVsync+0x1e>
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
		while(!GetVsyncFlag());
    8a34:	0e 94 5f 35 	call	0x6abe	; 0x6abe <GetVsyncFlag>
    8a38:	88 23       	and	r24, r24
    8a3a:	e1 f3       	breq	.-8      	; 0x8a34 <WaitVsync+0x10>
		ClearVsyncFlag();		
    8a3c:	0e 94 62 35 	call	0x6ac4	; 0x6ac4 <ClearVsyncFlag>

//Wait for the beginning of next frame (30hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    8a40:	21 96       	adiw	r28, 0x01	; 1
    8a42:	c0 17       	cp	r28, r16
    8a44:	d1 07       	cpc	r29, r17
    8a46:	b4 f3       	brlt	.-20     	; 0x8a34 <WaitVsync+0x10>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    8a48:	df 91       	pop	r29
    8a4a:	cf 91       	pop	r28
    8a4c:	1f 91       	pop	r17
    8a4e:	0f 91       	pop	r16
    8a50:	08 95       	ret

00008a52 <FontFill>:
		}
	}
}

//fill a region with the specified tile from the font table
void FontFill(int x,int y,int width,int height,int tile){
    8a52:	8f 92       	push	r8
    8a54:	9f 92       	push	r9
    8a56:	af 92       	push	r10
    8a58:	bf 92       	push	r11
    8a5a:	cf 92       	push	r12
    8a5c:	df 92       	push	r13
    8a5e:	ef 92       	push	r14
    8a60:	ff 92       	push	r15
    8a62:	0f 93       	push	r16
    8a64:	1f 93       	push	r17
    8a66:	cf 93       	push	r28
    8a68:	df 93       	push	r29
    8a6a:	88 2e       	mov	r8, r24
    8a6c:	96 2e       	mov	r9, r22
    8a6e:	5a 01       	movw	r10, r20
    8a70:	69 01       	movw	r12, r18
    8a72:	f0 2e       	mov	r15, r16
    8a74:	00 e0       	ldi	r16, 0x00	; 0
    8a76:	10 e0       	ldi	r17, 0x00	; 0
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32)+RAM_TILES_COUNT);
    8a78:	80 ef       	ldi	r24, 0xF0	; 240
    8a7a:	f8 0e       	add	r15, r24
    8a7c:	0c c0       	rjmp	.+24     	; 0x8a96 <FontFill+0x44>
    8a7e:	4f 2d       	mov	r20, r15
    8a80:	6e 2d       	mov	r22, r14
    8a82:	88 2d       	mov	r24, r8
    8a84:	8c 0f       	add	r24, r28
    8a86:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>
//fill a region with the specified tile from the font table
void FontFill(int x,int y,int width,int height,int tile){
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
    8a8a:	21 96       	adiw	r28, 0x01	; 1
    8a8c:	ca 15       	cp	r28, r10
    8a8e:	db 05       	cpc	r29, r11
    8a90:	b4 f3       	brlt	.-20     	; 0x8a7e <FontFill+0x2c>

//fill a region with the specified tile from the font table
void FontFill(int x,int y,int width,int height,int tile){
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
    8a92:	0f 5f       	subi	r16, 0xFF	; 255
    8a94:	1f 4f       	sbci	r17, 0xFF	; 255
    8a96:	0c 15       	cp	r16, r12
    8a98:	1d 05       	cpc	r17, r13
    8a9a:	2c f4       	brge	.+10     	; 0x8aa6 <FontFill+0x54>
    8a9c:	c0 e0       	ldi	r28, 0x00	; 0
    8a9e:	d0 e0       	ldi	r29, 0x00	; 0
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32)+RAM_TILES_COUNT);
    8aa0:	e0 2e       	mov	r14, r16
    8aa2:	e9 0c       	add	r14, r9
    8aa4:	f3 cf       	rjmp	.-26     	; 0x8a8c <FontFill+0x3a>
		}
	}
}
    8aa6:	df 91       	pop	r29
    8aa8:	cf 91       	pop	r28
    8aaa:	1f 91       	pop	r17
    8aac:	0f 91       	pop	r16
    8aae:	ff 90       	pop	r15
    8ab0:	ef 90       	pop	r14
    8ab2:	df 90       	pop	r13
    8ab4:	cf 90       	pop	r12
    8ab6:	bf 90       	pop	r11
    8ab8:	af 90       	pop	r10
    8aba:	9f 90       	pop	r9
    8abc:	8f 90       	pop	r8
    8abe:	08 95       	ret

00008ac0 <PrintChar>:
	}
	
}

//Print a single character
void PrintChar(int x,int y,char c){
    8ac0:	40 51       	subi	r20, 0x10	; 16
    8ac2:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>

	SetFont(x,y,(c-32)+RAM_TILES_COUNT);
	
}
    8ac6:	08 95       	ret

00008ac8 <Print>:
	PrintHexByte(x,y, (unsigned int)value>>8);
	PrintHexByte(x+2,y,value&0xff);
}

//Print a string
void Print(int x,int y,const char *string){
    8ac8:	ff 92       	push	r15
    8aca:	0f 93       	push	r16
    8acc:	1f 93       	push	r17
    8ace:	cf 93       	push	r28
    8ad0:	df 93       	push	r29
    8ad2:	8c 01       	movw	r16, r24
    8ad4:	f6 2e       	mov	r15, r22
    8ad6:	ea 01       	movw	r28, r20

	int i=0;
	char c;

	while(1){
		c=pgm_read_byte(&(string[i++]));		
    8ad8:	fe 01       	movw	r30, r28
    8ada:	44 91       	lpm	r20, Z+
    8adc:	21 96       	adiw	r28, 0x01	; 1
		if(c!=0){
    8ade:	44 23       	and	r20, r20
    8ae0:	49 f0       	breq	.+18     	; 0x8af4 <Print+0x2c>
			c=((c&127)-32) + RAM_TILES_COUNT;			
			SetFont(x++,y,c);
		}else{
			break;
    8ae2:	80 2f       	mov	r24, r16

	while(1){
		c=pgm_read_byte(&(string[i++]));		
		if(c!=0){
			c=((c&127)-32) + RAM_TILES_COUNT;			
			SetFont(x++,y,c);
    8ae4:	0f 5f       	subi	r16, 0xFF	; 255
    8ae6:	1f 4f       	sbci	r17, 0xFF	; 255
    8ae8:	4f 77       	andi	r20, 0x7F	; 127
    8aea:	40 51       	subi	r20, 0x10	; 16
    8aec:	6f 2d       	mov	r22, r15
    8aee:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>
    8af2:	f2 cf       	rjmp	.-28     	; 0x8ad8 <Print+0x10>
		}else{
			break;
		}
	}
	
}
    8af4:	df 91       	pop	r29
    8af6:	cf 91       	pop	r28
    8af8:	1f 91       	pop	r17
    8afa:	0f 91       	pop	r16
    8afc:	ff 90       	pop	r15
    8afe:	08 95       	ret

00008b00 <PrintHexByte>:
		byte<<=1;
	}
}

//Print a byte in hexadecimal
void PrintHexByte(char x,char y,unsigned char byte){
    8b00:	ff 92       	push	r15
    8b02:	0f 93       	push	r16
    8b04:	1f 93       	push	r17
    8b06:	18 2f       	mov	r17, r24
    8b08:	06 2f       	mov	r16, r22
    8b0a:	f4 2e       	mov	r15, r20
	unsigned char nibble;

	//hi nibble	
	nibble=(byte>>4);
    8b0c:	42 95       	swap	r20
    8b0e:	4f 70       	andi	r20, 0x0F	; 15
	if(nibble<=9){
    8b10:	4a 30       	cpi	r20, 0x0A	; 10
    8b12:	10 f4       	brcc	.+4      	; 0x8b18 <PrintHexByte+0x18>
		SetFont(x,y,nibble+CHAR_ZERO+ RAM_TILES_COUNT);
    8b14:	40 5e       	subi	r20, 0xE0	; 224
    8b16:	01 c0       	rjmp	.+2      	; 0x8b1a <PrintHexByte+0x1a>
	}else{
		SetFont(x,y,nibble+CHAR_ZERO+7+ RAM_TILES_COUNT);
    8b18:	49 5d       	subi	r20, 0xD9	; 217
    8b1a:	60 2f       	mov	r22, r16
    8b1c:	81 2f       	mov	r24, r17
    8b1e:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>
	}

	//lo nibble	
	nibble=(byte&0xf);
    8b22:	4f 2d       	mov	r20, r15
    8b24:	4f 70       	andi	r20, 0x0F	; 15
    8b26:	81 2f       	mov	r24, r17
    8b28:	8f 5f       	subi	r24, 0xFF	; 255
	if(nibble<=9){		
    8b2a:	4a 30       	cpi	r20, 0x0A	; 10
    8b2c:	10 f4       	brcc	.+4      	; 0x8b32 <PrintHexByte+0x32>
		SetFont(x+1,y,nibble+CHAR_ZERO+ RAM_TILES_COUNT);
    8b2e:	40 5e       	subi	r20, 0xE0	; 224
    8b30:	01 c0       	rjmp	.+2      	; 0x8b34 <PrintHexByte+0x34>
	}else{
		SetFont(x+1,y,nibble+CHAR_ZERO+7+ RAM_TILES_COUNT);
    8b32:	49 5d       	subi	r20, 0xD9	; 217
    8b34:	60 2f       	mov	r22, r16
    8b36:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>
	}

}
    8b3a:	1f 91       	pop	r17
    8b3c:	0f 91       	pop	r16
    8b3e:	ff 90       	pop	r15
    8b40:	08 95       	ret

00008b42 <PrintHexInt>:

//Print a hexdecimal integer
void PrintHexInt(char x,char y,int value){
    8b42:	ff 92       	push	r15
    8b44:	0f 93       	push	r16
    8b46:	1f 93       	push	r17
    8b48:	f8 2e       	mov	r15, r24
    8b4a:	16 2f       	mov	r17, r22
    8b4c:	04 2f       	mov	r16, r20
    8b4e:	45 2f       	mov	r20, r21
	PrintHexByte(x,y, (unsigned int)value>>8);
    8b50:	0e 94 80 45 	call	0x8b00	; 0x8b00 <PrintHexByte>
	PrintHexByte(x+2,y,value&0xff);
    8b54:	40 2f       	mov	r20, r16
    8b56:	61 2f       	mov	r22, r17
    8b58:	8f 2d       	mov	r24, r15
    8b5a:	8e 5f       	subi	r24, 0xFE	; 254
    8b5c:	0e 94 80 45 	call	0x8b00	; 0x8b00 <PrintHexByte>
}
    8b60:	1f 91       	pop	r17
    8b62:	0f 91       	pop	r16
    8b64:	ff 90       	pop	r15
    8b66:	08 95       	ret

00008b68 <PrintBinaryByte>:
	}
		
}

//Print a byte in binary format
void PrintBinaryByte(char x,char y,unsigned char byte){
    8b68:	ef 92       	push	r14
    8b6a:	ff 92       	push	r15
    8b6c:	0f 93       	push	r16
    8b6e:	1f 93       	push	r17
    8b70:	f6 2e       	mov	r15, r22
    8b72:	04 2f       	mov	r16, r20
    8b74:	18 2f       	mov	r17, r24
	int i;
	
	for(i=0;i<8;i++){
    8b76:	e8 e0       	ldi	r30, 0x08	; 8
    8b78:	ee 2e       	mov	r14, r30
    8b7a:	e8 0e       	add	r14, r24
		
		if(byte&0x80){
    8b7c:	07 ff       	sbrs	r16, 7
    8b7e:	02 c0       	rjmp	.+4      	; 0x8b84 <PrintBinaryByte+0x1c>
			SetFont(x+i,y,CHAR_ZERO+1+RAM_TILES_COUNT);
    8b80:	41 e2       	ldi	r20, 0x21	; 33
    8b82:	01 c0       	rjmp	.+2      	; 0x8b86 <PrintBinaryByte+0x1e>
		}else{
			SetFont(x+i,y,CHAR_ZERO+RAM_TILES_COUNT);
    8b84:	40 e2       	ldi	r20, 0x20	; 32
    8b86:	6f 2d       	mov	r22, r15
    8b88:	81 2f       	mov	r24, r17
    8b8a:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>
    8b8e:	1f 5f       	subi	r17, 0xFF	; 255

//Print a byte in binary format
void PrintBinaryByte(char x,char y,unsigned char byte){
	int i;
	
	for(i=0;i<8;i++){
    8b90:	1e 15       	cp	r17, r14
    8b92:	11 f0       	breq	.+4      	; 0x8b98 <PrintBinaryByte+0x30>
		if(byte&0x80){
			SetFont(x+i,y,CHAR_ZERO+1+RAM_TILES_COUNT);
		}else{
			SetFont(x+i,y,CHAR_ZERO+RAM_TILES_COUNT);
		}
		byte<<=1;
    8b94:	00 0f       	add	r16, r16
    8b96:	f2 cf       	rjmp	.-28     	; 0x8b7c <PrintBinaryByte+0x14>
	}
}
    8b98:	1f 91       	pop	r17
    8b9a:	0f 91       	pop	r16
    8b9c:	ff 90       	pop	r15
    8b9e:	ef 90       	pop	r14
    8ba0:	08 95       	ret

00008ba2 <PrintInt>:
	}
		
}

//Print an unsigned byte in decimal
void PrintInt(int x,int y, unsigned int val,bool zeropad){
    8ba2:	df 92       	push	r13
    8ba4:	ef 92       	push	r14
    8ba6:	ff 92       	push	r15
    8ba8:	0f 93       	push	r16
    8baa:	1f 93       	push	r17
    8bac:	cf 93       	push	r28
    8bae:	df 93       	push	r29
    8bb0:	e6 2e       	mov	r14, r22
    8bb2:	8a 01       	movw	r16, r20
    8bb4:	d2 2e       	mov	r13, r18
    8bb6:	ec 01       	movw	r28, r24
    8bb8:	ff 24       	eor	r15, r15
	unsigned char c,i;

	for(i=0;i<5;i++){
		c=val%10;
		if(val>0 || i==0){
    8bba:	01 15       	cp	r16, r1
    8bbc:	11 05       	cpc	r17, r1
    8bbe:	11 f4       	brne	.+4      	; 0x8bc4 <PrintInt+0x22>
    8bc0:	ff 20       	and	r15, r15
    8bc2:	41 f4       	brne	.+16     	; 0x8bd4 <PrintInt+0x32>
			SetFont(x--,y,c+CHAR_ZERO+RAM_TILES_COUNT);
    8bc4:	c8 01       	movw	r24, r16
    8bc6:	6a e0       	ldi	r22, 0x0A	; 10
    8bc8:	70 e0       	ldi	r23, 0x00	; 0
    8bca:	0e 94 97 4e 	call	0x9d2e	; 0x9d2e <__udivmodhi4>
    8bce:	80 5e       	subi	r24, 0xE0	; 224
    8bd0:	48 2f       	mov	r20, r24
    8bd2:	05 c0       	rjmp	.+10     	; 0x8bde <PrintInt+0x3c>
		}else{
			if(zeropad){
    8bd4:	dd 20       	and	r13, r13
    8bd6:	11 f0       	breq	.+4      	; 0x8bdc <PrintInt+0x3a>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
    8bd8:	40 e2       	ldi	r20, 0x20	; 32
    8bda:	01 c0       	rjmp	.+2      	; 0x8bde <PrintInt+0x3c>
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
    8bdc:	40 e1       	ldi	r20, 0x10	; 16
    8bde:	6e 2d       	mov	r22, r14
    8be0:	8c 2f       	mov	r24, r28
    8be2:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>

//Print an unsigned byte in decimal
void PrintInt(int x,int y, unsigned int val,bool zeropad){
	unsigned char c,i;

	for(i=0;i<5;i++){
    8be6:	f3 94       	inc	r15
    8be8:	21 97       	sbiw	r28, 0x01	; 1
    8bea:	85 e0       	ldi	r24, 0x05	; 5
    8bec:	f8 16       	cp	r15, r24
    8bee:	39 f0       	breq	.+14     	; 0x8bfe <PrintInt+0x5c>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
			}
		}
		val=val/10;
    8bf0:	c8 01       	movw	r24, r16
    8bf2:	6a e0       	ldi	r22, 0x0A	; 10
    8bf4:	70 e0       	ldi	r23, 0x00	; 0
    8bf6:	0e 94 97 4e 	call	0x9d2e	; 0x9d2e <__udivmodhi4>
    8bfa:	8b 01       	movw	r16, r22
    8bfc:	de cf       	rjmp	.-68     	; 0x8bba <PrintInt+0x18>
	}
		
}
    8bfe:	df 91       	pop	r29
    8c00:	cf 91       	pop	r28
    8c02:	1f 91       	pop	r17
    8c04:	0f 91       	pop	r16
    8c06:	ff 90       	pop	r15
    8c08:	ef 90       	pop	r14
    8c0a:	df 90       	pop	r13
    8c0c:	08 95       	ret

00008c0e <PrintByte>:
	}
		
}

//Print an unsigned byte in decimal
void PrintByte(int x,int y, unsigned char val,bool zeropad){
    8c0e:	ef 92       	push	r14
    8c10:	ff 92       	push	r15
    8c12:	0f 93       	push	r16
    8c14:	1f 93       	push	r17
    8c16:	cf 93       	push	r28
    8c18:	df 93       	push	r29
    8c1a:	f6 2e       	mov	r15, r22
    8c1c:	04 2f       	mov	r16, r20
    8c1e:	e2 2e       	mov	r14, r18
    8c20:	ec 01       	movw	r28, r24
    8c22:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char c,i;

	for(i=0;i<3;i++){
		c=val%10;
		if(val>0 || i==0){
    8c24:	00 23       	and	r16, r16
    8c26:	11 f4       	brne	.+4      	; 0x8c2c <PrintByte+0x1e>
    8c28:	11 23       	and	r17, r17
    8c2a:	39 f4       	brne	.+14     	; 0x8c3a <PrintByte+0x2c>
			SetFont(x--,y,c+CHAR_ZERO+RAM_TILES_COUNT);
    8c2c:	80 2f       	mov	r24, r16
    8c2e:	6a e0       	ldi	r22, 0x0A	; 10
    8c30:	0e 94 8b 4e 	call	0x9d16	; 0x9d16 <__udivmodqi4>
    8c34:	90 5e       	subi	r25, 0xE0	; 224
    8c36:	49 2f       	mov	r20, r25
    8c38:	05 c0       	rjmp	.+10     	; 0x8c44 <PrintByte+0x36>
		}else{
			if(zeropad){
    8c3a:	ee 20       	and	r14, r14
    8c3c:	11 f0       	breq	.+4      	; 0x8c42 <PrintByte+0x34>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
    8c3e:	40 e2       	ldi	r20, 0x20	; 32
    8c40:	01 c0       	rjmp	.+2      	; 0x8c44 <PrintByte+0x36>
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
    8c42:	40 e1       	ldi	r20, 0x10	; 16
    8c44:	6f 2d       	mov	r22, r15
    8c46:	8c 2f       	mov	r24, r28
    8c48:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>

//Print an unsigned byte in decimal
void PrintByte(int x,int y, unsigned char val,bool zeropad){
	unsigned char c,i;

	for(i=0;i<3;i++){
    8c4c:	1f 5f       	subi	r17, 0xFF	; 255
    8c4e:	21 97       	sbiw	r28, 0x01	; 1
    8c50:	13 30       	cpi	r17, 0x03	; 3
    8c52:	31 f0       	breq	.+12     	; 0x8c60 <PrintByte+0x52>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
			}
		}
		val=val/10;
    8c54:	80 2f       	mov	r24, r16
    8c56:	6a e0       	ldi	r22, 0x0A	; 10
    8c58:	0e 94 8b 4e 	call	0x9d16	; 0x9d16 <__udivmodqi4>
    8c5c:	08 2f       	mov	r16, r24
    8c5e:	e2 cf       	rjmp	.-60     	; 0x8c24 <PrintByte+0x16>
	}
		
}
    8c60:	df 91       	pop	r29
    8c62:	cf 91       	pop	r28
    8c64:	1f 91       	pop	r17
    8c66:	0f 91       	pop	r16
    8c68:	ff 90       	pop	r15
    8c6a:	ef 90       	pop	r14
    8c6c:	08 95       	ret

00008c6e <PrintLong>:
	}

}

//Print an unsigned long in decimal
void PrintLong(int x,int y, unsigned long val){
    8c6e:	cf 92       	push	r12
    8c70:	df 92       	push	r13
    8c72:	ef 92       	push	r14
    8c74:	ff 92       	push	r15
    8c76:	0f 93       	push	r16
    8c78:	1f 93       	push	r17
    8c7a:	cf 93       	push	r28
    8c7c:	df 93       	push	r29
    8c7e:	c6 2e       	mov	r12, r22
    8c80:	79 01       	movw	r14, r18
    8c82:	8a 01       	movw	r16, r20
    8c84:	ec 01       	movw	r28, r24
    8c86:	dd 24       	eor	r13, r13
	unsigned char c,i;

	for(i=0;i<6;i++){
		c=val%10;
		if(val>0 || i==0){
    8c88:	e1 14       	cp	r14, r1
    8c8a:	f1 04       	cpc	r15, r1
    8c8c:	01 05       	cpc	r16, r1
    8c8e:	11 05       	cpc	r17, r1
    8c90:	11 f4       	brne	.+4      	; 0x8c96 <PrintLong+0x28>
    8c92:	dd 20       	and	r13, r13
    8c94:	59 f4       	brne	.+22     	; 0x8cac <PrintLong+0x3e>
			SetFont(x--,y,c+CHAR_ZERO+RAM_TILES_COUNT);
    8c96:	c8 01       	movw	r24, r16
    8c98:	b7 01       	movw	r22, r14
    8c9a:	2a e0       	ldi	r18, 0x0A	; 10
    8c9c:	30 e0       	ldi	r19, 0x00	; 0
    8c9e:	40 e0       	ldi	r20, 0x00	; 0
    8ca0:	50 e0       	ldi	r21, 0x00	; 0
    8ca2:	0e 94 be 4e 	call	0x9d7c	; 0x9d7c <__udivmodsi4>
    8ca6:	46 2f       	mov	r20, r22
    8ca8:	40 5e       	subi	r20, 0xE0	; 224
    8caa:	01 c0       	rjmp	.+2      	; 0x8cae <PrintLong+0x40>
		}else{
			SetFont(x--,y,0+RAM_TILES_COUNT);
    8cac:	40 e1       	ldi	r20, 0x10	; 16
    8cae:	6c 2d       	mov	r22, r12
    8cb0:	8c 2f       	mov	r24, r28
    8cb2:	0e 94 43 35 	call	0x6a86	; 0x6a86 <SetFont>

//Print an unsigned long in decimal
void PrintLong(int x,int y, unsigned long val){
	unsigned char c,i;

	for(i=0;i<6;i++){
    8cb6:	d3 94       	inc	r13
    8cb8:	21 97       	sbiw	r28, 0x01	; 1
    8cba:	86 e0       	ldi	r24, 0x06	; 6
    8cbc:	d8 16       	cp	r13, r24
    8cbe:	69 f0       	breq	.+26     	; 0x8cda <PrintLong+0x6c>
		if(val>0 || i==0){
			SetFont(x--,y,c+CHAR_ZERO+RAM_TILES_COUNT);
		}else{
			SetFont(x--,y,0+RAM_TILES_COUNT);
		}
		val=val/10;
    8cc0:	c8 01       	movw	r24, r16
    8cc2:	b7 01       	movw	r22, r14
    8cc4:	2a e0       	ldi	r18, 0x0A	; 10
    8cc6:	30 e0       	ldi	r19, 0x00	; 0
    8cc8:	40 e0       	ldi	r20, 0x00	; 0
    8cca:	50 e0       	ldi	r21, 0x00	; 0
    8ccc:	0e 94 be 4e 	call	0x9d7c	; 0x9d7c <__udivmodsi4>
    8cd0:	c9 01       	movw	r24, r18
    8cd2:	da 01       	movw	r26, r20
    8cd4:	7c 01       	movw	r14, r24
    8cd6:	8d 01       	movw	r16, r26
    8cd8:	d7 cf       	rjmp	.-82     	; 0x8c88 <PrintLong+0x1a>
	}
		
}
    8cda:	df 91       	pop	r29
    8cdc:	cf 91       	pop	r28
    8cde:	1f 91       	pop	r17
    8ce0:	0f 91       	pop	r16
    8ce2:	ff 90       	pop	r15
    8ce4:	ef 90       	pop	r14
    8ce6:	df 90       	pop	r13
    8ce8:	cf 90       	pop	r12
    8cea:	08 95       	ret

00008cec <Fill>:
	SetFont(x,y,(c-32)+RAM_TILES_COUNT);
	
}

//fill a region with the specified tile from the tile table
void Fill(int x,int y,int width,int height,int tile){
    8cec:	7f 92       	push	r7
    8cee:	8f 92       	push	r8
    8cf0:	9f 92       	push	r9
    8cf2:	af 92       	push	r10
    8cf4:	bf 92       	push	r11
    8cf6:	cf 92       	push	r12
    8cf8:	df 92       	push	r13
    8cfa:	ef 92       	push	r14
    8cfc:	ff 92       	push	r15
    8cfe:	0f 93       	push	r16
    8d00:	1f 93       	push	r17
    8d02:	cf 93       	push	r28
    8d04:	df 93       	push	r29
    8d06:	78 2e       	mov	r7, r24
    8d08:	a6 2e       	mov	r10, r22
    8d0a:	4a 01       	movw	r8, r20
    8d0c:	69 01       	movw	r12, r18
    8d0e:	78 01       	movw	r14, r16
    8d10:	00 e0       	ldi	r16, 0x00	; 0
    8d12:	10 e0       	ldi	r17, 0x00	; 0
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetTile(x+cx,y+cy,tile+RAM_TILES_COUNT);
    8d14:	80 e1       	ldi	r24, 0x10	; 16
    8d16:	90 e0       	ldi	r25, 0x00	; 0
    8d18:	e8 0e       	add	r14, r24
    8d1a:	f9 1e       	adc	r15, r25
    8d1c:	0c c0       	rjmp	.+24     	; 0x8d36 <Fill+0x4a>
    8d1e:	a7 01       	movw	r20, r14
    8d20:	6b 2d       	mov	r22, r11
    8d22:	87 2d       	mov	r24, r7
    8d24:	8c 0f       	add	r24, r28
    8d26:	0e 94 35 35 	call	0x6a6a	; 0x6a6a <SetTile>
//fill a region with the specified tile from the tile table
void Fill(int x,int y,int width,int height,int tile){
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
    8d2a:	21 96       	adiw	r28, 0x01	; 1
    8d2c:	c8 15       	cp	r28, r8
    8d2e:	d9 05       	cpc	r29, r9
    8d30:	b4 f3       	brlt	.-20     	; 0x8d1e <Fill+0x32>

//fill a region with the specified tile from the tile table
void Fill(int x,int y,int width,int height,int tile){
	int cx,cy;
	
	for(cy=0;cy<height;cy++){
    8d32:	0f 5f       	subi	r16, 0xFF	; 255
    8d34:	1f 4f       	sbci	r17, 0xFF	; 255
    8d36:	0c 15       	cp	r16, r12
    8d38:	1d 05       	cpc	r17, r13
    8d3a:	2c f4       	brge	.+10     	; 0x8d46 <Fill+0x5a>
    8d3c:	c0 e0       	ldi	r28, 0x00	; 0
    8d3e:	d0 e0       	ldi	r29, 0x00	; 0
		for(cx=0;cx<width;cx++){		
			SetTile(x+cx,y+cy,tile+RAM_TILES_COUNT);
    8d40:	b0 2e       	mov	r11, r16
    8d42:	ba 0c       	add	r11, r10
    8d44:	f3 cf       	rjmp	.-26     	; 0x8d2c <Fill+0x40>
		}
	}
}
    8d46:	df 91       	pop	r29
    8d48:	cf 91       	pop	r28
    8d4a:	1f 91       	pop	r17
    8d4c:	0f 91       	pop	r16
    8d4e:	ff 90       	pop	r15
    8d50:	ef 90       	pop	r14
    8d52:	df 90       	pop	r13
    8d54:	cf 90       	pop	r12
    8d56:	bf 90       	pop	r11
    8d58:	af 90       	pop	r10
    8d5a:	9f 90       	pop	r9
    8d5c:	8f 90       	pop	r8
    8d5e:	7f 90       	pop	r7
    8d60:	08 95       	ret

00008d62 <DrawMap>:



//Draws a map of tile at the specified position

void DrawMap(unsigned char x,unsigned char y,const int *map){
    8d62:	7f 92       	push	r7
    8d64:	8f 92       	push	r8
    8d66:	9f 92       	push	r9
    8d68:	af 92       	push	r10
    8d6a:	bf 92       	push	r11
    8d6c:	cf 92       	push	r12
    8d6e:	df 92       	push	r13
    8d70:	ef 92       	push	r14
    8d72:	ff 92       	push	r15
    8d74:	0f 93       	push	r16
    8d76:	1f 93       	push	r17
    8d78:	cf 93       	push	r28
    8d7a:	df 93       	push	r29
    8d7c:	78 2e       	mov	r7, r24
    8d7e:	86 2e       	mov	r8, r22
    8d80:	ea 01       	movw	r28, r20
	int i;
	int mapWidth=pgm_read_word(&(map[0]));
    8d82:	fa 01       	movw	r30, r20
    8d84:	c5 90       	lpm	r12, Z+
    8d86:	d4 90       	lpm	r13, Z+
	int mapHeight=pgm_read_word(&(map[1]));
    8d88:	fa 01       	movw	r30, r20
    8d8a:	32 96       	adiw	r30, 0x02	; 2
    8d8c:	a5 90       	lpm	r10, Z+
    8d8e:	b4 90       	lpm	r11, Z+
    8d90:	00 e0       	ldi	r16, 0x00	; 0
    8d92:	16 c0       	rjmp	.+44     	; 0x8dc0 <DrawMap+0x5e>

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
			
			i=pgm_read_word(&(map[(dy*mapWidth)+dx+2]));
    8d94:	fc 01       	movw	r30, r24
    8d96:	ee 0d       	add	r30, r14
    8d98:	ff 1d       	adc	r31, r15
    8d9a:	32 96       	adiw	r30, 0x02	; 2
    8d9c:	ee 0f       	add	r30, r30
    8d9e:	ff 1f       	adc	r31, r31
    8da0:	ec 0f       	add	r30, r28
    8da2:	fd 1f       	adc	r31, r29
    8da4:	45 91       	lpm	r20, Z+
    8da6:	54 91       	lpm	r21, Z+
			
			SetTile(x+dx,y+dy,i);	
    8da8:	69 2d       	mov	r22, r9
    8daa:	81 2f       	mov	r24, r17
    8dac:	87 0d       	add	r24, r7
    8dae:	0e 94 35 35 	call	0x6a6a	; 0x6a6a <SetTile>
	int i;
	int mapWidth=pgm_read_word(&(map[0]));
	int mapHeight=pgm_read_word(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
    8db2:	1f 5f       	subi	r17, 0xFF	; 255
    8db4:	81 2f       	mov	r24, r17
    8db6:	90 e0       	ldi	r25, 0x00	; 0
    8db8:	8c 15       	cp	r24, r12
    8dba:	9d 05       	cpc	r25, r13
    8dbc:	5c f3       	brlt	.-42     	; 0x8d94 <DrawMap+0x32>
void DrawMap(unsigned char x,unsigned char y,const int *map){
	int i;
	int mapWidth=pgm_read_word(&(map[0]));
	int mapHeight=pgm_read_word(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
    8dbe:	0f 5f       	subi	r16, 0xFF	; 255
    8dc0:	80 2f       	mov	r24, r16
    8dc2:	90 e0       	ldi	r25, 0x00	; 0
    8dc4:	8a 15       	cp	r24, r10
    8dc6:	9b 05       	cpc	r25, r11
    8dc8:	5c f4       	brge	.+22     	; 0x8de0 <DrawMap+0x7e>
		for(unsigned char dx=0;dx<mapWidth;dx++){
			
			i=pgm_read_word(&(map[(dy*mapWidth)+dx+2]));
    8dca:	8c 9d       	mul	r24, r12
    8dcc:	70 01       	movw	r14, r0
    8dce:	8d 9d       	mul	r24, r13
    8dd0:	f0 0c       	add	r15, r0
    8dd2:	9c 9d       	mul	r25, r12
    8dd4:	f0 0c       	add	r15, r0
    8dd6:	11 24       	eor	r1, r1
    8dd8:	10 e0       	ldi	r17, 0x00	; 0
			
			SetTile(x+dx,y+dy,i);	
    8dda:	90 2e       	mov	r9, r16
    8ddc:	98 0c       	add	r9, r8
    8dde:	ea cf       	rjmp	.-44     	; 0x8db4 <DrawMap+0x52>
		}
	}

}
    8de0:	df 91       	pop	r29
    8de2:	cf 91       	pop	r28
    8de4:	1f 91       	pop	r17
    8de6:	0f 91       	pop	r16
    8de8:	ff 90       	pop	r15
    8dea:	ef 90       	pop	r14
    8dec:	df 90       	pop	r13
    8dee:	cf 90       	pop	r12
    8df0:	bf 90       	pop	r11
    8df2:	af 90       	pop	r10
    8df4:	9f 90       	pop	r9
    8df6:	8f 90       	pop	r8
    8df8:	7f 90       	pop	r7
    8dfa:	08 95       	ret

00008dfc <ProcessSprites>:
	void SetSpriteVisibility(bool visible){
		spritesOn=visible;
	}


	void ProcessSprites(){
    8dfc:	2f 92       	push	r2
    8dfe:	3f 92       	push	r3
    8e00:	4f 92       	push	r4
    8e02:	5f 92       	push	r5
    8e04:	6f 92       	push	r6
    8e06:	7f 92       	push	r7
    8e08:	8f 92       	push	r8
    8e0a:	9f 92       	push	r9
    8e0c:	af 92       	push	r10
    8e0e:	bf 92       	push	r11
    8e10:	cf 92       	push	r12
    8e12:	df 92       	push	r13
    8e14:	ef 92       	push	r14
    8e16:	ff 92       	push	r15
    8e18:	0f 93       	push	r16
    8e1a:	1f 93       	push	r17
    8e1c:	df 93       	push	r29
    8e1e:	cf 93       	push	r28
    8e20:	00 d0       	rcall	.+0      	; 0x8e22 <ProcessSprites+0x26>
    8e22:	0f 92       	push	r0
    8e24:	cd b7       	in	r28, 0x3d	; 61
    8e26:	de b7       	in	r29, 0x3e	; 62
	unsigned char free_tile_index=0;
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i;
		for(i=0;i<free_tile_index;i++){
    8e28:	30 91 1a 0b 	lds	r19, 0x0B1A
    8e2c:	20 e0       	ldi	r18, 0x00	; 0
    8e2e:	10 c0       	rjmp	.+32     	; 0x8e50 <ProcessSprites+0x54>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
    8e30:	82 2f       	mov	r24, r18
    8e32:	90 e0       	ldi	r25, 0x00	; 0
    8e34:	fc 01       	movw	r30, r24
    8e36:	ee 0f       	add	r30, r30
    8e38:	ff 1f       	adc	r31, r31
    8e3a:	e8 0f       	add	r30, r24
    8e3c:	f9 1f       	adc	r31, r25
    8e3e:	ea 57       	subi	r30, 0x7A	; 122
    8e40:	f7 4f       	sbci	r31, 0xF7	; 247
    8e42:	a0 81       	ld	r26, Z
    8e44:	b1 81       	ldd	r27, Z+1	; 0x01
    8e46:	a0 5e       	subi	r26, 0xE0	; 224
    8e48:	be 4f       	sbci	r27, 0xFE	; 254
    8e4a:	82 81       	ldd	r24, Z+2	; 0x02
    8e4c:	8c 93       	st	X, r24
	unsigned char free_tile_index=0;
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i;
		for(i=0;i<free_tile_index;i++){
    8e4e:	2f 5f       	subi	r18, 0xFF	; 255
    8e50:	23 17       	cp	r18, r19
    8e52:	70 f3       	brcs	.-36     	; 0x8e30 <ProcessSprites+0x34>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}
	
		free_tile_index=0;
    8e54:	10 92 1a 0b 	sts	0x0B1A, r1
		unsigned int ramPtr;


		RestoreBackground();

		if(!spritesOn) return;
    8e58:	80 91 00 01 	lds	r24, 0x0100
    8e5c:	88 23       	and	r24, r24
    8e5e:	09 f4       	brne	.+2      	; 0x8e62 <ProcessSprites+0x66>
    8e60:	84 c0       	rjmp	.+264    	; 0x8f6a <ProcessSprites+0x16e>
    8e62:	6b e9       	ldi	r22, 0x9B	; 155
    8e64:	86 2e       	mov	r8, r22
    8e66:	6b e0       	ldi	r22, 0x0B	; 11
    8e68:	96 2e       	mov	r9, r22
    8e6a:	77 24       	eor	r7, r7
		
		for(i=0;i<MAX_SPRITES;i++){
			by=sprites[i].y;
    8e6c:	f4 01       	movw	r30, r8
    8e6e:	91 81       	ldd	r25, Z+1	; 0x01
			if(by<(SCREEN_TILES_V*TILE_HEIGHT)){
    8e70:	90 3e       	cpi	r25, 0xE0	; 224
    8e72:	08 f0       	brcs	.+2      	; 0x8e76 <ProcessSprites+0x7a>
    8e74:	71 c0       	rjmp	.+226    	; 0x8f58 <ProcessSprites+0x15c>
				tx=1;
				ty=1;
				//get the BG tiles that are overlapped by the sprite
				bx=sprites[i].x>>3;
    8e76:	80 81       	ld	r24, Z
    8e78:	38 2f       	mov	r19, r24
    8e7a:	36 95       	lsr	r19
    8e7c:	36 95       	lsr	r19
    8e7e:	36 95       	lsr	r19
				dx=sprites[i].x&0x7;
    8e80:	28 2f       	mov	r18, r24
    8e82:	27 70       	andi	r18, 0x07	; 7
				if(dx>0) tx++;
    8e84:	19 f0       	breq	.+6      	; 0x8e8c <ProcessSprites+0x90>
    8e86:	f2 e0       	ldi	r31, 0x02	; 2
    8e88:	f9 83       	std	Y+1, r31	; 0x01
    8e8a:	02 c0       	rjmp	.+4      	; 0x8e90 <ProcessSprites+0x94>
    8e8c:	81 e0       	ldi	r24, 0x01	; 1
    8e8e:	89 83       	std	Y+1, r24	; 0x01

				by=sprites[i].y>>3;			
    8e90:	89 2f       	mov	r24, r25
    8e92:	86 95       	lsr	r24
    8e94:	86 95       	lsr	r24
    8e96:	86 95       	lsr	r24
				dy=sprites[i].y&0x7;		
    8e98:	97 70       	andi	r25, 0x07	; 7
				if(dy>0) ty++;			
    8e9a:	19 f0       	breq	.+6      	; 0x8ea2 <ProcessSprites+0xa6>
    8e9c:	52 e0       	ldi	r21, 0x02	; 2
    8e9e:	65 2e       	mov	r6, r21
    8ea0:	02 c0       	rjmp	.+4      	; 0x8ea6 <ProcessSprites+0xaa>
    8ea2:	66 24       	eor	r6, r6
    8ea4:	63 94       	inc	r6
							free_tile_index++;										
						}
					
						if(bt<RAM_TILES_COUNT){

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    8ea6:	b9 2e       	mov	r11, r25
    8ea8:	aa 24       	eor	r10, r10
    8eaa:	15 01       	movw	r2, r10
    8eac:	22 0e       	add	r2, r18
    8eae:	31 1c       	adc	r3, r1
    8eb0:	9e e1       	ldi	r25, 0x1E	; 30
    8eb2:	89 9f       	mul	r24, r25
    8eb4:	80 01       	movw	r16, r0
    8eb6:	11 24       	eor	r1, r1
    8eb8:	03 0f       	add	r16, r19
    8eba:	11 1d       	adc	r17, r1
    8ebc:	cc 24       	eor	r12, r12
    8ebe:	dd 24       	eor	r13, r13
    8ec0:	40 c0       	rjmp	.+128    	; 0x8f42 <ProcessSprites+0x146>
    8ec2:	2a 81       	ldd	r18, Y+2	; 0x02
    8ec4:	3b 81       	ldd	r19, Y+3	; 0x03
    8ec6:	20 0f       	add	r18, r16
    8ec8:	31 1f       	adc	r19, r17
				for(y=0;y<ty;y++){

					for(x=0;x<tx;x++){

						ramPtr=((by+y)*VRAM_TILES_H)+bx+x;
						bt=vram[ramPtr];
    8eca:	f7 01       	movw	r30, r14
    8ecc:	70 81       	ld	r23, Z

						if( (bt>=RAM_TILES_COUNT)  && (free_tile_index < RAM_TILES_COUNT) ){
    8ece:	70 31       	cpi	r23, 0x10	; 16
    8ed0:	e8 f0       	brcs	.+58     	; 0x8f0c <ProcessSprites+0x110>
    8ed2:	60 91 1a 0b 	lds	r22, 0x0B1A
    8ed6:	60 31       	cpi	r22, 0x10	; 16
    8ed8:	10 f5       	brcc	.+68     	; 0x8f1e <ProcessSprites+0x122>

							//tile is mapped to flash. Copy it to next free RAM tile.
							//if no ram free ignore tile
							ram_tiles_restore[free_tile_index].addr=ramPtr;
    8eda:	86 2f       	mov	r24, r22
    8edc:	90 e0       	ldi	r25, 0x00	; 0
    8ede:	fc 01       	movw	r30, r24
    8ee0:	ee 0f       	add	r30, r30
    8ee2:	ff 1f       	adc	r31, r31
    8ee4:	e8 0f       	add	r30, r24
    8ee6:	f9 1f       	adc	r31, r25
    8ee8:	ea 57       	subi	r30, 0x7A	; 122
    8eea:	f7 4f       	sbci	r31, 0xF7	; 247
    8eec:	31 83       	std	Z+1, r19	; 0x01
    8eee:	20 83       	st	Z, r18
							ram_tiles_restore[free_tile_index].tileIndex=bt;
    8ef0:	72 83       	std	Z+2, r23	; 0x02
														
							CopyTileToRam(bt,free_tile_index);
    8ef2:	87 2f       	mov	r24, r23
    8ef4:	0e 94 74 35 	call	0x6ae8	; 0x6ae8 <CopyTileToRam>

							vram[ramPtr]=free_tile_index;
    8ef8:	70 91 1a 0b 	lds	r23, 0x0B1A
    8efc:	f7 01       	movw	r30, r14
    8efe:	70 83       	st	Z, r23
							bt=free_tile_index;
							free_tile_index++;										
    8f00:	7f 5f       	subi	r23, 0xFF	; 255
    8f02:	70 93 1a 0b 	sts	0x0B1A, r23
    8f06:	71 50       	subi	r23, 0x01	; 1
						}
					
						if(bt<RAM_TILES_COUNT){
    8f08:	70 31       	cpi	r23, 0x10	; 16
    8f0a:	48 f4       	brcc	.+18     	; 0x8f1e <ProcessSprites+0x122>

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    8f0c:	4a 81       	ldd	r20, Y+2	; 0x02
    8f0e:	5b 81       	ldd	r21, Y+3	; 0x03
    8f10:	44 0d       	add	r20, r4
    8f12:	55 1d       	adc	r21, r5
    8f14:	91 01       	movw	r18, r2
    8f16:	67 2f       	mov	r22, r23
    8f18:	87 2d       	mov	r24, r7
    8f1a:	0e 94 05 36 	call	0x6c0a	; 0x6c0a <BlitSprite>
    8f1e:	8a 81       	ldd	r24, Y+2	; 0x02
    8f20:	9b 81       	ldd	r25, Y+3	; 0x03
    8f22:	01 96       	adiw	r24, 0x01	; 1
    8f24:	9b 83       	std	Y+3, r25	; 0x03
    8f26:	8a 83       	std	Y+2, r24	; 0x02
    8f28:	08 94       	sec
    8f2a:	e1 1c       	adc	r14, r1
    8f2c:	f1 1c       	adc	r15, r1
				dy=sprites[i].y&0x7;		
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){

					for(x=0;x<tx;x++){
    8f2e:	99 81       	ldd	r25, Y+1	; 0x01
    8f30:	89 17       	cp	r24, r25
    8f32:	38 f2       	brcs	.-114    	; 0x8ec2 <ProcessSprites+0xc6>
    8f34:	08 94       	sec
    8f36:	c1 1c       	adc	r12, r1
    8f38:	d1 1c       	adc	r13, r1
    8f3a:	02 5e       	subi	r16, 0xE2	; 226
    8f3c:	1f 4f       	sbci	r17, 0xFF	; 255

				by=sprites[i].y>>3;			
				dy=sprites[i].y&0x7;		
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){
    8f3e:	c6 14       	cp	r12, r6
    8f40:	58 f4       	brcc	.+22     	; 0x8f58 <ProcessSprites+0x15c>
							free_tile_index++;										
						}
					
						if(bt<RAM_TILES_COUNT){

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    8f42:	5c 2c       	mov	r5, r12
    8f44:	44 24       	eor	r4, r4
    8f46:	b0 e2       	ldi	r27, 0x20	; 32
    8f48:	eb 2e       	mov	r14, r27
    8f4a:	b1 e0       	ldi	r27, 0x01	; 1
    8f4c:	fb 2e       	mov	r15, r27
    8f4e:	e0 0e       	add	r14, r16
    8f50:	f1 1e       	adc	r15, r17
    8f52:	1b 82       	std	Y+3, r1	; 0x03
    8f54:	1a 82       	std	Y+2, r1	; 0x02
    8f56:	b5 cf       	rjmp	.-150    	; 0x8ec2 <ProcessSprites+0xc6>

		RestoreBackground();

		if(!spritesOn) return;
		
		for(i=0;i<MAX_SPRITES;i++){
    8f58:	73 94       	inc	r7
    8f5a:	e4 e0       	ldi	r30, 0x04	; 4
    8f5c:	f0 e0       	ldi	r31, 0x00	; 0
    8f5e:	8e 0e       	add	r8, r30
    8f60:	9f 1e       	adc	r9, r31
    8f62:	f9 e0       	ldi	r31, 0x09	; 9
    8f64:	7f 16       	cp	r7, r31
    8f66:	09 f0       	breq	.+2      	; 0x8f6a <ProcessSprites+0x16e>
    8f68:	81 cf       	rjmp	.-254    	; 0x8e6c <ProcessSprites+0x70>
			}//	if(by<(SCREEN_TILES_V*TILE_HEIGHT))		
		}



	}
    8f6a:	0f 90       	pop	r0
    8f6c:	0f 90       	pop	r0
    8f6e:	0f 90       	pop	r0
    8f70:	cf 91       	pop	r28
    8f72:	df 91       	pop	r29
    8f74:	1f 91       	pop	r17
    8f76:	0f 91       	pop	r16
    8f78:	ff 90       	pop	r15
    8f7a:	ef 90       	pop	r14
    8f7c:	df 90       	pop	r13
    8f7e:	cf 90       	pop	r12
    8f80:	bf 90       	pop	r11
    8f82:	af 90       	pop	r10
    8f84:	9f 90       	pop	r9
    8f86:	8f 90       	pop	r8
    8f88:	7f 90       	pop	r7
    8f8a:	6f 90       	pop	r6
    8f8c:	5f 90       	pop	r5
    8f8e:	4f 90       	pop	r4
    8f90:	3f 90       	pop	r3
    8f92:	2f 90       	pop	r2
    8f94:	08 95       	ret

00008f96 <WaitKey>:
	}

	
}

void WaitKey(){
    8f96:	80 91 1f 0b 	lds	r24, 0x0B1F
    8f9a:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    8f9e:	91 ff       	sbrs	r25, 1
    8fa0:	fa cf       	rjmp	.-12     	; 0x8f96 <WaitKey>
	while((ReadJoypad(playPort)&BTN_MOUSE_LEFT)==0);
	while((ReadJoypad(playPort)&BTN_MOUSE_LEFT)!=0);
    8fa2:	80 91 1f 0b 	lds	r24, 0x0B1F
    8fa6:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    8faa:	91 fd       	sbrc	r25, 1
    8fac:	fa cf       	rjmp	.-12     	; 0x8fa2 <WaitKey+0xc>
}
    8fae:	08 95       	ret

00008fb0 <processHammer>:
	}

	MoveSprite(0,mx,my,3,3);
}

void processHammer(void){
    8fb0:	3f 92       	push	r3
    8fb2:	4f 92       	push	r4
    8fb4:	5f 92       	push	r5
    8fb6:	6f 92       	push	r6
    8fb8:	7f 92       	push	r7
    8fba:	8f 92       	push	r8
    8fbc:	9f 92       	push	r9
    8fbe:	af 92       	push	r10
    8fc0:	bf 92       	push	r11
    8fc2:	cf 92       	push	r12
    8fc4:	df 92       	push	r13
    8fc6:	ef 92       	push	r14
    8fc8:	ff 92       	push	r15
    8fca:	0f 93       	push	r16
    8fcc:	1f 93       	push	r17
    8fce:	cf 93       	push	r28
    8fd0:	df 93       	push	r29
	static bool mouseBtnReleased=true;
	unsigned int joy;
	unsigned char x,y,dx,dy;

	
	joy=ReadJoypad(playPort);
    8fd2:	80 91 1f 0b 	lds	r24, 0x0B1F
    8fd6:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    8fda:	6c 01       	movw	r12, r24

	if((joy&actionButton) && hammerState==0 && mouseBtnReleased){
    8fdc:	80 91 1e 0c 	lds	r24, 0x0C1E
    8fe0:	90 91 1f 0c 	lds	r25, 0x0C1F
    8fe4:	8c 21       	and	r24, r12
    8fe6:	9d 21       	and	r25, r13
    8fe8:	89 2b       	or	r24, r25
    8fea:	09 f4       	brne	.+2      	; 0x8fee <processHammer+0x3e>
    8fec:	8a c0       	rjmp	.+276    	; 0x9102 <processHammer+0x152>
    8fee:	80 91 29 0b 	lds	r24, 0x0B29
    8ff2:	88 23       	and	r24, r24
    8ff4:	09 f0       	breq	.+2      	; 0x8ff8 <processHammer+0x48>
    8ff6:	85 c0       	rjmp	.+266    	; 0x9102 <processHammer+0x152>
    8ff8:	80 91 02 01 	lds	r24, 0x0102
    8ffc:	88 23       	and	r24, r24
    8ffe:	09 f4       	brne	.+2      	; 0x9002 <processHammer+0x52>
    9000:	80 c0       	rjmp	.+256    	; 0x9102 <processHammer+0x152>

		MapSprite(0,map_hammerDown);
    9002:	6d e4       	ldi	r22, 0x4D	; 77
    9004:	7a e0       	ldi	r23, 0x0A	; 10
    9006:	80 e0       	ldi	r24, 0x00	; 0
    9008:	0e 94 c8 44 	call	0x8990	; 0x8990 <MapSprite>
		hammerState=1;
    900c:	81 e0       	ldi	r24, 0x01	; 1
    900e:	80 93 29 0b 	sts	0x0B29, r24
		hammerFrame=0;
    9012:	10 92 28 0b 	sts	0x0B28, r1
		dy=5;
		dx=-5;
		mouseBtnReleased=false;
    9016:	10 92 02 01 	sts	0x0102, r1
		srand(TCNT1);
    901a:	80 91 84 00 	lds	r24, 0x0084
    901e:	90 91 85 00 	lds	r25, 0x0085
    9022:	0e 94 1f 4e 	call	0x9c3e	; 0x9c3e <srand>
		TriggerFx(6,0xa0,true);
    9026:	41 e0       	ldi	r20, 0x01	; 1
    9028:	60 ea       	ldi	r22, 0xA0	; 160
    902a:	86 e0       	ldi	r24, 0x06	; 6
    902c:	0e 94 57 3c 	call	0x78ae	; 0x78ae <TriggerFx>

		if(!gameOver){
    9030:	80 91 11 0c 	lds	r24, 0x0C11
    9034:	88 23       	and	r24, r24
    9036:	09 f0       	breq	.+2      	; 0x903a <processHammer+0x8a>
    9038:	64 c0       	rjmp	.+200    	; 0x9102 <processHammer+0x152>
			//check if a mole was whacked!

			dx=((mx+6)>>3);
    903a:	80 91 40 0c 	lds	r24, 0x0C40
    903e:	90 91 41 0c 	lds	r25, 0x0C41
    9042:	06 96       	adiw	r24, 0x06	; 6
    9044:	33 e0       	ldi	r19, 0x03	; 3
    9046:	95 95       	asr	r25
    9048:	87 95       	ror	r24
    904a:	3a 95       	dec	r19
    904c:	e1 f7       	brne	.-8      	; 0x9046 <processHammer+0x96>
    904e:	68 2e       	mov	r6, r24
			dy=((my+8)>>3);
    9050:	80 91 0f 0c 	lds	r24, 0x0C0F
    9054:	90 91 10 0c 	lds	r25, 0x0C10
    9058:	08 96       	adiw	r24, 0x08	; 8
    905a:	23 e0       	ldi	r18, 0x03	; 3
    905c:	95 95       	asr	r25
    905e:	87 95       	ror	r24
    9060:	2a 95       	dec	r18
    9062:	e1 f7       	brne	.-8      	; 0x905c <processHammer+0xac>
    9064:	78 2e       	mov	r7, r24
    9066:	93 ed       	ldi	r25, 0xD3	; 211
    9068:	e9 2e       	mov	r14, r25
    906a:	9b e0       	ldi	r25, 0x0B	; 11
    906c:	f9 2e       	mov	r15, r25
    906e:	00 e0       	ldi	r16, 0x00	; 0
    9070:	10 e0       	ldi	r17, 0x00	; 0


			for(y=0;y<4;y++){
    9072:	84 e1       	ldi	r24, 0x14	; 20
    9074:	48 2e       	mov	r4, r24
    9076:	51 2c       	mov	r5, r1
				for(x=0;x<4;x++){
					if(moles[y][x].active && !moles[y][x].whacked && moles[y][x].animFrame>=12 && moles[y][x].animFrame<=60){
						if(dx>=moles[y][x].x && dx<(moles[y][x].x+5) &&
    9078:	86 2c       	mov	r8, r6
    907a:	99 24       	eor	r9, r9
    907c:	a7 2c       	mov	r10, r7
    907e:	bb 24       	eor	r11, r11
						   dy>=moles[y][x].y && dy<(moles[y][x].y+4)){
						
							//PrintHexByte(10,4,moles[y][x].active);
							//PrintHexByte(13,4,moles[y][x].animFrame);
						
							moles[y][x].whacked=true;
    9080:	33 24       	eor	r3, r3
    9082:	33 94       	inc	r3
    9084:	34 c0       	rjmp	.+104    	; 0x90ee <processHammer+0x13e>
			dy=((my+8)>>3);


			for(y=0;y<4;y++){
				for(x=0;x<4;x++){
					if(moles[y][x].active && !moles[y][x].whacked && moles[y][x].animFrame>=12 && moles[y][x].animFrame<=60){
    9086:	88 81       	ld	r24, Y
    9088:	88 23       	and	r24, r24
    908a:	21 f1       	breq	.+72     	; 0x90d4 <processHammer+0x124>
    908c:	8c 81       	ldd	r24, Y+4	; 0x04
    908e:	88 23       	and	r24, r24
    9090:	09 f5       	brne	.+66     	; 0x90d4 <processHammer+0x124>
    9092:	89 81       	ldd	r24, Y+1	; 0x01
    9094:	8c 30       	cpi	r24, 0x0C	; 12
    9096:	f0 f0       	brcs	.+60     	; 0x90d4 <processHammer+0x124>
    9098:	8d 33       	cpi	r24, 0x3D	; 61
    909a:	e0 f4       	brcc	.+56     	; 0x90d4 <processHammer+0x124>
						if(dx>=moles[y][x].x && dx<(moles[y][x].x+5) &&
    909c:	8a 81       	ldd	r24, Y+2	; 0x02
    909e:	68 16       	cp	r6, r24
    90a0:	c8 f0       	brcs	.+50     	; 0x90d4 <processHammer+0x124>
    90a2:	90 e0       	ldi	r25, 0x00	; 0
    90a4:	04 96       	adiw	r24, 0x04	; 4
    90a6:	88 15       	cp	r24, r8
    90a8:	99 05       	cpc	r25, r9
    90aa:	a4 f0       	brlt	.+40     	; 0x90d4 <processHammer+0x124>
    90ac:	8b 81       	ldd	r24, Y+3	; 0x03
    90ae:	78 16       	cp	r7, r24
    90b0:	88 f0       	brcs	.+34     	; 0x90d4 <processHammer+0x124>
    90b2:	90 e0       	ldi	r25, 0x00	; 0
    90b4:	03 96       	adiw	r24, 0x03	; 3
    90b6:	8a 15       	cp	r24, r10
    90b8:	9b 05       	cpc	r25, r11
    90ba:	64 f0       	brlt	.+24     	; 0x90d4 <processHammer+0x124>
						   dy>=moles[y][x].y && dy<(moles[y][x].y+4)){
						
							//PrintHexByte(10,4,moles[y][x].active);
							//PrintHexByte(13,4,moles[y][x].animFrame);
						
							moles[y][x].whacked=true;
    90bc:	3c 82       	std	Y+4, r3	; 0x04
							moles[y][x].animFrame=0;
    90be:	19 82       	std	Y+1, r1	; 0x01
							molesWhacked++;
    90c0:	80 91 21 0b 	lds	r24, 0x0B21
    90c4:	8f 5f       	subi	r24, 0xFF	; 255
    90c6:	80 93 21 0b 	sts	0x0B21, r24
							TriggerFx(7,0xff,true);
    90ca:	41 e0       	ldi	r20, 0x01	; 1
    90cc:	6f ef       	ldi	r22, 0xFF	; 255
    90ce:	87 e0       	ldi	r24, 0x07	; 7
    90d0:	0e 94 57 3c 	call	0x78ae	; 0x78ae <TriggerFx>
    90d4:	25 96       	adiw	r28, 0x05	; 5
			dx=((mx+6)>>3);
			dy=((my+8)>>3);


			for(y=0;y<4;y++){
				for(x=0;x<4;x++){
    90d6:	ce 15       	cp	r28, r14
    90d8:	df 05       	cpc	r29, r15
    90da:	a9 f6       	brne	.-86     	; 0x9086 <processHammer+0xd6>
    90dc:	0f 5f       	subi	r16, 0xFF	; 255
    90de:	1f 4f       	sbci	r17, 0xFF	; 255
    90e0:	84 e1       	ldi	r24, 0x14	; 20
    90e2:	90 e0       	ldi	r25, 0x00	; 0
    90e4:	e8 0e       	add	r14, r24
    90e6:	f9 1e       	adc	r15, r25

			dx=((mx+6)>>3);
			dy=((my+8)>>3);


			for(y=0;y<4;y++){
    90e8:	04 30       	cpi	r16, 0x04	; 4
    90ea:	11 05       	cpc	r17, r1
    90ec:	51 f0       	breq	.+20     	; 0x9102 <processHammer+0x152>
    90ee:	04 9d       	mul	r16, r4
    90f0:	e0 01       	movw	r28, r0
    90f2:	05 9d       	mul	r16, r5
    90f4:	d0 0d       	add	r29, r0
    90f6:	14 9d       	mul	r17, r4
    90f8:	d0 0d       	add	r29, r0
    90fa:	11 24       	eor	r1, r1
    90fc:	c1 54       	subi	r28, 0x41	; 65
    90fe:	d4 4f       	sbci	r29, 0xF4	; 244
    9100:	c2 cf       	rjmp	.-124    	; 0x9086 <processHammer+0xd6>
				
		}

	}

	if(hammerState==1 && mouseBtnReleased){
    9102:	80 91 29 0b 	lds	r24, 0x0B29
    9106:	81 30       	cpi	r24, 0x01	; 1
    9108:	59 f4       	brne	.+22     	; 0x9120 <processHammer+0x170>
    910a:	80 91 02 01 	lds	r24, 0x0102
    910e:	88 23       	and	r24, r24
    9110:	39 f0       	breq	.+14     	; 0x9120 <processHammer+0x170>
		MapSprite(0,map_hammerUp);
    9112:	62 e4       	ldi	r22, 0x42	; 66
    9114:	7a e0       	ldi	r23, 0x0A	; 10
    9116:	80 e0       	ldi	r24, 0x00	; 0
    9118:	0e 94 c8 44 	call	0x8990	; 0x8990 <MapSprite>
		dy=0;
		dx=0;
		hammerState=0;
    911c:	10 92 29 0b 	sts	0x0B29, r1
	}
	
	if((joy&actionButton)==0)mouseBtnReleased=true;
    9120:	80 91 1e 0c 	lds	r24, 0x0C1E
    9124:	90 91 1f 0c 	lds	r25, 0x0C1F
    9128:	8c 21       	and	r24, r12
    912a:	9d 21       	and	r25, r13
    912c:	89 2b       	or	r24, r25
    912e:	19 f4       	brne	.+6      	; 0x9136 <processHammer+0x186>
    9130:	81 e0       	ldi	r24, 0x01	; 1
    9132:	80 93 02 01 	sts	0x0102, r24
	


	hammerFrame++;
    9136:	80 91 28 0b 	lds	r24, 0x0B28
    913a:	8f 5f       	subi	r24, 0xFF	; 255
    913c:	80 93 28 0b 	sts	0x0B28, r24

	lastbuttons=joy;
    9140:	d0 92 2b 0b 	sts	0x0B2B, r13
    9144:	c0 92 2a 0b 	sts	0x0B2A, r12
}
    9148:	df 91       	pop	r29
    914a:	cf 91       	pop	r28
    914c:	1f 91       	pop	r17
    914e:	0f 91       	pop	r16
    9150:	ff 90       	pop	r15
    9152:	ef 90       	pop	r14
    9154:	df 90       	pop	r13
    9156:	cf 90       	pop	r12
    9158:	bf 90       	pop	r11
    915a:	af 90       	pop	r10
    915c:	9f 90       	pop	r9
    915e:	8f 90       	pop	r8
    9160:	7f 90       	pop	r7
    9162:	6f 90       	pop	r6
    9164:	5f 90       	pop	r5
    9166:	4f 90       	pop	r4
    9168:	3f 90       	pop	r3
    916a:	08 95       	ret

0000916c <processMouseMovement>:

	return id;
}


void processMouseMovement(void){
    916c:	0f 93       	push	r16
	


	//check in case its a SNES pad

	if(playDevice==0){
    916e:	80 91 1e 0b 	lds	r24, 0x0B1E
    9172:	88 23       	and	r24, r24
    9174:	09 f0       	breq	.+2      	; 0x9178 <processMouseMovement+0xc>
    9176:	45 c0       	rjmp	.+138    	; 0x9202 <processMouseMovement+0x96>
		joy=ReadJoypad(playPort);
    9178:	80 91 1f 0b 	lds	r24, 0x0B1F
    917c:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    9180:	28 2f       	mov	r18, r24

		if(joy&BTN_LEFT){
    9182:	86 ff       	sbrs	r24, 6
    9184:	11 c0       	rjmp	.+34     	; 0x91a8 <processMouseMovement+0x3c>
			mx-=2;
    9186:	80 91 40 0c 	lds	r24, 0x0C40
    918a:	90 91 41 0c 	lds	r25, 0x0C41
    918e:	02 97       	sbiw	r24, 0x02	; 2
    9190:	90 93 41 0c 	sts	0x0C41, r25
    9194:	80 93 40 0c 	sts	0x0C40, r24
			if(mx<5) mx=5; 
    9198:	05 97       	sbiw	r24, 0x05	; 5
    919a:	34 f4       	brge	.+12     	; 0x91a8 <processMouseMovement+0x3c>
    919c:	85 e0       	ldi	r24, 0x05	; 5
    919e:	90 e0       	ldi	r25, 0x00	; 0
    91a0:	90 93 41 0c 	sts	0x0C41, r25
    91a4:	80 93 40 0c 	sts	0x0C40, r24
		}
		if(joy&BTN_RIGHT){
    91a8:	27 ff       	sbrs	r18, 7
    91aa:	12 c0       	rjmp	.+36     	; 0x91d0 <processMouseMovement+0x64>
			mx+=2;
    91ac:	80 91 40 0c 	lds	r24, 0x0C40
    91b0:	90 91 41 0c 	lds	r25, 0x0C41
    91b4:	02 96       	adiw	r24, 0x02	; 2
    91b6:	90 93 41 0c 	sts	0x0C41, r25
    91ba:	80 93 40 0c 	sts	0x0C40, r24
			if(mx>227) mx=227;
    91be:	84 3e       	cpi	r24, 0xE4	; 228
    91c0:	91 05       	cpc	r25, r1
    91c2:	34 f0       	brlt	.+12     	; 0x91d0 <processMouseMovement+0x64>
    91c4:	83 ee       	ldi	r24, 0xE3	; 227
    91c6:	90 e0       	ldi	r25, 0x00	; 0
    91c8:	90 93 41 0c 	sts	0x0C41, r25
    91cc:	80 93 40 0c 	sts	0x0C40, r24
		}
		if(joy&BTN_UP){
    91d0:	24 ff       	sbrs	r18, 4
    91d2:	0f c0       	rjmp	.+30     	; 0x91f2 <processMouseMovement+0x86>
			my-=2;
    91d4:	80 91 0f 0c 	lds	r24, 0x0C0F
    91d8:	90 91 10 0c 	lds	r25, 0x0C10
    91dc:	02 97       	sbiw	r24, 0x02	; 2
    91de:	90 93 10 0c 	sts	0x0C10, r25
    91e2:	80 93 0f 0c 	sts	0x0C0F, r24
			if(my<0)my=0;
    91e6:	97 ff       	sbrs	r25, 7
    91e8:	04 c0       	rjmp	.+8      	; 0x91f2 <processMouseMovement+0x86>
    91ea:	10 92 10 0c 	sts	0x0C10, r1
    91ee:	10 92 0f 0c 	sts	0x0C0F, r1
		}
		if(joy&BTN_DOWN){
    91f2:	25 ff       	sbrs	r18, 5
    91f4:	58 c0       	rjmp	.+176    	; 0x92a6 <processMouseMovement+0x13a>
			my+=2;
    91f6:	80 91 0f 0c 	lds	r24, 0x0C0F
    91fa:	90 91 10 0c 	lds	r25, 0x0C10
    91fe:	02 96       	adiw	r24, 0x02	; 2
    9200:	45 c0       	rjmp	.+138    	; 0x928c <processMouseMovement+0x120>
			if(my>218)my=218;
		}

	}else{
	
		joy=ReadJoypadExt(playPort);
    9202:	80 91 1f 0b 	lds	r24, 0x0B1F
    9206:	0e 94 55 36 	call	0x6caa	; 0x6caa <ReadJoypadExt>
    920a:	ac 01       	movw	r20, r24
    920c:	20 91 40 0c 	lds	r18, 0x0C40
    9210:	30 91 41 0c 	lds	r19, 0x0C41
    9214:	8f 77       	andi	r24, 0x7F	; 127
    9216:	90 70       	andi	r25, 0x00	; 0

		if(joy&0x80){
    9218:	47 ff       	sbrs	r20, 7
    921a:	0d c0       	rjmp	.+26     	; 0x9236 <processMouseMovement+0xca>
			mx-=(joy&0x7f);
    921c:	b9 01       	movw	r22, r18
    921e:	68 1b       	sub	r22, r24
    9220:	79 0b       	sbc	r23, r25
    9222:	70 93 41 0c 	sts	0x0C41, r23
    9226:	60 93 40 0c 	sts	0x0C40, r22
			if(mx<5) mx=5; 
    922a:	65 30       	cpi	r22, 0x05	; 5
    922c:	71 05       	cpc	r23, r1
    922e:	94 f4       	brge	.+36     	; 0x9254 <processMouseMovement+0xe8>
    9230:	85 e0       	ldi	r24, 0x05	; 5
    9232:	90 e0       	ldi	r25, 0x00	; 0
    9234:	0b c0       	rjmp	.+22     	; 0x924c <processMouseMovement+0xe0>
		}else{
			mx+=(joy&0x7f);
    9236:	82 0f       	add	r24, r18
    9238:	93 1f       	adc	r25, r19
    923a:	90 93 41 0c 	sts	0x0C41, r25
    923e:	80 93 40 0c 	sts	0x0C40, r24
			if(mx>227) mx=227;
    9242:	84 3e       	cpi	r24, 0xE4	; 228
    9244:	91 05       	cpc	r25, r1
    9246:	34 f0       	brlt	.+12     	; 0x9254 <processMouseMovement+0xe8>
    9248:	83 ee       	ldi	r24, 0xE3	; 227
    924a:	90 e0       	ldi	r25, 0x00	; 0
    924c:	90 93 41 0c 	sts	0x0C41, r25
    9250:	80 93 40 0c 	sts	0x0C40, r24
    9254:	20 91 0f 0c 	lds	r18, 0x0C0F
    9258:	30 91 10 0c 	lds	r19, 0x0C10
    925c:	85 2f       	mov	r24, r21
    925e:	99 27       	eor	r25, r25
		}
	
		if(joy&0x8000){
    9260:	57 ff       	sbrs	r21, 7
    9262:	10 c0       	rjmp	.+32     	; 0x9284 <processMouseMovement+0x118>
			my-=((joy>>8)&0x7f);
    9264:	8f 77       	andi	r24, 0x7F	; 127
    9266:	90 70       	andi	r25, 0x00	; 0
    9268:	a9 01       	movw	r20, r18
    926a:	48 1b       	sub	r20, r24
    926c:	59 0b       	sbc	r21, r25
    926e:	50 93 10 0c 	sts	0x0C10, r21
    9272:	40 93 0f 0c 	sts	0x0C0F, r20
			if(my<0)my=0;
    9276:	57 ff       	sbrs	r21, 7
    9278:	16 c0       	rjmp	.+44     	; 0x92a6 <processMouseMovement+0x13a>
    927a:	10 92 10 0c 	sts	0x0C10, r1
    927e:	10 92 0f 0c 	sts	0x0C0F, r1
    9282:	11 c0       	rjmp	.+34     	; 0x92a6 <processMouseMovement+0x13a>
		}else{
			my+=((joy>>8)&0x7f);
    9284:	8f 77       	andi	r24, 0x7F	; 127
    9286:	90 70       	andi	r25, 0x00	; 0
    9288:	82 0f       	add	r24, r18
    928a:	93 1f       	adc	r25, r19
    928c:	90 93 10 0c 	sts	0x0C10, r25
    9290:	80 93 0f 0c 	sts	0x0C0F, r24
			if(my>218)my=218;
    9294:	8b 3d       	cpi	r24, 0xDB	; 219
    9296:	91 05       	cpc	r25, r1
    9298:	34 f0       	brlt	.+12     	; 0x92a6 <processMouseMovement+0x13a>
    929a:	8a ed       	ldi	r24, 0xDA	; 218
    929c:	90 e0       	ldi	r25, 0x00	; 0
    929e:	90 93 10 0c 	sts	0x0C10, r25
    92a2:	80 93 0f 0c 	sts	0x0C0F, r24
		}
	
	}

	MoveSprite(0,mx,my,3,3);
    92a6:	03 e0       	ldi	r16, 0x03	; 3
    92a8:	23 e0       	ldi	r18, 0x03	; 3
    92aa:	40 91 0f 0c 	lds	r20, 0x0C0F
    92ae:	60 91 40 0c 	lds	r22, 0x0C40
    92b2:	80 e0       	ldi	r24, 0x00	; 0
    92b4:	0e 94 f6 44 	call	0x89ec	; 0x89ec <MoveSprite>
}
    92b8:	0f 91       	pop	r16
    92ba:	08 95       	ret

000092bc <createButton>:
	}

	lastButtons=joy;
}

char createButton(unsigned char x,unsigned char y,const char *normalMapPtr,const char *pushedMapPtr){
    92bc:	0f 93       	push	r16
    92be:	1f 93       	push	r17
    92c0:	cf 93       	push	r28
    92c2:	df 93       	push	r29
    92c4:	08 2f       	mov	r16, r24
    92c6:	16 2f       	mov	r17, r22
    92c8:	ea 01       	movw	r28, r20
	unsigned char id;

	if(nextFreeButtonIndex<BUTTONS_COUNT){
    92ca:	80 91 1b 0b 	lds	r24, 0x0B1B
    92ce:	88 23       	and	r24, r24
    92d0:	11 f0       	breq	.+4      	; 0x92d6 <createButton+0x1a>
    92d2:	8f ef       	ldi	r24, 0xFF	; 255
    92d4:	27 c0       	rjmp	.+78     	; 0x9324 <createButton+0x68>
		buttons[nextFreeButtonIndex].x=x;
    92d6:	00 93 14 0c 	sts	0x0C14, r16
		buttons[nextFreeButtonIndex].y=y;
    92da:	60 93 15 0c 	sts	0x0C15, r22
		buttons[nextFreeButtonIndex].normalMapPtr=normalMapPtr;
    92de:	50 93 19 0c 	sts	0x0C19, r21
    92e2:	40 93 18 0c 	sts	0x0C18, r20
		buttons[nextFreeButtonIndex].pushedMapPtr=pushedMapPtr;
    92e6:	30 93 1b 0c 	sts	0x0C1B, r19
    92ea:	20 93 1a 0c 	sts	0x0C1A, r18
		buttons[nextFreeButtonIndex].state=0;
    92ee:	10 92 1c 0c 	sts	0x0C1C, r1
		buttons[nextFreeButtonIndex].width=pgm_read_byte(&(normalMapPtr[0]));
    92f2:	fa 01       	movw	r30, r20
    92f4:	84 91       	lpm	r24, Z+
    92f6:	80 93 16 0c 	sts	0x0C16, r24
		buttons[nextFreeButtonIndex].height=pgm_read_byte(&(normalMapPtr[1]));
    92fa:	21 96       	adiw	r28, 0x01	; 1
    92fc:	fe 01       	movw	r30, r28
    92fe:	84 91       	lpm	r24, Z+
    9300:	21 97       	sbiw	r28, 0x01	; 1
    9302:	80 93 17 0c 	sts	0x0C17, r24
		buttons[nextFreeButtonIndex].clicked=false;
    9306:	10 92 1d 0c 	sts	0x0C1D, r1
		RestoreBackground();
    930a:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
		DrawMap2(x,y,normalMapPtr);
    930e:	ae 01       	movw	r20, r28
    9310:	61 2f       	mov	r22, r17
    9312:	80 2f       	mov	r24, r16
    9314:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
		id=nextFreeButtonIndex;
    9318:	80 91 1b 0b 	lds	r24, 0x0B1B
		nextFreeButtonIndex++;
    931c:	8f 5f       	subi	r24, 0xFF	; 255
    931e:	80 93 1b 0b 	sts	0x0B1B, r24
    9322:	81 50       	subi	r24, 0x01	; 1
	}else{
		id=-1;
	}

	return id;
}
    9324:	df 91       	pop	r29
    9326:	cf 91       	pop	r28
    9328:	1f 91       	pop	r17
    932a:	0f 91       	pop	r16
    932c:	08 95       	ret

0000932e <DetectControllers>:
			return;
		}
	}
}

void DetectControllers(){
    932e:	84 e0       	ldi	r24, 0x04	; 4
    9330:	90 e0       	ldi	r25, 0x00	; 0
    9332:	0e 94 12 45 	call	0x8a24	; 0x8a24 <WaitVsync>
	unsigned int joy;
	//wait a frame for mouse to settle
	WaitVsync(4);
	joy=ReadJoypad(0);
    9336:	80 e0       	ldi	r24, 0x00	; 0
    9338:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
	if((joy&0x8000)!=0){
    933c:	97 ff       	sbrs	r25, 7
    933e:	0c c0       	rjmp	.+24     	; 0x9358 <DetectControllers+0x2a>
		//we have a mouse in player 1 port
		playDevice=1;
    9340:	81 e0       	ldi	r24, 0x01	; 1
    9342:	80 93 1e 0b 	sts	0x0B1E, r24
		playPort=0;
    9346:	10 92 1f 0b 	sts	0x0B1F, r1
		actionButton=BTN_MOUSE_LEFT;
    934a:	80 e0       	ldi	r24, 0x00	; 0
    934c:	92 e0       	ldi	r25, 0x02	; 2
    934e:	90 93 1f 0c 	sts	0x0C1F, r25
    9352:	80 93 1e 0c 	sts	0x0C1E, r24
    9356:	08 95       	ret
		return;
	}else{
		playDevice=0;
    9358:	10 92 1e 0b 	sts	0x0B1E, r1
		playPort=0;
    935c:	10 92 1f 0b 	sts	0x0B1F, r1
		actionButton=BTN_A;
    9360:	80 e0       	ldi	r24, 0x00	; 0
    9362:	91 e0       	ldi	r25, 0x01	; 1
    9364:	90 93 1f 0c 	sts	0x0C1F, r25
    9368:	80 93 1e 0c 	sts	0x0C1E, r24
	}

	joy=ReadJoypad(1);
    936c:	81 e0       	ldi	r24, 0x01	; 1
    936e:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
	if((joy&0x8000)!=0){
    9372:	97 ff       	sbrs	r25, 7
    9374:	0b c0       	rjmp	.+22     	; 0x938c <DetectControllers+0x5e>
		//we have a mouse in player 2 port
		playDevice=1;
    9376:	81 e0       	ldi	r24, 0x01	; 1
    9378:	80 93 1e 0b 	sts	0x0B1E, r24
		playPort=1;
    937c:	80 93 1f 0b 	sts	0x0B1F, r24
		actionButton=BTN_MOUSE_LEFT;
    9380:	80 e0       	ldi	r24, 0x00	; 0
    9382:	92 e0       	ldi	r25, 0x02	; 2
    9384:	90 93 1f 0c 	sts	0x0C1F, r25
    9388:	80 93 1e 0c 	sts	0x0C1E, r24
    938c:	08 95       	ret

0000938e <processMoles>:


}

unsigned char cnt=0;
void processMoles(){
    938e:	af 92       	push	r10
    9390:	bf 92       	push	r11
    9392:	cf 92       	push	r12
    9394:	df 92       	push	r13
    9396:	ef 92       	push	r14
    9398:	ff 92       	push	r15
    939a:	0f 93       	push	r16
    939c:	1f 93       	push	r17
    939e:	cf 93       	push	r28
    93a0:	df 93       	push	r29
	unsigned char x,y,rdx,rdy;
	const char *ptr=NULL;

	//randomize moles
	if(activeMoles<level && !gameOver){
    93a2:	90 91 22 0b 	lds	r25, 0x0B22
    93a6:	80 91 12 0c 	lds	r24, 0x0C12
    93aa:	98 17       	cp	r25, r24
    93ac:	08 f0       	brcs	.+2      	; 0x93b0 <processMoles+0x22>
    93ae:	4e c0       	rjmp	.+156    	; 0x944c <processMoles+0xbe>
    93b0:	80 91 11 0c 	lds	r24, 0x0C11
    93b4:	88 23       	and	r24, r24
    93b6:	09 f0       	breq	.+2      	; 0x93ba <processMoles+0x2c>
    93b8:	49 c0       	rjmp	.+146    	; 0x944c <processMoles+0xbe>

		rdx=random()%256;
    93ba:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <random>
		if(rdx<(16+(level*2))){
    93be:	20 e0       	ldi	r18, 0x00	; 0
    93c0:	31 e0       	ldi	r19, 0x01	; 1
    93c2:	40 e0       	ldi	r20, 0x00	; 0
    93c4:	50 e0       	ldi	r21, 0x00	; 0
    93c6:	0e 94 e0 4e 	call	0x9dc0	; 0x9dc0 <__divmodsi4>
    93ca:	70 e0       	ldi	r23, 0x00	; 0
    93cc:	80 91 12 0c 	lds	r24, 0x0C12
    93d0:	90 e0       	ldi	r25, 0x00	; 0
    93d2:	08 96       	adiw	r24, 0x08	; 8
    93d4:	88 0f       	add	r24, r24
    93d6:	99 1f       	adc	r25, r25
    93d8:	68 17       	cp	r22, r24
    93da:	79 07       	cpc	r23, r25
    93dc:	bc f5       	brge	.+110    	; 0x944c <processMoles+0xbe>

			rdx=rand()%4;		
    93de:	0e 94 1a 4e 	call	0x9c34	; 0x9c34 <rand>
    93e2:	8c 01       	movw	r16, r24
			rdy=rand()%4;
    93e4:	0e 94 1a 4e 	call	0x9c34	; 0x9c34 <rand>
			cnt++;
    93e8:	20 91 27 0b 	lds	r18, 0x0B27
    93ec:	2f 5f       	subi	r18, 0xFF	; 255
    93ee:	20 93 27 0b 	sts	0x0B27, r18
			if(moles[rdy][rdx].active==false){
    93f2:	64 e0       	ldi	r22, 0x04	; 4
    93f4:	70 e0       	ldi	r23, 0x00	; 0
    93f6:	0e 94 ab 4e 	call	0x9d56	; 0x9d56 <__divmodhi4>
    93fa:	28 2f       	mov	r18, r24
    93fc:	30 e0       	ldi	r19, 0x00	; 0
    93fe:	c8 01       	movw	r24, r16
    9400:	64 e0       	ldi	r22, 0x04	; 4
    9402:	70 e0       	ldi	r23, 0x00	; 0
    9404:	0e 94 ab 4e 	call	0x9d56	; 0x9d56 <__divmodhi4>
    9408:	90 e0       	ldi	r25, 0x00	; 0
    940a:	fc 01       	movw	r30, r24
    940c:	ee 0f       	add	r30, r30
    940e:	ff 1f       	adc	r31, r31
    9410:	ee 0f       	add	r30, r30
    9412:	ff 1f       	adc	r31, r31
    9414:	e8 0f       	add	r30, r24
    9416:	f9 1f       	adc	r31, r25
    9418:	84 e1       	ldi	r24, 0x14	; 20
    941a:	90 e0       	ldi	r25, 0x00	; 0
    941c:	ac 01       	movw	r20, r24
    941e:	24 9f       	mul	r18, r20
    9420:	c0 01       	movw	r24, r0
    9422:	25 9f       	mul	r18, r21
    9424:	90 0d       	add	r25, r0
    9426:	34 9f       	mul	r19, r20
    9428:	90 0d       	add	r25, r0
    942a:	11 24       	eor	r1, r1
    942c:	e8 0f       	add	r30, r24
    942e:	f9 1f       	adc	r31, r25
    9430:	e1 54       	subi	r30, 0x41	; 65
    9432:	f4 4f       	sbci	r31, 0xF4	; 244
    9434:	80 81       	ld	r24, Z
    9436:	88 23       	and	r24, r24
    9438:	49 f4       	brne	.+18     	; 0x944c <processMoles+0xbe>

				moles[rdy][rdx].active=true;
    943a:	81 e0       	ldi	r24, 0x01	; 1
    943c:	80 83       	st	Z, r24
				moles[rdy][rdx].whacked=false;
    943e:	14 82       	std	Z+4, r1	; 0x04
				moles[rdy][rdx].animFrame=0;
    9440:	11 82       	std	Z+1, r1	; 0x01
				activeMoles++;
    9442:	80 91 22 0b 	lds	r24, 0x0B22
    9446:	8f 5f       	subi	r24, 0xFF	; 255
    9448:	80 93 22 0b 	sts	0x0B22, r24
    944c:	ee 24       	eor	r14, r14
    944e:	ff 24       	eor	r15, r15
    9450:	f8 e0       	ldi	r31, 0x08	; 8
    9452:	cf 2e       	mov	r12, r31
		}

	}

	//animate moles
	for(y=0;y<4;y++){
    9454:	e4 e1       	ldi	r30, 0x14	; 20
    9456:	ae 2e       	mov	r10, r30
    9458:	b1 2c       	mov	r11, r1
    945a:	73 c0       	rjmp	.+230    	; 0x9542 <processMoles+0x1b4>
		for(x=0;x<4;x++){
			if(moles[y][x].active){
    945c:	f8 01       	movw	r30, r16
    945e:	80 81       	ld	r24, Z
    9460:	88 23       	and	r24, r24
    9462:	09 f4       	brne	.+2      	; 0x9466 <processMoles+0xd8>
    9464:	5e c0       	rjmp	.+188    	; 0x9522 <processMoles+0x194>
				ptr=NULL;

				if(moles[y][x].whacked){
    9466:	84 81       	ldd	r24, Z+4	; 0x04
    9468:	91 81       	ldd	r25, Z+1	; 0x01
    946a:	88 23       	and	r24, r24
    946c:	e9 f0       	breq	.+58     	; 0x94a8 <processMoles+0x11a>

					switch(moles[y][x].animFrame){
    946e:	9c 30       	cpi	r25, 0x0C	; 12
    9470:	c1 f0       	breq	.+48     	; 0x94a2 <processMoles+0x114>
    9472:	9d 30       	cpi	r25, 0x0D	; 13
    9474:	48 f4       	brcc	.+18     	; 0x9488 <processMoles+0xfa>
    9476:	94 30       	cpi	r25, 0x04	; 4
    9478:	a1 f0       	breq	.+40     	; 0x94a2 <processMoles+0x114>
    947a:	98 30       	cpi	r25, 0x08	; 8
    947c:	09 f4       	brne	.+2      	; 0x9480 <processMoles+0xf2>
    947e:	6d c0       	rjmp	.+218    	; 0x955a <processMoles+0x1cc>
    9480:	99 23       	and	r25, r25
    9482:	09 f4       	brne	.+2      	; 0x9486 <processMoles+0xf8>
    9484:	6a c0       	rjmp	.+212    	; 0x955a <processMoles+0x1cc>
    9486:	49 c0       	rjmp	.+146    	; 0x951a <processMoles+0x18c>
    9488:	94 31       	cpi	r25, 0x14	; 20
    948a:	59 f0       	breq	.+22     	; 0x94a2 <processMoles+0x114>
    948c:	95 31       	cpi	r25, 0x15	; 21
    948e:	20 f4       	brcc	.+8      	; 0x9498 <processMoles+0x10a>
    9490:	90 31       	cpi	r25, 0x10	; 16
    9492:	09 f0       	breq	.+2      	; 0x9496 <processMoles+0x108>
    9494:	42 c0       	rjmp	.+132    	; 0x951a <processMoles+0x18c>
    9496:	61 c0       	rjmp	.+194    	; 0x955a <processMoles+0x1cc>
    9498:	98 31       	cpi	r25, 0x18	; 24
    949a:	a9 f1       	breq	.+106    	; 0x9506 <processMoles+0x178>
    949c:	9c 31       	cpi	r25, 0x1C	; 28
    949e:	e9 f5       	brne	.+122    	; 0x951a <processMoles+0x18c>
    94a0:	35 c0       	rjmp	.+106    	; 0x950c <processMoles+0x17e>
    94a2:	c8 e4       	ldi	r28, 0x48	; 72
    94a4:	dd e0       	ldi	r29, 0x0D	; 13
    94a6:	5b c0       	rjmp	.+182    	; 0x955e <processMoles+0x1d0>
							activeMoles--;
							break;
					}

				}else{
					switch(moles[y][x].animFrame){
    94a8:	9e 32       	cpi	r25, 0x2E	; 46
    94aa:	39 f1       	breq	.+78     	; 0x94fa <processMoles+0x16c>
    94ac:	9f 32       	cpi	r25, 0x2F	; 47
    94ae:	70 f4       	brcc	.+28     	; 0x94cc <processMoles+0x13e>
    94b0:	9c 30       	cpi	r25, 0x0C	; 12
    94b2:	01 f1       	breq	.+64     	; 0x94f4 <processMoles+0x166>
    94b4:	9d 30       	cpi	r25, 0x0D	; 13
    94b6:	28 f4       	brcc	.+10     	; 0x94c2 <processMoles+0x134>
    94b8:	99 23       	and	r25, r25
    94ba:	c9 f0       	breq	.+50     	; 0x94ee <processMoles+0x160>
    94bc:	96 30       	cpi	r25, 0x06	; 6
    94be:	69 f5       	brne	.+90     	; 0x951a <processMoles+0x18c>
    94c0:	13 c0       	rjmp	.+38     	; 0x94e8 <processMoles+0x15a>
    94c2:	92 31       	cpi	r25, 0x12	; 18
    94c4:	d1 f0       	breq	.+52     	; 0x94fa <processMoles+0x16c>
    94c6:	98 31       	cpi	r25, 0x18	; 24
    94c8:	41 f5       	brne	.+80     	; 0x951a <processMoles+0x18c>
    94ca:	1a c0       	rjmp	.+52     	; 0x9500 <processMoles+0x172>
    94cc:	9e 33       	cpi	r25, 0x3E	; 62
    94ce:	79 f0       	breq	.+30     	; 0x94ee <processMoles+0x160>
    94d0:	9f 33       	cpi	r25, 0x3F	; 63
    94d2:	28 f4       	brcc	.+10     	; 0x94de <processMoles+0x150>
    94d4:	92 33       	cpi	r25, 0x32	; 50
    94d6:	71 f0       	breq	.+28     	; 0x94f4 <processMoles+0x166>
    94d8:	98 33       	cpi	r25, 0x38	; 56
    94da:	f9 f4       	brne	.+62     	; 0x951a <processMoles+0x18c>
    94dc:	05 c0       	rjmp	.+10     	; 0x94e8 <processMoles+0x15a>
    94de:	94 34       	cpi	r25, 0x44	; 68
    94e0:	91 f0       	breq	.+36     	; 0x9506 <processMoles+0x178>
    94e2:	9a 34       	cpi	r25, 0x4A	; 74
    94e4:	d1 f4       	brne	.+52     	; 0x951a <processMoles+0x18c>
    94e6:	12 c0       	rjmp	.+36     	; 0x950c <processMoles+0x17e>
    94e8:	c6 ec       	ldi	r28, 0xC6	; 198
    94ea:	dc e0       	ldi	r29, 0x0C	; 12
    94ec:	38 c0       	rjmp	.+112    	; 0x955e <processMoles+0x1d0>
    94ee:	cc ea       	ldi	r28, 0xAC	; 172
    94f0:	dc e0       	ldi	r29, 0x0C	; 12
    94f2:	35 c0       	rjmp	.+106    	; 0x955e <processMoles+0x1d0>
    94f4:	c0 ee       	ldi	r28, 0xE0	; 224
    94f6:	dc e0       	ldi	r29, 0x0C	; 12
    94f8:	32 c0       	rjmp	.+100    	; 0x955e <processMoles+0x1d0>
				
				
						case 12:
						case 40+10:
							ptr=map_mole3;
							break;
    94fa:	ca ef       	ldi	r28, 0xFA	; 250
    94fc:	dc e0       	ldi	r29, 0x0C	; 12
    94fe:	2f c0       	rjmp	.+94     	; 0x955e <processMoles+0x1d0>
						
						case 18:
						case 36+10:
							ptr=map_mole4;
							break;
    9500:	c4 e1       	ldi	r28, 0x14	; 20
    9502:	dd e0       	ldi	r29, 0x0D	; 13
    9504:	2c c0       	rjmp	.+88     	; 0x955e <processMoles+0x1d0>
						
						case 24:
							ptr=map_mole5;
							break;
    9506:	c2 e6       	ldi	r28, 0x62	; 98
    9508:	dd e0       	ldi	r29, 0x0D	; 13
    950a:	29 c0       	rjmp	.+82     	; 0x955e <processMoles+0x1d0>
						case 58+10:
							ptr=map_hole;
							break;

						case 64+10:
							moles[y][x].active=false;
    950c:	f8 01       	movw	r30, r16
    950e:	10 82       	st	Z, r1
							activeMoles--;
    9510:	80 91 22 0b 	lds	r24, 0x0B22
    9514:	81 50       	subi	r24, 0x01	; 1
    9516:	80 93 22 0b 	sts	0x0B22, r24
				if(ptr!=NULL){				
					RestoreBackground();
					DrawMap2((x*6)+4,(y*4)+FIELD_TOP+3,ptr);
				}

				moles[y][x].animFrame++;
    951a:	f8 01       	movw	r30, r16
    951c:	81 81       	ldd	r24, Z+1	; 0x01
    951e:	8f 5f       	subi	r24, 0xFF	; 255
    9520:	81 83       	std	Z+1, r24	; 0x01
    9522:	0b 5f       	subi	r16, 0xFB	; 251
    9524:	1f 4f       	sbci	r17, 0xFF	; 255
    9526:	f6 e0       	ldi	r31, 0x06	; 6
    9528:	df 0e       	add	r13, r31

	}

	//animate moles
	for(y=0;y<4;y++){
		for(x=0;x<4;x++){
    952a:	4c e1       	ldi	r20, 0x1C	; 28
    952c:	d4 16       	cp	r13, r20
    952e:	09 f0       	breq	.+2      	; 0x9532 <processMoles+0x1a4>
    9530:	95 cf       	rjmp	.-214    	; 0x945c <processMoles+0xce>
    9532:	08 94       	sec
    9534:	e1 1c       	adc	r14, r1
    9536:	f1 1c       	adc	r15, r1
    9538:	54 e0       	ldi	r21, 0x04	; 4
    953a:	c5 0e       	add	r12, r21
		}

	}

	//animate moles
	for(y=0;y<4;y++){
    953c:	88 e1       	ldi	r24, 0x18	; 24
    953e:	c8 16       	cp	r12, r24
    9540:	b1 f0       	breq	.+44     	; 0x956e <processMoles+0x1e0>
    9542:	ea 9c       	mul	r14, r10
    9544:	80 01       	movw	r16, r0
    9546:	eb 9c       	mul	r14, r11
    9548:	10 0d       	add	r17, r0
    954a:	fa 9c       	mul	r15, r10
    954c:	10 0d       	add	r17, r0
    954e:	11 24       	eor	r1, r1
    9550:	01 54       	subi	r16, 0x41	; 65
    9552:	14 4f       	sbci	r17, 0xF4	; 244
    9554:	74 e0       	ldi	r23, 0x04	; 4
    9556:	d7 2e       	mov	r13, r23
    9558:	81 cf       	rjmp	.-254    	; 0x945c <processMoles+0xce>
			
		}		
	}

	
}
    955a:	ce e2       	ldi	r28, 0x2E	; 46
    955c:	dd e0       	ldi	r29, 0x0D	; 13
							break;
					}
				}

				if(ptr!=NULL){				
					RestoreBackground();
    955e:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
					DrawMap2((x*6)+4,(y*4)+FIELD_TOP+3,ptr);
    9562:	ae 01       	movw	r20, r28
    9564:	6c 2d       	mov	r22, r12
    9566:	8d 2d       	mov	r24, r13
    9568:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
    956c:	d6 cf       	rjmp	.-84     	; 0x951a <processMoles+0x18c>
			
		}		
	}

	
}
    956e:	df 91       	pop	r29
    9570:	cf 91       	pop	r28
    9572:	1f 91       	pop	r17
    9574:	0f 91       	pop	r16
    9576:	ff 90       	pop	r15
    9578:	ef 90       	pop	r14
    957a:	df 90       	pop	r13
    957c:	cf 90       	pop	r12
    957e:	bf 90       	pop	r11
    9580:	af 90       	pop	r10
    9582:	08 95       	ret

00009584 <PrintSpeed>:
		}
	}

} 

void PrintSpeed(){
    9584:	42 e7       	ldi	r20, 0x72	; 114
    9586:	55 e6       	ldi	r21, 0x65	; 101
    9588:	61 e0       	ldi	r22, 0x01	; 1
    958a:	70 e0       	ldi	r23, 0x00	; 0
    958c:	8f e0       	ldi	r24, 0x0F	; 15
    958e:	90 e0       	ldi	r25, 0x00	; 0
    9590:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	Print(15,1,strSpeed);
	if(mouseSpeed==MOUSE_SENSITIVITY_LOW){
    9594:	80 91 01 01 	lds	r24, 0x0101
    9598:	88 23       	and	r24, r24
    959a:	19 f4       	brne	.+6      	; 0x95a2 <PrintSpeed+0x1e>
		Print(25,1,strLo);
    959c:	4d e7       	ldi	r20, 0x7D	; 125
    959e:	55 e6       	ldi	r21, 0x65	; 101
    95a0:	07 c0       	rjmp	.+14     	; 0x95b0 <PrintSpeed+0x2c>
	}else if(mouseSpeed==MOUSE_SENSITIVITY_HIGH){
    95a2:	81 30       	cpi	r24, 0x01	; 1
    95a4:	19 f4       	brne	.+6      	; 0x95ac <PrintSpeed+0x28>
		Print(25,1,strHi);
    95a6:	47 e8       	ldi	r20, 0x87	; 135
    95a8:	55 e6       	ldi	r21, 0x65	; 101
    95aa:	02 c0       	rjmp	.+4      	; 0x95b0 <PrintSpeed+0x2c>
	}else{
		Print(25,1,strMed);
    95ac:	42 e8       	ldi	r20, 0x82	; 130
    95ae:	55 e6       	ldi	r21, 0x65	; 101
    95b0:	61 e0       	ldi	r22, 0x01	; 1
    95b2:	70 e0       	ldi	r23, 0x00	; 0
    95b4:	89 e1       	ldi	r24, 0x19	; 25
    95b6:	90 e0       	ldi	r25, 0x00	; 0
    95b8:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
    95bc:	08 95       	ret

000095be <processButtons>:


	}
}

void processButtons(){
    95be:	4f 92       	push	r4
    95c0:	5f 92       	push	r5
    95c2:	6f 92       	push	r6
    95c4:	7f 92       	push	r7
    95c6:	8f 92       	push	r8
    95c8:	9f 92       	push	r9
    95ca:	af 92       	push	r10
    95cc:	bf 92       	push	r11
    95ce:	cf 92       	push	r12
    95d0:	df 92       	push	r13
    95d2:	ef 92       	push	r14
    95d4:	ff 92       	push	r15
    95d6:	0f 93       	push	r16
    95d8:	1f 93       	push	r17
    95da:	cf 93       	push	r28
    95dc:	df 93       	push	r29
	unsigned char i,tx,ty;
	unsigned int joy=ReadJoypad(playPort);
    95de:	80 91 1f 0b 	lds	r24, 0x0B1F
    95e2:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    95e6:	7c 01       	movw	r14, r24
	static unsigned int lastButtons;

	tx=(mx+6)>>3;
    95e8:	80 91 40 0c 	lds	r24, 0x0C40
    95ec:	90 91 41 0c 	lds	r25, 0x0C41
    95f0:	06 96       	adiw	r24, 0x06	; 6
    95f2:	23 e0       	ldi	r18, 0x03	; 3
    95f4:	95 95       	asr	r25
    95f6:	87 95       	ror	r24
    95f8:	2a 95       	dec	r18
    95fa:	e1 f7       	brne	.-8      	; 0x95f4 <processButtons+0x36>
    95fc:	58 2e       	mov	r5, r24
	ty=my>>3;
    95fe:	80 91 0f 0c 	lds	r24, 0x0C0F
    9602:	90 91 10 0c 	lds	r25, 0x0C10
    9606:	03 e0       	ldi	r16, 0x03	; 3
    9608:	95 95       	asr	r25
    960a:	87 95       	ror	r24
    960c:	0a 95       	dec	r16
    960e:	e1 f7       	brne	.-8      	; 0x9608 <processButtons+0x4a>
    9610:	c8 2e       	mov	r12, r24
    9612:	dd 24       	eor	r13, r13




	for(i=0;i<nextFreeButtonIndex;i++){
		if(tx>=buttons[i].x && tx<(buttons[i].x+buttons[i].width) && ty>=buttons[i].y && ty<(buttons[i].y+buttons[i].height)){
    9614:	1b e0       	ldi	r17, 0x0B	; 11
    9616:	a1 2e       	mov	r10, r17
    9618:	b1 2c       	mov	r11, r1
    961a:	65 2c       	mov	r6, r5
    961c:	77 24       	eor	r7, r7
    961e:	88 2e       	mov	r8, r24
    9620:	99 24       	eor	r9, r9
			if(joy&actionButton && buttons[i].state==BUTTON_UNPRESSED){
				RestoreBackground();
				DrawMap2(buttons[i].x,buttons[i].y,buttons[i].pushedMapPtr);
				buttons[i].state=BUTTON_PRESSED;
    9622:	44 24       	eor	r4, r4
    9624:	43 94       	inc	r4
    9626:	69 c0       	rjmp	.+210    	; 0x96fa <processButtons+0x13c>




	for(i=0;i<nextFreeButtonIndex;i++){
		if(tx>=buttons[i].x && tx<(buttons[i].x+buttons[i].width) && ty>=buttons[i].y && ty<(buttons[i].y+buttons[i].height)){
    9628:	0d 2d       	mov	r16, r13
    962a:	10 e0       	ldi	r17, 0x00	; 0
    962c:	0a 9d       	mul	r16, r10
    962e:	e0 01       	movw	r28, r0
    9630:	0b 9d       	mul	r16, r11
    9632:	d0 0d       	add	r29, r0
    9634:	1a 9d       	mul	r17, r10
    9636:	d0 0d       	add	r29, r0
    9638:	11 24       	eor	r1, r1
    963a:	cd 5e       	subi	r28, 0xED	; 237
    963c:	d3 4f       	sbci	r29, 0xF3	; 243
    963e:	89 81       	ldd	r24, Y+1	; 0x01
    9640:	58 16       	cp	r5, r24
    9642:	e0 f1       	brcs	.+120    	; 0x96bc <processButtons+0xfe>
    9644:	2b 81       	ldd	r18, Y+3	; 0x03
    9646:	90 e0       	ldi	r25, 0x00	; 0
    9648:	82 0f       	add	r24, r18
    964a:	91 1d       	adc	r25, r1
    964c:	68 16       	cp	r6, r24
    964e:	79 06       	cpc	r7, r25
    9650:	ac f5       	brge	.+106    	; 0x96bc <processButtons+0xfe>
    9652:	8a 81       	ldd	r24, Y+2	; 0x02
    9654:	c8 16       	cp	r12, r24
    9656:	90 f1       	brcs	.+100    	; 0x96bc <processButtons+0xfe>
    9658:	2c 81       	ldd	r18, Y+4	; 0x04
    965a:	90 e0       	ldi	r25, 0x00	; 0
    965c:	82 0f       	add	r24, r18
    965e:	91 1d       	adc	r25, r1
    9660:	88 16       	cp	r8, r24
    9662:	99 06       	cpc	r9, r25
    9664:	5c f5       	brge	.+86     	; 0x96bc <processButtons+0xfe>
			if(joy&actionButton && buttons[i].state==BUTTON_UNPRESSED){
    9666:	80 91 1e 0c 	lds	r24, 0x0C1E
    966a:	90 91 1f 0c 	lds	r25, 0x0C1F
    966e:	8e 21       	and	r24, r14
    9670:	9f 21       	and	r25, r15
    9672:	89 2b       	or	r24, r25
    9674:	61 f0       	breq	.+24     	; 0x968e <processButtons+0xd0>
    9676:	89 85       	ldd	r24, Y+9	; 0x09
    9678:	88 23       	and	r24, r24
    967a:	49 f4       	brne	.+18     	; 0x968e <processButtons+0xd0>
				RestoreBackground();
    967c:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
				DrawMap2(buttons[i].x,buttons[i].y,buttons[i].pushedMapPtr);
    9680:	4f 81       	ldd	r20, Y+7	; 0x07
    9682:	58 85       	ldd	r21, Y+8	; 0x08
    9684:	6a 81       	ldd	r22, Y+2	; 0x02
    9686:	89 81       	ldd	r24, Y+1	; 0x01
    9688:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
				buttons[i].state=BUTTON_PRESSED;
    968c:	49 86       	std	Y+9, r4	; 0x09
			}
			
			if((joy&actionButton)==0 && buttons[i].state==BUTTON_PRESSED){
    968e:	80 91 1e 0c 	lds	r24, 0x0C1E
    9692:	90 91 1f 0c 	lds	r25, 0x0C1F
    9696:	8e 21       	and	r24, r14
    9698:	9f 21       	and	r25, r15
    969a:	89 2b       	or	r24, r25
    969c:	69 f5       	brne	.+90     	; 0x96f8 <processButtons+0x13a>
    969e:	0a 9d       	mul	r16, r10
    96a0:	e0 01       	movw	r28, r0
    96a2:	0b 9d       	mul	r16, r11
    96a4:	d0 0d       	add	r29, r0
    96a6:	1a 9d       	mul	r17, r10
    96a8:	d0 0d       	add	r29, r0
    96aa:	11 24       	eor	r1, r1
    96ac:	cd 5e       	subi	r28, 0xED	; 237
    96ae:	d3 4f       	sbci	r29, 0xF3	; 243
    96b0:	89 85       	ldd	r24, Y+9	; 0x09
    96b2:	81 30       	cpi	r24, 0x01	; 1
    96b4:	09 f5       	brne	.+66     	; 0x96f8 <processButtons+0x13a>
				//button clicked!
				buttons[i].state=BUTTON_UNPRESSED;
    96b6:	19 86       	std	Y+9, r1	; 0x09
				buttons[i].clicked=true;
    96b8:	8a 87       	std	Y+10, r24	; 0x0a
    96ba:	16 c0       	rjmp	.+44     	; 0x96e8 <processButtons+0x12a>
				RestoreBackground();
				DrawMap2(buttons[i].x,buttons[i].y,buttons[i].normalMapPtr);
			}			
		}else{
		
			if((joy&actionButton)==0 && buttons[i].state==BUTTON_PRESSED){
    96bc:	80 91 1e 0c 	lds	r24, 0x0C1E
    96c0:	90 91 1f 0c 	lds	r25, 0x0C1F
    96c4:	8e 21       	and	r24, r14
    96c6:	9f 21       	and	r25, r15
    96c8:	89 2b       	or	r24, r25
    96ca:	b1 f4       	brne	.+44     	; 0x96f8 <processButtons+0x13a>
    96cc:	0a 9d       	mul	r16, r10
    96ce:	e0 01       	movw	r28, r0
    96d0:	0b 9d       	mul	r16, r11
    96d2:	d0 0d       	add	r29, r0
    96d4:	1a 9d       	mul	r17, r10
    96d6:	d0 0d       	add	r29, r0
    96d8:	11 24       	eor	r1, r1
    96da:	cd 5e       	subi	r28, 0xED	; 237
    96dc:	d3 4f       	sbci	r29, 0xF3	; 243
    96de:	89 85       	ldd	r24, Y+9	; 0x09
    96e0:	81 30       	cpi	r24, 0x01	; 1
    96e2:	51 f4       	brne	.+20     	; 0x96f8 <processButtons+0x13a>
				//button clicked!
				buttons[i].state=BUTTON_UNPRESSED;
    96e4:	19 86       	std	Y+9, r1	; 0x09
				buttons[i].clicked=false;
    96e6:	1a 86       	std	Y+10, r1	; 0x0a
				RestoreBackground();
    96e8:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
				DrawMap2(buttons[i].x,buttons[i].y,buttons[i].normalMapPtr);
    96ec:	4d 81       	ldd	r20, Y+5	; 0x05
    96ee:	5e 81       	ldd	r21, Y+6	; 0x06
    96f0:	6a 81       	ldd	r22, Y+2	; 0x02
    96f2:	89 81       	ldd	r24, Y+1	; 0x01
    96f4:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>





	for(i=0;i<nextFreeButtonIndex;i++){
    96f8:	d3 94       	inc	r13
    96fa:	80 91 1b 0b 	lds	r24, 0x0B1B
    96fe:	d8 16       	cp	r13, r24
    9700:	08 f4       	brcc	.+2      	; 0x9704 <processButtons+0x146>
    9702:	92 cf       	rjmp	.-220    	; 0x9628 <processButtons+0x6a>
		}


	}

	if((joy&BTN_MOUSE_RIGHT) && ((lastButtons&BTN_MOUSE_RIGHT)==0)){
    9704:	f0 fe       	sbrs	r15, 0
    9706:	1a c0       	rjmp	.+52     	; 0x973c <processButtons+0x17e>
    9708:	80 91 2c 0b 	lds	r24, 0x0B2C
    970c:	90 91 2d 0b 	lds	r25, 0x0B2D
    9710:	90 fd       	sbrc	r25, 0
    9712:	14 c0       	rjmp	.+40     	; 0x973c <processButtons+0x17e>
		TriggerFx(8,0xff,true);
    9714:	41 e0       	ldi	r20, 0x01	; 1
    9716:	6f ef       	ldi	r22, 0xFF	; 255
    9718:	88 e0       	ldi	r24, 0x08	; 8
    971a:	0e 94 57 3c 	call	0x78ae	; 0x78ae <TriggerFx>
		mouseSpeed++;
    971e:	80 91 01 01 	lds	r24, 0x0101
    9722:	8f 5f       	subi	r24, 0xFF	; 255
    9724:	80 93 01 01 	sts	0x0101, r24
		if(mouseSpeed==3)mouseSpeed=0;
    9728:	83 30       	cpi	r24, 0x03	; 3
    972a:	11 f4       	brne	.+4      	; 0x9730 <processButtons+0x172>
    972c:	10 92 01 01 	sts	0x0101, r1
		SetMouseSensitivity(mouseSpeed);
    9730:	80 91 01 01 	lds	r24, 0x0101
    9734:	0e 94 c9 37 	call	0x6f92	; 0x6f92 <SetMouseSensitivity>
		PrintSpeed();
    9738:	0e 94 c2 4a 	call	0x9584	; 0x9584 <PrintSpeed>
	}

	lastButtons=joy;
    973c:	f0 92 2d 0b 	sts	0x0B2D, r15
    9740:	e0 92 2c 0b 	sts	0x0B2C, r14
}
    9744:	df 91       	pop	r29
    9746:	cf 91       	pop	r28
    9748:	1f 91       	pop	r17
    974a:	0f 91       	pop	r16
    974c:	ff 90       	pop	r15
    974e:	ef 90       	pop	r14
    9750:	df 90       	pop	r13
    9752:	cf 90       	pop	r12
    9754:	bf 90       	pop	r11
    9756:	af 90       	pop	r10
    9758:	9f 90       	pop	r9
    975a:	8f 90       	pop	r8
    975c:	7f 90       	pop	r7
    975e:	6f 90       	pop	r6
    9760:	5f 90       	pop	r5
    9762:	4f 90       	pop	r4
    9764:	08 95       	ret

00009766 <doStart>:
	while((ReadJoypad(playPort)&BTN_MOUSE_LEFT)==0);
	while((ReadJoypad(playPort)&BTN_MOUSE_LEFT)!=0);
}


void doStart(){
    9766:	cf 93       	push	r28
    9768:	df 93       	push	r29
	unsigned char btnId;
	unsigned int frame=0;


	nextFreeButtonIndex=0;
    976a:	10 92 1b 0b 	sts	0x0B1B, r1
	btnId=createButton(13,FIELD_TOP+3,map_startBtnUp,map_startBtnDown);
    976e:	28 e8       	ldi	r18, 0x88	; 136
    9770:	3d e0       	ldi	r19, 0x0D	; 13
    9772:	4c e7       	ldi	r20, 0x7C	; 124
    9774:	5d e0       	ldi	r21, 0x0D	; 13
    9776:	68 e0       	ldi	r22, 0x08	; 8
    9778:	8d e0       	ldi	r24, 0x0D	; 13
    977a:	0e 94 5e 49 	call	0x92bc	; 0x92bc <createButton>
   		WaitVsync(1);
		processMouseMovement();
		processButtons();

		//check if we have pressed the start button
		if(buttons[btnId].clicked){
    977e:	90 e0       	ldi	r25, 0x00	; 0
    9780:	2b e0       	ldi	r18, 0x0B	; 11
    9782:	30 e0       	ldi	r19, 0x00	; 0
    9784:	82 9f       	mul	r24, r18
    9786:	e0 01       	movw	r28, r0
    9788:	83 9f       	mul	r24, r19
    978a:	d0 0d       	add	r29, r0
    978c:	92 9f       	mul	r25, r18
    978e:	d0 0d       	add	r29, r0
    9790:	11 24       	eor	r1, r1
    9792:	c3 5e       	subi	r28, 0xE3	; 227
    9794:	d3 4f       	sbci	r29, 0xF3	; 243

	nextFreeButtonIndex=0;
	btnId=createButton(13,FIELD_TOP+3,map_startBtnUp,map_startBtnDown);

	while(1){
   		WaitVsync(1);
    9796:	81 e0       	ldi	r24, 0x01	; 1
    9798:	90 e0       	ldi	r25, 0x00	; 0
    979a:	0e 94 12 45 	call	0x8a24	; 0x8a24 <WaitVsync>
		processMouseMovement();
    979e:	0e 94 b6 48 	call	0x916c	; 0x916c <processMouseMovement>
		processButtons();
    97a2:	0e 94 df 4a 	call	0x95be	; 0x95be <processButtons>

		//check if we have pressed the start button
		if(buttons[btnId].clicked){
    97a6:	88 81       	ld	r24, Y
    97a8:	88 23       	and	r24, r24
    97aa:	a9 f3       	breq	.-22     	; 0x9796 <doStart+0x30>
			RestoreBackground();
    97ac:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
			DrawMap2(10,FIELD_TOP+3,map_hole);
    97b0:	42 e6       	ldi	r20, 0x62	; 98
    97b2:	5d e0       	ldi	r21, 0x0D	; 13
    97b4:	68 e0       	ldi	r22, 0x08	; 8
    97b6:	8a e0       	ldi	r24, 0x0A	; 10
    97b8:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
			DrawMap2(16,FIELD_TOP+3,map_hole);
    97bc:	42 e6       	ldi	r20, 0x62	; 98
    97be:	5d e0       	ldi	r21, 0x0D	; 13
    97c0:	68 e0       	ldi	r22, 0x08	; 8
    97c2:	80 e1       	ldi	r24, 0x10	; 16
    97c4:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
			MapSprite(0,map_hammerUp);
    97c8:	62 e4       	ldi	r22, 0x42	; 66
    97ca:	7a e0       	ldi	r23, 0x0A	; 10
    97cc:	80 e0       	ldi	r24, 0x00	; 0
    97ce:	0e 94 c8 44 	call	0x8990	; 0x8990 <MapSprite>

			DrawMap2(12,FIELD_TOP+7+4,map_ready);
    97d2:	44 e9       	ldi	r20, 0x94	; 148
    97d4:	5d e0       	ldi	r21, 0x0D	; 13
    97d6:	60 e1       	ldi	r22, 0x10	; 16
    97d8:	8c e0       	ldi	r24, 0x0C	; 12
    97da:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
    97de:	c0 e0       	ldi	r28, 0x00	; 0
    97e0:	d0 e0       	ldi	r29, 0x00	; 0



			while(frame<120){
				WaitVsync(1);
    97e2:	81 e0       	ldi	r24, 0x01	; 1
    97e4:	90 e0       	ldi	r25, 0x00	; 0
    97e6:	0e 94 12 45 	call	0x8a24	; 0x8a24 <WaitVsync>
				processMouseMovement();
    97ea:	0e 94 b6 48 	call	0x916c	; 0x916c <processMouseMovement>
				processHammer();
    97ee:	0e 94 d8 47 	call	0x8fb0	; 0x8fb0 <processHammer>

				if(frame==40 || frame==110){
    97f2:	c8 32       	cpi	r28, 0x28	; 40
    97f4:	d1 05       	cpc	r29, r1
    97f6:	19 f0       	breq	.+6      	; 0x97fe <doStart+0x98>
    97f8:	ce 36       	cpi	r28, 0x6E	; 110
    97fa:	d1 05       	cpc	r29, r1
    97fc:	69 f4       	brne	.+26     	; 0x9818 <doStart+0xb2>
					RestoreBackground();
    97fe:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
					DrawMap2(10,FIELD_TOP+3+4+4,map_hole);
    9802:	42 e6       	ldi	r20, 0x62	; 98
    9804:	5d e0       	ldi	r21, 0x0D	; 13
    9806:	60 e1       	ldi	r22, 0x10	; 16
    9808:	8a e0       	ldi	r24, 0x0A	; 10
    980a:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
					DrawMap2(16,FIELD_TOP+3+4+4,map_hole);
    980e:	42 e6       	ldi	r20, 0x62	; 98
    9810:	5d e0       	ldi	r21, 0x0D	; 13
    9812:	60 e1       	ldi	r22, 0x10	; 16
    9814:	80 e1       	ldi	r24, 0x10	; 16
    9816:	09 c0       	rjmp	.+18     	; 0x982a <doStart+0xc4>
				}else if(frame==50){
    9818:	c2 33       	cpi	r28, 0x32	; 50
    981a:	d1 05       	cpc	r29, r1
    981c:	41 f4       	brne	.+16     	; 0x982e <doStart+0xc8>
					RestoreBackground();
    981e:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
					DrawMap2(12,FIELD_TOP+7+4,map_whack);
    9822:	48 eb       	ldi	r20, 0xB8	; 184
    9824:	5d e0       	ldi	r21, 0x0D	; 13
    9826:	60 e1       	ldi	r22, 0x10	; 16
    9828:	8c e0       	ldi	r24, 0x0C	; 12
    982a:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
				}

				frame++;
    982e:	21 96       	adiw	r28, 0x01	; 1

			DrawMap2(12,FIELD_TOP+7+4,map_ready);



			while(frame<120){
    9830:	c8 37       	cpi	r28, 0x78	; 120
    9832:	d1 05       	cpc	r29, r1
    9834:	b1 f6       	brne	.-84     	; 0x97e2 <doStart+0x7c>
			return;
		}


	}
}
    9836:	df 91       	pop	r29
    9838:	cf 91       	pop	r28
    983a:	08 95       	ret

0000983c <menu>:
	}else{
		Print(25,1,strMed);
	}
}

void menu(){
    983c:	88 ec       	ldi	r24, 0xC8	; 200
    983e:	94 e4       	ldi	r25, 0x44	; 68
    9840:	0e 94 5a 35 	call	0x6ab4	; 0x6ab4 <SetTileTable>
	unsigned int joy;
    SetTileTable(title_tileset);
	SetFontTilesIndex(TITLE_TILESET_SIZE);
    9844:	80 e4       	ldi	r24, 0x40	; 64
    9846:	0e 94 52 35 	call	0x6aa4	; 0x6aa4 <SetFontTilesIndex>
    ClearVram();
    984a:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <ClearVram>

	DrawMap2(4,8,map_title);
    984e:	48 ec       	ldi	r20, 0xC8	; 200
    9850:	54 e6       	ldi	r21, 0x64	; 100
    9852:	68 e0       	ldi	r22, 0x08	; 8
    9854:	84 e0       	ldi	r24, 0x04	; 4
    9856:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
	
	Print(8,12,strStart);
    985a:	49 e4       	ldi	r20, 0x49	; 73
    985c:	55 e6       	ldi	r21, 0x65	; 101
    985e:	6c e0       	ldi	r22, 0x0C	; 12
    9860:	70 e0       	ldi	r23, 0x00	; 0
    9862:	88 e0       	ldi	r24, 0x08	; 8
    9864:	90 e0       	ldi	r25, 0x00	; 0
    9866:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	Print(10,23,strCopy);
    986a:	4f e3       	ldi	r20, 0x3F	; 63
    986c:	55 e6       	ldi	r21, 0x65	; 101
    986e:	67 e1       	ldi	r22, 0x17	; 23
    9870:	70 e0       	ldi	r23, 0x00	; 0
    9872:	8a e0       	ldi	r24, 0x0A	; 10
    9874:	90 e0       	ldi	r25, 0x00	; 0
    9876:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	Print(3,25,strWeb);
    987a:	48 e5       	ldi	r20, 0x58	; 88
    987c:	55 e6       	ldi	r21, 0x65	; 101
    987e:	69 e1       	ldi	r22, 0x19	; 25
    9880:	70 e0       	ldi	r23, 0x00	; 0
    9882:	83 e0       	ldi	r24, 0x03	; 3
    9884:	90 e0       	ldi	r25, 0x00	; 0
    9886:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>


	if(playDevice==0)Print(6,17,strNotDetected);
    988a:	80 91 1e 0b 	lds	r24, 0x0B1E
    988e:	88 23       	and	r24, r24
    9890:	41 f4       	brne	.+16     	; 0x98a2 <menu+0x66>
    9892:	4c e0       	ldi	r20, 0x0C	; 12
    9894:	55 e6       	ldi	r21, 0x65	; 101
    9896:	61 e1       	ldi	r22, 0x11	; 17
    9898:	70 e0       	ldi	r23, 0x00	; 0
    989a:	86 e0       	ldi	r24, 0x06	; 6
    989c:	90 e0       	ldi	r25, 0x00	; 0
    989e:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>

	StartSong(song_Whacksong);
    98a2:	86 e8       	ldi	r24, 0x86	; 134
    98a4:	90 e0       	ldi	r25, 0x00	; 0
    98a6:	0e 94 b3 38 	call	0x7166	; 0x7166 <StartSong>

	while(1){
		joy=ReadJoypad(playPort);
    98aa:	80 91 1f 0b 	lds	r24, 0x0B1F
    98ae:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
		if(joy&actionButton){
    98b2:	20 91 1e 0c 	lds	r18, 0x0C1E
    98b6:	30 91 1f 0c 	lds	r19, 0x0C1F
    98ba:	28 23       	and	r18, r24
    98bc:	39 23       	and	r19, r25
    98be:	23 2b       	or	r18, r19
    98c0:	a1 f3       	breq	.-24     	; 0x98aa <menu+0x6e>
			while(ReadJoypad(playPort)&actionButton);
    98c2:	80 91 1f 0b 	lds	r24, 0x0B1F
    98c6:	0e 94 49 36 	call	0x6c92	; 0x6c92 <ReadJoypad>
    98ca:	20 91 1e 0c 	lds	r18, 0x0C1E
    98ce:	30 91 1f 0c 	lds	r19, 0x0C1F
    98d2:	28 23       	and	r18, r24
    98d4:	39 23       	and	r19, r25
    98d6:	23 2b       	or	r18, r19
    98d8:	a1 f7       	brne	.-24     	; 0x98c2 <menu+0x86>
			StopSong();
    98da:	0e 94 e1 38 	call	0x71c2	; 0x71c2 <StopSong>
			return;
		}
	}
}
    98de:	08 95       	ret

000098e0 <main>:
char dx=0,dy=0,playDevice=0,playPort=0;
unsigned char highScore=0,molesWhacked=0,activeMoles=0,level,mouseSpeed=MOUSE_SENSITIVITY_MEDIUM;
unsigned int time=0,lastTime=0,actionButton;
bool gameOver;

int main(){
    98e0:	cf 92       	push	r12
    98e2:	df 92       	push	r13
    98e4:	ef 92       	push	r14
    98e6:	ff 92       	push	r15
    98e8:	0f 93       	push	r16
    98ea:	1f 93       	push	r17
    98ec:	cf 93       	push	r28
    98ee:	df 93       	push	r29
	unsigned char x,y,tmp;

	EnableSnesMouse();
    98f0:	0e 94 7c 36 	call	0x6cf8	; 0x6cf8 <EnableSnesMouse>
	DetectControllers();
    98f4:	0e 94 97 49 	call	0x932e	; 0x932e <DetectControllers>
	InitMusicPlayer(patches);
    98f8:	8d e9       	ldi	r24, 0x9D	; 157
    98fa:	94 e0       	ldi	r25, 0x04	; 4
    98fc:	0e 94 98 38 	call	0x7130	; 0x7130 <InitMusicPlayer>
	SetMouseSensitivity(mouseSpeed);
    9900:	80 91 01 01 	lds	r24, 0x0101
    9904:	0e 94 c9 37 	call	0x6f92	; 0x6f92 <SetMouseSensitivity>

	srand(TCNT1);
    9908:	80 91 84 00 	lds	r24, 0x0084
    990c:	90 91 85 00 	lds	r25, 0x0085
    9910:	0e 94 1f 4e 	call	0x9c3e	; 0x9c3e <srand>

    SetTileTable(mole_tileset);
    9914:	88 ec       	ldi	r24, 0xC8	; 200
    9916:	9d e0       	ldi	r25, 0x0D	; 13
    9918:	0e 94 5a 35 	call	0x6ab4	; 0x6ab4 <SetTileTable>
	SetFontTilesIndex(MOLE_TILESET_SIZE);
    991c:	8c e9       	ldi	r24, 0x9C	; 156
    991e:	0e 94 52 35 	call	0x6aa4	; 0x6aa4 <SetFontTilesIndex>
	SetSpritesTileTable(cursor_tileset);
    9922:	87 ef       	ldi	r24, 0xF7	; 247
    9924:	94 e0       	ldi	r25, 0x04	; 4
    9926:	0e 94 55 35 	call	0x6aaa	; 0x6aaa <SetSpritesTileTable>
    ClearVram();
    992a:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <ClearVram>

    Print(2,1,strHighScore);
    992e:	40 e2       	ldi	r20, 0x20	; 32
    9930:	55 e6       	ldi	r21, 0x65	; 101
    9932:	61 e0       	ldi	r22, 0x01	; 1
    9934:	70 e0       	ldi	r23, 0x00	; 0
    9936:	82 e0       	ldi	r24, 0x02	; 2
    9938:	90 e0       	ldi	r25, 0x00	; 0
    993a:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	PrintByte(13,1,highScore,true);
    993e:	21 e0       	ldi	r18, 0x01	; 1
    9940:	40 91 20 0b 	lds	r20, 0x0B20
    9944:	61 e0       	ldi	r22, 0x01	; 1
    9946:	70 e0       	ldi	r23, 0x00	; 0
    9948:	8d e0       	ldi	r24, 0x0D	; 13
    994a:	90 e0       	ldi	r25, 0x00	; 0
    994c:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>

	PrintSpeed();
    9950:	0e 94 c2 4a 	call	0x9584	; 0x9584 <PrintSpeed>


	mx=120;
    9954:	88 e7       	ldi	r24, 0x78	; 120
    9956:	90 e0       	ldi	r25, 0x00	; 0
    9958:	90 93 41 0c 	sts	0x0C41, r25
    995c:	80 93 40 0c 	sts	0x0C40, r24
	my=100;
    9960:	84 e6       	ldi	r24, 0x64	; 100
    9962:	90 e0       	ldi	r25, 0x00	; 0
    9964:	90 93 10 0c 	sts	0x0C10, r25
    9968:	80 93 0f 0c 	sts	0x0C0F, r24

	Print(12-5,3,strWhacked);
    996c:	4a e2       	ldi	r20, 0x2A	; 42
    996e:	55 e6       	ldi	r21, 0x65	; 101
    9970:	63 e0       	ldi	r22, 0x03	; 3
    9972:	70 e0       	ldi	r23, 0x00	; 0
    9974:	87 e0       	ldi	r24, 0x07	; 7
    9976:	90 e0       	ldi	r25, 0x00	; 0
    9978:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	PrintByte(28-5,3,molesWhacked,true);
    997c:	21 e0       	ldi	r18, 0x01	; 1
    997e:	40 91 21 0b 	lds	r20, 0x0B21
    9982:	63 e0       	ldi	r22, 0x03	; 3
    9984:	70 e0       	ldi	r23, 0x00	; 0
    9986:	87 e1       	ldi	r24, 0x17	; 23
    9988:	90 e0       	ldi	r25, 0x00	; 0
    998a:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>

	Print(2+10,4,strTime);
    998e:	49 e3       	ldi	r20, 0x39	; 57
    9990:	55 e6       	ldi	r21, 0x65	; 101
    9992:	64 e0       	ldi	r22, 0x04	; 4
    9994:	70 e0       	ldi	r23, 0x00	; 0
    9996:	8c e0       	ldi	r24, 0x0C	; 12
    9998:	90 e0       	ldi	r25, 0x00	; 0
    999a:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
	PrintByte(9+10,4,(time/60),true);
    999e:	80 91 23 0b 	lds	r24, 0x0B23
    99a2:	90 91 24 0b 	lds	r25, 0x0B24
    99a6:	6c e3       	ldi	r22, 0x3C	; 60
    99a8:	70 e0       	ldi	r23, 0x00	; 0
    99aa:	0e 94 97 4e 	call	0x9d2e	; 0x9d2e <__udivmodhi4>
    99ae:	46 2f       	mov	r20, r22
    99b0:	21 e0       	ldi	r18, 0x01	; 1
    99b2:	64 e0       	ldi	r22, 0x04	; 4
    99b4:	70 e0       	ldi	r23, 0x00	; 0
    99b6:	83 e1       	ldi	r24, 0x13	; 19
    99b8:	90 e0       	ldi	r25, 0x00	; 0
    99ba:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>

	DrawMap2(2,FIELD_TOP,map_main);
    99be:	48 e5       	ldi	r20, 0x58	; 88
    99c0:	5a e0       	ldi	r21, 0x0A	; 10
    99c2:	65 e0       	ldi	r22, 0x05	; 5
    99c4:	82 e0       	ldi	r24, 0x02	; 2
    99c6:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
    99ca:	ee 24       	eor	r14, r14
    99cc:	ff 24       	eor	r15, r15
    99ce:	08 e0       	ldi	r16, 0x08	; 8

	//create holes
	for(y=0;y<4;y++){
    99d0:	44 e1       	ldi	r20, 0x14	; 20
    99d2:	c4 2e       	mov	r12, r20
    99d4:	d1 2c       	mov	r13, r1
    99d6:	15 c0       	rjmp	.+42     	; 0x9a02 <main+0x122>
		for(x=0;x<4;x++){
			DrawMap2((x*6)+4,(y*4)+FIELD_TOP+3,map_hole);
    99d8:	42 e6       	ldi	r20, 0x62	; 98
    99da:	5d e0       	ldi	r21, 0x0D	; 13
    99dc:	60 2f       	mov	r22, r16
    99de:	81 2f       	mov	r24, r17
    99e0:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>
			moles[y][x].whacked=false;
    99e4:	1c 82       	std	Y+4, r1	; 0x04
			moles[y][x].animFrame=0;
    99e6:	19 82       	std	Y+1, r1	; 0x01
			moles[y][x].active=false;
    99e8:	18 82       	st	Y, r1
			moles[y][x].x=(x*6)+4;
    99ea:	1a 83       	std	Y+2, r17	; 0x02
			moles[y][x].y=(y*4)+FIELD_TOP+3;
    99ec:	0b 83       	std	Y+3, r16	; 0x03
    99ee:	1a 5f       	subi	r17, 0xFA	; 250
    99f0:	25 96       	adiw	r28, 0x05	; 5

	DrawMap2(2,FIELD_TOP,map_main);

	//create holes
	for(y=0;y<4;y++){
		for(x=0;x<4;x++){
    99f2:	1c 31       	cpi	r17, 0x1C	; 28
    99f4:	89 f7       	brne	.-30     	; 0x99d8 <main+0xf8>
    99f6:	08 94       	sec
    99f8:	e1 1c       	adc	r14, r1
    99fa:	f1 1c       	adc	r15, r1
    99fc:	0c 5f       	subi	r16, 0xFC	; 252
	PrintByte(9+10,4,(time/60),true);

	DrawMap2(2,FIELD_TOP,map_main);

	//create holes
	for(y=0;y<4;y++){
    99fe:	08 31       	cpi	r16, 0x18	; 24
    9a00:	59 f0       	breq	.+22     	; 0x9a18 <main+0x138>
    9a02:	ec 9c       	mul	r14, r12
    9a04:	e0 01       	movw	r28, r0
    9a06:	ed 9c       	mul	r14, r13
    9a08:	d0 0d       	add	r29, r0
    9a0a:	fc 9c       	mul	r15, r12
    9a0c:	d0 0d       	add	r29, r0
    9a0e:	11 24       	eor	r1, r1
    9a10:	c1 54       	subi	r28, 0x41	; 65
    9a12:	d4 4f       	sbci	r29, 0xF4	; 244
    9a14:	14 e0       	ldi	r17, 0x04	; 4
    9a16:	e0 cf       	rjmp	.-64     	; 0x99d8 <main+0xf8>

		MapSprite(0,map_cursor);


		activeMoles=0;
		level=2;	
    9a18:	02 e0       	ldi	r16, 0x02	; 2
		molesWhacked=0;
		time=60*60;
    9a1a:	30 e1       	ldi	r19, 0x10	; 16
    9a1c:	e3 2e       	mov	r14, r19
    9a1e:	3e e0       	ldi	r19, 0x0E	; 14
    9a20:	f3 2e       	mov	r15, r19

		Print(12-5,3,strWhacked);
		PrintByte(28-5,3,molesWhacked,true);

		Print(2+10,4,strTime);
		PrintByte(9+10,4,(time/60),true);
    9a22:	cc e3       	ldi	r28, 0x3C	; 60
    9a24:	d0 e0       	ldi	r29, 0x00	; 0
	
	}

	while(1){

		MapSprite(0,map_cursor);
    9a26:	67 e3       	ldi	r22, 0x37	; 55
    9a28:	7a e0       	ldi	r23, 0x0A	; 10
    9a2a:	80 e0       	ldi	r24, 0x00	; 0
    9a2c:	0e 94 c8 44 	call	0x8990	; 0x8990 <MapSprite>


		activeMoles=0;
    9a30:	10 92 22 0b 	sts	0x0B22, r1
		level=2;	
    9a34:	00 93 12 0c 	sts	0x0C12, r16
		molesWhacked=0;
    9a38:	10 92 21 0b 	sts	0x0B21, r1
		time=60*60;
    9a3c:	f0 92 24 0b 	sts	0x0B24, r15
    9a40:	e0 92 23 0b 	sts	0x0B23, r14
		gameOver=false;
    9a44:	10 92 11 0c 	sts	0x0C11, r1


		doStart();
    9a48:	0e 94 b3 4b 	call	0x9766	; 0x9766 <doStart>

		

		Print(12-5,3,strWhacked);
    9a4c:	4a e2       	ldi	r20, 0x2A	; 42
    9a4e:	55 e6       	ldi	r21, 0x65	; 101
    9a50:	63 e0       	ldi	r22, 0x03	; 3
    9a52:	70 e0       	ldi	r23, 0x00	; 0
    9a54:	87 e0       	ldi	r24, 0x07	; 7
    9a56:	90 e0       	ldi	r25, 0x00	; 0
    9a58:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
		PrintByte(28-5,3,molesWhacked,true);
    9a5c:	21 e0       	ldi	r18, 0x01	; 1
    9a5e:	40 91 21 0b 	lds	r20, 0x0B21
    9a62:	63 e0       	ldi	r22, 0x03	; 3
    9a64:	70 e0       	ldi	r23, 0x00	; 0
    9a66:	87 e1       	ldi	r24, 0x17	; 23
    9a68:	90 e0       	ldi	r25, 0x00	; 0
    9a6a:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>

		Print(2+10,4,strTime);
    9a6e:	49 e3       	ldi	r20, 0x39	; 57
    9a70:	55 e6       	ldi	r21, 0x65	; 101
    9a72:	64 e0       	ldi	r22, 0x04	; 4
    9a74:	70 e0       	ldi	r23, 0x00	; 0
    9a76:	8c e0       	ldi	r24, 0x0C	; 12
    9a78:	90 e0       	ldi	r25, 0x00	; 0
    9a7a:	0e 94 64 45 	call	0x8ac8	; 0x8ac8 <Print>
		PrintByte(9+10,4,(time/60),true);
    9a7e:	80 91 23 0b 	lds	r24, 0x0B23
    9a82:	90 91 24 0b 	lds	r25, 0x0B24
    9a86:	6c e3       	ldi	r22, 0x3C	; 60
    9a88:	70 e0       	ldi	r23, 0x00	; 0
    9a8a:	0e 94 97 4e 	call	0x9d2e	; 0x9d2e <__udivmodhi4>
    9a8e:	46 2f       	mov	r20, r22
    9a90:	21 e0       	ldi	r18, 0x01	; 1
    9a92:	64 e0       	ldi	r22, 0x04	; 4
    9a94:	70 e0       	ldi	r23, 0x00	; 0
    9a96:	83 e1       	ldi	r24, 0x13	; 19
    9a98:	90 e0       	ldi	r25, 0x00	; 0
    9a9a:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>


		do{
	   		WaitVsync(1);
    9a9e:	81 e0       	ldi	r24, 0x01	; 1
    9aa0:	90 e0       	ldi	r25, 0x00	; 0
    9aa2:	0e 94 12 45 	call	0x8a24	; 0x8a24 <WaitVsync>
			processMouseMovement();
    9aa6:	0e 94 b6 48 	call	0x916c	; 0x916c <processMouseMovement>
			processHammer();
    9aaa:	0e 94 d8 47 	call	0x8fb0	; 0x8fb0 <processHammer>
			processMoles();
    9aae:	0e 94 c7 49 	call	0x938e	; 0x938e <processMoles>
	
			time--;
    9ab2:	80 91 23 0b 	lds	r24, 0x0B23
    9ab6:	90 91 24 0b 	lds	r25, 0x0B24
    9aba:	01 97       	sbiw	r24, 0x01	; 1
    9abc:	90 93 24 0b 	sts	0x0B24, r25
    9ac0:	80 93 23 0b 	sts	0x0B23, r24
			tmp=(time/60);
    9ac4:	6c e3       	ldi	r22, 0x3C	; 60
    9ac6:	70 e0       	ldi	r23, 0x00	; 0
    9ac8:	0e 94 97 4e 	call	0x9d2e	; 0x9d2e <__udivmodhi4>
    9acc:	16 2f       	mov	r17, r22
			PrintByte(28-5,3,molesWhacked,true);
    9ace:	21 e0       	ldi	r18, 0x01	; 1
    9ad0:	40 91 21 0b 	lds	r20, 0x0B21
    9ad4:	63 e0       	ldi	r22, 0x03	; 3
    9ad6:	70 e0       	ldi	r23, 0x00	; 0
    9ad8:	87 e1       	ldi	r24, 0x17	; 23
    9ada:	90 e0       	ldi	r25, 0x00	; 0
    9adc:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>
			PrintByte(9+10,4,tmp,true);
    9ae0:	21 e0       	ldi	r18, 0x01	; 1
    9ae2:	41 2f       	mov	r20, r17
    9ae4:	64 e0       	ldi	r22, 0x04	; 4
    9ae6:	70 e0       	ldi	r23, 0x00	; 0
    9ae8:	83 e1       	ldi	r24, 0x13	; 19
    9aea:	90 e0       	ldi	r25, 0x00	; 0
    9aec:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>
			level=((60-tmp)/6)+3;
    9af0:	21 2f       	mov	r18, r17
    9af2:	30 e0       	ldi	r19, 0x00	; 0
    9af4:	ce 01       	movw	r24, r28
    9af6:	82 1b       	sub	r24, r18
    9af8:	93 0b       	sbc	r25, r19
    9afa:	66 e0       	ldi	r22, 0x06	; 6
    9afc:	70 e0       	ldi	r23, 0x00	; 0
    9afe:	0e 94 ab 4e 	call	0x9d56	; 0x9d56 <__divmodhi4>
    9b02:	6d 5f       	subi	r22, 0xFD	; 253
    9b04:	60 93 12 0c 	sts	0x0C12, r22
			
			if(tmp<=5 && tmp!=lastTime && tmp!=0){
    9b08:	16 30       	cpi	r17, 0x06	; 6
    9b0a:	70 f4       	brcc	.+28     	; 0x9b28 <main+0x248>
    9b0c:	80 91 25 0b 	lds	r24, 0x0B25
    9b10:	90 91 26 0b 	lds	r25, 0x0B26
    9b14:	28 17       	cp	r18, r24
    9b16:	39 07       	cpc	r19, r25
    9b18:	39 f0       	breq	.+14     	; 0x9b28 <main+0x248>
    9b1a:	11 23       	and	r17, r17
    9b1c:	29 f0       	breq	.+10     	; 0x9b28 <main+0x248>
				TriggerFx(8,0xa0,true);	
    9b1e:	41 e0       	ldi	r20, 0x01	; 1
    9b20:	60 ea       	ldi	r22, 0xA0	; 160
    9b22:	88 e0       	ldi	r24, 0x08	; 8
    9b24:	0e 94 57 3c 	call	0x78ae	; 0x78ae <TriggerFx>
			}

			lastTime=tmp;
    9b28:	10 93 25 0b 	sts	0x0B25, r17
    9b2c:	10 92 26 0b 	sts	0x0B26, r1
		}while(tmp>0);
    9b30:	11 23       	and	r17, r17
    9b32:	09 f0       	breq	.+2      	; 0x9b36 <main+0x256>
    9b34:	b4 cf       	rjmp	.-152    	; 0x9a9e <main+0x1be>

		gameOver=true;
    9b36:	81 e0       	ldi	r24, 0x01	; 1
    9b38:	80 93 11 0c 	sts	0x0C11, r24
		
		TriggerFx(9,0xa0,true);	
    9b3c:	41 e0       	ldi	r20, 0x01	; 1
    9b3e:	60 ea       	ldi	r22, 0xA0	; 160
    9b40:	89 e0       	ldi	r24, 0x09	; 9
    9b42:	0e 94 57 3c 	call	0x78ae	; 0x78ae <TriggerFx>
    9b46:	08 c0       	rjmp	.+16     	; 0x9b58 <main+0x278>
	

		while(activeMoles>0){
			WaitVsync(1);
    9b48:	81 e0       	ldi	r24, 0x01	; 1
    9b4a:	90 e0       	ldi	r25, 0x00	; 0
    9b4c:	0e 94 12 45 	call	0x8a24	; 0x8a24 <WaitVsync>
			processMouseMovement();
    9b50:	0e 94 b6 48 	call	0x916c	; 0x916c <processMouseMovement>
			processMoles();
    9b54:	0e 94 c7 49 	call	0x938e	; 0x938e <processMoles>
		gameOver=true;
		
		TriggerFx(9,0xa0,true);	
	

		while(activeMoles>0){
    9b58:	80 91 22 0b 	lds	r24, 0x0B22
    9b5c:	88 23       	and	r24, r24
    9b5e:	a1 f7       	brne	.-24     	; 0x9b48 <main+0x268>
			processMouseMovement();
			processMoles();
		
		}

		RestoreBackground();
    9b60:	0e 94 80 44 	call	0x8900	; 0x8900 <RestoreBackground>
		DrawMap2(11,FIELD_TOP+7+4,map_gameOver);
    9b64:	44 ea       	ldi	r20, 0xA4	; 164
    9b66:	5d e0       	ldi	r21, 0x0D	; 13
    9b68:	60 e1       	ldi	r22, 0x10	; 16
    9b6a:	8b e0       	ldi	r24, 0x0B	; 11
    9b6c:	0e 94 9c 44 	call	0x8938	; 0x8938 <DrawMap2>

		if(molesWhacked>highScore){
    9b70:	40 91 21 0b 	lds	r20, 0x0B21
    9b74:	80 91 20 0b 	lds	r24, 0x0B20
    9b78:	84 17       	cp	r24, r20
    9b7a:	08 f0       	brcs	.+2      	; 0x9b7e <main+0x29e>
    9b7c:	54 cf       	rjmp	.-344    	; 0x9a26 <main+0x146>
			highScore=molesWhacked;
    9b7e:	40 93 20 0b 	sts	0x0B20, r20
			PrintByte(13,1,highScore,true);
    9b82:	21 e0       	ldi	r18, 0x01	; 1
    9b84:	61 e0       	ldi	r22, 0x01	; 1
    9b86:	70 e0       	ldi	r23, 0x00	; 0
    9b88:	8d e0       	ldi	r24, 0x0D	; 13
    9b8a:	90 e0       	ldi	r25, 0x00	; 0
    9b8c:	0e 94 07 46 	call	0x8c0e	; 0x8c0e <PrintByte>
    9b90:	4a cf       	rjmp	.-364    	; 0x9a26 <main+0x146>

00009b92 <do_rand>:
    9b92:	a0 e0       	ldi	r26, 0x00	; 0
    9b94:	b0 e0       	ldi	r27, 0x00	; 0
    9b96:	ef ec       	ldi	r30, 0xCF	; 207
    9b98:	fd e4       	ldi	r31, 0x4D	; 77
    9b9a:	0c 94 22 4f 	jmp	0x9e44	; 0x9e44 <__prologue_saves__+0x10>
    9b9e:	ec 01       	movw	r28, r24
    9ba0:	a8 80       	ld	r10, Y
    9ba2:	b9 80       	ldd	r11, Y+1	; 0x01
    9ba4:	ca 80       	ldd	r12, Y+2	; 0x02
    9ba6:	db 80       	ldd	r13, Y+3	; 0x03
    9ba8:	a1 14       	cp	r10, r1
    9baa:	b1 04       	cpc	r11, r1
    9bac:	c1 04       	cpc	r12, r1
    9bae:	d1 04       	cpc	r13, r1
    9bb0:	41 f4       	brne	.+16     	; 0x9bc2 <do_rand+0x30>
    9bb2:	84 e2       	ldi	r24, 0x24	; 36
    9bb4:	a8 2e       	mov	r10, r24
    9bb6:	89 ed       	ldi	r24, 0xD9	; 217
    9bb8:	b8 2e       	mov	r11, r24
    9bba:	8b e5       	ldi	r24, 0x5B	; 91
    9bbc:	c8 2e       	mov	r12, r24
    9bbe:	87 e0       	ldi	r24, 0x07	; 7
    9bc0:	d8 2e       	mov	r13, r24
    9bc2:	c6 01       	movw	r24, r12
    9bc4:	b5 01       	movw	r22, r10
    9bc6:	2d e1       	ldi	r18, 0x1D	; 29
    9bc8:	33 ef       	ldi	r19, 0xF3	; 243
    9bca:	41 e0       	ldi	r20, 0x01	; 1
    9bcc:	50 e0       	ldi	r21, 0x00	; 0
    9bce:	0e 94 e0 4e 	call	0x9dc0	; 0x9dc0 <__divmodsi4>
    9bd2:	27 ea       	ldi	r18, 0xA7	; 167
    9bd4:	31 e4       	ldi	r19, 0x41	; 65
    9bd6:	40 e0       	ldi	r20, 0x00	; 0
    9bd8:	50 e0       	ldi	r21, 0x00	; 0
    9bda:	0e 94 fb 4e 	call	0x9df6	; 0x9df6 <__mulsi3>
    9bde:	7b 01       	movw	r14, r22
    9be0:	8c 01       	movw	r16, r24
    9be2:	c6 01       	movw	r24, r12
    9be4:	b5 01       	movw	r22, r10
    9be6:	2d e1       	ldi	r18, 0x1D	; 29
    9be8:	33 ef       	ldi	r19, 0xF3	; 243
    9bea:	41 e0       	ldi	r20, 0x01	; 1
    9bec:	50 e0       	ldi	r21, 0x00	; 0
    9bee:	0e 94 e0 4e 	call	0x9dc0	; 0x9dc0 <__divmodsi4>
    9bf2:	ca 01       	movw	r24, r20
    9bf4:	b9 01       	movw	r22, r18
    9bf6:	2c ee       	ldi	r18, 0xEC	; 236
    9bf8:	34 ef       	ldi	r19, 0xF4	; 244
    9bfa:	4f ef       	ldi	r20, 0xFF	; 255
    9bfc:	5f ef       	ldi	r21, 0xFF	; 255
    9bfe:	0e 94 fb 4e 	call	0x9df6	; 0x9df6 <__mulsi3>
    9c02:	6e 0d       	add	r22, r14
    9c04:	7f 1d       	adc	r23, r15
    9c06:	80 1f       	adc	r24, r16
    9c08:	91 1f       	adc	r25, r17
    9c0a:	97 ff       	sbrs	r25, 7
    9c0c:	04 c0       	rjmp	.+8      	; 0x9c16 <do_rand+0x84>
    9c0e:	61 50       	subi	r22, 0x01	; 1
    9c10:	70 40       	sbci	r23, 0x00	; 0
    9c12:	80 40       	sbci	r24, 0x00	; 0
    9c14:	90 48       	sbci	r25, 0x80	; 128
    9c16:	68 83       	st	Y, r22
    9c18:	79 83       	std	Y+1, r23	; 0x01
    9c1a:	8a 83       	std	Y+2, r24	; 0x02
    9c1c:	9b 83       	std	Y+3, r25	; 0x03
    9c1e:	9b 01       	movw	r18, r22
    9c20:	3f 77       	andi	r19, 0x7F	; 127
    9c22:	c9 01       	movw	r24, r18
    9c24:	cd b7       	in	r28, 0x3d	; 61
    9c26:	de b7       	in	r29, 0x3e	; 62
    9c28:	ea e0       	ldi	r30, 0x0A	; 10
    9c2a:	0c 94 3e 4f 	jmp	0x9e7c	; 0x9e7c <__epilogue_restores__+0x10>

00009c2e <rand_r>:
    9c2e:	0e 94 c9 4d 	call	0x9b92	; 0x9b92 <do_rand>
    9c32:	08 95       	ret

00009c34 <rand>:
    9c34:	83 e0       	ldi	r24, 0x03	; 3
    9c36:	91 e0       	ldi	r25, 0x01	; 1
    9c38:	0e 94 c9 4d 	call	0x9b92	; 0x9b92 <do_rand>
    9c3c:	08 95       	ret

00009c3e <srand>:
    9c3e:	a0 e0       	ldi	r26, 0x00	; 0
    9c40:	b0 e0       	ldi	r27, 0x00	; 0
    9c42:	80 93 03 01 	sts	0x0103, r24
    9c46:	90 93 04 01 	sts	0x0104, r25
    9c4a:	a0 93 05 01 	sts	0x0105, r26
    9c4e:	b0 93 06 01 	sts	0x0106, r27
    9c52:	08 95       	ret

00009c54 <do_random>:
    9c54:	a0 e0       	ldi	r26, 0x00	; 0
    9c56:	b0 e0       	ldi	r27, 0x00	; 0
    9c58:	e0 e3       	ldi	r30, 0x30	; 48
    9c5a:	fe e4       	ldi	r31, 0x4E	; 78
    9c5c:	0c 94 22 4f 	jmp	0x9e44	; 0x9e44 <__prologue_saves__+0x10>
    9c60:	ec 01       	movw	r28, r24
    9c62:	a8 80       	ld	r10, Y
    9c64:	b9 80       	ldd	r11, Y+1	; 0x01
    9c66:	ca 80       	ldd	r12, Y+2	; 0x02
    9c68:	db 80       	ldd	r13, Y+3	; 0x03
    9c6a:	a1 14       	cp	r10, r1
    9c6c:	b1 04       	cpc	r11, r1
    9c6e:	c1 04       	cpc	r12, r1
    9c70:	d1 04       	cpc	r13, r1
    9c72:	41 f4       	brne	.+16     	; 0x9c84 <do_random+0x30>
    9c74:	84 e2       	ldi	r24, 0x24	; 36
    9c76:	a8 2e       	mov	r10, r24
    9c78:	89 ed       	ldi	r24, 0xD9	; 217
    9c7a:	b8 2e       	mov	r11, r24
    9c7c:	8b e5       	ldi	r24, 0x5B	; 91
    9c7e:	c8 2e       	mov	r12, r24
    9c80:	87 e0       	ldi	r24, 0x07	; 7
    9c82:	d8 2e       	mov	r13, r24
    9c84:	c6 01       	movw	r24, r12
    9c86:	b5 01       	movw	r22, r10
    9c88:	2d e1       	ldi	r18, 0x1D	; 29
    9c8a:	33 ef       	ldi	r19, 0xF3	; 243
    9c8c:	41 e0       	ldi	r20, 0x01	; 1
    9c8e:	50 e0       	ldi	r21, 0x00	; 0
    9c90:	0e 94 e0 4e 	call	0x9dc0	; 0x9dc0 <__divmodsi4>
    9c94:	27 ea       	ldi	r18, 0xA7	; 167
    9c96:	31 e4       	ldi	r19, 0x41	; 65
    9c98:	40 e0       	ldi	r20, 0x00	; 0
    9c9a:	50 e0       	ldi	r21, 0x00	; 0
    9c9c:	0e 94 fb 4e 	call	0x9df6	; 0x9df6 <__mulsi3>
    9ca0:	7b 01       	movw	r14, r22
    9ca2:	8c 01       	movw	r16, r24
    9ca4:	c6 01       	movw	r24, r12
    9ca6:	b5 01       	movw	r22, r10
    9ca8:	2d e1       	ldi	r18, 0x1D	; 29
    9caa:	33 ef       	ldi	r19, 0xF3	; 243
    9cac:	41 e0       	ldi	r20, 0x01	; 1
    9cae:	50 e0       	ldi	r21, 0x00	; 0
    9cb0:	0e 94 e0 4e 	call	0x9dc0	; 0x9dc0 <__divmodsi4>
    9cb4:	ca 01       	movw	r24, r20
    9cb6:	b9 01       	movw	r22, r18
    9cb8:	2c ee       	ldi	r18, 0xEC	; 236
    9cba:	34 ef       	ldi	r19, 0xF4	; 244
    9cbc:	4f ef       	ldi	r20, 0xFF	; 255
    9cbe:	5f ef       	ldi	r21, 0xFF	; 255
    9cc0:	0e 94 fb 4e 	call	0x9df6	; 0x9df6 <__mulsi3>
    9cc4:	6e 0d       	add	r22, r14
    9cc6:	7f 1d       	adc	r23, r15
    9cc8:	80 1f       	adc	r24, r16
    9cca:	91 1f       	adc	r25, r17
    9ccc:	97 ff       	sbrs	r25, 7
    9cce:	04 c0       	rjmp	.+8      	; 0x9cd8 <do_random+0x84>
    9cd0:	61 50       	subi	r22, 0x01	; 1
    9cd2:	70 40       	sbci	r23, 0x00	; 0
    9cd4:	80 40       	sbci	r24, 0x00	; 0
    9cd6:	90 48       	sbci	r25, 0x80	; 128
    9cd8:	68 83       	st	Y, r22
    9cda:	79 83       	std	Y+1, r23	; 0x01
    9cdc:	8a 83       	std	Y+2, r24	; 0x02
    9cde:	9b 83       	std	Y+3, r25	; 0x03
    9ce0:	9b 01       	movw	r18, r22
    9ce2:	ac 01       	movw	r20, r24
    9ce4:	5f 77       	andi	r21, 0x7F	; 127
    9ce6:	b9 01       	movw	r22, r18
    9ce8:	ca 01       	movw	r24, r20
    9cea:	cd b7       	in	r28, 0x3d	; 61
    9cec:	de b7       	in	r29, 0x3e	; 62
    9cee:	ea e0       	ldi	r30, 0x0A	; 10
    9cf0:	0c 94 3e 4f 	jmp	0x9e7c	; 0x9e7c <__epilogue_restores__+0x10>

00009cf4 <random_r>:
    9cf4:	0e 94 2a 4e 	call	0x9c54	; 0x9c54 <do_random>
    9cf8:	08 95       	ret

00009cfa <random>:
    9cfa:	87 e0       	ldi	r24, 0x07	; 7
    9cfc:	91 e0       	ldi	r25, 0x01	; 1
    9cfe:	0e 94 2a 4e 	call	0x9c54	; 0x9c54 <do_random>
    9d02:	08 95       	ret

00009d04 <srandom>:
    9d04:	60 93 07 01 	sts	0x0107, r22
    9d08:	70 93 08 01 	sts	0x0108, r23
    9d0c:	80 93 09 01 	sts	0x0109, r24
    9d10:	90 93 0a 01 	sts	0x010A, r25
    9d14:	08 95       	ret

00009d16 <__udivmodqi4>:
    9d16:	99 1b       	sub	r25, r25
    9d18:	79 e0       	ldi	r23, 0x09	; 9
    9d1a:	04 c0       	rjmp	.+8      	; 0x9d24 <__udivmodqi4_ep>

00009d1c <__udivmodqi4_loop>:
    9d1c:	99 1f       	adc	r25, r25
    9d1e:	96 17       	cp	r25, r22
    9d20:	08 f0       	brcs	.+2      	; 0x9d24 <__udivmodqi4_ep>
    9d22:	96 1b       	sub	r25, r22

00009d24 <__udivmodqi4_ep>:
    9d24:	88 1f       	adc	r24, r24
    9d26:	7a 95       	dec	r23
    9d28:	c9 f7       	brne	.-14     	; 0x9d1c <__udivmodqi4_loop>
    9d2a:	80 95       	com	r24
    9d2c:	08 95       	ret

00009d2e <__udivmodhi4>:
    9d2e:	aa 1b       	sub	r26, r26
    9d30:	bb 1b       	sub	r27, r27
    9d32:	51 e1       	ldi	r21, 0x11	; 17
    9d34:	07 c0       	rjmp	.+14     	; 0x9d44 <__udivmodhi4_ep>

00009d36 <__udivmodhi4_loop>:
    9d36:	aa 1f       	adc	r26, r26
    9d38:	bb 1f       	adc	r27, r27
    9d3a:	a6 17       	cp	r26, r22
    9d3c:	b7 07       	cpc	r27, r23
    9d3e:	10 f0       	brcs	.+4      	; 0x9d44 <__udivmodhi4_ep>
    9d40:	a6 1b       	sub	r26, r22
    9d42:	b7 0b       	sbc	r27, r23

00009d44 <__udivmodhi4_ep>:
    9d44:	88 1f       	adc	r24, r24
    9d46:	99 1f       	adc	r25, r25
    9d48:	5a 95       	dec	r21
    9d4a:	a9 f7       	brne	.-22     	; 0x9d36 <__udivmodhi4_loop>
    9d4c:	80 95       	com	r24
    9d4e:	90 95       	com	r25
    9d50:	bc 01       	movw	r22, r24
    9d52:	cd 01       	movw	r24, r26
    9d54:	08 95       	ret

00009d56 <__divmodhi4>:
    9d56:	97 fb       	bst	r25, 7
    9d58:	09 2e       	mov	r0, r25
    9d5a:	07 26       	eor	r0, r23
    9d5c:	0a d0       	rcall	.+20     	; 0x9d72 <__divmodhi4_neg1>
    9d5e:	77 fd       	sbrc	r23, 7
    9d60:	04 d0       	rcall	.+8      	; 0x9d6a <__divmodhi4_neg2>
    9d62:	e5 df       	rcall	.-54     	; 0x9d2e <__udivmodhi4>
    9d64:	06 d0       	rcall	.+12     	; 0x9d72 <__divmodhi4_neg1>
    9d66:	00 20       	and	r0, r0
    9d68:	1a f4       	brpl	.+6      	; 0x9d70 <__divmodhi4_exit>

00009d6a <__divmodhi4_neg2>:
    9d6a:	70 95       	com	r23
    9d6c:	61 95       	neg	r22
    9d6e:	7f 4f       	sbci	r23, 0xFF	; 255

00009d70 <__divmodhi4_exit>:
    9d70:	08 95       	ret

00009d72 <__divmodhi4_neg1>:
    9d72:	f6 f7       	brtc	.-4      	; 0x9d70 <__divmodhi4_exit>
    9d74:	90 95       	com	r25
    9d76:	81 95       	neg	r24
    9d78:	9f 4f       	sbci	r25, 0xFF	; 255
    9d7a:	08 95       	ret

00009d7c <__udivmodsi4>:
    9d7c:	a1 e2       	ldi	r26, 0x21	; 33
    9d7e:	1a 2e       	mov	r1, r26
    9d80:	aa 1b       	sub	r26, r26
    9d82:	bb 1b       	sub	r27, r27
    9d84:	fd 01       	movw	r30, r26
    9d86:	0d c0       	rjmp	.+26     	; 0x9da2 <__udivmodsi4_ep>

00009d88 <__udivmodsi4_loop>:
    9d88:	aa 1f       	adc	r26, r26
    9d8a:	bb 1f       	adc	r27, r27
    9d8c:	ee 1f       	adc	r30, r30
    9d8e:	ff 1f       	adc	r31, r31
    9d90:	a2 17       	cp	r26, r18
    9d92:	b3 07       	cpc	r27, r19
    9d94:	e4 07       	cpc	r30, r20
    9d96:	f5 07       	cpc	r31, r21
    9d98:	20 f0       	brcs	.+8      	; 0x9da2 <__udivmodsi4_ep>
    9d9a:	a2 1b       	sub	r26, r18
    9d9c:	b3 0b       	sbc	r27, r19
    9d9e:	e4 0b       	sbc	r30, r20
    9da0:	f5 0b       	sbc	r31, r21

00009da2 <__udivmodsi4_ep>:
    9da2:	66 1f       	adc	r22, r22
    9da4:	77 1f       	adc	r23, r23
    9da6:	88 1f       	adc	r24, r24
    9da8:	99 1f       	adc	r25, r25
    9daa:	1a 94       	dec	r1
    9dac:	69 f7       	brne	.-38     	; 0x9d88 <__udivmodsi4_loop>
    9dae:	60 95       	com	r22
    9db0:	70 95       	com	r23
    9db2:	80 95       	com	r24
    9db4:	90 95       	com	r25
    9db6:	9b 01       	movw	r18, r22
    9db8:	ac 01       	movw	r20, r24
    9dba:	bd 01       	movw	r22, r26
    9dbc:	cf 01       	movw	r24, r30
    9dbe:	08 95       	ret

00009dc0 <__divmodsi4>:
    9dc0:	97 fb       	bst	r25, 7
    9dc2:	09 2e       	mov	r0, r25
    9dc4:	05 26       	eor	r0, r21
    9dc6:	0e d0       	rcall	.+28     	; 0x9de4 <__divmodsi4_neg1>
    9dc8:	57 fd       	sbrc	r21, 7
    9dca:	04 d0       	rcall	.+8      	; 0x9dd4 <__divmodsi4_neg2>
    9dcc:	d7 df       	rcall	.-82     	; 0x9d7c <__udivmodsi4>
    9dce:	0a d0       	rcall	.+20     	; 0x9de4 <__divmodsi4_neg1>
    9dd0:	00 1c       	adc	r0, r0
    9dd2:	38 f4       	brcc	.+14     	; 0x9de2 <__divmodsi4_exit>

00009dd4 <__divmodsi4_neg2>:
    9dd4:	50 95       	com	r21
    9dd6:	40 95       	com	r20
    9dd8:	30 95       	com	r19
    9dda:	21 95       	neg	r18
    9ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    9dde:	4f 4f       	sbci	r20, 0xFF	; 255
    9de0:	5f 4f       	sbci	r21, 0xFF	; 255

00009de2 <__divmodsi4_exit>:
    9de2:	08 95       	ret

00009de4 <__divmodsi4_neg1>:
    9de4:	f6 f7       	brtc	.-4      	; 0x9de2 <__divmodsi4_exit>
    9de6:	90 95       	com	r25
    9de8:	80 95       	com	r24
    9dea:	70 95       	com	r23
    9dec:	61 95       	neg	r22
    9dee:	7f 4f       	sbci	r23, 0xFF	; 255
    9df0:	8f 4f       	sbci	r24, 0xFF	; 255
    9df2:	9f 4f       	sbci	r25, 0xFF	; 255
    9df4:	08 95       	ret

00009df6 <__mulsi3>:
    9df6:	62 9f       	mul	r22, r18
    9df8:	d0 01       	movw	r26, r0
    9dfa:	73 9f       	mul	r23, r19
    9dfc:	f0 01       	movw	r30, r0
    9dfe:	82 9f       	mul	r24, r18
    9e00:	e0 0d       	add	r30, r0
    9e02:	f1 1d       	adc	r31, r1
    9e04:	64 9f       	mul	r22, r20
    9e06:	e0 0d       	add	r30, r0
    9e08:	f1 1d       	adc	r31, r1
    9e0a:	92 9f       	mul	r25, r18
    9e0c:	f0 0d       	add	r31, r0
    9e0e:	83 9f       	mul	r24, r19
    9e10:	f0 0d       	add	r31, r0
    9e12:	74 9f       	mul	r23, r20
    9e14:	f0 0d       	add	r31, r0
    9e16:	65 9f       	mul	r22, r21
    9e18:	f0 0d       	add	r31, r0
    9e1a:	99 27       	eor	r25, r25
    9e1c:	72 9f       	mul	r23, r18
    9e1e:	b0 0d       	add	r27, r0
    9e20:	e1 1d       	adc	r30, r1
    9e22:	f9 1f       	adc	r31, r25
    9e24:	63 9f       	mul	r22, r19
    9e26:	b0 0d       	add	r27, r0
    9e28:	e1 1d       	adc	r30, r1
    9e2a:	f9 1f       	adc	r31, r25
    9e2c:	bd 01       	movw	r22, r26
    9e2e:	cf 01       	movw	r24, r30
    9e30:	11 24       	eor	r1, r1
    9e32:	08 95       	ret

00009e34 <__prologue_saves__>:
    9e34:	2f 92       	push	r2
    9e36:	3f 92       	push	r3
    9e38:	4f 92       	push	r4
    9e3a:	5f 92       	push	r5
    9e3c:	6f 92       	push	r6
    9e3e:	7f 92       	push	r7
    9e40:	8f 92       	push	r8
    9e42:	9f 92       	push	r9
    9e44:	af 92       	push	r10
    9e46:	bf 92       	push	r11
    9e48:	cf 92       	push	r12
    9e4a:	df 92       	push	r13
    9e4c:	ef 92       	push	r14
    9e4e:	ff 92       	push	r15
    9e50:	0f 93       	push	r16
    9e52:	1f 93       	push	r17
    9e54:	cf 93       	push	r28
    9e56:	df 93       	push	r29
    9e58:	cd b7       	in	r28, 0x3d	; 61
    9e5a:	de b7       	in	r29, 0x3e	; 62
    9e5c:	ca 1b       	sub	r28, r26
    9e5e:	db 0b       	sbc	r29, r27
    9e60:	0f b6       	in	r0, 0x3f	; 63
    9e62:	f8 94       	cli
    9e64:	de bf       	out	0x3e, r29	; 62
    9e66:	0f be       	out	0x3f, r0	; 63
    9e68:	cd bf       	out	0x3d, r28	; 61
    9e6a:	09 94       	ijmp

00009e6c <__epilogue_restores__>:
    9e6c:	2a 88       	ldd	r2, Y+18	; 0x12
    9e6e:	39 88       	ldd	r3, Y+17	; 0x11
    9e70:	48 88       	ldd	r4, Y+16	; 0x10
    9e72:	5f 84       	ldd	r5, Y+15	; 0x0f
    9e74:	6e 84       	ldd	r6, Y+14	; 0x0e
    9e76:	7d 84       	ldd	r7, Y+13	; 0x0d
    9e78:	8c 84       	ldd	r8, Y+12	; 0x0c
    9e7a:	9b 84       	ldd	r9, Y+11	; 0x0b
    9e7c:	aa 84       	ldd	r10, Y+10	; 0x0a
    9e7e:	b9 84       	ldd	r11, Y+9	; 0x09
    9e80:	c8 84       	ldd	r12, Y+8	; 0x08
    9e82:	df 80       	ldd	r13, Y+7	; 0x07
    9e84:	ee 80       	ldd	r14, Y+6	; 0x06
    9e86:	fd 80       	ldd	r15, Y+5	; 0x05
    9e88:	0c 81       	ldd	r16, Y+4	; 0x04
    9e8a:	1b 81       	ldd	r17, Y+3	; 0x03
    9e8c:	aa 81       	ldd	r26, Y+2	; 0x02
    9e8e:	b9 81       	ldd	r27, Y+1	; 0x01
    9e90:	ce 0f       	add	r28, r30
    9e92:	d1 1d       	adc	r29, r1
    9e94:	0f b6       	in	r0, 0x3f	; 63
    9e96:	f8 94       	cli
    9e98:	de bf       	out	0x3e, r29	; 62
    9e9a:	0f be       	out	0x3f, r0	; 63
    9e9c:	cd bf       	out	0x3d, r28	; 61
    9e9e:	ed 01       	movw	r28, r26
    9ea0:	08 95       	ret

00009ea2 <_exit>:
    9ea2:	f8 94       	cli

00009ea4 <__stop_program>:
    9ea4:	ff cf       	rjmp	.-2      	; 0x9ea4 <__stop_program>
