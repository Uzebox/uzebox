
atomix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000e29e  0000e39e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000e29e  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000dbf  00800120  00800120  0000e3a0  2**5
                  ALLOC
  3 .stab         00000738  00000000  00000000  0000e3a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000086  00000000  00000000  0000ead8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000003b8  00000000  00000000  0000eb60  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000914  00000000  00000000  0000ef18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000037a8  00000000  00000000  0000f82c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000a77  00000000  00000000  00012fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002b16  00000000  00000000  00013a4b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000540  00000000  00000000  00016564  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000cc7  00000000  00000000  00016aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000242e  00000000  00000000  0001776b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000490  00000000  00000000  00019ba0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
}

/**
 * Performs a software reset
 */
void SoftReset(void){        
       0:	0c 94 89 55 	jmp	0xab12	; 0xab12 <__ctors_end>

	//tracks[0].tremoloRate=24;
	//tracks[0].tremoloLevel=80;
}

void StartSong(const char *midiSong){
       4:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
			//vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}	
	}


	void SetSpriteVisibility(bool visible){
       8:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
		sprites[i].x = (SCREEN_TILES_H * TILE_WIDTH);
	}
}
       c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      10:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      14:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      18:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      1c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      20:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      24:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      28:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      2c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      30:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      34:	0c 94 57 58 	jmp	0xb0ae	; 0xb0ae <__vector_13>
      38:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      3c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      40:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      44:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      48:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      4c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      50:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      54:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      58:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      5c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      60:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      64:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      68:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>
      6c:	0c 94 27 56 	jmp	0xac4e	; 0xac4e <__bad_interrupt>

00000070 <eeprom_format_table>:
      70:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

00000090 <patchCommands>:
      90:	e0 5b ee 5b 8a 5c 7c 60 66 60 f1 5b 00 5c 0f 5c     .[.[.\|`f`.[.\.\
      a0:	4c 60 1d 5c 2b 5c                                   L`.\+\

000000a6 <voice>:
	...
      c2:	00 00 01 01 01 02 03 04 05 06 07 09 0a 0c 0e 10     ................
      d2:	11 12 14 15 16 17 17 18 17 16 14 10 0a 05 f9 f3     ................
      e2:	ed e7 e5 e2 e1 e0 e0 e1 e1 e3 e4 e6 e8 ea ec ee     ................
      f2:	f0 f2 f4 f6 f8 fb fd 01 04 06 09 0b 0e 10 12 15     ................
     102:	18 1a 1d 1f 22 24 27 29 2b 2d 2d 2d 2d 2a 24 1e     ...."$')+----*$.
     112:	0f 01 f6 e3 dd d6 d0 d0 cf d0 d1 d3 d6 d9 dd e1     ................
     122:	e7 ec f2 f7 fe 03 08 0e 0d 11 0c 08 0b 08 0b 0d     ................
     132:	10 12 15 17 1a 1c 1d 1e 19 18 11 05 06 00 00 ff     ................
     142:	ff fd f6 f6 ee ee ee e9 e9 e6 da dd db db e2 e6     ................
     152:	eb f2 f9 01 08 10 18 1f 28 2d 32 36 30 2c 25 18     ........(-260,%.
     162:	10 0a fd f3 f4 ee f0 f1 f1 ec ed e3 db de dc df     ................
     172:	e7 e9 ed f3 ea f2 ef ec f5 f7 ff 07 10 18 1f 26     ...............&
     182:	2c 31 36 38 38 39 30 2a 23 1c 09 fb f3 da d3 cc     ,168890*#.......
     192:	c4 c9 c9 c8 cd c6 c7 cd cf d8 e1 e9 f4 fd 0c 16     ................
     1a2:	21 2c 35 3d 42 4a 47 47 4c 3e 3e 35 2e 21 0c 01     !,5=BJGGL>>5.!..
     1b2:	ec e5 cf cc c4 bf bc b5 b9 bb c0 c8 ce d4 de dd     ................
     1c2:	e8 ee f0 fc 03 0d 1a 24 2f 37 3f 46 4b 4c 51 46     .......$/7?FKLQF
     1d2:	44 3d 30 2f 29 17 0e ff e4 d4 c0 b8 ac ae af b5     D=0/)...........
     1e2:	ba c4 cb d3 dc e4 ed f7 00 0d 15 20 28 32 33 37     ........... (237
     1f2:	37 26 2c 21 16 1b 14 15 10 0b 03 ff f9 f0 f3 e9     7&,!............
     202:	eb e3 d9 e0 de e4 ec f1 f5 fc f9 ff 02 05 07 04     ................
     212:	08 0b 05 07 0c 04 0a 0a 0a 0a 06 09 04 07 0b 0b     ................
     222:	0b 0c 06 02 fb fb f7 f0 f4 e9 e5 eb eb f1 f8 fd     ................
     232:	03 05 0a 0b 06 0c 0c 07 0a 08 04 ff fc f9 f8 f9     ................
     242:	fd fa f9 fd fd 02 09 0c 11 11 15 13 0e 15 11 0f     ................
     252:	11 04 fe fd f2 ed ec ed ea e1 e3 e2 db e0 e3 e0     ................
     262:	e7 eb ef f6 fc 04 0a 12 1a 1f 25 2a 2a 2f 2b 2e     ..........%**/+.
     272:	2f 2b 2c 22 15 15 06 fd fa ea e4 da d7 d1 ce d3     /+,"............
     282:	d1 d0 d6 d6 d9 dd dd e5 ea f2 fb fe 06 0f 13 1d     ................
     292:	24 2b 30 35 39 38 3b 3b 30 32 28 1f 19 0c fd f4     $+0598;;02(.....
     2a2:	e5 d4 d0 ca c8 c9 ca c6 cb ce d3 db e3 ea f4 fc     ................
     2b2:	04 0d 16 1d 24 28 2c 2a 2b 27 25 28 25 20 1a 0f     ....$(,*+'%(% ..
     2c2:	06 02 f7 f2 ed ea e5 e5 e0 d8 dc dc df e7 eb ef     ................
     2d2:	f4 fa fa ff 07 0c 15 18 1b 1b 15 12 15 17 15 19     ................
     2e2:	12 09 0c 07 07 05 00 fc fa f0 e9 ec ec ec ee ef     ................
     2f2:	e4 e3 e6 e6 ed f3 f9 00 05 08 0c 11 0d 12 17 16     ................
     302:	18 18 0a 09 05 ff 02 fe 01 03 03 05 00 ff 01 ff     ................
     312:	03 fe ff 02 04 06 08 08 fd fc fa f1 f5 f2 f0 f6     ................
     322:	f6 f7 f5 f1 ea ec ec ee ef ed f2 f6 fc 02 07 0d     ................
     332:	12 17 1b 1f 21 25 20 20 1e 19 1e 20 1d 1b 15 fe     ....!%  ... ....
     342:	f3 ef ea e8 e5 e3 de dd dd dd d8 d9 d9 d9 df e3     ................
     352:	eb f3 f9 02 07 0b 12 17 1d 21 27 2c 30 30 30 2e     .........!',000.
     362:	1e 1a 1b 15 18 0e 08 fe e4 dc d9 d2 d0 d7 da db     ................
     372:	e0 e0 de e4 e9 ef f6 fd 03 0b 12 18 1f 22 20 1f     ............." .
     382:	21 1d 1a 1f 1c 1e 1a 09 07 01 f6 f6 f4 ea e7 e0     !...............
     392:	d7 da d9 dd e1 e7 ed f4 f7 fd ff ff 07 0d 13 1c     ................
     3a2:	21 24 26 20 1a 15 17 13 10 12 14 10 07 05 fd e9     !$& ............
     3b2:	e2 e2 e0 e3 e8 eb ec e5 e3 e3 e4 e9 ef f6 fb 02     ................
     3c2:	08 0d 10 16 13 0e 11 13 13 15 18 19 19 0a 03 05     ................
     3d2:	00 fd 05 06 05 06 00 f1 f3 f4 f7 fb fe 01 02 f6     ................
     3e2:	f7 f5 f1 f4 f6 f7 f2 f4 f7 f7 f9 fb fc ff 03 fb     ................
     3f2:	f8 fd f5 f7 fc fd fe 04 09 0f 15 1b 1d 1c 11 0b     ................
     402:	0f 11 18 1e 22 21 1d 06 fc f6 e7 e1 e4 e7 e9 ed     ...."!..........
     412:	ef e4 e4 dc d0 d4 d7 db e5 f0 f8 01 08 0b 0e 16     ................
     422:	1c 24 29 2f 32 2e 28 29 22 17 16 16 0a 09 01 f6     .$)/2.()".......
     432:	f0 e5 e3 d5 d6 d2 cf d8 db e3 e8 ef ed ed f5 fc     ................
     442:	03 0d 15 1d 1f 1f 25 28 29 2d 23 1e 1b 09 04 06     ......%()-#.....
     452:	02 04 06 06 fe ee de ca c6 c3 c3 ca d2 da e4 ed     ................
     462:	f5 fe 01 02 0b 12 1c 27 32 39 40 3d 32 32 29 1a     .......'29@=22).
     472:	18 1b 16 18 0d 05 f5 e2 dc d0 d0 ce d0 d2 cb cc     ................
     482:	d0 d3 d7 de e8 f0 fa 04 0e 17 1c 1f 21 18 1a 19     ............!...
     492:	15 1b 1e 21 23 20 20 21 18 0e 07 fd f6 f4 f7 f7     ...!#  !........
     4a2:	fa fc f6 f6 f6 f0 e8 e8 e3 e5 ea ef f3 f7 f4 f1     ................
     4b2:	f4 ee f3 f8 fb 00 0a 0f 12 13 0e 04 ff fd fe 01     ................
     4c2:	06 0a 0e 0c 0b 0e 0f 0b 10 14 18 1b 1d 19 12 0b     ................
     4d2:	ff fa f0 ee eb e5 ea ed f1 f2 ee ee e6 de dc de     ................
     4e2:	e1 e8 f1 f9 01 09 10 13 18 1c 1d 1b 1f 1f 21 21     ..............!!
     4f2:	20 16 10 07 01 f9 f0 f0 f0 ec ef f1 f1 f1 eb e6      ...............
     502:	e7 e9 ee f4 fa ff 04 04 04 09 0d 0e 10 16 19 1d     ................
     512:	1d 1c 12 08 01 fc fa fb fe fe 01 03 02 fb f3 ee     ................
     522:	e2 d9 d8 d9 dc e2 ea f0 f6 fc 01 02 08 0e 14 1a     ................
     532:	20 26 2a 2b 26 20 1c 19 16 11 07 04 04 ff fe fd      &*+& ..........
     542:	fb f5 e9 e2 df d8 d7 d9 dd e1 e6 e9 ed f4 fa ff     ................
     552:	05 0c 10 13 15 12 0b 08 08 0a 0c 0f 12 12 14 16     ................
     562:	15 11 0d 07 fc fa fa fc fe 00 01 00 fb f1 ee ea     ................
     572:	eb ed f2 f6 fa fc fe f8 f5 f5 f7 fa fe 01 03 09     ................
     582:	0d 10 11 12 11 0a 01 ff fc f9 fa fc fe 01 03 03     ................
     592:	06 08 0a 0c 0b 08 07 06 00 f8 f7 f7 f7 f8 fb fa     ................
     5a2:	f8 f9 fb fd fe fe fe f8 f4 f6 f8 fb fe 02 05 06     ................
     5b2:	04 06 07 0a 0c 0f 11 11 0f 0b 01 fb f5 f1 ef f0     ................
     5c2:	f1 f1 f5 f9 fd 00 03 05 04 00 ff 00 01 03 06 09     ................
     5d2:	0b 0b 09 08 09 09 0a 08 06 04 02 fb f7 f7 f6 f7     ................
     5e2:	f8 fa f9 fa f8 f8 f8 f9 f9 f8 f6 f3 f3 f5 f7 fa     ................
     5f2:	fd 00 03 05 07 0b 0e 11 14 16 16 15 11 0c 0a 06     ................
     602:	04 03 02 01 ff fe fd fd fd fc fa f7 f1 ed eb eb     ................
     612:	ec ee f2 f5 f8 fb ff 02 05 08 09 0a 0a 08 04 04     ................
     622:	04 04 04 05 05 05 04 04 05 06 07 07 07 06 04 02     ................
     632:	01 00 00 fe fd fb fa fa f9 f9 fa fb fc fc fb f9     ................
     642:	f9 f9 f9 fa fc fe ff 01 03 05 06 07 08 07 06 04     ................
     652:	02 00 00 00 00 01 01 01 02 02 02 02 02 01 00 ff     ................
     662:	fe fd fc fd fd fd fe fe ff ff 00 00 00 01 01 02     ................
     672:	01 01 00 ff ff ff fe ff ff 00 01 02 03 03 04 04     ................
     682:	03 01 ff fd fb fb fb fb fb fb fc fd ff 00 01 02     ................
     692:	03 04 03 03 03 03 03 03 03 03 04 04 03 02 01 01     ................
     6a2:	01 00 ff fe fc fc fc fd fd fd fd fc fb fc fd fe     ................
     6b2:	ff 00 01 01 01 00 ff fe ff 00 00 ff 00 01 03 05     ................
     6c2:	06 08 08 06 02 ff fe ff 00 00 ff fe 00 02 03 03     ................
     6d2:	02 01 00 fe fd fc fb fb f9 f7 f8 fb fd fd fd fe     ................
     6e2:	01 04 06 07 06 02 ff fc fe 01 04 03 ff f9 f8 fb     ................
     6f2:	00 04 06 08 0a 0b 0c 0d 0f 0c 01 f4 ee f0 f6 fe     ................
     702:	04 07 05 fe fd fb f8 f4 ee ee f1 f3 f7 fc 01 04     ................
     712:	04 05 08 06 04 07 0b 0f 0f 0c 0d 0a 04 03 05 02     ................
     722:	ff ff fc fa fd ff 00 fa f6 ef ef f4 f4 ee e9 ee     ................
     732:	f7 02 0c 16 18 0c 06 0f 1a 1d 0f 00 fa f5 ed f1     ................
     742:	fd 05 04 fe 07 13 1b 1e 15 06 e8 cc cc d8 ea f6     ................
     752:	f9 ed df df e9 fa 08 0f 16 1d 24 24 25 30 31 17     ..........$$%01.
     762:	f9 f4 f3 f8 06 1b 2c 25 07 f0 ee ed db d3 dd ed     ......,%........
     772:	f8 f4 e9 df db d2 e1 f8 0a 10 12 14 19 13 12 1f     ................
     782:	2b 21 06 f1 e2 ef 09 25 30 1f fb ea ef ec e9 f5     +!.....%0.......
     792:	f5 e0 d6 e1 f6 0b 1c 34 4b 41 10 d9 e0 fb 06 f4     .......4KA......
     7a2:	f4 ff 01 ee e1 f2 fc f2 f1 09 19 11 08 0d 11 fd     ................
     7b2:	ea e0 e1 f0 f5 e8 d3 dd eb fe 0e 1c 23 33 4c 62     ............#3Lb
     7c2:	5a 2d 07 df dd d2 d6 e9 f5 02 1b 36 28 f4 d6 dd     Z-.........6(...
     7d2:	cd b5 ba ca e0 f6 10 26 1c ef c6 dd 04 1f 27 34     .......&......'4
     7e2:	3d 3a 25 21 48 67 61 18 d3 bd b7 cd eb f9 e6 ea     =:%!Hga.........
     7f2:	f0 f1 d6 cc bd b1 c4 d8 ef 02 0c 10 28 55 77 5f     ............(Uw_
     802:	17 ee f2 fd f6 05 22 31 2b 0b 03 ff f4 0c 2b 23     ......"1+.....+#
     812:	0f f1 d6 b8 af c6 e2 f7 f0 ce b0 c5 da eb f9 0d     ................
     822:	16 1c 34 54 64 47 0b fd 01 0e 0e f4 ed 06 1e 31     ..4TdG.........1
     832:	2e 31 29 ef ca b9 d9 f2 e7 c1 b6 d8 ff 03 db c9     .1).............
     842:	e7 02 10 19 2d 34 33 18 1f 40 54 40 04 e2 e9 ee     ....-43..@T@....
     852:	e8 d9 d8 f5 11 15 e6 bb ab c9 df f2 fe 14 29 30     ..............)0
     862:	15 f5 08 30 3a 1d ed fb fe f5 f9 10 21 30 20 04     ...0:.......!0 .
     872:	fb e4 e3 eb 18 2b 16 ce ac c5 e4 00 06 fe d5 d8     .....+..........
     882:	e9 fa 04 0f 1d 29 48 5c 3e f7 c7 dc f7 0a 14 19     .....)H\>.......
     892:	07 f4 03 f5 e6 06 2b 37 ef a4 b8 dd fd f7 db d4     ......+7........
     8a2:	f7 0b 07 e1 e9 0b 1c 22 2b 3d 45 3e 27 3d 54 4b     ......."+=E>'=TK
     8b2:	00 e7 d9 d4 cc b8 cf e9 03 07 db 9e a5 c5 dc e3     ................
     8c2:	ef fd 0e 1c 29 19 00 00 29 41 42 13 0b 12 0c 19     ....)...)AB.....
     8d2:	18 20 3d 4f 32 ee d6 e7 f0 f3 f2 eb c3 ca d6 ed     . =O2...........
     8e2:	f1 f4 cd cf e0 ed f6 fb 03 13 2b 3c 2d fc f1 eb     ..........+<-...
     8f2:	fa 02 06 1c 34 3c 14 e5 ea ff 23 37 43 12 d0 cf     ....4<....#7C...
     902:	d3 d2 cf d6 e8 01 08 f7 da ee fd 0f 15 1f 2b 38     ..............+8
     912:	2f 25 2b 2a f9 fb 04 08 ce c2 d7 f3 0d 14 ee b3     /%+*............
     922:	c4 d9 ec f0 fb 0d 1d 11 01 ee f1 fd 10 24 2f 39     .............$/9
     932:	21 04 00 f9 06 0a 1e 36 47 23 d2 d1 e5 ef f5 fb     !......6G#......
     942:	e4 dc eb f6 fe f7 db e3 f3 00 05 07 10 21 2f 16     .............!/.
     952:	e8 e4 f9 fe ee f2 00 0d 1c 25 1c f6 e3 ee 09 1a     .........%......
     962:	28 20 05 dd c6 cd d9 e4 f0 02 0e 13 fd f4 03 11     ( ..............
     972:	20 26 31 3d 48 3e 23 0f ea e9 fd 02 f5 e2 da ea      &1=H>#.........
     982:	f8 e8 cb bd c5 d3 dc e7 f1 fe 00 f7 f1 f8 fe 02     ................
     992:	0d 1c 27 33 3e 38 18 05 09 17 26 32 39 2e 0f df     ..'3>8....&29...
     9a2:	cd e0 f2 f4 e5 e3 ed f3 f4 f5 e4 e0 ed f6 01 08     ................
     9b2:	0d 0b 06 f2 e9 f3 fa fe fb f8 03 11 19 14 0c 0e     ................
     9c2:	13 0b 0a 18 20 17 03 f8 e3 d5 dc e5 f0 f9 00 06     .... ...........
     9d2:	04 f6 f4 00 0d 17 1e 26 29 23 12 08 00 f8 f9 f3     .......&)#......
     9e2:	f6 fd ff f7 f2 eb e4 db de e6 ed f4 fb fc f5 f0     ................
     9f2:	f0 f7 fe 01 05 0f 19 1f 22 26 29 1b 09 0e 1a 1e     ........"&).....
     a02:	14 0a 02 f6 ef eb ed f4 f0 ec f2 f8 fc ff f4 ec     ................
     a12:	f4 fb 01 08 0b 07 fc ef eb ef f3 f9 ff fe fe 05     ................
     a22:	09 05 05 0b 10 16 18 10 0a 05 f7 f5 fc f8 ea e8     ................
     a32:	f0 f6 fc 03 0a 07 00 04 0e 15 1c 21 24 21 1c 0e     ...........!$!..
     a42:	f8 f5 f7 f2 f6 fa fe 02 f4 e0 e3 e3 db e0 e7 e7     ................
     a52:	e5 e4 e4 ea f0 f6 fd 04 0a 0f 16 1f 27 2c 31 38     ............',18
     a62:	2e 17 19 20 16 0f 0e 01 f4 f9 f7 f0 f3 f0 ee f2     ... ............
     a72:	f8 f9 ef ea f0 f5 f7 f7 f7 ed e0 de e3 e7 ed f3     ................
     a82:	fc 02 ff 03 0d 0a 0b 14 19 1d 25 28 1e 10 05 f9     ..........%(....
     a92:	f9 01 04 f9 ee f5 fc fd 06 0c 03 02 0c 0f 0f 13     ................
     aa2:	0f 0b 14 12 f9 f0 f3 ef f1 f9 fe f9 f2 f1 eb e1     ................
     ab2:	dd e0 e3 e7 ea e8 e5 e7 ef f7 00 07 0e 15 18 1c     ................
     ac2:	27 30 34 38 3d 33 17 04 fe fc 00 04 fe f5 fa 00     '048=3..........
     ad2:	f5 ee f3 f7 fb 00 f6 f0 f8 f9 fa 03 00 eb e1 e2     ................
     ae2:	e2 e7 f0 f6 f8 fb 00 00 ff 01 06 0b 0f 11 0e 08     ................
     af2:	08 0a fe f8 ff 01 03 07 05 ff 02 09 0b 10 11 0a     ................
     b02:	0c 13 18 1d 1d 16 11 13 0a f8 f4 f7 f4 f5 f4 ed     ................
     b12:	ec ed ec e7 dd d7 d3 d1 d5 db e3 ea ef f6 fd 03     ................
     b22:	0a 10 16 1c 21 26 2b 2d 2e 2e 2b 1e 12 0f 09 05     ....!&+-..+.....
     b32:	07 01 fd 00 01 fa f6 f6 f7 f9 f7 f2 f0 ee ea ea     ................
     b42:	e9 e5 e7 ea ea ed f2 f5 f9 fd 01 02 01 03 07 09     ................
     b52:	0c 10 14 13 10 10 0c 06 05 06 06 05 06 08 05 02     ................
     b62:	03 05 04 01 fe fe fe ff 01 02 02 05 03 fb fa fc     ................
     b72:	fc fc fb f9 fa f9 f9 f9 f8 f7 f6 f6 f5 f5 f5 f7     ................
     b82:	fa fc fe 00 02 04 07 08 0a 0c 0e 0e 0d 0c 08 07     ................
     b92:	07 04 02 03 03 02 00 00 03 03 01 ff fe 00 fe fc     ................
     ba2:	fe ff ff fe f9 f7 f7 f8 f8 f9 f9 fa fc fd fe fe     ................
     bb2:	fe fe ff ff ff ff 00 01 02 04 04 02 03 04 02 04     ................
     bc2:	04 06 07 07 03 03 05 05 03 04 06 05 04 02 02 05     ................
     bd2:	02 fd fd fd fe fc f9 fa fc fc fb f9 f6 f3 f8 f6     ................
     be2:	f5 f8 f8 f9 fb fd fe 00 02 04 05 06 07 08 0a 0d     ................
     bf2:	0e 0e 0c 0a 08 06 05 01 02 04 02 fe 01 01 fd 00     ................
     c02:	04 01 fa f6 f6 f8 fa f5 f5 f6 f7 f8 f8 f8 fa fc     ................
     c12:	ff 01 01 fe 00 02 00 04 06 08 08 06 05 03 05 00     ................
     c22:	02 08 08 01 01 04 06 09 0a 02 fc fe fc fa fa 00     ................
     c32:	00 00 04 06 ff fb 01 00 fc fa fb fb fc fd fe 00     ................
     c42:	fb fb ff ff fd f3 f7 fa fa fc fd fe 00 03 05 07     ................
     c52:	08 05 04 04 07 01 02 09 0a 05 07 0a 01 01 06 01     ................
     c62:	00 02 fb fe 04 0c 0c fd fd 05 fc f6 f8 f4 f6 f7     ................
     c72:	f7 f7 f8 fa fb ff fb fd ff ff f9 f5 fc fd ff 01     ................
     c82:	04 04 06 00 ff 06 09 0c 08 03 06 07 09 0d 0c 03     ................
     c92:	09 0a fd 01 03 fc 03 03 02 fd fe 04 fb f6 fd fc     ................
     ca2:	f7 f7 f3 f5 f7 f0 f3 f9 fc ff fc f6 fa fc fe ff     ................
     cb2:	00 03 05 07 08 0a 0b 0d 0b 0b 06 0b 0b 05 06 06     ................
     cc2:	09 04 01 04 fe 00 01 f8 fd 01 ff fd f9 f7 f5 f5     ................
     cd2:	f9 f7 f7 f9 f9 fa fb fb fd fe fb ff 02 04 06 04     ................
     ce2:	03 05 01 07 01 02 05 05 fe 02 04 06 07 09 04 ff     ................
     cf2:	05 00 00 03 ff fe ff fc 00 ff 01 ff 01 fc 00 00     ................
     d02:	fe fc fc fd ff 00 ff fe 03 fd f8 00 f9 fe fe 00     ................
     d12:	fb fd ff fe ff 02 00 01 03 ff 01 03 01 00 04 04     ................
     d22:	05 06 06 01 06 05 06 02 03 00 02 fe 03 03 05 ff     ................
     d32:	05 ff fa fc f9 fa fa fb fb fc fc fc fe fd f8 fe     ................
     d42:	fb fd fe ff fe fe 01 01 01 02 02 04 00 01 04 04     ................
     d52:	06 05 08 08 03 06 07 04 07 03 02 ff ff 01 00 fd     ................
     d62:	01 fd ff fd ff fc fa fa fa fb fa fb fc f9 fa fd     ................
     d72:	fc fd fe ff 00 01 fd 02 01 01 03 04 04 05 06 06     ................
     d82:	03 03 05 03 04 05 05 04 03 05 03 05 02 fe fe fa     ................
     d92:	fe fe fe ff fc fc fe fc f9 fc fb fb fc fd fd ff     ................
     da2:	fe fc ff ff 01 02 02 04 03 ff 03 00 01 02 02 03     ................
     db2:	00 01 03 02 01 04 02 01 05 01 00 02 01 01 04 ff     ................
     dc2:	fd 00 fc ff 00 00 fe ff ff 00 ff fd ff 00 ff 00     ................
     dd2:	00 fc fd fb fc fd fe 00 ff 00 02 ff fd 01 fd ff     ................
     de2:	00 00 01 ff 00 01 01 02 04 03 04 06 03 03 05 04     ................
     df2:	05 06 01 ff 01 02 02 03 fe fe 00 fc ff fc fa fd     ................
     e02:	fc fc fd fc fa fb fa fb fb fe fe ff ff 00 ff 01     ................
     e12:	01 01 01 03 03 00 02 03 03 05 06 06 06 07 08 04     ................
     e22:	02 05 03 02 02 fd fe 00 00 fd fb fc fd fb fd fc     ................
     e32:	fa fc fc fc fc fe fb fa fd fc fd ff 00 00 01 02     ................
     e42:	04 01 02 03 03 04 05 02 01 04 01 01 05 04 03 04     ................
     e52:	05 02 01 03 02 00 03 fd fa ff ff fb fb fe fd fd     ................
     e62:	fe fe fe fc fd fe fe ff fd fe ff ff ff 00 02 01     ................
     e72:	01 03 00 00 02 01 01 02 03 fe ff 02 ff 00 02 02     ................
     e82:	02 03 03 03 03 01 01 02 02 ff fd 00 01 fc fe 00     ................
     e92:	ff ff 00 01 ff ff 01 fe ff 00 fb fd fe fd fe ff     ................
     ea2:	00 ff 00 00 ff 02 00 fe 00 01 ff fe 01 00 01 01     ................
     eb2:	02 02 03 03 04 04 03 03 04 03 04 01 00 01 00 fe     ................
     ec2:	fe fe fd ff ff ff fe 01 fd fb fe fa fb fd fc fd     ................
     ed2:	fe fe fe ff 00 00 01 01 00 01 01 02 01 00 02 02     ................
     ee2:	02 03 03 04 04 05 05 03 04 05 01 02 01 ff 00 00     ................
     ef2:	fc fe fc fc fd fd fd fe fe fc fd fd fd fe fc fc     ................
     f02:	fe fd fe ff 00 01 02 02 03 03 04 05 02 01 02 00     ................
     f12:	02 02 00 03 02 02 03 03 02 03 01 01 01 00 01 01     ................
     f22:	fc ff fd fc fd fd fd fe fe fe ff ff ff 01 fd fd     ................
     f32:	00 fe ff 00 00 01 01 ff 03 00 00 03 01 00 02 ff     ................
     f42:	02 ff fd 00 ff ff 01 01 01 03 02 02 03 02 03 03     ................
     f52:	ff 01 01 ff 01 ff fe 00 ff 00 00 00 00 02 fe fe     ................
     f62:	00 fd fe fd fd fe fd fd ff fd fe 00 ff 00 00 00     ................
     f72:	02 00 fe 00 00 00 01 01 02 03 03 04 04 04 05 04     ................
     f82:	03 04 03 03 02 00 00 00 fd fe fe fd fe ff fd fe     ................
     f92:	fe fd fe fc fb fd fc fd fe fe fe ff 00 00 00 01     ................
     fa2:	01 01 01 02 02 02 01 02 02 02 03 03 03 03 03 03     ................
     fb2:	03 02 03 02 01 01 ff ff fe fe fd fd fe fd fe fe     ................
     fc2:	fe ff fe fe fe fe ff fe fe ff ff 00 00 00 01 01     ................
     fd2:	01 02 02 02 02 01 02 01 00 01 01 00 01 01 01 01     ................
     fe2:	01 01 01 01 00 00 00 00 ff fe ff ff ff ff ff ff     ................
     ff2:	ff ff 00 00 00 00 ff 00 00 ff 00 00 00 00 00 00     ................
	...
    100a:	00 00 ff 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
    101a:	01 01 01 00 00 00 00 00 00 00 00 00                 ............

00001026 <logoInitPatches>:
    1026:	00 a6 00 00 00 80 0f 80 0f                          .........

0000102f <logo_tileset>:
	...
    108b:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
    109b:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
    10ab:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
    10bb:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
    10cb:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
    10db:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
    10eb:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
    10fb:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
    110b:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
    111b:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
    112b:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
    113b:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
    114b:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
    115b:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
    1173:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
    1183:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
    1193:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
    11a3:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
    11b3:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
    11c3:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
    11d3:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
    11e3:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
    11f3:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
    1203:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
    1213:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
    1223:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
    1233:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
    1243:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
    1253:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
    1263:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
    1273:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
    1283:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
    12af:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
    12bf:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
    12cf:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
    12df:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
    12ef:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
    12ff:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
    130f:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
    131f:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
    132f:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
    133f:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
    134f:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
    135f:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    136f:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
    137f:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    13b7:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
    13c7:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
    13d7:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
    13e7:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
    13f7:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
    1407:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
    1417:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
    1427:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
    1437:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
    1447:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
    1457:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
    1467:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
    1477:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
    1487:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
    1497:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
    14a7:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
    14b7:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
    14c7:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
    14d7:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
    14e7:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
    150b:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
    151b:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
    152b:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
    153b:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
    154b:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
    155b:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
    156b:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
    157b:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
    158b:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
    159b:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
    15ab:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
    15bb:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
    15cb:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
    15db:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
    15f3:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
    1603:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
    1613:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
    1623:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
    1633:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
    1643:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
    1653:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
    1663:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
    1673:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
    1683:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
    1693:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
    16a3:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
    16b3:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
    16c3:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
    16d3:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
    16e3:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
    16f3:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
    1703:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
    172f:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
    173f:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
    174f:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
    175f:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
    176f:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
    177f:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
    178f:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
    179f:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
    17af:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
    17bf:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
    17cf:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
    17df:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    17ef:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
    17ff:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

0000182f <map_uzeboxlogo>:
    182f:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
    183f:	00 0e 0f 10 11 12                                   ......

00001845 <map_uzeboxlogo2>:
    1845:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

00001856 <fader>:
    1856:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

00001862 <e_traj_1x>:
    1862:	1c 1f 20 21 22 22 23 23 24 24 23 22 22 21 20 1e     .. !""##$$#""! .
    1872:	1b 18 16 15 14 14 13 13 12 13 13 14 14 15 16 18     ................

00001882 <e_traj_1y>:
    1882:	02 04 06 0a 0c 10 13 17 1b 1f 23 27 2b 2f 33 37     ..........#'+/37
    1892:	39 38 34 30 2d 29 25 21 1d 19 17 13 0f 0a 06 03     9840-)%!........

000018a2 <e_traj_2x>:
    18a2:	17 1b 1f 24 28 2d 2f 31 34 34 30 2d 2b 28 25 22     ...$(-/1440-+(%"
    18b2:	1d 18 15 12 0e 0b 08 05 02 01 04 07 0b 0e 12 14     ................

000018c2 <e_traj_2y>:
    18c2:	11 14 16 18 1b 20 22 24 26 2c 2d 2d 2c 2b 2a 29     ..... "$&,--,+*)
    18d2:	27 24 23 20 1e 1c 19 16 13 0e 0d 0d 0d 0e 10 11     '$# ............

000018e2 <e_traj_3x>:
    18e2:	22 1f 1b 17 13 0f 0c 07 03 01 04 05 08 0d 11 13     "...............
    18f2:	16 1a 1d 20 24 28 2c 2f 34 34 32 30 2e 2c 29 25     ... $(,/4420.,)%

00001902 <e_traj_3y>:
    1902:	22 24 26 28 29 2b 2c 2d 2c 29 24 17 1f 1c 19 17     "$&()+,-,)$.....
    1912:	16 14 13 11 10 0e 0d 0d 0e 12 15 17 19 1c 1d 20     ............... 

00001922 <tiles>:
	...
    1962:	05 05 05 05 05 05 05 05 05 05 04 05 04 05 04 03     ................
    1972:	05 04 05 04 04 04 03 03 05 05 04 04 04 04 04 03     ................
    1982:	05 04 04 04 04 04 03 03 05 05 04 04 04 03 04 03     ................
    1992:	05 04 03 04 03 04 03 03 03 03 03 03 03 03 03 03     ................
    19a2:	fb f9 fb fb fb fb fb fb fb fb fb fb fb fb fd fb     ................
    19b2:	fb fb fb fb fb f9 fb fb fb fb fd fb fb fb fb fb     ................
    19c2:	fb fb fb f9 fb fb fb fb fb fb fb fb fd fb fb fb     ................
    19d2:	fb fb fb fb fb fb fb f9 fd fb fb fb fb fb fb fb     ................
    19e2:	fb f9 fb 18 18 fb fb fb fb fb 18 18 18 18 fd fb     ................
    19f2:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1a02:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1a12:	fb fb 18 18 18 18 fb f9 fd fb fb fb fb fb fb fb     ................
    1a22:	fb f9 fb fb fb fb fb 18 fb fb 18 18 18 18 18 fb     ................
    1a32:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1a42:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1a52:	fb fb 18 18 18 18 fb f9 fd fb fb fb fb fb fb fb     ................
    1a62:	fb f9 fb fb fb fb fb fb fb fb 18 18 18 18 fd fb     ................
    1a72:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 18     ................
    1a82:	fb 18 00 18 18 00 18 18 fb 18 00 18 18 00 18 fb     ................
    1a92:	fb fb 18 18 18 18 fb f9 fd fb fb fb fb fb fb fb     ................
    1aa2:	fb f9 fb fb fb fb fb fb fb fb 18 18 18 18 fd fb     ................
    1ab2:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1ac2:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1ad2:	fb fb 18 18 18 18 18 f9 fd fb fb fb fb fb fb 18     ................
    1ae2:	fb f9 fb fb fb fb fb fb fb fb 18 18 18 18 fd fb     ................
    1af2:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1b02:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1b12:	fb fb 18 18 18 18 fb f9 fd fb fb 18 18 fb fb fb     ................
    1b22:	fb f9 fb fb fb fb fb fb fb fb 18 18 18 18 fd fb     ................
    1b32:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1b42:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1b52:	fb 18 18 18 18 18 fb f9 18 fb fb fb fb fb fb fb     ................
    1b62:	fb f9 fb fb fb fb fb fb fb fb 18 18 18 18 fd fb     ................
    1b72:	fb 18 00 18 18 00 18 fb 18 18 00 00 00 00 18 fb     ................
    1b82:	18 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1b92:	fb fb 18 18 18 18 fb f9 fd fb fb fb fb fb fb fb     ................
    1ba2:	18 f9 fb fb fb fb fb fb fb 18 18 18 18 18 fd fb     ................
    1bb2:	fb 18 00 18 18 00 18 fb fb 18 00 00 00 00 18 fb     ................
    1bc2:	fb 18 00 18 18 00 18 fb fb 18 00 18 18 00 18 fb     ................
    1bd2:	fb fb 18 18 18 18 fb f9 fd fb fb fb fb fb fb fb     ................
    1be2:	c1 f9 fb c1 c1 fb fb c1 fb c1 c1 c1 c1 c1 c1 fb     ................
    1bf2:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1c02:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    1c12:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1c22:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1c32:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    1c42:	fb c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    1c52:	fb fb c1 c1 c1 c1 fb f9 fd fb c1 fb fb c1 fb fb     ................
    1c62:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1c72:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    1c82:	fb c1 00 c1 c1 c1 c1 c1 c1 c1 c1 00 00 c1 c1 fb     ................
    1c92:	fb fb c1 c1 c1 c1 fb f9 fd fb fb fb fb fb fb fb     ................
    1ca2:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1cb2:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 c1     ................
    1cc2:	c1 c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    1cd2:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1ce2:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1cf2:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1d02:	fb c1 00 c1 c1 c1 c1 fb c1 c1 c1 00 00 c1 c1 fb     ................
    1d12:	fb fb c1 c1 c1 c1 c1 f9 fd fb fb fb fb fb fb c1     ................
    1d22:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1d32:	fb c1 c1 00 00 c1 c1 c1 fb c1 00 c1 c1 c1 c1 fb     ................
    1d42:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 c1     ................
    1d52:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1d62:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1d72:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1d82:	fb c1 00 c1 c1 c1 c1 fb c1 c1 c1 00 00 c1 c1 fb     ................
    1d92:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1da2:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1db2:	fb c1 c1 00 00 c1 c1 c1 fb c1 00 c1 c1 c1 c1 fb     ................
    1dc2:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 c1     ................
    1dd2:	fb c1 c1 c1 c1 c1 fb f9 c1 fb fb fb fb fb fb fb     ................
    1de2:	fb f9 fb c1 c1 fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1df2:	fb c1 c1 00 00 c1 c1 c1 c1 c1 00 c1 c1 c1 c1 fb     ................
    1e02:	c1 c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 c1     ................
    1e12:	fb fb c1 c1 c1 c1 fb f9 fd fb fb fb fb fb fb fb     ................
    1e22:	fb f9 fb fb fb fb fb c1 fb fb c1 c1 c1 c1 c1 fb     ................
    1e32:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1e42:	fb c1 00 c1 c1 c1 c1 fb c1 c1 c1 00 00 c1 c1 fb     ................
    1e52:	fb fb c1 c1 c1 c1 c1 f9 fd fb fb fb fb fb fb c1     ................
    1e62:	c1 f9 fb fb fb fb fb c1 fb c1 c1 c1 c1 c1 c1 fb     ................
    1e72:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1e82:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    1e92:	fb c1 c1 c1 c1 c1 c1 f9 c1 fb fb fb fb fb fb c1     ................
    1ea2:	fb f9 fb fb fb fb fb c1 fb fb c1 c1 c1 c1 c1 fb     ................
    1eb2:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1ec2:	fb c1 00 c1 c1 c1 c1 fb c1 c1 c1 00 00 c1 c1 fb     ................
    1ed2:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1ee2:	fb f9 fb fb fb fb fb c1 fb fb c1 c1 c1 c1 c1 fb     ................
    1ef2:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 fb     ................
    1f02:	c1 c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    1f12:	fb fb c1 c1 c1 c1 fb f9 fd fb c1 fb fb c1 fb fb     ................
    1f22:	c1 f9 fb fb fb fb fb c1 fb c1 c1 c1 c1 c1 c1 fb     ................
    1f32:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    1f42:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    1f52:	fb fb c1 c1 c1 c1 fb f9 fd fb c1 fb fb c1 fb fb     ................
    1f62:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1f72:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    1f82:	fb c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    1f92:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1fa2:	fb f9 fb fb fb fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1fb2:	c1 c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    1fc2:	fb c1 00 c1 c1 c1 c1 c1 c1 c1 c1 00 00 c1 c1 fb     ................
    1fd2:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    1fe2:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    1ff2:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    2002:	fb c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    2012:	fb c1 c1 c1 c1 c1 fb f9 c1 fb fb fb fb fb fb fb     ................
    2022:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    2032:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 c1     ................
    2042:	c1 c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    2052:	fb fb c1 c1 c1 c1 fb f9 fd fb fb fb fb fb fb fb     ................
    2062:	fb f9 fb fb fb fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    2072:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 c1     ................
    2082:	c1 c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    2092:	fb fb c1 c1 c1 c1 fb f9 fd fb c1 fb fb c1 fb fb     ................
    20a2:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    20b2:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 fb     ................
    20c2:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    20d2:	fb c1 c1 c1 c1 c1 c1 f9 c1 fb fb fb fb fb fb c1     ................
    20e2:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    20f2:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 fb     ................
    2102:	c1 c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    2112:	fb fb c1 c1 c1 c1 c1 f9 fd fb fb fb fb fb fb c1     ................
    2122:	fb f9 c1 fb fb c1 fb fb fb fb c1 c1 c1 c1 fd fb     ................
    2132:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 fb     ................
    2142:	c1 c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    2152:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    2162:	c1 f9 fb fb fb fb fb fb fb c1 c1 c1 c1 c1 fd fb     ................
    2172:	fb c1 c1 00 00 c1 c1 c1 fb c1 00 c1 c1 c1 c1 fb     ................
    2182:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 c1     ................
    2192:	fb fb c1 c1 c1 c1 fb f9 fd fb fb c1 c1 fb fb fb     ................
    21a2:	fb f9 fb fb fb fb fb fb fb fb c1 c1 c1 c1 c1 c1     ................
    21b2:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    21c2:	fb c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    21d2:	fb c1 c1 c1 c1 c1 c1 c1 c1 fb fb fb fb fb fb fb     ................
    21e2:	c1 f9 fb fb fb fb fb fb fb c1 c1 c1 c1 c1 fd fb     ................
    21f2:	fb c1 c1 00 00 c1 c1 c1 fb c1 00 c1 c1 c1 c1 fb     ................
    2202:	fb c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 c1     ................
    2212:	fb c1 c1 c1 c1 c1 fb f9 c1 fb fb fb fb fb fb fb     ................
    2222:	fb f9 fb fb fb fb fb fb fb fb c1 c1 c1 c1 fd fb     ................
    2232:	fb c1 c1 00 00 c1 c1 fb c1 c1 00 c1 c1 c1 c1 fb     ................
    2242:	c1 c1 00 c1 c1 c1 c1 fb fb c1 c1 00 00 c1 c1 fb     ................
    2252:	fb c1 c1 c1 c1 c1 c1 f9 fd c1 fb c1 c1 fb c1 fb     ................
    2262:	c1 f9 fb fb fb fb fb fb fb c1 c1 c1 c1 c1 fd fb     ................
    2272:	fb c1 c1 00 00 c1 c1 fb fb c1 00 c1 c1 c1 c1 c1     ................
    2282:	fb c1 00 c1 c1 c1 c1 c1 fb c1 c1 00 00 c1 c1 fb     ................
    2292:	fb fb c1 c1 c1 c1 fb f9 fd fb c1 fb fb c1 fb fb     ................
    22a2:	fb f9 07 fb fb 07 fb fb fb fb 07 07 07 07 fd fb     ................
    22b2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    22c2:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    22d2:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    22e2:	fb f9 fb 07 07 fb fb fb fb fb 07 07 07 07 fd fb     ................
    22f2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2302:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2312:	fb fb 07 07 07 07 07 f9 fd fb fb fb fb fb fb 07     ................
    2322:	fb f9 fb 07 07 fb fb fb fb fb 07 07 07 07 fd fb     ................
    2332:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2342:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2352:	fb fb 07 07 07 07 fb f9 fd fb fb 07 07 fb fb fb     ................
    2362:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    2372:	fb 07 07 00 00 07 07 07 fb 07 00 07 07 00 07 fb     ................
    2382:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 07     ................
    2392:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    23a2:	fb f9 fb fb fb fb fb 07 fb fb 07 07 07 07 07 fb     ................
    23b2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    23c2:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    23d2:	fb fb 07 07 07 07 07 f9 fd fb fb fb fb fb fb 07     ................
    23e2:	fb f9 fb fb fb fb fb 07 fb fb 07 07 07 07 07 fb     ................
    23f2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2402:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2412:	fb fb 07 07 07 07 fb f9 fd fb fb 07 07 fb fb fb     ................
    2422:	fb f9 fb fb fb fb fb 07 fb fb 07 07 07 07 07 fb     ................
    2432:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2442:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2452:	fb 07 07 07 07 07 fb f9 07 fb fb fb fb fb fb fb     ................
    2462:	fb f9 fb fb fb fb fb 07 fb fb 07 07 07 07 07 fb     ................
    2472:	fb 07 07 00 00 07 07 fb 07 07 00 07 07 00 07 fb     ................
    2482:	07 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2492:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    24a2:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    24b2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    24c2:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    24d2:	fb fb 07 07 07 07 fb f9 fd fb 07 fb fb 07 fb fb     ................
    24e2:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    24f2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 07     ................
    2502:	fb 07 00 07 07 00 07 07 fb 07 07 00 00 07 07 fb     ................
    2512:	fb fb 07 07 07 07 fb f9 fd fb fb 07 07 fb fb fb     ................
    2522:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    2532:	fb 07 07 00 00 07 07 fb 07 07 00 07 07 00 07 07     ................
    2542:	07 07 00 07 07 00 07 07 fb 07 07 00 00 07 07 fb     ................
    2552:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    2562:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    2572:	07 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2582:	fb 07 00 07 07 00 07 fb 07 07 07 00 00 07 07 fb     ................
    2592:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    25a2:	fb f9 fb fb fb fb fb fb fb fb 07 07 07 07 fd fb     ................
    25b2:	fb 07 07 00 00 07 07 fb 07 07 00 07 07 00 07 fb     ................
    25c2:	07 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    25d2:	fb fb 07 07 07 07 07 f9 fd fb fb fb fb fb fb 07     ................
    25e2:	07 f9 fb fb fb fb fb fb fb 07 07 07 07 07 fd fb     ................
    25f2:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 fb     ................
    2602:	fb 07 00 07 07 00 07 fb fb 07 07 00 00 07 07 fb     ................
    2612:	fb fb 07 07 07 07 07 f9 fd fb fb fb fb fb fb 07     ................
    2622:	07 f9 fb fb fb fb fb fb fb 07 07 07 07 07 fd fb     ................
    2632:	fb 07 07 00 00 07 07 fb fb 07 00 07 07 00 07 07     ................
    2642:	fb 07 00 07 07 00 07 07 fb 07 07 00 00 07 07 fb     ................
    2652:	fb fb 07 07 07 07 fb f9 fd fb fb fb fb fb fb fb     ................
    2662:	fb f9 fb 3f 3f fb fb fb fb fb 3f 3f 3f 3f fd fb     ...??.....????..
    2672:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f 3f     .?.??.?..?..?.??
    2682:	fb 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     .?.?..??.?.??.?.
    2692:	fb 3f 3f 3f 3f 3f fb f9 3f fb fb fb fb fb fb fb     .?????..?.......
    26a2:	fb f9 fb 3f 3f fb fb fb fb fb 3f 3f 3f 3f fd fb     ...??.....????..
    26b2:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f 3f     .?.??.?.??..?.??
    26c2:	3f 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     ??.?..??.?.??.?.
    26d2:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    26e2:	fb f9 fb 3f 3f fb fb fb fb fb 3f 3f 3f 3f fd fb     ...??.....????..
    26f2:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f fb     .?.??.?..?..?.?.
    2702:	fb 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     .?.?..?..?.??.?.
    2712:	fb 3f 3f 3f 3f 3f 3f f9 3f fb fb fb fb fb fb 3f     .??????.?......?
    2722:	fb f9 fb 3f 3f fb fb fb fb fb 3f 3f 3f 3f fd fb     ...??.....????..
    2732:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f fb     .?.??.?.??..?.?.
    2742:	3f 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     ??.?..?..?.??.?.
    2752:	fb fb 3f 3f 3f 3f 3f f9 fd fb fb fb fb fb fb 3f     ..?????........?
    2762:	fb f9 fb fb fb fb fb 3f fb fb 3f 3f 3f 3f 3f fb     .......?..?????.
    2772:	3f 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f fb     ??.??.?..?..?.?.
    2782:	fb 3f 00 3f 00 00 3f fb 3f 3f 00 3f 3f 00 3f fb     .?.?..?.??.??.?.
    2792:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    27a2:	fb f9 fb fb fb fb fb 3f fb fb 3f 3f 3f 3f 3f fb     .......?..?????.
    27b2:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f fb     .?.??.?.??..?.?.
    27c2:	3f 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     ??.?..?..?.??.?.
    27d2:	fb fb 3f 3f 3f 3f 3f f9 fd fb fb fb fb fb fb 3f     ..?????........?
    27e2:	fb f9 fb fb fb fb fb 3f fb fb 3f 3f 3f 3f 3f fb     .......?..?????.
    27f2:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f fb     .?.??.?.??..?.?.
    2802:	3f 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     ??.?..?..?.??.?.
    2812:	fb fb 3f 3f 3f 3f fb f9 fd fb fb 3f 3f fb fb fb     ..????.....??...
    2822:	3f f9 fb fb fb fb fb 3f fb 3f 3f 3f 3f 3f 3f fb     ?......?.??????.
    2832:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f fb     .?.??.?..?..?.?.
    2842:	fb 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     .?.?..?..?.??.?.
    2852:	fb fb 3f 3f 3f 3f fb f9 fd fb fb 3f 3f fb fb fb     ..????.....??...
    2862:	fb f9 3f fb fb 3f fb fb fb fb 3f 3f 3f 3f fd fb     ..?..?....????..
    2872:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f 3f     .?.??.?..?..?.??
    2882:	fb 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     .?.?..??.?.??.?.
    2892:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    28a2:	3f f9 fb fb fb fb fb fb fb 3f 3f 3f 3f 3f fd fb     ?........?????..
    28b2:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f 3f     .?.??.?..?..?.??
    28c2:	fb 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     .?.?..??.?.??.?.
    28d2:	fb fb 3f 3f 3f 3f fb f9 fd fb fb 3f 3f fb fb fb     ..????.....??...
    28e2:	3f f9 fb fb fb fb fb fb fb 3f 3f 3f 3f 3f fd fb     ?........?????..
    28f2:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f 3f     .?.??.?..?..?.??
    2902:	fb 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     .?.?..??.?.??.?.
    2912:	fb 3f 3f 3f 3f 3f fb f9 3f fb fb fb fb fb fb fb     .?????..?.......
    2922:	fb 3f fb 3f 3f fb 3f fb fb 3f 3f 3f 3f 3f 3f fb     .?.??.?..??????.
    2932:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f fb     .?.??.?..?..?.?.
    2942:	fb 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     .?.?..?..?.??.?.
    2952:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    2962:	fb f9 3f fb fb 3f fb fb fb fb 3f 3f 3f 3f fd fb     ..?..?....????..
    2972:	fb 3f 00 3f 3f 00 3f fb fb 3f 00 00 3f 00 3f fb     .?.??.?..?..?.?.
    2982:	fb 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     .?.?..?..?.??.?.
    2992:	fb fb 3f 3f 3f 3f fb f9 fd fb fb 3f 3f fb fb fb     ..????.....??...
    29a2:	fb f9 3f fb fb 3f fb fb fb fb 3f 3f 3f 3f fd fb     ..?..?....????..
    29b2:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f fb     .?.??.?.??..?.?.
    29c2:	3f 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     ??.?..?..?.??.?.
    29d2:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    29e2:	fb f9 fb fb fb fb fb fb fb fb 3f 3f 3f 3f fd fb     ..........????..
    29f2:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f 3f     .?.??.?.??..?.??
    2a02:	3f 3f 00 3f 00 00 3f 3f fb 3f 00 3f 3f 00 3f fb     ??.?..??.?.??.?.
    2a12:	fb fb 3f 3f 3f 3f fb f9 fd fb fb 3f 3f fb fb fb     ..????.....??...
    2a22:	fb f9 fb fb fb fb fb fb 3f 3f 3f 3f 3f 3f fd fb     ........??????..
    2a32:	fb 3f 00 3f 3f 00 3f fb 3f 3f 00 00 3f 00 3f fb     .?.??.?.??..?.?.
    2a42:	3f 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f fb     ??.?..?..?.??.?.
    2a52:	3f 3f 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ??????..........
    2a62:	3f f9 fb fb fb fb fb fb fb 3f 3f 3f 3f 3f fd fb     ?........?????..
    2a72:	fb 3f 00 3f 3f 00 3f 3f fb 3f 00 00 3f 00 3f fb     .?.??.??.?..?.?.
    2a82:	fb 3f 00 3f 00 00 3f fb fb 3f 00 3f 3f 00 3f 3f     .?.?..?..?.??.??
    2a92:	fb fb 3f 3f 3f 3f fb f9 fd fb fb fb fb fb fb fb     ..????..........
    2aa2:	07 07 3f 3f 07 07 3f 3f 3f fe fe fe fe fe fe 07     ..??..???.......
    2ab2:	3f fe fe fe fe fe fe 07 07 fe fe fe fe fe fe 3f     ?..............?
    2ac2:	07 fe fe fe fe fe fe 3f 3f fe fe fe fe fe fe 07     .......??.......
    2ad2:	3f fe fe fe fe fe fe 07 07 07 3f 3f 07 07 3f 3f     ?.........??..??
    2ae2:	07 3f 3f 07 07 3f 3f 07 07 fe fe fe fe fe fe 07     .??..??.........
    2af2:	3f fe fe fe fe fe fe 3f 3f fe fe fe fe fe fe 3f     ?......??......?
    2b02:	07 fe fe fe fe fe fe 07 07 fe fe fe fe fe fe 07     ................
    2b12:	3f fe fe fe fe fe fe 3f 3f 07 07 3f 3f 07 07 3f     ?......??..??..?
    2b22:	3f 3f 07 07 3f 3f 07 07 07 fe fe fe fe fe fe 3f     ??..??.........?
    2b32:	07 fe fe fe fe fe fe 3f 3f fe fe fe fe fe fe 07     .......??.......
    2b42:	3f fe fe fe fe fe fe 07 07 fe fe fe fe fe fe 3f     ?..............?
    2b52:	07 fe fe fe fe fe fe 3f 3f 3f 07 07 3f 3f 07 07     .......???..??..
    2b62:	3f 07 07 3f 3f 07 07 3f 3f fe fe fe fe fe fe 3f     ?..??..??......?
    2b72:	07 fe fe fe fe fe fe 07 07 fe fe fe fe fe fe 07     ................
    2b82:	3f fe fe fe fe fe fe 3f 3f fe fe fe fe fe fe 3f     ?......??......?
    2b92:	07 fe fe fe fe fe fe 07 07 3f 3f 07 07 3f 3f 07     .........??..??.
    2ba2:	fb f9 fb fb fb fb fb fb fb fb fb 00 00 fb fd fb     ................
    2bb2:	fb fb 00 00 00 00 fb fb fb 00 00 00 00 00 00 fb     ................
    2bc2:	fb fb fb 00 00 fb fb fb fb fb fb 00 00 fb fb fb     ................
    2bd2:	fb fb fb 00 00 fb fb f9 fd fb fb fb fb fb fb fb     ................
    2be2:	fb f9 fb fb fb fb fb fb fb fb fb fb 00 fb fd fb     ................
    2bf2:	fb fb fb fb 00 00 fb fb fb 00 00 00 00 00 00 fb     ................
    2c02:	fb 00 00 00 00 00 00 fb fb fb fb fb 00 00 fb fb     ................
    2c12:	fb fb fb fb 00 fb fb f9 fd fb fb fb fb fb fb fb     ................
    2c22:	fb f9 fb fb fb fb fb fb fb fb fb 00 00 fb fd fb     ................
    2c32:	fb fb fb 00 00 f9 fb fb fb fb fd 00 00 fb fb fb     ................
    2c42:	fb 00 00 00 00 00 00 fb fb fb 00 00 00 00 fb fb     ................
    2c52:	fb fb fb 00 00 fb fb f9 fd fb fb fb fb fb fb fb     ................
    2c62:	fb f9 fb fb fb fb fb fb fb fb fb 00 fb fb fd fb     ................
    2c72:	fb fb 00 00 fb f9 fb fb fb 00 00 00 00 00 00 fb     ................
    2c82:	fb 00 00 00 00 00 00 fb fb fb 00 00 fd fb fb fb     ................
    2c92:	fb fb fb 00 fb fb fb f9 fd fb fb fb fb fb fb fb     ................
    2ca2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    2cb2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    2cc2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    2cd2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................

00002ce2 <logo>:
	...
    2d26:	00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 00 ff     ................
    2d36:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    2d46:	00 00 00 00 00 00 ff 00 00 00 00 00 00 ff ff 00     ................
    2d56:	00 00 00 00 00 ff 00 00 00 00 00 00 ff ff ff 00     ................
    2d66:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 ff     ................
    2d76:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
    2d86:	ff 00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    2d96:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
	...
    2dba:	00 00 00 16 16 16 16 16 00 00 00 16 16 16 16 16     ................
    2dca:	00 00 00 16 16 16 16 16 00 00 16 16 16 16 16 16     ................
    2dda:	00 00 16 16 16 16 16 16 00 00 00 00 00 00 00 00     ................
	...
    2dfa:	16 00 00 00 00 00 00 00 16 16 00 00 00 00 00 00     ................
    2e0a:	16 16 00 00 00 00 00 00 16 16 00 00 00 00 00 00     ................
    2e1a:	16 16 16 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2e3e:	00 00 00 ff 00 00 00 00 00 ff ff ff 00 00 00 00     ................
    2e4e:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    2e5e:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2e7a:	ff ff ff ff ff ff ff ff 18 18 18 18 18 00 ff ff     ................
    2e8a:	18 18 18 18 18 00 00 00 18 18 18 18 18 00 00 00     ................
    2e9a:	18 18 18 18 18 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2eba:	ff ff 00 00 00 00 00 00 ff ff ff ff ff ff 00 ff     ................
    2eca:	00 ff ff ff ff ff ff ff 00 00 00 00 ff ff ff ff     ................
    2eda:	00 00 00 00 00 00 00 ff 00 ff 00 00 00 00 00 00     ................
    2eea:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    2efa:	ff ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    2f0a:	ff 00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    2f1a:	ff ff ff ff ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    2f2a:	00 00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00     ................
    2f3a:	00 00 00 00 00 ff ff 00 00 00 00 00 00 00 ff 00     ................
    2f4a:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff ff     ................
    2f5a:	00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    2f86:	ff ff ff ff ff ff ff ff ff 00 00 00 ff ff ff 00     ................
    2f96:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2fba:	ff ff ff ff ff ff ff 00 ff ff ff 00 00 ff ff ff     ................
	...
    3002:	ff 00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3012:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
    302a:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    303a:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    304a:	00 00 25 25 25 25 25 00 00 00 00 00 00 00 00 00     ..%%%%%.........
	...
    308e:	00 00 00 16 00 00 00 00 00 00 00 16 00 00 00 00     ................
    309e:	00 00 16 16 00 16 16 16 16 16 16 16 00 16 16 16     ................
    30ae:	16 16 16 16 16 16 16 16 16 16 00 16 16 16 16 16     ................
    30be:	16 00 00 16 16 16 16 16 16 00 00 16 16 16 16 16     ................
    30ce:	00 00 00 00 16 16 16 16 00 00 00 00 16 16 16 16     ................
    30de:	00 00 00 00 16 16 16 00 00 00 00 00 16 16 16 16     ................
    30ee:	00 00 00 00 16 16 16 16 00 00 00 00 16 16 16 16     ................
    30fe:	16 00 00 00 16 16 16 16 16 00 00 00 16 16 16 16     ................
    310e:	16 00 00 00 16 16 16 16 16 16 00 00 00 16 16 16     ................
    311e:	16 16 00 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    312e:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    313e:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3162:	18 18 18 18 18 00 00 00 18 18 18 18 18 00 00 00     ................
    3172:	18 18 18 18 18 00 00 00 ff 18 18 18 18 18 18 18     ................
    3182:	ff ff 18 18 18 18 18 18 18 ff ff 18 18 18 18 18     ................
    3192:	18 18 ff ff 18 18 18 18 18 18 18 ff ff 00 00 00     ................
    31a2:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff     ................
    31b2:	00 00 00 00 00 00 00 ff 18 18 18 18 18 00 00 ff     ................
    31c2:	18 18 18 18 18 00 ff ff 18 18 18 18 18 00 ff ff     ................
    31d2:	18 18 18 18 18 ff ff ff 00 00 00 00 ff ff ff ff     ................
    31e2:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff ff ff ff     ................
    31f2:	ff 00 00 00 ff ff ff ff ff 00 00 ff ff ff ff 00     ................
    3202:	ff ff ff ff ff 00 00 00 ff ff ff 00 00 00 00 00     ................
    3212:	ff 00 00 00 00 00 00 00 00 00 00 00 00 3f 3f 3f     .............???
    3222:	00 ff ff ff ff 00 ff ff ff ff 00 00 00 00 ff ff     ................
    3232:	ff ff 00 00 00 00 ff ff ff ff ff ff 00 00 ff ff     ................
    3242:	00 00 ff ff ff ff ff ff 00 00 00 ff ff ff ff ff     ................
    3252:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 ff     ................
    3262:	ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    3272:	ff 00 00 00 00 00 00 00 ff 00 00 00 00 44 44 44     .............DDD
    3282:	ff 00 00 00 00 44 44 44 ff 00 00 00 00 44 44 44     .....DDD.....DDD
    3292:	ff ff 00 00 00 44 44 44 ff ff ff 00 00 44 44 44     .....DDD.....DDD
	...
    32b2:	44 44 44 44 44 44 44 ff 44 44 44 44 44 44 ff ff     DDDDDDD.DDDDDD..
    32c2:	44 44 44 44 44 ff ff 44 44 44 44 44 ff ff ff 44     DDDDD..DDDDD...D
    32d2:	44 44 44 ff ff ff 44 44 44 ff ff ff ff 00 00 00     DDD...DDD.......
    32e2:	ff ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    32f2:	ff 00 00 00 00 00 00 44 44 44 44 00 00 44 44 44     .......DDDD..DDD
    3302:	44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44     DDDDDDDDDDDDDDDD
    3312:	44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 00     DDDDDDDDDDDDDDD.
	...
    3332:	44 44 44 44 44 44 00 00 44 44 44 44 44 44 44 44     DDDDDD..DDDDDDDD
    3342:	44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44     DDDDDDDDDDDDDDDD
    3352:	44 44 44 44 44 44 44 44 00 00 00 00 00 44 44 44     DDDDDDDD.....DDD
	...
    3382:	44 44 00 00 00 00 00 00 44 44 00 00 00 00 00 00     DD......DD......
    3392:	44 44 44 00 00 00 00 00 44 44 44 00 00 00 00 00     DDD.....DDD.....
	...
    33ba:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    33ca:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    33da:	00 00 25 25 25 25 25 00 00 00 00 00 00 00 00 00     ..%%%%%.........
	...
    33fa:	00 00 00 80 80 80 80 80 00 00 00 80 80 80 80 80     ................
    340a:	00 00 00 00 80 80 80 80 00 00 00 00 00 80 80 80     ................
    341a:	00 00 00 00 00 80 80 80 00 00 00 00 00 00 00 00     ................
	...
    343a:	80 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00     ................
    344a:	80 80 00 00 00 00 00 00 80 80 80 00 00 00 00 80     ................
    345a:	80 80 80 00 00 00 80 80 00 00 00 00 00 00 00 00     ................
	...
    347a:	00 80 80 80 80 80 80 00 80 80 80 80 80 80 00 00     ................
    348a:	80 80 80 80 80 80 00 00 80 80 80 80 80 00 00 00     ................
    349a:	80 80 80 80 00 00 00 00 00 00 00 00 00 00 16 16     ................
    34aa:	00 00 00 00 00 16 16 16 00 00 00 00 00 16 16 16     ................
    34ba:	00 00 00 00 00 16 16 16 00 00 00 00 16 16 16 16     ................
    34ca:	00 00 00 00 16 16 16 16 00 00 00 00 16 16 16 16     ................
    34da:	00 00 00 16 16 16 16 16 16 16 16 00 00 00 00 00     ................
    34ea:	16 16 16 00 00 00 00 00 16 16 16 00 00 00 00 00     ................
    34fa:	16 16 00 00 00 00 00 00 16 16 00 00 00 00 00 00     ................
    350a:	16 00 00 00 00 00 00 00 16 16 16 16 16 16 16 16     ................
    351a:	16 16 16 16 16 16 16 16 00 16 16 16 16 16 16 00     ................
    352a:	00 16 16 16 16 16 16 00 00 00 16 16 16 16 16 00     ................
    353a:	00 00 16 16 16 16 16 16 00 00 16 16 16 16 16 16     ................
    354a:	00 00 00 16 16 16 16 16 16 16 16 16 16 16 16 16     ................
    355a:	16 16 16 16 16 16 16 16 00 00 00 00 00 00 00 00     ................
	...
    358a:	16 00 00 00 00 00 00 00 16 00 00 00 00 00 00 00     ................
    359a:	16 00 00 00 00 00 00 00 18 18 18 18 ff ff ff 00     ................
    35aa:	18 18 18 18 18 ff ff ff 18 18 18 18 18 00 ff ff     ................
    35ba:	18 18 18 18 18 00 ff ff 18 18 18 18 18 ff ff 00     ................
    35ca:	18 18 18 18 ff ff 00 00 18 18 18 ff ff 00 00 00     ................
    35da:	18 ff ff ff 18 00 00 00 00 00 ff ff ff ff ff ff     ................
    35ea:	00 ff ff ff 00 00 ff ff ff ff ff 00 00 00 ff ff     ................
    35fa:	ff ff 00 00 00 00 ff ff 00 ff ff ff 00 00 ff ff     ................
    360a:	00 00 ff ff ff 00 ff ff 00 00 00 ff ff ff ff ff     ................
    361a:	00 00 00 00 00 00 ff ff 00 00 00 00 3f 3f 3f 3f     ............????
    362a:	00 00 00 00 3f 3f 3f 3f 00 00 00 00 3f 3f 3f 3f     ....????....????
    363a:	00 00 00 3f 3f 3f 3f 3f 00 00 00 3f 3f 3f 3f 3f     ...?????...?????
    364a:	00 00 00 00 00 3f 3f 3f 00 00 00 00 00 00 00 3f     .....???.......?
    365a:	ff ff 00 00 00 00 00 00 3f 3f 00 00 00 00 00 ff     ........??......
    366a:	3f 3f 00 00 00 00 00 ff 3f 3f 3f 00 00 00 00 ff     ??......???.....
    367a:	3f 3f 3f 00 00 00 00 ff 3f 3f 00 00 00 00 00 ff     ???.....??......
    368a:	3f 3f 00 00 00 00 00 ff 3f 00 00 00 00 00 00 ff     ??......?.......
    369a:	00 00 00 00 00 00 ff ff ff ff ff ff ff 44 44 44     .............DDD
    36aa:	ff 00 00 ff ff 44 44 ff ff 00 00 00 ff ff ff ff     .....DD.........
    36ba:	ff 00 00 00 00 ff ff 44 ff 00 00 00 ff ff 44 ff     .......D......D.
    36ca:	ff 00 ff ff ff 44 44 44 ff ff ff 00 00 44 44 44     .....DDD.....DDD
    36da:	ff 00 00 00 00 44 44 44 ff ff ff 00 00 00 00 00     .....DDD........
    36ea:	ff ff 00 00 00 00 00 00 ff 44 00 00 00 00 00 00     .........D......
    36fa:	44 44 00 00 00 00 00 00 44 44 00 00 00 00 00 00     DD......DD......
    370a:	ff ff 00 00 00 00 00 00 44 ff ff 00 00 00 00 00     ........D.......
    371a:	44 44 ff ff 00 00 00 00 00 44 44 44 44 44 00 00     DD.......DDDDD..
    372a:	00 44 44 44 44 44 00 00 00 44 44 44 44 44 44 00     .DDDDD...DDDDDD.
    373a:	00 44 44 44 44 44 44 00 00 44 44 44 44 44 44 00     .DDDDDD..DDDDDD.
    374a:	00 44 44 44 44 44 44 00 00 00 44 44 44 44 44 00     .DDDDDD...DDDDD.
    375a:	00 00 44 44 44 44 44 00 00 00 00 00 00 00 44 44     ..DDDDD.......DD
    376a:	00 00 00 00 00 00 44 44 00 00 00 00 00 00 44 44     ......DD......DD
    377a:	00 00 00 00 00 00 44 44 00 00 00 00 00 00 44 44     ......DD......DD
    378a:	00 00 00 00 00 00 44 44 00 00 00 00 00 00 00 44     ......DD.......D
    379a:	00 00 00 00 00 00 00 44 44 44 44 00 00 00 00 00     .......DDDD.....
    37aa:	44 44 44 00 00 00 00 00 44 44 44 44 00 00 00 00     DDD.....DDDD....
    37ba:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    37ca:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    37da:	44 44 44 44 00 00 00 00 00 00 25 25 25 25 25 00     DDDD......%%%%%.
    37ea:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    37fa:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    380a:	00 00 25 25 25 25 25 00 00 00 25 25 25 25 25 00     ..%%%%%...%%%%%.
    381a:	00 00 25 25 25 25 25 00 00 00 00 00 00 00 80 80     ..%%%%%.........
    382a:	00 00 00 00 00 00 00 80 00 00 00 00 00 00 00 00     ................
	...
    3862:	80 80 80 80 00 00 80 80 80 80 80 80 80 80 80 80     ................
    3872:	80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80     ................
    3882:	00 80 80 80 80 80 80 80 00 00 80 80 80 80 80 80     ................
    3892:	00 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80     ................
    38a2:	80 80 80 00 00 00 00 00 80 80 80 00 00 00 00 00     ................
    38b2:	80 80 00 00 00 00 00 00 80 00 00 00 00 00 00 00     ................
    38c2:	80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    38d2:	80 00 00 00 00 00 00 00 80 80 00 00 00 00 00 00     ................
    38e2:	00 00 00 16 16 16 16 16 00 00 16 16 16 16 16 16     ................
    38f2:	00 00 16 16 16 16 16 16 00 00 16 16 16 16 16 00     ................
    3902:	00 16 16 16 16 16 16 00 00 16 16 16 16 16 16 00     ................
    3912:	00 16 16 16 16 16 00 00 16 16 16 16 16 16 00 00     ................
    3922:	16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16     ................
	...
    3962:	16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16     ................
    3972:	00 00 00 00 00 16 16 16 00 00 00 00 00 16 16 16     ................
    3982:	00 00 00 00 00 16 16 16 00 00 00 00 00 00 16 16     ................
    3992:	00 00 00 00 00 00 16 16 00 00 00 00 00 00 16 16     ................
    39a2:	16 16 00 00 00 00 00 00 16 16 00 00 00 00 00 00     ................
    39b2:	16 16 00 00 00 00 00 ff 16 16 16 00 00 00 00 ff     ................
    39c2:	16 16 16 00 00 00 ff 00 16 16 16 16 00 00 ff 00     ................
    39d2:	16 16 16 16 00 ff 00 00 16 16 16 16 00 ff 00 00     ................
    39e2:	ff ff 18 18 18 00 00 00 ff 18 18 18 18 00 00 00     ................
    39f2:	ff 18 18 18 18 00 00 00 18 18 18 18 18 00 00 00     ................
    3a02:	18 18 18 18 18 18 00 00 18 18 18 18 18 18 18 18     ................
    3a12:	00 18 18 18 18 18 18 18 00 18 18 18 18 18 18 18     ................
    3a22:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff ff     ................
    3a32:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 ff     ................
    3a42:	00 00 00 00 00 00 00 ff 18 18 18 18 18 00 00 ff     ................
    3a52:	18 18 18 18 18 18 00 ff 18 18 18 18 18 18 ff ff     ................
    3a62:	ff ff 00 00 00 00 00 00 ff ff ff ff 00 00 00 00     ................
    3a72:	00 00 ff ff ff ff 00 00 00 00 00 ff ff ff ff 00     ................
    3a82:	00 00 00 00 00 ff ff ff 00 00 00 ff ff ff 00 00     ................
    3a92:	ff ff ff ff 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3aa2:	00 00 00 00 00 ff ff ff 00 00 00 ff ff ff ff ff     ................
    3ab2:	00 ff ff ff 00 00 ff ff ff ff 00 00 00 00 ff ff     ................
    3ac2:	ff 00 00 00 00 00 ff ff ff ff ff 00 00 00 ff ff     ................
    3ad2:	00 00 ff ff ff 00 ff ff 00 00 00 00 00 ff ff ff     ................
    3ae2:	00 00 00 00 00 44 44 44 00 00 00 00 00 44 44 44     .....DDD.....DDD
    3af2:	00 00 00 00 00 44 44 44 00 00 00 00 00 44 44 44     .....DDD.....DDD
    3b02:	00 00 00 00 00 44 44 44 00 00 00 00 00 44 44 44     .....DDD.....DDD
    3b12:	00 00 00 00 00 44 44 44 ff 00 00 00 00 44 44 44     .....DDD.....DDD
    3b22:	44 44 00 ff ff 00 00 00 44 44 00 00 ff ff 00 00     DD......DD......
    3b32:	44 44 00 00 00 ff ff 00 44 44 00 00 00 00 ff ff     DD......DD......
    3b42:	44 44 00 00 00 00 ff ff 44 44 00 00 00 00 00 ff     DD......DD......
    3b52:	44 44 00 00 00 00 00 00 44 44 00 00 00 00 00 00     DD......DD......
    3b62:	00 00 44 44 44 44 44 00 00 00 44 44 44 44 44 00     ..DDDDD...DDDDD.
    3b72:	00 00 44 44 44 44 44 00 00 00 44 44 44 44 44 00     ..DDDDD...DDDDD.
    3b82:	ff 00 44 44 44 44 44 00 ff 00 44 44 44 44 44 00     ..DDDDD...DDDDD.
    3b92:	ff ff 44 44 44 44 44 00 00 ff 44 44 44 44 44 00     ..DDDDD...DDDDD.
    3ba2:	00 00 00 00 00 00 00 44 00 00 00 00 00 00 00 44     .......D.......D
    3bb2:	00 00 00 00 00 00 00 44 00 00 00 00 00 00 00 44     .......D.......D
    3bc2:	00 00 00 00 00 00 00 44 00 00 00 00 00 00 00 44     .......D.......D
    3bd2:	00 00 00 00 00 00 00 44 00 00 00 00 00 00 00 44     .......D.......D
    3be2:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    3bf2:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    3c02:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    3c12:	44 44 44 44 00 00 00 00 44 44 44 44 00 00 00 00     DDDD....DDDD....
    3c22:	00 00 00 00 00 00 00 80 00 00 00 00 00 00 00 80     ................
    3c32:	00 00 00 00 00 00 80 80 00 00 00 00 00 80 80 80     ................
    3c42:	00 00 00 00 00 80 80 80 00 00 00 00 80 80 80 80     ................
    3c52:	00 00 00 80 80 80 80 80 00 00 00 80 80 80 80 80     ................
    3c62:	80 80 80 80 80 80 80 80 80 80 80 80 00 80 80 80     ................
    3c72:	80 80 80 80 00 00 80 80 80 80 80 00 00 00 00 80     ................
    3c82:	80 80 00 00 00 00 00 80 80 80 00 00 00 00 00 00     ................
    3c92:	80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3ca2:	80 80 00 00 00 00 00 00 80 80 80 00 00 00 00 00     ................
    3cb2:	80 80 80 80 00 00 00 00 80 80 80 80 80 00 00 00     ................
    3cc2:	80 80 80 80 80 00 00 00 80 80 80 80 80 80 00 00     ................
    3cd2:	00 80 80 80 80 80 00 00 00 80 80 80 80 80 80 00     ................
    3ce2:	16 16 16 16 16 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3d26:	00 00 00 16 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3d62:	16 16 16 16 16 ff ff 00 00 00 00 00 00 ff ff ff     ................
    3d72:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00 ff     ................
	...
    3da2:	00 00 18 18 18 18 18 18 00 00 00 00 18 18 18 18     ................
    3db2:	ff ff ff ff ff ff ff ff ff ff ff ff ff 00 00 00     ................
	...
    3de2:	18 18 18 18 ff ff ff ff ff ff ff ff 00 00 00 ff     ................
    3df2:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff     ................
    3e02:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
    3e22:	ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    3e32:	ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    3e42:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3e52:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    3e62:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff 00     ................
    3e72:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00     ................
    3e82:	00 00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 00     ................
    3e92:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    3ea2:	ff ff ff 00 00 44 44 44 00 ff ff ff ff ff 00 00     .....DDD........
    3eb2:	00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    3ee2:	44 44 00 00 00 00 00 00 00 00 00 00 00 00 00 00     DD..............
    3ef2:	ff ff 00 00 00 00 00 ff ff ff ff ff ff ff ff ff     ................
	...
    3f22:	00 ff 44 44 44 44 44 00 ff ff 00 00 00 00 00 00     ..DDDDD.........
    3f32:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3f66:	00 00 00 44 00 00 00 00 00 00 00 00 00 00 00 00     ...D............
	...
    3fa2:	44 44 44 44 00 00 00 00 00 00 00 00 00 00 00 00     DDDD............
	...
    3fe2:	00 00 25 25 25 25 25 00 00 00 00 00 00 00 00 00     ..%%%%%.........
	...
    4022:	00 00 80 80 80 80 80 80 00 00 00 00 00 00 00 00     ................
	...
    4062:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4072:	00 ff ff 00 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    4082:	00 00 ff ff 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    4092:	00 00 00 00 ff ff 00 00 00 00 00 00 00 ff ff ff     ................
    40a2:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 00 00     ................
    40b2:	00 00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    40c2:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    40d2:	00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
    40e2:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    40f2:	fe fe fe 3f 3f fe fe fe fe fe 3f 3f 3f 3f fe fe     ...??.....????..
    4102:	fe fe 3f 3f 3f 3f fe fe fe fe fe 3f 3f fe fe fe     ..????.....??...
    4112:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4122:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4132:	fe fe fe 07 07 fe fe fe fe fe 07 07 07 07 fe fe     ................
    4142:	fe fe 07 07 07 07 fe fe fe fe fe 07 07 fe fe fe     ................
    4152:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4162:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4172:	fe fe fe b9 b9 fe fe fe fe fe b9 b9 b9 b9 fe fe     ................
    4182:	fe fe b9 b9 b9 b9 fe fe fe fe fe b9 b9 fe fe fe     ................
    4192:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41a2:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41b2:	fe fe fe c0 c0 fe fe fe fe fe c0 c0 c0 c0 fe fe     ................
    41c2:	fe fe c0 c0 c0 c0 fe fe fe fe fe c0 c0 fe fe fe     ................
    41d2:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41e2:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41f2:	fe fe fe c7 c7 fe fe fe fe fe c7 c7 c7 c7 fe fe     ................
    4202:	fe fe c7 c7 c7 c7 fe fe fe fe fe c7 c7 fe fe fe     ................
    4212:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4222:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4232:	fe fe fe 1b 1b fe fe fe fe fe 1b 1b 1b 1b fe fe     ................
    4242:	fe fe 1b 1b 1b 1b fe fe fe fe fe 1b 1b fe fe fe     ................
    4252:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4262:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    4272:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    4282:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    4292:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................

000042a2 <font>:
	...
    42e2:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    42f2:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
	...
    4312:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4322:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4332:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    4362:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4372:	ff ff ff ff ff ff ff ff 00 ff ff 00 00 ff ff 00     ................
    4382:	ff ff ff ff ff ff ff ff 00 ff ff 00 00 ff ff 00     ................
    4392:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    43a2:	00 00 00 ff ff 00 00 00 00 00 ff ff ff ff ff 00     ................
    43b2:	00 ff ff 00 00 00 00 00 00 00 ff ff ff ff 00 00     ................
    43c2:	00 00 00 00 00 ff ff 00 00 ff ff ff ff ff 00 00     ................
    43d2:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    43e2:	00 ff ff 00 00 00 ff 00 00 ff ff 00 00 ff ff 00     ................
    43f2:	00 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00 00     ................
    4402:	00 00 ff ff 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    4412:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4422:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4432:	00 00 ff ff ff ff 00 00 00 00 ff ff ff 00 00 00     ................
    4442:	00 ff ff 00 00 ff ff ff 00 ff ff 00 00 ff ff 00     ................
    4452:	00 00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00     ................
    4462:	00 00 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00     ................
    4472:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    44a6:	ff ff 00 00 00 00 00 ff ff 00 00 00 00 00 ff ff     ................
    44b6:	00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff ff     ................
    44c6:	00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
    44d6:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
    44e6:	00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
    44f6:	ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00     ................
    4506:	ff ff 00 00 00 00 00 ff ff 00 00 00 00 00 ff ff     ................
	...
    452a:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    453a:	ff ff ff ff ff ff ff ff 00 00 ff ff ff ff 00 00     ................
    454a:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    456a:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    457a:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    458a:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    45ca:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    45da:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    45fa:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    464a:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
	...
    466e:	00 00 ff ff 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    467e:	ff ff 00 00 00 00 00 ff ff 00 00 00 00 00 ff ff     ................
    468e:	00 00 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    469e:	00 00 00 00 00 00 ff ff ff ff 00 00 00 ff ff 00     ................
    46ae:	00 ff ff 00 00 ff ff 00 ff ff ff 00 00 ff ff ff     ................
    46be:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    46ce:	00 ff ff 00 00 00 ff ff ff ff 00 00 00 00 00 00     ................
    46de:	00 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff     ................
    46ee:	ff 00 00 00 00 00 ff ff ff 00 00 00 00 00 00 ff     ................
    46fe:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff     ................
    470e:	ff 00 00 00 00 ff ff ff ff ff ff 00 00 00 00 00     ................
    471e:	00 00 00 00 00 00 ff ff ff ff 00 00 00 ff ff 00     ................
    472e:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    473e:	ff ff 00 00 00 00 ff ff 00 00 00 00 00 ff ff 00     ................
    474e:	00 00 00 00 00 ff ff ff ff ff ff 00 00 00 00 00     ................
    475e:	00 00 00 00 00 00 ff ff ff ff 00 00 00 ff ff 00     ................
    476e:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 ff     ................
    477e:	ff ff 00 00 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    478e:	00 ff ff 00 00 00 ff ff ff ff 00 00 00 00 00 00     ................
	...
    47a6:	00 ff ff 00 00 00 00 00 ff ff ff 00 00 00 00 ff     ................
    47b6:	ff ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff ff     ................
    47c6:	ff ff ff ff 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    47d6:	00 ff ff 00 00 00 00 00 00 00 00 00 00 ff ff ff     ................
    47e6:	ff ff ff 00 00 ff ff 00 00 00 00 00 00 ff ff ff     ................
    47f6:	ff ff 00 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4806:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 00 ff ff     ................
    4816:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
    4826:	ff ff 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4836:	00 00 00 00 00 ff ff ff ff ff 00 00 00 ff ff 00     ................
    4846:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 00 ff ff     ................
    4856:	ff ff 00 00 00 00 00 00 00 00 00 00 00 ff ff ff     ................
    4866:	ff ff ff 00 00 ff ff 00 00 ff ff 00 00 00 00 00     ................
    4876:	ff ff 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff     ................
    4886:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff     ................
    4896:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
    48a6:	ff ff 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    48b6:	00 ff ff 00 00 00 ff ff ff ff 00 00 00 ff ff 00     ................
    48c6:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 00 ff ff     ................
    48d6:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 ff ff     ................
    48e6:	ff ff 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    48f6:	00 ff ff 00 00 00 ff ff ff ff ff 00 00 00 00 00     ................
    4906:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 00 ff ff     ................
    4916:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4932:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    494a:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4972:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    498a:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    499a:	00 00 ff ff 00 00 00 00 00 00 00 00 ff ff ff 00     ................
    49aa:	00 00 00 ff ff 00 00 00 00 00 ff ff 00 00 00 00     ................
    49ba:	00 ff ff 00 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    49ca:	00 00 00 ff ff 00 00 00 00 00 00 00 ff ff ff 00     ................
	...
    49f2:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4a02:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
    4a22:	00 ff ff ff 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    4a32:	00 00 00 00 ff ff 00 00 00 00 00 00 00 ff ff 00     ................
    4a42:	00 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00 00     ................
    4a52:	00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4a62:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4a72:	00 00 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00     ................
    4a82:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4a92:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4aa2:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4ab2:	00 ff ff 00 ff ff ff 00 00 ff ff 00 ff ff ff 00     ................
    4ac2:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    4ad2:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4ae2:	00 00 00 ff ff 00 00 00 00 00 ff ff ff ff 00 00     ................
    4af2:	00 ff ff 00 00 ff ff 00 00 ff ff ff ff ff ff 00     ................
    4b02:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4b12:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4b22:	00 ff ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4b32:	00 ff ff 00 00 ff ff 00 00 ff ff ff ff ff 00 00     ................
    4b42:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4b52:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4b62:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4b72:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4b82:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 ff ff 00     ................
    4b92:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4ba2:	00 ff ff ff ff 00 00 00 00 ff ff 00 ff ff 00 00     ................
    4bb2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4bc2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 ff ff 00 00     ................
    4bd2:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4be2:	00 ff ff ff ff ff ff 00 00 ff ff 00 00 00 00 00     ................
    4bf2:	00 ff ff 00 00 00 00 00 00 ff ff ff ff 00 00 00     ................
    4c02:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4c12:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4c22:	00 ff ff ff ff ff ff 00 00 ff ff 00 00 00 00 00     ................
    4c32:	00 ff ff 00 00 00 00 00 00 ff ff ff ff 00 00 00     ................
    4c42:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4c52:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4c62:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4c72:	00 ff ff 00 00 00 00 00 00 ff ff 00 ff ff ff 00     ................
    4c82:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4c92:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4ca2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4cb2:	00 ff ff 00 00 ff ff 00 00 ff ff ff ff ff ff 00     ................
    4cc2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4cd2:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4ce2:	00 00 ff ff ff ff 00 00 00 00 00 ff ff 00 00 00     ................
    4cf2:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    4d02:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    4d12:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4d22:	00 00 00 ff ff ff ff 00 00 00 00 00 ff ff 00 00     ................
    4d32:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    4d42:	00 00 00 00 ff ff 00 00 00 ff ff 00 ff ff 00 00     ................
    4d52:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4d62:	00 ff ff 00 00 ff ff 00 00 ff ff 00 ff ff 00 00     ................
    4d72:	00 ff ff ff ff 00 00 00 00 ff ff ff 00 00 00 00     ................
    4d82:	00 ff ff ff ff 00 00 00 00 ff ff 00 ff ff 00 00     ................
    4d92:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4da2:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4db2:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4dc2:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4dd2:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4de2:	00 ff ff 00 00 00 ff ff 00 ff ff ff 00 ff ff ff     ................
    4df2:	00 ff ff ff ff ff ff ff 00 ff ff 00 ff 00 ff ff     ................
    4e02:	00 ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff     ................
    4e12:	00 ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
    4e22:	00 ff ff 00 00 ff ff 00 00 ff ff ff 00 ff ff 00     ................
    4e32:	00 ff ff ff ff ff ff 00 00 ff ff ff ff ff ff 00     ................
    4e42:	00 ff ff 00 ff ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4e52:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4e62:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4e72:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4e82:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4e92:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4ea2:	00 ff ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4eb2:	00 ff ff 00 00 ff ff 00 00 ff ff ff ff ff 00 00     ................
    4ec2:	00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    4ed2:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4ee2:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4ef2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4f02:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    4f12:	00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    4f22:	00 ff ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4f32:	00 ff ff 00 00 ff ff 00 00 ff ff ff ff ff 00 00     ................
    4f42:	00 ff ff ff ff 00 00 00 00 ff ff 00 ff ff 00 00     ................
    4f52:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    4f62:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    4f72:	00 ff ff 00 00 00 00 00 00 00 ff ff ff ff 00 00     ................
    4f82:	00 00 00 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4f92:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    4fa2:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    4fb2:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    4fc2:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    4fd2:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    4fe2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    4ff2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    5002:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    5012:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    5022:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    5032:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    5042:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    5052:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5062:	00 ff ff 00 00 00 ff ff 00 ff ff 00 00 00 ff ff     ................
    5072:	00 ff ff 00 00 00 ff ff 00 ff ff 00 ff 00 ff ff     ................
    5082:	00 ff ff ff ff ff ff ff 00 ff ff ff 00 ff ff ff     ................
    5092:	00 ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
    50a2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    50b2:	00 00 ff ff ff ff 00 00 00 00 00 ff ff 00 00 00     ................
    50c2:	00 00 ff ff ff ff 00 00 00 ff ff 00 00 ff ff 00     ................
    50d2:	00 ff ff 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
    50e2:	00 ff ff 00 00 ff ff 00 00 ff ff 00 00 ff ff 00     ................
    50f2:	00 ff ff 00 00 ff ff 00 00 00 ff ff ff ff 00 00     ................
    5102:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    5112:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    5122:	00 ff ff ff ff ff ff 00 00 00 00 00 00 ff ff 00     ................
    5132:	00 00 00 00 ff ff 00 00 00 00 00 ff ff 00 00 00     ................
    5142:	00 00 ff ff 00 00 00 00 00 ff ff 00 00 00 00 00     ................
    5152:	00 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
    5162:	00 00 ff ff ff ff 00 00 00 00 ff ff 00 00 00 00     ................
    5172:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    5182:	00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    5192:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    51a2:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff ff     ................
    51b2:	00 00 00 00 00 ff ff 00 00 ff ff 00 ff ff 00 00     ................
    51c2:	00 ff ff ff ff 00 00 00 00 ff ff ff 00 00 00 00     ................
    51d2:	00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    51e2:	00 00 ff ff ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    51f2:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    5202:	00 00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00     ................
    5212:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    522a:	00 00 00 ff ff 00 00 00 00 00 ff ff ff ff 00 00     ................
    523a:	00 ff ff ff ff ff ff 00 00 00 00 ff ff 00 00 00     ................
    524a:	00 00 00 ff ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    525a:	00 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    526a:	00 00 00 00 ff 00 00 00 00 00 00 00 ff ff 00 00     ................
    527a:	00 ff ff ff ff ff ff 00 00 ff ff ff ff ff ff 00     ................
    528a:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 00 00     ................
	...
    52a2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    52b2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    52c2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................
    52d2:	c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7 c7     ................

000052e2 <tiles_screen>:
    52e2:	1e 1c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    535e:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    536e:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 01 02     ................
    537e:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 01 02     ................
    538e:	02 02 02 02 02 02 02 01 00 00 00 00 01 02 02 02     ................
    539e:	02 02 02 02 02 02 02 02 02 02 02 02 01 02 02 02     ................
    53ae:	02 02 02 02 02 01 00 00 00 00 01 02 02 02 02 02     ................
    53be:	02 02 02 02 02 02 02 02 02 02 01 02 02 02 02 02     ................
    53ce:	02 02 02 01 00 00 00 00 01 02 02 02 02 02 02 02     ................
    53de:	02 02 02 02 02 02 02 02 01 02 02 02 02 02 02 02     ................
    53ee:	02 01 00 00 00 00 01 02 02 02 02 02 02 02 02 02     ................
    53fe:	02 02 02 02 02 02 01 02 02 02 02 02 02 02 02 01     ................
    540e:	00 00 00 00 01 02 02 02 02 02 02 02 02 02 02 02     ................
    541e:	02 02 02 02 01 02 02 02 02 02 02 02 02 01 00 00     ................
    542e:	00 00 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    543e:	02 02 01 02 02 02 02 02 02 02 02 01 00 00 00 00     ................
    544e:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    545e:	01 02 02 02 02 02 02 02 02 01 00 00 00 00 01 02     ................
    546e:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 01 01     ................
    547e:	01 01 01 01 01 01 01 01 00 00 00 00 01 02 02 02     ................
    548e:	02 02 02 02 02 02 02 02 02 02 02 02 01 00 00 00     ................
    549e:	00 00 00 00 00 01 00 00 00 00 01 02 02 02 02 02     ................
    54ae:	02 02 02 02 02 02 02 02 02 02 01 00 00 00 00 00     ................
    54be:	00 00 00 01 00 00 00 00 01 02 02 02 02 02 02 02     ................
    54ce:	02 02 02 02 02 02 02 02 01 00 00 00 00 00 00 00     ................
    54de:	00 01 00 00 00 00 01 02 02 02 02 02 02 02 02 02     ................
    54ee:	02 02 02 02 02 02 01 00 00 00 00 00 00 00 00 01     ................
    54fe:	00 00 00 00 01 02 02 02 02 02 02 02 02 02 02 02     ................
    550e:	02 02 02 02 01 00 00 00 00 00 00 00 00 01 00 00     ................
    551e:	00 00 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    552e:	02 02 01 00 00 00 00 00 00 00 00 01 00 00 00 00     ................
    553e:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    554e:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 01 00     ................
	...
    5572:	00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
    5592:	00 01 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
    55ae:	00 00 00 01 00 00 00 00 01 01 01 01 01 01 01 01     ................
    55be:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    55ce:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000562c <logo_logo_map>:
    562c:	11 07 00 00 00 00 00 00 50 51 00 00 00 00 00 00     ........PQ......
    563c:	00 00 00 00 52 53 54 55 56 57 58 59 5a 5b 00 00     ....RSTUVWXYZ[..
    564c:	5c 00 00 00 5d 5e 5f 60 61 62 63 64 65 66 67 68     \...]^_`abcdefgh
    565c:	69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78     ijklmnopqrstuvwx
    566c:	79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88     yz{|}~..........
    567c:	89 8a 8b 7b 8c 8d 8e 8f 00 90 91 92 93 94 95 96     ...{............
    568c:	97 98 99 9a 9b 9c 00 9c 00 00 00 00 00 00 9d 9e     ................
	...

000056a5 <levels>:
    56a5:	57 41 54 45 52 00 00 00 00 00 00 00 00 00 00 00     WATER...........
	...
    56bd:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    56cd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    56dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    56ed:	02 01 01 01 01 01 01 01 01 01 01 01 02 02 02 02     ................
    56fd:	01 02 02 01 02 02 02 02 02 02 01 02 02 02 02 01     ................
    570d:	02 09 01 02 02 02 02 02 02 01 02 02 02 02 01 02     ................
    571d:	01 01 02 02 02 02 02 02 01 02 02 02 02 01 02 01     ................
    572d:	02 02 01 02 01 01 01 01 02 02 02 02 01 02 02 02     ................
    573d:	02 01 02 30 02 02 01 02 02 02 02 01 01 01 02 01     ...0............
    574d:	02 02 02 02 02 01 02 02 02 02 01 05 02 02 02 02     ................
    575d:	01 02 02 02 01 02 02 02 02 01 01 01 01 01 01 01     ................
    576d:	01 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    577d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    578d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    579d:	02 02 02 05 30 09 02 02 02 02 02 02 02 02 02 02     ....0...........
    57ad:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    57bd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    57cd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    57dd:	02 02 02 4d 45 54 48 41 4e 45 00 00 00 00 00 00     ...METHANE......
	...
    57f9:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5809:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5819:	01 01 01 01 01 01 01 01 01 01 01 01 01 02 02 01     ................
    5829:	02 02 02 01 02 02 01 02 02 02 02 01 02 02 01 02     ................
    5839:	01 02 02 01 09 01 02 02 02 02 01 02 02 01 02 02     ................
    5849:	01 02 02 02 01 0e 02 01 02 01 02 02 01 02 02 02     ................
    5859:	02 02 02 01 01 01 01 02 01 02 02 01 02 02 02 02     ................
    5869:	02 02 02 01 05 01 02 01 02 02 01 02 07 02 02 01     ................
    5879:	02 02 01 02 02 02 01 02 02 01 02 01 01 01 01 01     ................
    5889:	02 02 02 02 01 01 02 02 01 02 03 02 01 02 02 01     ................
    5899:	02 02 02 01 02 02 02 01 01 01 01 01 02 02 01 02     ................
    58a9:	02 02 01 02 02 02 02 02 02 02 02 02 02 01 01 01     ................
    58b9:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    58c9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    58d9:	02 02 02 07 02 02 02 02 02 02 05 0e 09 02 02 02     ................
    58e9:	02 02 02 03 02 02 02 02 02 02 02 02 02 02 02 02     ................
    58f9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5909:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5919:	02 02 4d 45 54 48 41 4e 4f 4c 00 00 00 00 00 00     ..METHANOL......
	...
    5935:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5945:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5955:	02 02 02 02 02 02 02 02 01 01 01 01 02 02 01 01     ................
    5965:	01 01 02 02 02 02 02 01 02 02 01 02 02 01 02 02     ................
    5975:	01 02 02 02 02 02 01 02 02 01 02 02 01 02 02 01     ................
    5985:	01 02 02 02 01 01 02 30 01 02 02 01 02 02 03 01     .......0........
    5995:	01 01 01 01 02 02 02 01 02 02 01 02 01 02 01 02     ................
    59a5:	0e 01 02 02 02 02 01 02 02 01 02 02 02 02 02 02     ................
    59b5:	01 02 09 02 02 01 02 02 01 02 02 01 02 01 02 02     ................
    59c5:	02 01 02 02 01 02 02 01 07 02 02 02 02 02 02 02     ................
    59d5:	02 02 02 01 02 02 01 02 02 02 01 02 01 02 02 02     ................
    59e5:	01 02 01 02 02 01 01 01 01 01 01 05 02 02 02 01     ................
    59f5:	02 01 02 02 02 02 02 02 02 01 01 01 01 01 01 01     ................
    5a05:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a15:	02 02 07 02 02 02 02 02 02 05 0e 30 09 02 02 02     ...........0....
    5a25:	02 02 03 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a35:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a45:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a55:	02 45 54 48 59 4c 45 4e 45 00 00 00 00 00 00 00     .ETHYLENE.......
	...
    5a6d:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a7d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5a8d:	02 02 02 01 01 01 02 02 02 02 02 01 01 01 02 02     ................
    5a9d:	02 02 01 02 01 02 02 02 02 02 01 02 01 02 02 02     ................
    5aad:	02 01 04 01 01 01 01 01 01 01 02 01 02 02 02 02     ................
    5abd:	01 02 02 02 02 02 02 01 02 02 01 02 02 02 02 01     ................
    5acd:	01 02 02 14 02 01 02 02 02 01 02 02 02 02 01 02     ................
    5add:	01 02 02 02 02 08 01 23 01 02 02 02 02 01 02 02     .......#........
    5aed:	02 01 02 02 02 02 01 01 02 02 02 02 01 02 02 01     ................
    5afd:	02 02 02 02 0a 06 01 02 02 02 02 01 02 01 01 01     ................
    5b0d:	01 01 01 01 02 01 02 02 02 02 01 02 01 02 02 02     ................
    5b1d:	02 02 01 02 01 02 02 02 02 01 01 01 02 02 02 02     ................
    5b2d:	02 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5b3d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5b4d:	02 02 02 02 06 02 02 08 02 02 02 02 02 23 14 02     .............#..
    5b5d:	02 02 02 02 04 02 02 0a 02 02 02 02 02 02 02 02     ................
    5b6d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5b7d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5b8d:	02 02 02 02 50 52 4f 50 45 4e 45 00 00 00 00 00     ....PROPENE.....
	...
    5ba9:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5bb9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5bc9:	02 02 01 01 01 01 01 01 01 01 01 02 02 02 02 02     ................
    5bd9:	02 01 08 01 02 01 02 01 02 01 02 02 02 02 02 02     ................
    5be9:	01 02 01 02 01 02 01 02 01 01 01 02 02 02 01 01     ................
    5bf9:	03 02 14 01 07 01 02 01 02 01 02 02 02 01 07 02     ................
    5c09:	05 02 02 02 01 13 01 02 01 02 02 02 01 02 01 02     ................
    5c19:	02 02 02 02 02 01 02 01 02 02 02 01 02 01 0e 01     ................
    5c29:	02 02 02 02 02 02 01 02 02 02 01 02 01 02 01 02     ................
    5c39:	01 02 02 02 01 01 02 02 02 01 01 01 02 01 0a 01     ................
    5c49:	02 01 02 01 02 02 02 02 02 02 01 02 01 02 01 02     ................
    5c59:	01 02 01 02 02 02 02 02 02 01 01 01 01 01 01 01     ................
    5c69:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5c79:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5c89:	02 02 02 02 07 07 02 08 02 02 02 05 0e 13 14 02     ................
    5c99:	02 02 02 02 03 02 02 0a 02 02 02 02 02 02 02 02     ................
    5ca9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5cb9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5cc9:	02 02 02 45 54 48 41 4e 4f 4c 00 00 00 00 00 00     ...ETHANOL......
	...
    5ce5:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5cf5:	02 02 02 02 02 02 02 01 01 01 01 01 02 02 02 02     ................
    5d05:	02 02 02 02 02 02 01 03 0e 02 01 02 02 02 02 02     ................
    5d15:	02 01 01 01 01 01 02 01 02 01 02 02 02 02 02 02     ................
    5d25:	01 02 02 02 02 02 02 03 01 02 02 02 02 02 02 01     ................
    5d35:	01 01 07 02 02 02 01 01 02 02 02 02 02 02 02 02     ................
    5d45:	01 02 01 05 01 02 01 01 01 02 02 02 02 02 02 01     ................
    5d55:	01 07 02 02 02 01 02 01 02 02 02 01 01 01 01 02     ................
    5d65:	0e 02 02 02 02 02 01 02 02 02 01 02 30 02 02 02     ............0...
    5d75:	02 01 02 02 02 01 02 02 02 01 01 01 01 01 02 01     ................
    5d85:	02 02 01 02 01 02 02 02 02 02 02 01 02 02 02 02     ................
    5d95:	01 02 09 01 02 02 02 02 02 02 01 01 01 01 01 01     ................
    5da5:	01 01 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5db5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5dc5:	02 02 02 07 07 02 02 02 02 02 05 0e 0e 30 09 02     .............0..
    5dd5:	02 02 02 03 03 02 02 02 02 02 02 02 02 02 02 02     ................
    5de5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5df5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5e05:	02 02 49 53 4f 50 52 4f 50 41 4e 4f 4c 00 00 00     ..ISOPROPANOL...
	...
    5e21:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5e31:	02 02 02 01 01 01 02 01 01 01 02 02 02 02 02 02     ................
    5e41:	02 02 01 05 01 02 01 02 01 02 02 02 02 02 02 02     ................
    5e51:	02 01 03 02 01 02 02 01 02 02 02 02 02 01 01 01     ................
    5e61:	01 02 02 02 02 07 01 01 01 01 02 02 01 02 02 02     ................
    5e71:	02 02 02 02 02 02 02 02 01 02 02 01 01 02 02 02     ................
    5e81:	02 02 02 02 02 02 01 01 02 02 02 01 01 02 02 02     ................
    5e91:	01 02 02 02 01 01 02 02 02 01 01 02 0e 02 0e 02     ................
    5ea1:	02 02 02 28 01 01 02 02 01 02 07 02 02 02 02 0e     ...(............
    5eb1:	02 02 02 02 01 02 02 01 01 01 01 07 02 02 02 03     ................
    5ec1:	01 01 01 01 02 02 02 02 02 01 09 02 01 02 03 01     ................
    5ed1:	02 02 02 02 02 02 02 02 01 02 01 01 01 02 01 02     ................
    5ee1:	02 02 02 02 02 02 02 01 01 01 02 01 01 01 02 02     ................
    5ef1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5f01:	02 02 07 07 07 02 02 02 02 05 0e 0e 0e 09 02 02     ................
    5f11:	02 02 03 28 03 02 02 02 02 02 02 03 02 02 02 02     ...(............
    5f21:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5f31:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5f41:	02 45 54 48 41 4e 41 4c 00 00 00 00 00 00 00 00     .ETHANAL........
	...
    5f59:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5f69:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    5f79:	02 02 02 01 01 01 01 01 01 01 01 01 01 01 02 02     ................
    5f89:	02 02 01 02 02 02 02 02 02 02 02 02 01 02 02 02     ................
    5f99:	02 01 02 01 01 02 02 02 01 01 02 01 02 02 02 02     ................
    5fa9:	01 07 02 02 02 02 02 0e 02 02 01 02 02 02 02 01     ................
    5fb9:	02 01 01 01 02 01 01 01 02 01 02 02 02 02 01 03     ................
    5fc9:	02 02 02 05 02 02 02 02 01 02 02 02 02 01 13 01     ................
    5fd9:	01 01 07 01 01 01 02 01 02 02 02 02 01 02 02 02     ................
    5fe9:	02 02 02 02 02 02 01 02 02 02 02 01 02 01 01 02     ................
    5ff9:	02 02 01 01 02 01 02 02 02 02 01 02 02 31 02 02     .............1..
    6009:	02 02 02 02 01 02 02 02 02 01 01 01 01 01 01 01     ................
    6019:	01 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6029:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6039:	02 02 02 02 02 07 07 02 02 02 02 02 05 0e 13 31     ...............1
    6049:	02 02 02 02 02 03 02 02 02 02 02 02 02 02 02 02     ................
    6059:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6069:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6079:	02 02 02 02 41 43 45 54 4f 4e 45 00 00 00 00 00     ....ACETONE.....
	...
    6095:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    60a5:	02 02 01 01 01 01 01 01 01 01 01 01 01 01 01 02     ................
    60b5:	02 01 01 01 01 02 02 01 01 02 02 02 02 01 02 02     ................
    60c5:	01 01 02 02 02 02 02 01 02 01 02 02 01 02 02 01     ................
    60d5:	02 02 02 02 02 26 01 02 01 01 01 01 02 02 01 02     .....&..........
    60e5:	01 0e 01 02 03 02 1d 02 02 07 01 02 02 01 02 01     ................
    60f5:	03 01 01 01 02 02 05 02 02 01 02 02 01 01 01 02     ................
    6105:	02 07 02 02 02 02 01 01 01 02 02 01 02 02 02 02     ................
    6115:	02 01 01 01 02 01 02 01 02 02 01 02 02 02 02 02     ................
    6125:	0e 02 01 02 01 02 01 02 02 01 01 01 01 02 01 02     ................
    6135:	02 02 02 02 09 01 02 02 01 02 02 01 02 01 02 02     ................
    6145:	02 02 02 01 01 02 02 01 02 02 02 02 01 01 02 02     ................
    6155:	01 01 01 01 02 02 01 01 01 01 01 01 01 01 01 01     ................
    6165:	01 01 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6175:	02 02 02 02 07 02 07 02 02 02 02 05 0e 1d 0e 09     ................
    6185:	02 02 02 02 03 26 03 02 02 02 02 02 02 02 02 02     .....&..........
    6195:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    61a5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    61b5:	02 02 02 46 4f 52 4d 49 43 20 41 43 49 44 00 00     ...FORMIC ACID..
	...
    61d1:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    61e1:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 02 02     ................
    61f1:	01 02 02 02 02 02 02 02 02 02 02 02 01 02 02 01     ................
    6201:	01 01 02 02 01 01 01 02 02 01 01 01 02 02 01 02     ................
    6211:	02 02 02 02 01 02 02 02 02 02 01 02 02 01 02 01     ................
    6221:	01 01 02 02 02 01 01 01 02 01 02 02 01 02 01 2e     ................
    6231:	02 02 01 02 02 02 01 02 01 02 02 01 05 30 1c 09     .............0..
    6241:	01 01 01 02 02 02 02 01 02 02 01 02 01 02 02 02     ................
    6251:	01 02 02 02 01 02 01 02 02 01 02 01 01 01 02 02     ................
    6261:	02 01 01 01 02 01 02 02 01 02 02 02 02 02 01 02     ................
    6271:	02 02 02 02 01 02 02 01 01 01 02 02 01 01 01 02     ................
    6281:	02 01 01 01 02 02 01 02 02 02 02 02 02 02 02 02     ................
    6291:	02 02 01 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    62a1:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    62b1:	02 02 02 2e 02 02 02 02 02 02 05 1c 30 09 02 02     ............0...
    62c1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    62d1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    62e1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    62f1:	02 02 41 43 45 54 49 43 20 41 43 49 44 00 00 00     ..ACETIC ACID...
	...
    630d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    631d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    632d:	01 01 01 01 01 01 01 01 01 01 01 02 02 02 02 01     ................
    633d:	02 02 02 01 02 02 02 01 02 01 02 02 02 02 01 02     ................
    634d:	30 02 02 02 02 02 02 02 01 02 02 02 02 01 02 01     0...............
    635d:	02 02 09 01 02 05 02 01 02 02 02 02 01 03 02 0e     ................
    636d:	02 02 02 02 02 02 01 02 02 02 02 01 02 02 02 01     ................
    637d:	02 02 02 01 02 01 02 02 02 02 01 02 02 02 02 02     ................
    638d:	02 02 02 02 01 02 02 02 02 01 02 01 02 1c 02 01     ................
    639d:	02 02 02 01 02 02 02 02 01 2e 02 02 02 02 02 07     ................
    63ad:	02 02 01 02 02 02 02 01 02 02 02 01 02 02 02 01     ................
    63bd:	02 01 02 02 02 02 01 01 01 01 01 01 01 01 01 01     ................
    63cd:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    63dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    63ed:	02 02 07 2e 02 02 02 02 02 05 0e 1c 30 09 02 02     ............0...
    63fd:	02 02 03 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    640d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    641d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    642d:	02 54 52 41 4e 53 2d 42 55 54 45 4e 45 00 00 00     .TRANS-BUTENE...
	...
    6445:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6455:	02 02 02 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    6465:	02 02 01 02 02 02 02 02 02 02 02 02 02 02 01 02     ................
    6475:	02 01 02 02 02 01 02 02 14 01 02 02 02 01 02 02     ................
    6485:	01 23 02 01 02 08 02 02 02 01 02 02 01 02 02 01     .#..............
    6495:	02 01 02 01 01 02 01 01 02 01 02 01 02 02 01 02     ................
    64a5:	02 04 02 02 02 02 02 02 02 02 01 02 02 01 01 01     ................
    64b5:	0a 01 01 02 01 01 02 01 01 01 02 02 01 02 02 02     ................
    64c5:	02 02 02 02 02 02 02 02 01 02 02 01 02 01 02 01     ................
    64d5:	01 06 01 01 02 01 02 01 02 02 01 02 02 01 15 06     ................
    64e5:	02 02 02 01 06 02 01 02 02 01 02 02 02 01 02 02     ................
    64f5:	0a 01 02 02 02 01 02 02 01 15 02 02 0a 02 02 02     ................
    6505:	02 02 02 02 01 02 02 01 01 01 01 01 01 01 01 01     ................
    6515:	01 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6525:	02 02 02 02 02 02 02 06 02 08 02 02 02 06 02 02     ................
    6535:	15 02 02 02 06 02 23 14 02 0a 02 02 02 15 02 02     ......#.........
    6545:	0a 02 02 02 04 02 0a 02 02 02 02 02 02 02 02 02     ................
    6555:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6565:	02 02 02 02 43 49 53 2d 42 55 54 45 4e 45 00 00     ....CIS-BUTENE..
	...
    6581:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6591:	02 02 01 01 01 01 01 01 01 01 01 01 01 01 01 02     ................
    65a1:	02 01 02 01 02 02 01 01 02 02 02 01 02 01 02 02     ................
    65b1:	01 01 02 02 01 02 02 02 02 02 01 02 01 02 02 01     ................
    65c1:	01 02 02 02 02 01 02 02 01 02 02 01 02 02 01 02     ................
    65d1:	0a 02 02 06 01 02 04 02 02 08 01 02 02 01 01 01     ................
    65e1:	02 02 02 02 01 02 01 02 02 01 02 02 01 02 02 01     ................
    65f1:	02 02 02 02 02 02 01 01 01 02 02 01 02 23 02 02     .............#..
    6601:	15 02 01 14 02 02 15 01 02 02 01 02 01 01 02 01     ................
    6611:	01 02 02 02 02 02 01 02 02 01 01 02 02 02 02 02     ................
    6621:	02 01 02 01 02 01 02 02 01 02 08 01 01 0a 02 01     ................
    6631:	04 02 01 06 01 02 02 01 02 01 02 02 02 02 01 02     ................
    6641:	01 02 02 01 02 02 01 01 01 01 01 01 01 01 01 01     ................
    6651:	01 01 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6661:	02 02 02 02 06 02 02 08 02 02 02 06 02 23 14 02     .............#..
    6671:	08 02 02 02 15 02 02 15 02 02 02 04 02 0a 04 02     ................
    6681:	0a 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6691:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    66a1:	02 02 02 44 49 4d 45 54 48 59 4c 20 45 54 48 45     ...DIMETHYL ETHE
    66b1:	52 00 00 00 00 00 00 00 00 00 00 00 00 02 02 02     R...............
    66c1:	02 02 02 02 02 02 02 02 02 02 02 02 02 01 01 01     ................
    66d1:	01 01 01 01 01 01 01 01 01 01 02 02 01 02 02 02     ................
    66e1:	0e 02 01 30 02 02 02 05 01 02 02 01 02 01 01 01     ...0............
    66f1:	02 01 02 01 01 01 02 01 02 02 01 02 01 02 02 03     ................
    6701:	01 02 02 02 01 02 01 02 02 01 02 01 02 02 02 01     ................
    6711:	02 02 02 01 02 01 02 02 01 02 02 02 02 02 01 02     ................
    6721:	02 02 02 02 01 02 02 01 01 01 01 07 02 02 02 02     ................
    6731:	01 01 01 01 02 02 01 02 02 02 02 02 01 02 02 02     ................
    6741:	02 02 01 02 02 01 02 01 02 02 02 01 02 02 02 01     ................
    6751:	02 01 02 02 01 02 01 02 02 09 01 02 02 03 01 02     ................
    6761:	01 02 02 01 02 01 01 01 02 01 02 01 01 01 07 01     ................
    6771:	02 02 01 02 02 02 02 0e 01 02 02 02 02 02 01 02     ................
    6781:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 02 02     ................
    6791:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 07     ................
    67a1:	02 07 02 02 02 02 05 0e 30 0e 09 02 02 02 02 03     ........0.......
    67b1:	02 03 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    67c1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    67d1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 42 55     ..............BU
    67e1:	54 41 4e 4f 4c 00 00 00 00 00 00 00 00 00 00 00     TANOL...........
	...
    67f9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6809:	01 01 01 01 01 01 01 01 01 01 01 01 01 02 02 01     ................
    6819:	02 02 03 07 02 02 02 02 02 0e 02 01 02 02 01 02     ................
    6829:	01 02 02 01 01 01 01 02 01 01 01 02 02 01 01 01     ................
    6839:	07 02 02 02 01 02 02 02 02 01 02 02 01 02 09 02     ................
    6849:	02 01 02 02 02 02 02 03 01 02 02 01 02 01 01 02     ................
    6859:	01 02 01 01 02 03 02 01 02 02 01 02 01 02 02 01     ................
    6869:	02 02 01 02 01 01 01 02 02 01 01 01 02 0e 01 02     ................
    6879:	28 02 0e 01 02 01 02 02 01 05 02 02 02 02 02 02     (...............
    6889:	02 02 02 02 01 02 02 01 03 02 02 02 01 02 02 07     ................
    6899:	02 02 02 01 02 02 01 02 02 01 01 01 07 01 01 02     ................
    68a9:	01 02 01 02 02 01 02 02 02 02 01 02 0e 02 02 01     ................
    68b9:	02 01 02 02 01 01 01 01 01 01 01 01 01 01 01 01     ................
    68c9:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    68d9:	02 02 07 07 07 07 02 02 02 05 0e 0e 0e 0e 09 02     ................
    68e9:	02 02 03 03 03 28 02 02 02 02 02 02 02 03 02 02     .....(..........
    68f9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6909:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6919:	02 32 2d 4d 45 54 48 59 4c 2d 32 2d 50 52 4f 50     .2-METHYL-2-PROP
    6929:	41 4e 4f 4c 00 00 00 00 00 00 00 02 02 02 02 02     ANOL............
    6939:	02 02 02 02 02 02 02 02 02 02 02 01 01 01 01 01     ................
    6949:	02 02 02 01 01 01 01 01 02 02 01 09 02 0b 01 02     ................
    6959:	02 02 01 03 02 06 01 02 02 01 08 01 02 01 01 01     ................
    6969:	01 01 02 01 02 01 02 02 01 03 02 02 02 02 01 02     ................
    6979:	02 02 02 02 01 02 02 01 01 01 02 01 02 02 07 01     ................
    6989:	02 01 01 01 02 02 02 02 01 02 02 02 02 02 03 0e     ................
    6999:	01 02 02 02 02 02 02 01 01 02 02 02 02 02 01 01     ................
    69a9:	02 02 02 02 02 02 01 0e 02 02 02 02 02 07 01 02     ................
    69b9:	02 02 02 01 01 01 02 01 02 02 02 01 02 01 01 01     ................
    69c9:	02 02 01 02 02 02 02 02 01 02 07 02 02 05 01 02     ................
    69d9:	02 01 02 01 28 01 01 01 01 01 02 01 02 01 02 02     ....(...........
    69e9:	01 0e 02 02 01 02 02 02 01 02 02 02 01 02 02 01     ................
    69f9:	01 01 01 01 02 02 02 01 01 01 01 01 02 02 02 02     ................
    6a09:	02 02 02 02 02 02 02 02 02 02 02 02 02 06 07 08     ................
    6a19:	02 02 02 02 02 07 0b 07 02 02 02 02 05 0e 0e 0e     ................
    6a29:	09 02 02 02 02 03 28 03 02 02 02 02 02 02 03 02     ......(.........
    6a39:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6a49:	02 02 02 02 02 02 02 02 02 02 02 02 47 4c 59 43     ............GLYC
    6a59:	45 52 49 4e 00 00 00 00 00 00 00 00 00 00 00 00     ERIN............
    6a69:	00 00 00 00 00 00 02 02 02 02 02 02 02 02 02 02     ................
    6a79:	02 02 02 02 02 02 02 01 01 01 01 01 01 01 01 01     ................
    6a89:	01 01 02 02 02 02 01 02 01 02 03 01 0e 02 01 02     ................
    6a99:	01 02 02 02 02 01 02 30 01 02 01 02 01 02 02 01     .......0........
    6aa9:	02 02 02 02 01 01 02 02 0e 02 02 02 02 01 01 02     ................
    6ab9:	02 02 02 01 02 01 02 02 02 02 02 01 02 01 02 02     ................
    6ac9:	02 02 01 02 09 02 02 02 02 05 02 02 01 02 02 02     ................
    6ad9:	02 01 01 01 01 30 02 02 01 01 01 01 02 02 02 02     .....0..........
    6ae9:	01 02 02 02 02 05 30 02 05 02 01 02 02 02 02 01     ......0.........
    6af9:	02 01 02 02 02 02 0e 01 02 01 02 02 02 02 01 01     ................
    6b09:	02 02 02 02 02 09 02 01 01 02 02 02 02 01 02 02     ................
    6b19:	01 02 01 02 01 02 07 01 02 02 02 02 01 02 01 02     ................
    6b29:	09 01 02 02 01 02 01 02 02 02 02 01 01 01 01 01     ................
    6b39:	01 01 01 01 01 01 02 02 02 02 02 02 02 02 02 02     ................
    6b49:	02 02 02 02 02 02 02 02 07 02 02 02 02 02 02 05     ................
    6b59:	0e 30 09 02 02 02 02 05 0e 30 09 02 02 02 02 05     .0.......0......
    6b69:	0e 30 09 02 02 02 02 02 03 02 02 02 02 02 02 02     .0..............
    6b79:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6b89:	02 02 02 02 02 02 02 46 4f 52 4d 41 4c 44 45 48     .......FORMALDEH
    6b99:	59 44 45 00 00 00 00 00 00 00 00 00 00 00 00 00     YDE.............
    6ba9:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6bb9:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 02 02     ................
    6bc9:	01 31 02 02 02 02 01 02 02 02 02 10 01 02 02 01     .1..............
    6bd9:	02 02 01 01 02 01 02 01 01 02 02 01 02 02 01 01     ................
    6be9:	02 01 02 02 02 02 02 01 02 01 01 02 02 01 02 02     ................
    6bf9:	01 02 02 02 02 02 01 02 02 01 02 02 01 02 01 01     ................
    6c09:	02 02 01 02 02 01 01 01 01 02 02 01 02 02 02 02     ................
    6c19:	01 01 01 02 02 02 02 01 02 02 01 02 01 01 02 02     ................
    6c29:	01 02 02 01 01 02 01 02 02 01 02 02 01 02 02 02     ................
    6c39:	02 02 01 02 02 01 02 02 01 01 02 01 02 02 02 02     ................
    6c49:	02 01 02 01 01 02 02 01 02 02 01 01 02 01 02 01     ................
    6c59:	01 02 02 01 02 02 01 03 02 02 02 02 01 02 02 02     ................
    6c69:	02 07 01 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    6c79:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6c89:	02 02 07 02 02 02 02 02 02 02 10 31 02 02 02 02     ...........1....
    6c99:	02 02 03 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6ca9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6cb9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6cc9:	02 02 41 43 45 54 49 43 20 41 43 49 44 20 45 54     ..ACETIC ACID ET
    6cd9:	48 59 4c 20 45 53 54 45 52 00 00 00 02 02 02 02     HYL ESTER.......
    6ce9:	02 02 02 02 02 02 02 02 02 02 02 02 01 01 01 01     ................
    6cf9:	01 01 01 01 01 01 01 01 01 02 02 01 02 02 01 01     ................
    6d09:	02 01 02 01 01 02 02 01 02 02 01 02 02 02 01 02     ................
    6d19:	03 02 01 02 02 02 01 02 02 01 02 02 02 02 0e 02     ................
    6d29:	02 02 0e 02 0e 01 02 02 01 01 02 02 01 02 02 02     ................
    6d39:	01 02 02 01 01 02 02 01 30 02 01 01 1c 02 02 01     ........0.......
    6d49:	01 02 02 01 02 02 01 09 02 02 02 02 01 02 02 02     ................
    6d59:	02 02 01 02 02 01 02 02 01 01 02 02 02 01 01 02     ................
    6d69:	02 01 02 02 01 01 02 02 01 07 07 02 01 03 02 01     ................
    6d79:	01 02 02 01 02 02 02 07 02 02 02 02 02 02 02 01     ................
    6d89:	02 02 01 02 02 2e 01 02 02 05 01 02 02 02 01 02     ................
    6d99:	02 01 02 03 01 01 02 01 02 01 01 02 02 01 02 02     ................
    6da9:	01 01 01 01 01 01 01 01 01 01 01 01 01 02 02 02     ................
    6db9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 07 2e     ................
    6dc9:	02 07 07 02 02 05 0e 1c 30 0e 0e 09 02 02 03 02     ........0.......
    6dd9:	02 03 03 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6de9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6df9:	02 02 02 02 02 02 02 02 02 02 02 02 02 41 4d 4d     .............AMM
    6e09:	4f 4e 49 41 00 00 00 00 00 00 00 00 00 00 00 00     ONIA............
    6e19:	00 00 00 00 00 00 00 02 02 02 02 02 02 02 02 02     ................
    6e29:	02 02 02 02 02 02 02 01 01 01 01 01 01 01 01 01     ................
    6e39:	01 01 01 01 02 02 01 01 02 02 08 01 02 02 01 02     ................
    6e49:	02 01 01 02 02 01 02 02 02 01 02 02 01 02 02 02     ................
    6e59:	02 01 02 02 01 02 02 02 02 02 02 02 02 01 02 02     ................
    6e69:	01 02 02 01 05 01 02 01 02 02 02 01 02 02 01 01     ................
    6e79:	02 02 01 01 02 02 02 01 02 02 02 02 01 02 01 02     ................
    6e89:	02 01 02 02 02 02 3a 02 02 02 02 02 02 01 02 02     ......:.........
    6e99:	01 02 01 02 02 02 02 01 02 02 0a 01 01 02 02 01     ................
    6ea9:	01 02 02 01 02 02 02 01 02 01 02 01 02 02 01 02     ................
    6eb9:	02 01 02 02 02 02 02 02 02 02 01 02 02 01 02 02     ................
    6ec9:	02 02 01 02 02 01 02 02 02 01 02 02 01 01 02 02     ................
    6ed9:	01 02 02 01 02 02 02 01 01 02 02 01 01 01 01 01     ................
    6ee9:	01 01 01 01 01 01 01 01 02 02 02 02 02 02 02 02     ................
    6ef9:	02 02 02 02 02 02 02 02 02 02 08 02 02 02 02 02     ................
    6f09:	05 3a 02 02 02 02 02 02 02 02 0a 02 02 02 02 02     .:..............
    6f19:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6f29:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6f39:	02 02 02 02 02 02 02 02 33 2d 4d 45 54 48 59 4c     ........3-METHYL
    6f49:	2d 50 45 4e 54 41 4e 45 00 00 00 00 00 00 00 00     -PENTANE........
    6f59:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    6f69:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    6f79:	01 02 07 02 06 02 02 01 02 02 0e 02 02 03 01 01     ................
    6f89:	07 02 01 02 02 02 01 02 02 02 01 02 02 01 01 02     ................
    6f99:	01 01 01 02 05 07 02 02 01 01 01 02 01 01 02 0e     ................
    6fa9:	01 02 02 02 02 03 02 02 01 02 02 01 01 02 02 02     ................
    6fb9:	02 02 02 02 0e 02 02 02 02 02 01 01 01 01 02 07     ................
    6fc9:	02 02 03 02 02 02 02 01 01 01 01 02 02 02 02 0e     ................
    6fd9:	02 02 02 02 02 02 02 08 01 01 09 02 01 02 02 02     ................
    6fe9:	02 02 02 02 01 02 0b 01 01 02 01 01 01 02 02 02     ................
    6ff9:	02 07 01 01 01 02 01 01 02 02 01 03 02 02 01 03     ................
    7009:	02 02 01 02 02 01 01 02 02 02 02 02 0e 01 02 02     ................
    7019:	02 02 02 02 01 01 01 01 01 01 01 01 01 01 01 01     ................
    7029:	01 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7039:	02 02 02 02 02 06 07 08 02 02 02 02 07 07 0b 07     ................
    7049:	07 02 02 05 0e 0e 0e 0e 0e 09 02 02 03 03 03 03     ................
    7059:	03 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7069:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7079:	02 02 02 50 52 4f 50 41 4e 41 4c 00 00 00 00 00     ...PROPANAL.....
	...
    7095:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    70a5:	02 02 01 01 01 01 01 01 01 01 01 01 01 02 02 02     ................
    70b5:	02 01 02 07 01 02 1d 02 02 02 02 01 02 02 02 02     ................
    70c5:	01 02 01 01 03 02 02 01 01 02 01 02 02 02 02 01     ................
    70d5:	02 02 02 02 02 0e 02 01 01 01 02 02 02 02 01 02     ................
    70e5:	02 01 01 01 02 02 02 02 01 02 02 02 02 01 02 02     ................
    70f5:	01 02 02 02 02 01 01 01 02 02 02 02 01 02 02 02     ................
    7105:	02 01 02 02 02 02 01 02 02 02 02 01 01 01 01 02     ................
    7115:	02 01 02 02 02 01 02 02 02 02 01 09 07 02 02 02     ................
    7125:	02 02 01 02 01 02 02 02 02 01 02 02 01 02 0e 05     ................
    7135:	02 01 02 01 02 02 02 02 01 26 01 01 02 02 01 02     .........&......
    7145:	01 03 01 02 02 02 02 01 02 02 02 02 02 01 02 02     ................
    7155:	02 01 02 02 02 02 01 01 01 01 01 01 01 01 01 01     ................
    7165:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7175:	02 02 02 07 07 02 02 02 02 02 05 0e 0e 1d 09 02     ................
    7185:	02 02 02 03 03 26 02 02 02 02 02 02 02 02 02 02     .....&..........
    7195:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    71a5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    71b5:	02 02 50 59 52 41 4e 00 00 00 00 00 00 00 00 00     ..PYRAN.........
	...
    71d1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    71e1:	02 01 01 01 01 01 01 01 02 02 02 02 02 02 02 02     ................
    71f1:	01 02 02 02 02 02 01 02 02 02 02 02 02 02 02 01     ................
    7201:	02 02 0f 02 02 01 01 01 01 01 01 02 02 02 01 02     ................
    7211:	01 01 02 02 01 08 02 02 02 01 02 02 02 01 02 2a     ...............*
    7221:	07 02 16 01 01 01 01 02 01 02 02 02 01 01 01 02     ................
    7231:	02 02 01 02 02 02 02 01 02 02 01 01 02 01 01 02     ................
    7241:	02 01 02 21 02 02 01 02 02 01 02 02 02 02 02 01     ...!............
    7251:	07 02 01 02 02 01 02 02 01 02 02 02 02 02 02 02     ................
    7261:	02 01 03 02 01 02 02 01 02 12 0a 01 03 02 01 02     ................
    7271:	01 01 02 01 02 02 01 01 01 01 01 02 02 01 02 02     ................
    7281:	02 02 01 02 02 02 02 02 01 02 02 02 01 15 01 01     ................
    7291:	01 01 02 02 02 02 02 01 01 01 01 01 01 01 02 02     ................
    72a1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    72b1:	02 02 07 07 02 02 02 02 02 02 12 0f 02 08 02 02     ................
    72c1:	02 2a 02 02 15 02 02 02 02 02 21 16 02 0a 02 02     .*........!.....
    72d1:	02 02 03 03 02 02 02 02 02 02 02 02 02 02 02 02     ................
    72e1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    72f1:	02 45 54 48 59 4c 45 4e 45 2d 47 4c 59 43 4f 4c     .ETHYLENE-GLYCOL
	...
    7309:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7319:	02 02 02 02 02 02 01 01 01 01 01 01 01 01 01 01     ................
    7329:	02 02 02 02 02 01 02 02 02 02 2c 01 02 02 01 02     ..........,.....
    7339:	02 02 02 02 01 02 01 02 02 02 01 02 02 01 02 02     ................
    7349:	02 02 02 01 02 02 01 02 02 02 02 02 01 02 02 01     ................
    7359:	01 01 01 02 02 02 01 02 02 02 01 01 02 02 01 02     ................
    7369:	02 15 01 02 02 15 01 02 02 02 01 02 02 01 02 02     ................
    7379:	02 06 01 04 02 02 01 02 01 01 02 02 01 02 02 01     ................
    7389:	02 02 01 02 08 01 02 01 02 02 02 01 01 04 01 01     ................
    7399:	02 02 01 02 01 01 01 02 02 02 02 01 02 02 02 02     ................
    73a9:	2c 02 02 02 01 02 02 02 02 02 01 02 02 02 02 01     ,...............
    73b9:	02 0a 02 01 02 02 02 02 02 01 01 01 01 01 01 02     ................
    73c9:	08 02 01 02 02 02 02 02 02 02 02 02 02 01 01 01     ................
    73d9:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    73e9:	02 02 02 02 02 06 02 08 02 08 02 02 02 02 15 02     ................
    73f9:	2c 02 02 02 02 2c 02 15 02 02 02 02 04 02 04 02     ,....,..........
    7409:	0a 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7419:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7429:	02 02 02 02 43 59 41 4e 4f 47 55 41 4e 49 44 49     ....CYANOGUANIDI
    7439:	4e 45 00 00 00 00 00 00 00 00 00 00 00 00 02 02     NE..............
    7449:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7459:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7469:	02 02 02 02 02 02 02 02 02 02 02 02 02 01 01 01     ................
    7479:	01 01 01 01 01 01 01 01 02 02 02 02 01 02 01 02     ................
    7489:	02 02 02 02 02 02 01 02 02 02 02 01 24 01 01 01     ............$...
    7499:	41 3f 01 01 02 01 02 02 02 02 01 02 02 04 02 01     A?..............
    74a9:	02 02 40 02 01 02 02 02 02 01 01 01 01 02 02 02     ..@.............
    74b9:	02 01 01 01 02 02 02 02 01 02 02 02 02 02 36 02     ..............6.
    74c9:	02 02 01 02 02 02 02 01 07 02 02 01 03 01 01 01     ................
    74d9:	06 01 02 02 02 02 01 02 02 02 02 02 02 1d 02 02     ................
    74e9:	01 02 02 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    74f9:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7509:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7519:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 06     ................
    7529:	02 02 07 02 02 02 02 02 3f 1d 36 24 02 02 02 04     ........?.6$....
    7539:	02 41 02 40 02 02 02 02 02 03 02 02 02 02 02 02     .A.@............
    7549:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7559:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 53     ...............S
    7569:	54 59 52 45 4e 45 00 00 00 00 00 00 00 00 00 00     TYRENE..........
	...
    7581:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7591:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    75a1:	02 01 01 01 01 01 01 01 01 01 01 01 02 02 02 02     ................
    75b1:	01 02 02 02 02 02 02 02 01 02 01 02 02 02 02 01     ................
    75c1:	02 02 19 01 01 01 02 20 02 01 02 02 02 02 01 02     ....... ........
    75d1:	02 02 06 08 01 02 01 02 01 02 02 02 02 01 02 02     ................
    75e1:	02 04 0a 02 08 01 05 01 02 02 02 02 01 02 02 0f     ................
    75f1:	02 23 02 01 01 02 01 02 02 02 02 01 02 01 01 04     .#..............
    7601:	01 01 02 25 01 01 02 02 02 02 01 02 02 01 14 01     ...%............
    7611:	02 02 02 02 01 02 02 02 02 01 01 12 01 02 01 02     ................
    7621:	09 02 02 01 02 02 02 02 01 02 02 02 02 02 02 01     ................
    7631:	02 17 01 02 02 02 02 01 01 01 01 01 01 01 01 01     ................
    7641:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7651:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7661:	02 02 06 02 02 08 02 02 02 02 02 23 14 02 02 08     ...........#....
    7671:	02 02 04 02 02 25 17 02 02 02 02 02 05 20 19 09     .....%....... ..
    7681:	02 02 02 02 02 12 0f 02 02 02 02 02 04 02 02 0a     ................
    7691:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    76a1:	02 02 4d 45 4c 41 4d 49 4e 45 00 00 00 00 00 00     ..MELAMINE......
	...
    76bd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    76cd:	01 01 01 01 02 02 02 02 02 01 01 01 01 02 02 01     ................
    76dd:	02 02 01 01 01 01 01 01 01 36 02 01 02 02 01 37     .........6.....7
    76ed:	02 02 02 02 01 02 02 02 02 04 01 02 02 01 01 02     ................
    76fd:	01 02 1d 01 02 02 01 02 01 01 02 02 02 01 02 02     ................
    770d:	02 02 02 02 02 02 02 01 02 02 02 02 01 02 02 02     ................
    771d:	02 07 02 02 07 02 01 02 02 02 02 01 01 01 02 05     ................
    772d:	36 09 02 01 01 01 02 02 02 02 01 43 02 02 02 02     6..........C....
    773d:	02 02 02 02 01 02 02 02 02 01 02 02 02 02 1d 02     ................
    774d:	02 02 42 01 02 02 02 01 01 02 01 02 02 01 3d 02     ..B...........=.
    775d:	01 02 01 01 02 02 01 02 02 02 02 02 01 0e 02 02     ................
    776d:	02 02 01 02 02 01 0a 02 01 01 01 01 01 01 01 02     ................
    777d:	02 01 02 02 01 01 01 01 02 02 02 02 02 01 01 01     ................
    778d:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    779d:	02 02 07 02 02 02 07 02 02 05 36 1d 43 1d 36 09     ..........6.C.6.
    77ad:	02 02 02 3d 0e 42 02 02 02 02 02 02 37 02 02 02     ...=.B......7...
    77bd:	02 02 02 04 02 0a 02 02 02 02 02 02 02 02 02 02     ................
    77cd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    77dd:	02 43 59 43 4c 4f 42 55 54 41 4e 45 00 00 00 00     .CYCLOBUTANE....
	...
    77f5:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7805:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7815:	02 02 02 01 01 01 01 01 01 01 01 02 02 02 02 02     ................
    7825:	02 02 01 02 02 02 05 02 02 01 01 02 02 02 02 02     ................
    7835:	02 01 01 09 02 01 01 02 03 01 01 01 02 02 02 02     ................
    7845:	02 01 01 02 0e 02 02 02 02 02 01 02 02 02 02 02     ................
    7855:	02 01 02 01 02 02 02 02 02 01 02 02 02 02 02 01     ................
    7865:	01 05 01 01 02 02 01 0e 01 02 02 02 02 02 01 02     ................
    7875:	02 02 09 01 07 01 01 01 02 02 02 02 02 01 02 02     ................
    7885:	02 02 02 02 01 02 01 02 02 02 02 02 01 0e 02 02     ................
    7895:	02 0e 02 02 07 01 02 02 02 02 02 01 03 02 01 02     ................
    78a5:	01 01 01 02 01 02 02 02 02 02 01 01 01 01 01 01     ................
    78b5:	02 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    78c5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    78d5:	02 02 02 02 02 07 07 02 02 02 02 02 05 0e 0e 09     ................
    78e5:	02 02 02 02 05 0e 0e 09 02 02 02 02 02 03 03 02     ................
    78f5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7905:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7915:	02 02 02 02 41 43 45 54 59 4c 45 20 53 41 4c 49     ....ACETYLE SALI
    7925:	43 59 4c 49 43 20 41 43 49 44 00 00 00 00 02 02     CYLIC ACID......
    7935:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7945:	02 02 02 02 02 02 01 01 01 01 01 02 02 01 01 01     ................
    7955:	01 01 01 01 01 01 20 02 02 01 02 02 01 02 01 02     ...... .........
    7965:	02 1b 02 02 01 02 02 01 01 02 02 01 02 02 01 29     ...............)
    7975:	01 02 0e 02 01 05 02 01 02 02 01 28 02 02 02 0c     ...........(....
    7985:	02 02 09 02 02 02 01 02 02 01 01 01 11 01 02 01     ................
    7995:	02 01 09 30 02 01 02 02 02 02 01 02 0f 01 02 05     ...0............
    79a5:	02 01 19 02 01 02 02 02 02 01 01 17 02 02 0a 02     ................
    79b5:	09 01 01 01 02 02 02 02 01 02 01 02 01 02 07 2e     ................
    79c5:	01 02 02 02 02 02 01 01 02 02 02 04 01 02 02 01     ................
    79d5:	02 02 02 02 02 01 02 02 12 01 02 02 01 01 01 02     ................
    79e5:	02 02 02 02 01 01 01 01 01 01 01 01 02 02 02 02     ................
    79f5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7a05:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7a15:	07 02 02 02 02 02 02 05 0e 09 02 02 02 02 02 29     ...............)
    7a25:	11 02 2e 02 02 02 02 02 28 02 1b 30 09 02 02 02     ........(..0....
    7a35:	0c 17 02 02 02 02 02 05 20 19 09 02 02 02 02 02     ........ .......
    7a45:	12 0f 02 02 02 02 02 04 02 02 0a 02 02 02 02 4d     ...............M
    7a55:	45 54 41 2d 44 49 2d 4e 49 54 52 4f 2d 42 45 4e     ETA-DI-NITRO-BEN
    7a65:	5a 45 4e 45 00 00 00 00 00 02 02 02 02 02 02 02     ZENE............
    7a75:	02 02 02 02 02 02 02 02 02 02 02 01 01 01 01 02     ................
    7a85:	02 02 02 02 02 02 02 02 02 02 01 02 02 01 01 01     ................
    7a95:	01 02 02 02 02 02 02 02 02 01 45 06 02 02 31 01     ..........E...1.
    7aa5:	02 02 02 02 02 02 02 02 01 02 01 02 02 0d 01 02     ................
    7ab5:	02 02 02 02 02 02 01 01 17 02 02 02 01 01 02 02     ................
    7ac5:	02 02 02 02 02 01 02 01 02 02 02 02 01 01 01 01     ................
    7ad5:	02 02 02 02 01 02 02 02 02 1f 02 02 02 02 01 02     ................
    7ae5:	02 02 02 01 07 02 02 01 01 02 12 08 02 01 01 02     ................
    7af5:	02 02 01 21 01 02 02 1a 02 01 02 02 02 01 02 02     ...!............
    7b05:	02 01 02 01 29 02 02 02 01 02 02 02 01 02 02 02     ....)...........
    7b15:	01 02 02 02 02 39 02 03 02 01 02 01 02 02 02 01     .....9..........
    7b25:	01 01 01 02 01 02 01 01 01 01 01 02 02 02 02 02     ................
    7b35:	02 01 01 01 01 01 02 02 02 02 02 02 02 02 02 02     ................
    7b45:	02 02 02 02 02 02 02 02 02 02 02 06 02 07 02 08     ................
    7b55:	02 02 02 02 21 0d 17 02 02 02 02 02 12 1a 1f 02     ....!...........
    7b65:	02 02 29 39 02 03 02 45 31 02 02 02 02 02 02 02     ..)9...E1.......
    7b75:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7b85:	02 02 02 02 02 02 02 02 02 02 4d 41 4c 4f 4e 49     ..........MALONI
    7b95:	43 20 41 43 49 44 00 00 00 00 00 00 00 00 00 00     C ACID..........
    7ba5:	00 00 00 00 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7bb5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7bc5:	02 02 02 02 01 01 01 01 01 01 01 01 01 02 02 02     ................
    7bd5:	02 02 02 01 02 01 32 02 02 02 02 01 02 02 02 02     ......2.........
    7be5:	02 02 01 02 01 02 02 02 0e 02 01 02 02 02 02 02     ................
    7bf5:	02 01 02 02 2e 02 01 01 07 01 02 02 02 02 02 02     ................
    7c05:	01 02 02 26 02 02 01 03 01 02 02 02 02 02 02 01     ...&............
    7c15:	02 02 01 02 05 09 02 01 01 01 02 02 02 02 01 02     ................
    7c25:	02 01 01 02 02 02 02 02 01 02 02 02 02 01 02 25     ...............%
    7c35:	34 02 1f 02 02 02 02 01 02 02 02 02 01 02 02 02     4...............
    7c45:	02 02 02 02 02 02 01 02 02 02 02 01 01 01 02 02     ................
    7c55:	01 02 02 02 02 01 02 02 02 02 02 02 01 01 01 01     ................
    7c65:	01 01 01 01 01 02 02 02 02 02 02 02 02 02 02 02     ................
    7c75:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7c85:	02 02 02 02 02 05 32 02 07 2e 02 02 02 02 02 25     ......2........%
    7c95:	0e 1f 02 02 02 02 02 26 03 02 34 09 02 02 02 02     .......&..4.....
    7ca5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7cb5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7cc5:	02 02 02 02 02 45 54 48 59 4c 2d 42 45 4e 5a 45     .....ETHYL-BENZE
    7cd5:	4e 45 00 00 00 00 00 00 00 00 00 00 00 00 00 02     NE..............
    7ce5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7cf5:	01 01 01 01 01 02 02 02 02 02 02 02 02 02 02 01     ................
    7d05:	06 07 08 01 01 01 01 01 01 01 02 02 02 02 01 02     ................
    7d15:	0b 02 02 02 02 02 02 1a 01 02 02 02 02 01 01 03     ................
    7d25:	02 1f 01 02 02 02 01 01 02 02 02 02 01 02 01 02     ................
    7d35:	01 0d 02 02 02 21 01 02 02 02 02 01 02 02 02 02     .....!..........
    7d45:	02 02 02 02 12 01 02 02 02 02 01 02 02 06 01 01     ................
    7d55:	02 02 02 01 01 02 02 02 02 01 02 02 04 02 01 02     ................
    7d65:	08 02 02 01 02 02 02 02 01 01 01 02 02 17 01 0a     ................
    7d75:	02 02 01 02 02 02 02 02 02 01 02 02 02 01 01 02     ................
    7d85:	02 01 02 02 02 02 02 02 01 02 01 02 02 02 02 02     ................
    7d95:	01 02 02 02 02 02 02 01 02 01 02 06 0b 08 02 01     ................
    7da5:	02 02 02 02 02 02 01 01 01 01 01 01 01 01 01 02     ................
    7db5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7dc5:	02 06 07 08 02 02 02 02 02 06 0b 08 02 02 02 02     ................
    7dd5:	06 02 0b 02 08 02 02 02 02 21 0d 17 02 02 02 02     .........!......
    7de5:	02 12 1a 1f 02 02 02 02 04 02 03 02 0a 02 02 02     ................
    7df5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    7e05:	31 2c 33 2c 35 2c 37 2d 43 59 43 4c 4f 4f 43 54     1,3,5,7-CYCLOOCT
    7e15:	41 54 45 54 52 41 45 4e 45 00 02 02 02 02 02 02     ATETRAENE.......
    7e25:	02 02 02 02 02 02 02 02 02 02 01 01 01 01 01 01     ................
    7e35:	01 01 02 02 01 01 01 02 02 01 06 02 02 02 02 06     ................
    7e45:	01 01 01 01 23 01 02 02 01 02 02 01 23 02 01 1e     ....#.......#...
    7e55:	02 02 02 02 01 02 02 01 02 02 01 01 02 01 01 02     ................
    7e65:	02 02 1e 01 02 02 01 02 02 02 02 02 02 02 02 02     ................
    7e75:	02 01 01 02 02 01 02 01 18 02 02 01 18 02 01 08     ................
    7e85:	01 02 02 02 01 02 01 01 02 02 01 01 02 01 01 01     ................
    7e95:	02 02 02 01 08 02 02 02 02 02 02 02 02 02 01 01     ................
    7ea5:	02 02 01 01 02 01 0a 02 01 0a 02 02 02 14 01 02     ................
    7eb5:	02 02 01 02 01 01 02 01 01 14 01 04 02 01 02 02     ................
    7ec5:	02 01 02 02 02 02 02 02 02 01 01 02 01 02 02 02     ................
    7ed5:	01 04 02 01 01 01 02 02 02 02 02 01 02 02 02 01     ................
    7ee5:	01 01 01 02 01 01 01 01 01 01 01 02 02 02 02 02     ................
    7ef5:	02 02 02 02 02 02 02 02 02 02 02 02 06 02 02 08     ................
    7f05:	02 02 02 06 02 23 14 02 08 02 02 02 18 02 02 18     .....#..........
    7f15:	02 02 02 02 1e 02 02 1e 02 02 02 04 02 23 14 02     .............#..
    7f25:	0a 02 02 02 04 02 02 0a 02 02 02 02 02 02 02 02     ................
    7f35:	02 02 02 02 02 02 02 02 02 02 02 56 41 4e 49 4c     ...........VANIL
    7f45:	4c 49 4e 00 00 00 00 00 00 00 00 00 00 00 00 00     LIN.............
    7f55:	00 00 00 00 00 02 02 02 02 02 02 02 02 02 02 02     ................
    7f65:	02 02 02 02 02 02 02 02 02 02 02 02 01 01 01 01     ................
    7f75:	01 01 02 02 01 01 01 01 01 01 01 01 01 02 06 02     ................
    7f85:	01 02 02 01 2c 02 02 02 02 02 15 01 01 08 02 01     ....,...........
    7f95:	02 02 01 02 02 02 02 02 17 02 04 02 02 0a 01 02     ................
    7fa5:	02 01 02 01 02 02 02 02 02 02 02 02 02 01 02 02     ................
    7fb5:	01 01 02 02 02 01 02 02 0d 07 02 01 01 02 02 01     ................
    7fc5:	21 02 02 02 1f 01 2e 01 05 02 12 01 02 02 01 01     !...............
    7fd5:	02 01 02 02 02 01 1a 02 02 1f 01 02 02 01 02 02     ................
    7fe5:	01 02 02 01 33 01 02 02 01 02 02 02 01 02 03 01     ....3...........
    7ff5:	02 01 0a 02 02 01 02 01 02 02 02 01 01 01 01 02     ................
    8005:	02 02 01 02 02 02 01 02 02 02 02 02 02 01 02 02     ................
    8015:	02 01 02 02 02 01 02 02 02 02 02 02 01 01 01 01     ................
    8025:	01 01 01 01 01 02 02 02 02 02 02 02 02 02 02 02     ................
    8035:	02 02 02 02 02 02 02 02 02 02 02 06 02 08 02 2e     ................
    8045:	02 02 02 02 15 02 05 1f 02 07 02 2c 02 0a 02 02     ...........,....
    8055:	21 0d 17 02 02 02 02 02 12 1a 1f 02 02 02 02 04     !...............
    8065:	02 03 02 33 02 02 02 02 02 02 02 02 0a 02 02 02     ...3............
    8075:	02 02 02 02 02 02 55 52 49 43 20 41 43 49 44 00     ......URIC ACID.
	...
    8095:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    80a5:	01 01 01 01 01 01 01 01 01 01 01 02 02 02 02 01     ................
    80b5:	02 01 02 01 02 01 02 02 02 01 02 02 02 02 01 02     ................
    80c5:	02 02 01 02 01 02 02 02 01 02 02 02 02 01 02 3e     ...............>
    80d5:	20 02 0c 01 02 02 2e 01 02 02 02 02 01 01 01 02      ...............
    80e5:	02 02 01 02 01 01 01 01 01 02 02 01 02 11 02 02     ................
    80f5:	02 02 3c 01 1f 02 02 01 02 02 01 02 02 02 02 02     ..<.............
    8105:	03 31 02 02 02 02 01 02 02 01 02 02 29 01 02 08     .1..........)...
    8115:	02 02 02 02 35 01 02 02 01 01 01 01 01 06 01 02     ....5...........
    8125:	02 02 01 01 01 02 02 02 02 01 02 02 02 01 02 02     ................
    8135:	02 02 02 01 02 02 02 02 01 02 02 02 01 02 01 02     ................
    8145:	02 02 01 02 02 02 02 01 02 02 04 01 23 01 3a 01     ............#.:.
    8155:	02 01 02 02 02 02 01 01 01 01 01 01 01 01 01 01     ................
    8165:	01 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8175:	02 06 02 2e 02 02 02 02 02 02 3e 20 02 08 02 02     ..........> ....
    8185:	02 29 11 0c 3a 02 02 02 02 02 35 1f 02 23 31 02     .)..:.....5..#1.
    8195:	02 04 02 02 3c 02 02 02 02 02 02 02 03 02 02 02     ....<...........
    81a5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    81b5:	02 43 41 52 42 4f 4e 49 43 20 41 43 49 44 00 00     .CARBONIC ACID..
	...
    81cd:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    81dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    81ed:	02 02 02 01 01 01 01 01 01 01 01 01 01 02 02 02     ................
    81fd:	02 02 01 02 02 02 01 02 07 02 02 01 01 02 02 02     ................
    820d:	02 01 02 02 02 01 02 01 02 02 02 01 02 02 02 02     ................
    821d:	01 27 02 01 01 02 01 01 02 02 01 02 02 02 02 01     .'..............
    822d:	01 02 31 02 02 02 02 02 02 01 02 02 02 02 01 01     ..1.............
    823d:	02 02 02 02 02 02 02 02 01 02 02 02 02 01 02 02     ................
    824d:	02 01 01 02 01 01 02 01 02 02 02 02 01 02 02 02     ................
    825d:	02 01 23 01 02 02 01 02 02 02 02 01 01 01 02 02     ..#.............
    826d:	02 2b 01 02 02 01 02 02 02 02 02 02 01 02 02 02     .+..............
    827d:	02 03 02 02 01 02 02 02 02 02 02 01 01 01 01 01     ................
    828d:	01 01 01 01 02 02 02 02 02 02 02 02 02 02 02 02     ................
    829d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    82ad:	02 02 02 02 07 02 02 02 02 02 02 02 27 02 02 02     ............'...
    82bd:	02 02 02 02 02 23 31 02 02 02 02 02 2b 02 02 02     .....#1.....+...
    82cd:	02 02 02 02 03 02 02 02 02 02 02 02 02 02 02 02     ................
    82dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    82ed:	02 02 02 02 41 43 52 59 4c 4f 2d 4e 49 54 52 49     ....ACRYLO-NITRI
    82fd:	4c 00 00 00 00 00 00 00 00 00 00 00 00 00 02 02     L...............
    830d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    831d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 01 01     ................
    832d:	01 01 01 02 01 01 01 01 01 02 02 02 02 01 02 02     ................
    833d:	06 01 02 01 22 02 02 01 02 02 02 02 01 02 02 01     ...."...........
    834d:	01 01 01 01 44 02 01 02 02 02 02 01 02 02 01 02     ....D...........
    835d:	18 02 01 02 02 01 02 02 02 02 01 02 02 01 02 02     ................
    836d:	02 01 02 02 01 02 02 02 02 01 02 02 02 02 02 02     ................
    837d:	02 02 02 01 02 02 02 02 01 01 02 02 01 01 01 02     ................
    838d:	02 01 01 02 02 02 02 02 01 02 02 02 1e 02 02 02     ................
    839d:	01 02 02 02 02 02 02 01 02 04 02 01 02 0a 02 01     ................
    83ad:	02 02 02 02 02 02 01 02 01 02 01 02 01 02 01 02     ................
    83bd:	02 02 02 02 02 01 01 01 01 01 01 01 01 01 02 02     ................
    83cd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    83dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 06     ................
    83ed:	02 22 44 02 02 02 02 02 18 02 02 02 02 02 02 02     ."D.............
    83fd:	1e 02 02 02 02 02 02 04 02 0a 02 02 02 02 02 02     ................
    840d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    841d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 4c     ...............L
    842d:	2d 4c 41 43 54 49 43 20 41 43 49 44 00 00 00 00     -LACTIC ACID....
	...
    8445:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8455:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 02 02     ................
    8465:	01 06 02 01 02 02 02 02 02 02 02 15 01 02 02 01     ................
    8475:	02 02 01 33 02 02 01 02 02 02 02 01 02 02 01 02     ...3............
    8485:	02 02 02 02 01 02 02 02 01 01 01 02 02 01 02 02     ................
    8495:	02 02 02 01 02 02 02 15 02 01 02 02 01 02 01 02     ................
    84a5:	02 1b 01 2e 02 02 02 02 01 02 02 01 02 02 01 01     ................
    84b5:	01 01 01 01 01 02 02 01 02 02 01 02 02 02 02 09     ................
    84c5:	01 30 02 02 01 02 01 02 02 01 02 06 02 02 02 01     .0..............
    84d5:	02 02 02 02 02 01 02 02 01 01 01 02 02 02 01 02     ................
    84e5:	02 02 02 02 01 02 02 01 02 02 02 02 01 02 02 0a     ................
    84f5:	01 02 02 01 02 02 01 04 02 02 02 02 02 02 02 01     ................
    8505:	02 0a 01 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    8515:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8525:	02 02 06 02 02 2e 02 02 02 02 02 33 02 1b 30 09     ...........3..0.
    8535:	02 02 06 02 15 02 02 02 02 02 02 15 02 0a 02 02     ................
    8545:	02 02 04 02 0a 02 02 02 02 02 02 02 02 02 02 02     ................
    8555:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8565:	02 02 4d 41 4c 45 49 43 20 41 43 49 44 00 00 00     ..MALEIC ACID...
	...
    8581:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8591:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 01     ................
    85a1:	01 01 01 01 01 01 01 01 01 01 01 01 02 02 01 08     ................
    85b1:	02 02 02 1e 01 27 02 02 02 18 01 02 02 01 02 01     .....'..........
    85c1:	02 02 01 01 01 02 02 01 02 01 02 02 01 01 08 02     ................
    85d1:	02 02 01 02 02 02 0a 01 01 02 02 02 01 02 02 01     ................
    85e1:	29 01 0f 01 02 02 01 02 02 02 02 01 01 02 02 01     )...............
    85f1:	01 01 02 02 01 01 02 02 02 02 01 02 02 02 02 01     ................
    8601:	02 02 02 02 01 02 02 02 01 01 29 02 02 02 01 02     ..........).....
    8611:	02 02 2b 01 01 02 02 01 02 01 02 02 02 02 02 02     ..+.............
    8621:	02 01 02 01 02 02 01 16 02 02 02 02 02 02 02 02     ................
    8631:	02 0a 01 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    8641:	01 01 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8651:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8661:	02 02 02 08 02 02 02 02 02 02 2b 02 02 02 02 02     ..........+.....
    8671:	02 29 0f 02 08 02 02 02 02 02 02 18 02 02 02 02     .)..............
    8681:	02 02 02 1e 02 02 02 02 02 29 16 02 0a 02 02 02     .........)......
    8691:	02 02 27 02 02 02 02 02 02 02 02 0a 02 02 02 02     ..'.............
    86a1:	02 4d 45 53 4f 2d 54 41 52 54 41 52 49 43 20 41     .MESO-TARTARIC A
    86b1:	43 49 44 00 00 00 00 00 00 00 00 02 02 02 02 02     CID.............
    86c1:	02 02 02 01 01 01 02 02 02 02 02 02 01 01 01 01     ................
    86d1:	01 01 01 32 01 01 01 01 02 02 02 01 02 25 02 02     ...2.........%..
    86e1:	02 02 07 02 02 02 01 02 02 01 01 02 34 01 02 02     ............4...
    86f1:	02 02 02 01 02 01 02 02 01 02 02 01 2e 01 02 02     ................
    8701:	02 01 28 02 01 02 02 01 02 01 02 02 02 01 02 01     ..(.............
    8711:	02 07 02 01 02 02 01 02 02 02 02 02 02 02 02 02     ................
    8721:	02 02 01 02 02 01 02 02 02 01 02 02 02 02 02 01     ................
    8731:	02 01 02 02 01 03 28 01 0e 01 02 02 02 01 02 02     ......(.........
    8741:	01 02 02 01 02 01 02 02 0e 01 02 01 09 26 02 01     .............&..
    8751:	02 02 01 02 02 02 02 01 02 02 02 01 03 02 01 02     ................
    8761:	02 01 01 01 02 02 02 02 02 02 02 01 02 01 02 02     ................
    8771:	02 02 01 02 02 1f 02 02 02 02 02 02 01 02 02 02     ................
    8781:	02 01 01 01 01 05 01 01 01 01 01 01 02 02 02 02     ................
    8791:	02 02 02 01 01 01 02 02 02 02 02 02 02 02 02 02     ................
    87a1:	07 02 02 02 05 32 02 07 28 2e 02 02 02 02 25 0e     .....2..(.....%.
    87b1:	0e 1f 02 02 02 02 26 28 03 02 34 09 02 02 02 03     ......&(..4.....
    87c1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    87d1:	02 02 02 02 02 02 02 02 02 02 02 02 46 4f 52 4d     ............FORM
    87e1:	49 43 20 41 43 49 44 20 45 54 48 59 4c 20 45 53     IC ACID ETHYL ES
    87f1:	54 45 52 00 00 00 02 02 02 02 02 02 02 02 02 02     TER.............
    8801:	02 02 02 02 02 02 02 02 02 02 01 01 01 01 01 01     ................
    8811:	01 01 01 02 02 02 01 01 01 01 02 02 02 02 02 17     ................
    8821:	02 01 02 02 02 01 02 02 01 02 02 01 01 01 02 15     ................
    8831:	01 02 02 02 01 02 06 02 02 02 02 02 02 02 01 01     ................
    8841:	02 02 01 01 02 01 01 01 05 02 01 02 02 02 01 02     ................
    8851:	02 01 02 02 02 02 02 02 02 02 02 02 15 01 02 02     ................
    8861:	01 02 02 02 02 02 02 02 06 02 02 02 01 02 02 01     ................
    8871:	08 01 02 01 02 01 01 01 02 02 02 01 02 02 01 01     ................
    8881:	01 02 02 02 02 02 02 02 02 01 01 02 02 02 02 01     ................
    8891:	02 02 02 02 02 0a 01 26 01 02 02 02 02 02 01 0a     .......&........
    88a1:	01 01 01 02 01 01 01 01 02 02 02 02 02 01 02 2c     ...............,
    88b1:	02 02 02 01 02 02 02 02 02 02 02 02 01 01 01 01     ................
    88c1:	01 01 01 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    88d1:	02 02 02 02 02 02 02 02 02 02 06 02 08 02 02 02     ................
    88e1:	02 06 02 15 02 02 02 02 02 02 15 02 0a 02 02 02     ................
    88f1:	02 2c 02 0a 02 02 02 05 17 02 02 02 02 02 02 02     .,..............
    8901:	26 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     &...............
    8911:	02 02 02 02 02 02 02 31 2c 34 2d 43 59 43 4c 4f     .......1,4-CYCLO
    8921:	48 45 58 41 44 49 45 4e 45 00 00 00 00 00 00 00     HEXADIENE.......
    8931:	00 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8941:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8951:	02 02 02 01 01 01 01 01 01 01 02 02 02 02 02 02     ................
    8961:	02 02 01 06 02 02 02 04 01 02 02 02 02 02 02 01     ................
    8971:	01 01 02 02 01 02 02 01 01 01 02 02 02 02 01 14     ................
    8981:	01 02 02 01 02 02 01 23 01 02 02 02 02 01 02 04     .......#........
    8991:	02 02 02 02 02 0a 02 01 02 02 02 02 01 01 02 02     ................
    89a1:	08 01 23 02 02 01 01 02 02 02 02 01 02 15 02 02     ..#.............
    89b1:	02 02 02 15 02 01 02 02 02 02 01 14 01 02 02 01     ................
    89c1:	02 02 01 08 01 02 02 02 02 01 01 01 02 02 01 02     ................
    89d1:	02 01 01 01 02 02 02 02 02 02 01 06 02 02 02 0a     ................
    89e1:	01 02 02 02 02 02 02 02 02 01 01 01 01 01 01 01     ................
    89f1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8a01:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8a11:	02 02 02 06 02 02 08 02 02 02 06 02 23 14 02 08     ............#...
    8a21:	02 02 02 15 02 02 15 02 02 02 04 02 23 14 02 0a     ............#...
    8a31:	02 02 02 04 02 02 0a 02 02 02 02 02 02 02 02 02     ................
    8a41:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8a51:	02 02 53 51 55 41 52 49 43 20 41 43 49 44 00 00     ..SQUARIC ACID..
	...
    8a6d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8a7d:	02 01 01 01 01 01 01 01 01 01 01 01 02 02 02 02     ................
    8a8d:	01 0f 02 02 01 02 02 02 02 02 01 02 02 02 02 01     ................
    8a9d:	09 02 20 01 02 02 02 02 19 01 02 02 02 02 01 02     .. .............
    8aad:	02 02 02 02 01 01 01 01 01 02 02 02 02 01 02 02     ................
    8abd:	02 02 02 02 02 02 02 01 02 02 02 02 01 02 02 02     ................
    8acd:	02 02 02 02 02 02 01 02 02 02 02 01 02 02 02 01     ................
    8add:	02 02 02 02 02 01 02 02 02 02 01 02 2e 02 01 12     ................
    8aed:	01 02 02 02 01 02 02 02 02 01 02 01 01 01 2e 01     ................
    8afd:	02 02 02 01 02 02 02 02 01 02 34 2d 01 01 01 01     ..........4-....
    8b0d:	02 02 01 02 02 02 02 01 02 02 02 01 02 02 02 02     ................
    8b1d:	02 01 02 02 02 02 01 02 05 02 01 02 02 02 02 02     ................
    8b2d:	01 02 02 02 02 01 01 01 01 01 01 01 01 01 01 01     ................
    8b3d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8b4d:	02 02 02 2e 2e 02 02 02 02 02 02 19 20 02 02 02     ............ ...
    8b5d:	02 02 02 12 0f 02 02 02 02 05 2d 02 02 34 09 02     ..........-..4..
    8b6d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8b7d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8b8d:	02 55 52 45 41 00 00 00 00 00 00 00 00 00 00 00     .UREA...........
	...
    8ba5:	00 00 00 02 01 01 01 01 01 01 01 01 01 01 02 02     ................
    8bb5:	02 02 02 01 01 05 02 02 38 01 02 02 01 02 02 02     ........8.......
    8bc5:	02 02 01 02 01 02 02 02 01 02 02 01 01 01 01 02     ................
    8bd5:	02 01 02 01 02 02 02 02 02 02 02 02 02 01 02 02     ................
    8be5:	01 02 01 01 02 02 01 02 01 02 01 02 01 02 02 01     ................
    8bf5:	07 02 02 02 02 02 02 02 02 01 02 01 02 02 01 02     ................
    8c05:	01 01 01 01 01 01 02 01 01 02 01 02 02 01 02 05     ................
    8c15:	3b 02 02 02 02 02 02 02 31 01 02 02 01 03 02 01     ;.......1.......
    8c25:	02 01 02 02 02 01 01 01 01 02 02 01 02 02 01 02     ................
    8c35:	01 02 02 02 01 02 02 02 02 02 01 02 02 01 02 01     ................
    8c45:	02 02 02 01 02 02 02 02 02 01 02 23 01 02 01 02     ...........#....
    8c55:	02 02 01 02 02 02 02 02 01 02 02 01 02 01 02 02     ................
    8c65:	02 01 02 02 02 02 02 01 01 01 02 02 02 02 02 02     ................
    8c75:	01 02 02 02 02 02 02 02 01 01 01 01 01 01 01 01     ................
    8c85:	02 02 02 02 02 07 02 02 02 02 02 02 05 38 02 02     .............8..
    8c95:	02 02 02 02 02 02 23 31 02 02 02 02 05 3b 02 02     ......#1.....;..
    8ca5:	02 02 02 02 02 03 02 02 02 02 02 02 02 02 02 02     ................
    8cb5:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8cc5:	02 02 02 02 50 59 52 55 56 49 43 20 41 43 49 44     ....PYRUVIC ACID
	...
    8ce1:	00 00 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8cf1:	02 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    8d01:	01 02 02 02 02 02 02 02 02 02 02 02 09 31 01 01     .............1..
    8d11:	01 01 02 02 02 01 02 02 02 02 19 01 01 01 02 02     ................
    8d21:	01 02 02 02 01 02 02 02 02 01 02 02 01 02 02 01     ................
    8d31:	02 02 02 01 02 02 02 02 01 02 02 01 02 02 01 02     ................
    8d41:	01 01 01 02 02 02 02 01 02 02 01 02 02 01 02 02     ................
    8d51:	05 01 02 02 02 02 01 02 02 01 02 02 01 01 01 01     ................
    8d61:	01 02 02 02 02 02 02 02 01 02 02 01 10 2e 01 02     ................
    8d71:	02 02 02 02 02 02 02 01 02 02 01 02 02 01 02 02     ................
    8d81:	02 02 02 02 02 02 01 01 01 01 02 02 01 02 02 02     ................
    8d91:	02 02 02 02 02 01 01 30 01 02 02 02 02 02 02 02     .......0........
    8da1:	01 01 02 02 01 01 03 0e 02 02 02 02 02 02 02 09     ................
    8db1:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 02     ................
    8dc1:	02 02 02 02 2e 02 02 02 02 02 02 02 19 30 09 02     .............0..
    8dd1:	02 02 02 02 10 31 02 02 02 02 02 05 0e 09 02 02     .....1..........
    8de1:	02 02 02 02 03 02 02 02 02 02 02 02 02 02 02 02     ................
    8df1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8e01:	02 02 02 44 49 41 43 45 54 59 4c 00 00 00 00 00     ...DIACETYL.....
	...
    8e1d:	00 01 01 01 01 01 01 01 02 02 02 02 02 02 02 02     ................
    8e2d:	01 31 02 02 02 31 01 01 01 01 01 01 01 01 02 01     .1...1..........
    8e3d:	02 02 02 02 02 01 02 02 02 02 02 08 01 02 01 02     ................
    8e4d:	02 02 02 02 01 02 02 02 02 02 02 01 02 01 02 02     ................
    8e5d:	02 02 02 01 02 02 02 02 02 02 01 02 01 02 02 02     ................
    8e6d:	02 02 02 02 02 02 02 02 02 01 02 01 02 02 02 02     ................
    8e7d:	02 02 02 02 02 01 01 01 01 02 01 02 02 02 02 04     ................
    8e8d:	02 02 02 02 12 06 15 02 01 01 01 01 01 01 01 02     ................
    8e9d:	02 02 02 02 02 02 04 01 02 02 01 15 02 02 02 02     ................
    8ead:	02 02 02 02 02 02 01 02 02 01 02 02 02 02 02 02     ................
    8ebd:	02 01 02 02 02 01 02 02 01 02 02 02 02 02 02 02     ................
    8ecd:	01 02 02 02 01 02 02 01 06 21 02 02 02 02 0a 01     .........!......
    8edd:	02 02 02 01 02 02 01 01 01 01 01 01 01 01 01 02     ................
    8eed:	02 02 01 02 02 02 02 02 02 02 02 02 02 01 01 01     ................
    8efd:	01 01 06 02 08 02 02 02 02 02 02 15 02 02 02 02     ................
    8f0d:	02 02 04 02 21 31 02 02 02 02 06 02 12 31 02 02     ....!1.......1..
    8f1d:	02 02 02 15 02 02 02 02 02 02 04 02 0a 02 02 02     ................
    8f2d:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    8f3d:	02 02 44 49 4b 45 54 45 4e 45 00 00 00 00 00 00     ..DIKETENE......
	...
    8f59:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    8f69:	01 03 20 02 02 02 02 02 02 02 02 0c 01 01 01 02     .. .............
    8f79:	02 06 02 02 02 02 02 02 02 02 18 02 01 01 02 02     ................
    8f89:	01 02 01 02 02 02 01 02 01 02 02 01 01 02 02 02     ................
    8f99:	01 02 02 02 02 02 01 02 02 02 01 01 09 02 01 02     ................
    8fa9:	01 02 02 02 01 02 01 02 02 01 01 26 02 02 02 02     ...........&....
    8fb9:	02 02 02 02 02 02 02 02 01 01 01 02 02 02 02 02     ................
    8fc9:	02 02 02 02 02 02 01 01 01 2f 02 02 02 02 02 02     ........./......
    8fd9:	02 02 02 02 02 02 01 01 02 02 01 02 01 02 02 02     ................
    8fe9:	01 02 01 02 02 01 01 02 02 02 01 02 02 02 02 02     ................
    8ff9:	01 02 02 02 01 01 02 02 01 02 01 02 02 02 01 02     ................
    9009:	01 02 02 01 01 0e 02 02 02 02 02 02 02 02 02 02     ................
    9019:	02 02 01 01 01 02 08 02 02 02 02 02 02 02 02 02     ................
    9029:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    9039:	01 06 02 08 02 02 02 02 02 02 18 02 02 02 02 02     ................
    9049:	02 2f 20 02 02 02 02 02 02 0c 0e 09 02 02 02 02     ./ .............
    9059:	02 26 03 02 02 02 02 02 02 02 02 02 02 02 02 02     .&..............
    9069:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    9079:	02 41 43 52 4f 4c 45 49 4e 45 00 00 00 00 00 00     .ACROLEINE......
	...
    9091:	00 00 00 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    90a1:	02 02 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    90b1:	01 01 02 02 02 02 02 08 01 08 02 02 02 02 02 01     ................
    90c1:	01 02 02 02 02 02 01 01 01 02 02 02 02 02 01 01     ................
    90d1:	02 02 02 02 02 02 02 02 02 02 02 02 02 01 01 02     ................
    90e1:	02 02 02 02 02 02 02 02 02 02 02 02 01 01 29 01     ..............).
    90f1:	02 02 02 02 02 02 02 02 02 01 0a 01 01 01 01 02     ................
    9101:	02 02 02 02 02 02 02 02 01 01 01 01 01 01 02 02     ................
    9111:	02 02 02 02 02 02 02 01 01 01 01 14 01 02 02 02     ................
    9121:	02 02 02 02 02 02 01 04 01 01 02 02 02 02 02 02     ................
    9131:	02 02 02 02 02 02 02 01 01 02 02 02 02 02 02 02     ................
    9141:	02 02 02 02 02 02 01 01 02 02 02 02 02 01 01 01     ................
    9151:	02 02 02 02 02 01 01 02 02 02 02 02 18 01 1e 02     ................
    9161:	02 02 02 02 01 01 01 01 01 01 01 01 01 01 01 01     ................
    9171:	01 01 01 01 02 02 08 02 02 02 02 02 29 14 02 08     ............)...
    9181:	02 02 02 02 02 02 18 02 02 02 02 02 02 02 1e 02     ................
    9191:	02 02 02 02 02 04 02 0a 02 02 02 02 02 02 02 02     ................
    91a1:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    91b1:	02 02 02 02 4d 41 4c 4f 4e 49 43 20 41 43 49 44     ....MALONIC ACID
	...
    91cd:	00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    91dd:	01 01 01 2e 15 26 02 02 02 02 02 02 02 09 01 01     .....&..........
    91ed:	01 09 01 02 02 02 02 02 02 02 02 02 01 30 01 01     .............0..
    91fd:	02 02 02 02 02 02 02 02 02 02 02 02 1b 01 01 02     ................
    920d:	02 02 02 02 02 02 02 02 02 02 02 02 01 01 02 02     ................
    921d:	02 02 02 02 02 02 02 02 02 02 02 01 01 02 02 02     ................
    922d:	02 02 01 02 01 02 02 02 02 02 01 01 02 02 02 02     ................
    923d:	02 02 01 02 02 02 02 02 02 01 01 02 02 02 02 02     ................
    924d:	01 02 01 02 02 02 02 02 01 01 02 02 02 02 02 02     ................
    925d:	02 02 02 02 02 02 02 01 01 02 02 02 02 02 02 02     ................
    926d:	02 02 02 02 02 02 01 01 02 02 02 02 02 02 02 02     ................
    927d:	02 02 02 02 02 01 01 25 01 02 02 02 02 02 02 02     .......%........
    928d:	02 02 01 06 01 01 01 02 02 02 02 02 02 02 02 02     ................
    929d:	30 04 01 01 01 01 01 01 01 01 01 01 01 01 01 01     0...............
    92ad:	01 01 01 02 02 2e 02 02 02 02 02 06 02 1b 30 09     ..............0.
    92bd:	02 02 02 02 15 02 02 02 02 02 02 04 02 25 30 09     .............%0.
    92cd:	02 02 02 02 02 26 02 02 02 02 02 02 02 02 02 02     .....&..........
    92dd:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    92ed:	02 02 02 55 52 41 43 49 4c 00 00 00 00 00 00 00     ...URACIL.......
	...
    9309:	00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    9319:	01 04 02 02 02 02 02 02 02 02 02 02 1e 2e 01 01     ................
    9329:	03 02 02 02 02 02 02 02 02 02 02 1e 02 01 01 02     ................
    9339:	01 02 02 01 02 02 02 02 01 02 02 02 01 01 02 01     ................
    9349:	02 02 01 02 02 02 02 02 02 02 02 01 01 02 01 02     ................
    9359:	02 01 02 01 02 02 02 02 02 02 01 01 02 02 01 01     ................
    9369:	31 02 02 02 02 01 02 02 02 01 01 02 02 02 02 02     1...............
    9379:	02 02 02 02 02 02 02 02 01 01 02 02 02 02 01 12     ................
    9389:	09 02 02 02 01 02 02 01 01 02 02 01 02 01 3e 01     ..............>.
    9399:	01 01 02 02 02 02 01 01 02 02 02 02 01 01 01 02     ................
    93a9:	01 02 02 02 02 01 01 02 01 02 02 02 02 02 02 02     ................
    93b9:	02 02 02 02 01 01 02 02 02 01 02 02 02 02 02 01     ................
    93c9:	02 06 18 01 01 02 02 02 02 02 02 02 02 02 02 02     ................
    93d9:	02 3c 01 01 01 01 01 01 01 01 01 01 01 01 01 01     .<..............
    93e9:	01 01 02 02 2e 02 02 02 02 02 06 02 1e 02 02 02     ................
    93f9:	02 02 02 18 02 3e 09 02 02 02 02 1e 02 12 31 02     .....>........1.
    9409:	02 02 04 02 3c 02 02 02 02 02 02 02 03 02 02 02     ....<...........
    9419:	02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02     ................
    9429:	02 02                                               ..

0000942b <intro_PCM_Data>:
    942b:	00 00 00 00 ff ff ff ff 00 00 00 00 00 00 ff ff     ................
    943b:	ff ff 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
    944b:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    945b:	ff ff 00 00 00 ff ff 00 00 ff ff 00 01 00 00 ff     ................
    946b:	ff ff 01 01 00 00 00 00 ff ff ff 00 00 00 ff fe     ................
    947b:	ff 00 00 ff ff 00 00 00 ff ff 00 01 01 00 ff ff     ................
    948b:	00 00 00 00 ff ff ff 00 00 00 01 01 01 00 ff 00     ................
    949b:	00 01 02 01 00 00 00 00 01 01 02 01 01 00 00 00     ................
    94ab:	00 01 01 01 00 ff ff 01 01 01 01 01 01 00 00 ff     ................
    94bb:	ff 00 01 01 01 00 00 ff fe ff ff 00 ff 00 ff ff     ................
    94cb:	ff 01 00 ff ff 00 00 00 ff 00 00 01 01 00 fd fe     ................
    94db:	fe f9 fb fa 01 05 07 04 00 fc fc 00 ff 02 01 04     ................
    94eb:	03 04 02 00 fd fc fd 00 03 05 06 02 01 ff 00 ff     ................
    94fb:	00 00 01 02 02 02 03 01 02 00 02 01 01 ff 00 00     ................
    950b:	00 03 01 02 ff 00 ff 01 00 00 01 ff 00 ff ff fe     ................
    951b:	02 ff 01 fe 00 02 01 ff fe 00 00 03 01 00 fd ff     ................
    952b:	fd f6 e8 e5 e7 f8 0e 1b 1d 0c f9 ea e9 f3 05 15     ................
    953b:	1d 19 14 02 f3 e6 e4 f2 07 1d 21 1a 04 f5 ec ec     ..........!.....
    954b:	f1 fb 07 13 1c 18 0d f8 ec e7 f5 fe 0b 10 13 12     ................
    955b:	0d 08 f9 fa ef f2 f7 00 0a 13 12 08 03 f9 f9 fa     ................
    956b:	f9 f9 00 01 0c 10 0d 07 00 f8 f7 fa f8 fc ff 06     ................
    957b:	0a 03 f1 e8 e2 f0 04 15 1c 12 02 f2 ee f2 ff 02     ................
    958b:	02 02 08 11 0f 00 f0 eb ef 09 13 16 0f 02 fd fa     ................
    959b:	f2 ee fa 04 16 20 13 03 f4 e9 f4 fc 0a 14 18 0d     ..... ..........
    95ab:	0a ff fa fc f1 e9 e8 f2 04 22 19 04 eb d6 e3 05     ........."......
    95bb:	13 16 ff e6 f8 13 28 24 fe de e5 00 15 0f f9 ee     ......($........
    95cb:	fd 0a 09 f4 d9 de fd 1e 2b 16 f5 ed f9 0d 1e 13     ........+.......
    95db:	0a 17 21 21 0f e4 d7 eb 0a 32 36 20 03 e6 d6 d9     ..!!.....26 ....
    95eb:	e1 f9 16 21 1d 0c ee dd d6 dd f2 00 13 1b 15 02     ...!............
    95fb:	f8 ef f9 06 07 fe f9 f9 07 19 0d 04 fd 00 1b 2e     ................
    960b:	25 15 fc 05 31 4f 4d 1d d9 c0 db 13 24 0c e1 cc     %...1OM.....$...
    961b:	dc f3 f8 de c4 c4 e7 08 13 fe e5 e3 f3 06 0e 02     ................
    962b:	02 17 2b 2f 15 e8 d6 e8 0c 3c 3e 34 1a 02 f6 fc     ..+/.....<>4....
    963b:	02 31 57 6b 51 ff a4 80 98 e7 50 68 52 08 cb af     .1WkQ.....PhR...
    964b:	c3 e7 05 10 fd ee e5 e6 ee f1 e3 e6 f0 04 1a 15     ................
    965b:	ff ed e5 0a 3c 54 41 0b d0 c2 e4 15 19 08 e9 eb     ....<TA.........
    966b:	02 12 0e f2 de f0 0a 14 16 ed e6 eb 0e 20 23 0f     ............. #.
    967b:	07 0e 18 19 01 e2 d4 ec 06 2b 24 09 ec d4 d6 eb     .........+$.....
    968b:	00 1b 27 21 04 d8 a9 9c bd f7 34 49 37 03 ce b2     ..'!......4I7...
    969b:	be dc ff 0c 0a 03 08 0b 04 ec d9 d6 f2 18 38 2c     ..............8,
    96ab:	14 fd fb 26 4c 57 38 06 da d8 f5 16 04 ec cf d7     ...&LW8.........
    96bb:	f2 02 ff ea da eb fb 03 fd e0 df e7 06 10 13 06     ................
    96cb:	04 08 0f 09 f5 dc dd f7 12 2f 20 02 e6 d4 e0 f8     ........./ .....
    96db:	0d 25 2c 25 09 e5 bd bc de 1a 4d 5a 40 0c da c5     .%,%......MZ@...
    96eb:	d3 ee 09 11 0b 04 08 07 fd e4 d4 d4 f1 13 2b 19     ..............+.
    96fb:	06 f0 f8 20 40 42 21 f4 d3 d9 f8 10 fc e7 d0 df     ... @B!.........
    970b:	f6 03 fc e9 df f2 fc 05 fa e3 e4 ef 0a 11 13 07     ................
    971b:	08 0c 12 08 f5 e0 e7 fe 17 2b 18 fe e4 d8 e7 fa     .........+......
    972b:	0e 20 24 1a fe dc bc c1 e5 1d 45 4a 2b fd d3 c8     . $.......EJ+...
    973b:	d7 f3 0a 0f 0a 06 08 07 fb e6 da df fb 1a 29 16     ..............).
    974b:	05 f1 02 26 40 39 19 ee d8 e1 ff 0d f9 e6 d5 e8     ...&@9..........
    975b:	fa 03 f8 e6 e1 f4 fb 03 f3 e4 e5 f3 09 0d 0d 03     ................
    976b:	06 0a 0f 03 f2 e0 ee 02 1c 28 13 fb e5 df f0 01     .........(......
    977b:	14 22 23 18 fd dd c4 ce f2 24 42 40 20 f5 d3 ce     ."#......$B@ ...
    978b:	df f8 0a 0c 05 04 06 05 f7 e5 db e4 fe 1a 21 0e     ..............!.
    979b:	ff f0 05 25 39 2d 0f ea dc e8 05 0a f8 e5 db ef     ...%9-..........
    97ab:	fe 03 f7 e8 e8 f9 ff 05 f2 e8 e9 fa 0a 0e 0b 03     ................
    97bb:	07 0a 0c ff ee e1 f1 03 1c 20 0b f6 e4 e2 f3 02     ......... ......
    97cb:	14 1e 1d 0f f5 d8 c6 d6 fa 27 3c 36 15 f0 d5 d6     .........'<6....
    97db:	e7 fe 0b 0b 05 04 06 03 f5 e6 df eb 03 1b 1b 0a     ................
    97eb:	fb f2 0a 25 33 23 06 e5 de ec 06 03 f3 e1 dd f0     ...%3#..........
    97fb:	fd 00 f3 e7 eb f9 fe 01 ee e9 eb fd 09 0c 07 03     ................
    980b:	06 0a 0a fd ee e6 f7 07 1e 1b 07 f5 e5 e8 f8 05     ................
    981b:	16 1c 1a 0a f2 d8 cd df 03 28 37 2d 0d ec d8 dd     .........(7-....
    982b:	ed 02 0b 09 04 05 06 03 f5 e8 e3 f2 08 1d 17 09     ................
    983b:	fb f8 10 28 30 1e 02 e7 e6 f5 0a 02 f5 e4 e6 f7     ...(0...........
    984b:	01 01 f5 ea f2 fd 01 01 ef ed f0 02 09 0c 06 04     ................
    985b:	08 0c 09 fd ee ec fc 0c 1e 17 05 f5 e9 ee fd 09     ................
    986b:	18 1c 18 08 f2 db d7 ea 0c 2b 34 26 08 eb dd e4     .........+4&....
    987b:	f4 06 0b 08 04 06 07 02 f4 ea e8 f7 0a 19 11 05     ................
    988b:	f9 fb 10 22 25 14 fc e9 eb fa 08 fe f4 e7 ed f9     ..."%...........
    989b:	01 fe f5 ef f7 fd 02 fe f2 f1 f6 03 07 08 03 03     ................
    98ab:	05 08 04 fb f1 f3 ff 0a 15 0d 01 f6 f0 f6 ff 07     ................
    98bb:	0f 11 0d 01 f3 e5 e5 f4 0b 1d 21 15 01 ee e8 ee     ..........!.....
    98cb:	fa 04 06 04 03 04 04 ff f6 f0 f0 fc 09 11 0a 02     ................
    98db:	f9 fe 0e 1a 1a 0c f9 ef f2 fe 05 fd f6 ed f4 fc     ................
    98eb:	00 fc f6 f3 fb fe 02 fd f5 f4 f9 03 06 07 02 03     ................
    98fb:	04 07 03 fb f2 f6 00 0b 12 09 ff f6 f2 f8 00 08     ................
    990b:	0e 0f 0a ff f2 e7 ea f8 0e 1c 1d 10 fe ef ec f2     ................
    991b:	fd 04 06 04 03 04 03 fe f6 f2 f4 ff 0b 10 08 01     ................
    992b:	fa 01 0f 1a 16 09 f8 f1 f6 01 04 fc f6 f0 f8 fe     ................
    993b:	01 fd f7 f6 fc ff 03 fc f6 f6 fd 05 07 06 03 03     ................
    994b:	04 06 02 fb f4 fa 02 0d 0f 06 fd f6 f5 fb 02 09     ................
    995b:	0f 0e 08 fd f1 e9 ef fd 11 1c 1a 0c fc ef ef f5     ................
    996b:	ff 06 07 04 03 04 03 fd f7 f3 f8 02 0c 0d 05 00     ................
    997b:	fb 05 11 18 12 05 f7 f3 f9 04 03 fc f6 f3 fa ff     ................
    998b:	00 fc f8 f9 ff 01 03 fb f7 f8 ff 06 07 06 03 04     ................
    999b:	05 06 02 fb f6 fd 04 0d 0d 05 fe f7 f7 fe 02 0a     ................
    99ab:	0e 0d 07 fc f1 ec f3 01 12 19 16 09 fb f0 f1 f9     ................
    99bb:	02 06 05 03 03 04 02 fc f7 f5 fa 04 0b 0a 03 ff     ................
    99cb:	fb 07 11 16 0c 02 ee eb fd f8 fa f8 ed f1 f7 f4     ................
    99db:	fd fb f5 f6 f7 fe ff f7 ef f2 f7 00 ff fc fa fb     ................
    99eb:	ff fd fa f2 ee f5 ff 07 07 ff f9 f4 f5 fd 02 08     ................
    99fb:	0b 0a 05 fd f3 ef f4 02 11 17 12 04 f5 ed ef f8     ................
    9a0b:	ff 03 02 ff 01 01 00 f9 f5 f3 fb 03 08 04 fd fb     ................
    9a1b:	f8 04 0c 0f 06 fe ec f0 ff f9 fc f7 ef f5 f7 f7     ................
    9a2b:	01 fc f8 f9 fd 03 03 fb f7 fc 03 0b 08 05 02 04     ................
    9a3b:	07 03 ff f5 f2 f8 00 07 05 fd f7 f2 f5 fc 00 05     ................
    9a4b:	08 06 00 f8 f0 ee f6 04 10 14 0f 02 f7 f3 f8 02     ................
    9a5b:	09 0e 0e 0c 0f 0f 0d 09 08 0b 16 1e 22 1c 16 10     ............"...
    9a6b:	0c 12 14 12 06 fa e8 f0 f8 f4 f9 f4 f1 f9 fb fc     ................
    9a7b:	03 fc f8 f8 f8 fb f7 ef ec f1 fa 01 00 02 04 0e     ................
    9a8b:	15 16 12 0b 0b 13 1e 26 26 21 1c 17 1a 18 16 13     .......&&!......
    9a9b:	0a 03 f7 ed e4 e3 e8 f4 ff 03 04 fe fc fd 05 0d     ................
    9aab:	11 11 09 02 f9 f0 e7 df db dc e2 ea f2 f4 f9 fb     ................
    9abb:	03 0d 16 1d 1d 19 13 17 17 1c 20 1d 1f 1d 17 13     .......... .....
    9acb:	04 f5 e7 d9 d4 d2 d3 d1 d1 cf d7 e1 f2 02 13 23     ...............#
    9adb:	2f 39 38 34 2c 22 1d 1e 18 0c f7 e1 d0 c9 ce d1     /984,"..........
    9aeb:	d7 d7 d7 d6 d6 dd e7 fa 0b 1c 26 2c 2f 35 3a 3f     ..........&,/5:?
    9afb:	44 44 43 36 24 0f f6 df c9 bc b7 be cb d8 dd de     DDC6$...........
    9b0b:	e6 ef 02 19 2b 33 38 30 29 2e 27 21 1b 0a fc f2     ....+380).'!....
    9b1b:	df d6 cb c1 be c0 c5 c8 ca ca d6 e4 f8 08 19 26     ...............&
    9b2b:	34 3f 42 45 43 43 48 4d 4b 40 26 0c ef dd d4 cb     4?BECCHMK@&.....
    9b3b:	cc c7 c8 c8 c8 cd d7 e8 fa 0e 1d 29 31 38 3c 3c     ...........)18<<
    9b4b:	39 32 2a 18 08 f5 e0 cf bd b3 b1 ba c6 d2 d5 d8     92*.............
    9b5b:	e1 ed 00 15 27 30 35 2f 30 39 39 3c 3d 34 2d 25     ....'05/099<=4-%
    9b6b:	13 04 ed d8 c9 c0 be be bb bf cb d8 e9 f6 04 13     ................
    9b7b:	26 34 3f 44 44 42 42 41 37 26 0c f6 de d3 cb c6     &4?DDBBA7&......
    9b8b:	c8 c2 c3 c1 c2 c8 d4 e4 f6 0a 18 25 30 38 3e 42     ...........%08>B
    9b9b:	45 45 44 39 2f 20 10 ff ea d9 cc ca ca ce ca cb     EED9/ ..........
    9bab:	d5 e1 f3 06 13 19 1f 1c 25 31 35 3c 3b 30 27 19     ........%15<;0'.
    9bbb:	05 f5 de cd c2 bc bb b9 b5 b9 c3 d0 e0 ec fb 0b     ................
    9bcb:	1e 2b 36 3b 3d 3f 44 45 41 35 23 13 01 fc f6 f0     .+6;=?DEA5#.....
    9bdb:	eb e0 d9 ce c8 c9 ce dc eb fb 07 12 1a 22 28 30     ............."(0
    9beb:	36 3a 3b 34 2c 1c 0d f8 e2 d3 c8 c7 c8 ca c5 c7     6:;4,...........
    9bfb:	ce d9 e9 f9 04 0b 10 10 1d 27 2d 36 35 2d 28 1d     .........'-65-(.
    9c0b:	0f 03 f2 e7 e1 df df dd d7 d9 de e7 ef f8 00 0d     ................
    9c1b:	1b 21 28 29 28 29 2d 2c 29 1e 11 06 f8 f5 f0 ec     .!()()-,).......
    9c2b:	e6 dd d6 cc c9 ca ce da e6 f4 fe 06 0d 14 1b 24     ...............$
    9c3b:	2b 31 32 2e 26 19 0d fa eb e0 da dd df e3 e1 e8     +12.&...........
    9c4b:	ee f9 07 13 19 1c 1a 16 1e 20 22 24 1d 13 0d 01     ......... "$....
    9c5b:	f7 ee e1 db d8 d9 dc db d6 db e1 e9 f0 f6 fb 06     ................
    9c6b:	10 14 19 19 19 1b 1f 1f 1e 13 0a 00 f7 f6 f3 f1     ................
    9c7b:	eb e6 e1 da dc df e7 f5 04 10 18 1f 22 26 29 2b     ............"&)+
    9c8b:	2c 2c 27 1e 13 03 f4 e4 d8 d0 ce d2 d7 dc dc e4     ,,'.............
    9c9b:	eb f7 04 0d 11 12 0d 0b 12 13 15 16 0f 07 02 f8     ................
    9cab:	f1 e8 de da da db de dd db e2 e8 f2 f9 02 0a 19     ................
    9cbb:	23 2a 2e 2c 2b 2c 2d 29 24 14 09 fc f0 ec e7 e3     #*.,+,-)$.......
    9ccb:	db d8 d4 d1 d4 d9 e3 f1 ff 09 10 15 17 1b 1e 1e     ................
    9cdb:	1f 1f 19 12 08 fb f0 e3 dc d5 d5 d8 dc de e0 e6     ................
    9ceb:	ed f8 00 08 0f 15 17 1c 1e 1c 1b 1b 17 12 0b 00     ................
    9cfb:	fa f0 ec ea ea e8 e8 e7 e4 e6 ea ef f7 01 08 0e     ................
    9d0b:	11 12 16 19 1a 1e 20 1f 1b 16 0c 04 fc f2 ed e8     ...... .........
    9d1b:	e6 e6 e9 e5 e6 ea ef f8 01 05 08 0b 0a 11 16 16     ................
    9d2b:	17 17 10 0a 03 fb f3 ea e3 de dc dd dd dd e1 e5     ................
    9d3b:	ed f4 fa 01 0b 14 19 20 1d 1c 1d 1e 1c 1b 14 0d     ....... ........
    9d4b:	08 00 fe fd fc f8 f7 f2 eb eb ec ee f6 fc 00 05     ................
    9d5b:	07 08 0c 10 12 18 1b 19 16 12 09 03 fa f1 ec e7     ................
    9d6b:	e5 e6 e8 e3 e5 e7 ec f5 fd 00 04 08 0a 11 16 18     ................
    9d7b:	1a 1b 17 14 0f 0b 04 fe fb f6 f2 f3 f0 eb ed ed     ................
    9d8b:	f2 f4 f9 fc 04 0a 0e 14 11 12 15 17 18 17 11 0c     ................
    9d9b:	07 01 fd fc fb f6 f3 ee e8 e6 e7 e9 ef f4 f9 fe     ................
    9dab:	ff 01 06 0c 0f 14 18 18 15 12 0e 0a 02 fe fa f9     ................
    9dbb:	f9 fa fc fb f9 fb 01 00 05 05 06 03 05 0b 0c 0f     ................
    9dcb:	0e 10 0f 0c 08 08 04 fd fd f8 f4 f6 ee ea eb e9     ................
    9ddb:	ec ee f2 f2 fc fe 02 08 07 09 0d 10 0f 12 0d 08     ................
    9deb:	06 03 01 02 03 fe fe fb f5 f8 f9 fc 02 0a 08 0b     ................
    9dfb:	0f 06 0b 0e 0c 0c 0f 0d 08 08 01 01 fb f6 f6 fa     ................
    9e0b:	f9 fa 01 fe fb 00 00 ff 01 00 ff fb fd 00 04 03     ................
    9e1b:	03 07 04 01 00 00 fa f9 fa f6 f5 f7 f0 f1 f0 f1     ................
    9e2b:	f7 fa fd 02 0b 0c 12 18 11 15 1b 12 14 13 09 03     ................
    9e3b:	02 fd f9 fd f9 f8 f8 f3 f3 f8 f9 fd 07 09 08 0c     ................
    9e4b:	0b 04 08 07 05 05 05 01 fe fa f6 f6 ef ec ef f1     ................
    9e5b:	f1 f5 fb fa fa 00 01 03 04 05 05 01 08 0c 0f 10     ................
    9e6b:	12 16 13 0b 0e 06 ff fe fd f6 f4 f5 e9 ee eb ee     ................
    9e7b:	f2 f6 fb 02 0c 0b 16 18 12 17 17 0e 10 0d 01 fc     ................
    9e8b:	fa f2 f0 f2 ed ed ed ea ec f2 f2 f9 02 04 05 0b     ................
    9e9b:	09 07 0d 0b 0c 0b 0d 09 09 05 03 02 fd f6 fc fd     ................
    9eab:	f4 fd fc f7 f5 fc f6 f9 fb fa fb f8 02 06 0c 0c     ................
    9ebb:	11 15 10 0e 0f 05 00 ff fb f3 f2 ed e4 e8 e2 e6     ................
    9ecb:	ea ee f1 f9 00 01 0d 0e 0c 13 12 0d 11 0d 04 02     ................
    9edb:	01 fb fc fe fa fc fc fd f8 01 ff ff 0a 07 05 08     ................
    9eeb:	08 ff 05 04 01 02 03 02 02 01 00 03 fd f9 02 fd     ................
    9efb:	f8 ff fb f3 f4 f4 eb f0 ee ed ee ee f4 fa ff 02     ................
    9f0b:	07 0b 09 0a 0b 05 06 02 ff f9 f9 f4 f2 f4 f2 f7     ................
    9f1b:	f7 fd fd 04 06 07 0e 0e 0c 0e 0d 06 08 06 00 00     ................
    9f2b:	00 ff fe fe fd 02 fe fb 04 02 ff 04 02 fc fd fe     ................
    9f3b:	f9 fb f9 f5 f7 f4 f8 ff 04 05 09 10 08 09 0c 04     ................
    9f4b:	01 02 fc f5 f8 ef eb ee ec ee f4 f6 fa 00 03 0a     ................
    9f5b:	0b 0f 0e 10 0d 0b 0c 05 03 fd fc f8 f9 f9 fa fc     ................
    9f6b:	fc 01 fd 05 04 05 0d 0a 08 0b 09 02 06 02 fe 00     ................
    9f7b:	00 fe fe fd fd 01 fb fc 04 00 ff 04 01 fb fe fe     ................
    9f8b:	f9 fc f8 f7 f8 f5 fb 01 05 05 0b 0f 06 0a 0a 03     ................
    9f9b:	01 02 fb f6 f8 ef ee f0 ee f2 f7 f9 fd 02 05 0a     ................
    9fab:	0b 0f 0d 0f 0b 0b 0a 04 02 fc fc f8 fa f9 fb fb     ................
    9fbb:	fc ff fd 05 02 06 0c 09 08 0b 07 01 05 01 ff ff     ................
    9fcb:	ff fd fd fc fd 00 fa fd 03 fe ff 03 ff fb ff fe     ................
    9fdb:	fb fc f8 f8 f8 f7 fd 02 05 04 0b 0b 05 09 08 03     ................
    9feb:	02 01 fa f8 f8 ef f1 f1 f1 f4 f8 f9 fe 01 05 09     ................
    9ffb:	0a 0d 0b 0d 09 0a 07 03 01 fc fb f8 fa f9 fb fb     ................
    a00b:	fd fe fe 03 00 06 0a 08 07 0a 04 01 05 00 ff ff     ................
    a01b:	fe fd fd fb fd ff fa fe 02 fd ff 02 fd fc ff fd     ................
    a02b:	fb fc f8 f9 f8 f7 fd 01 03 04 0a 08 03 08 05 01     ................
    a03b:	01 00 f9 f9 f7 f0 f2 f2 f2 f6 f8 f9 fe 01 06 08     ................
    a04b:	0a 0b 0a 0b 07 09 05 02 ff fd fb f8 fa f9 fb fa     ................
    a05b:	fd fd fe 02 00 06 08 06 07 08 02 02 04 ff fe fe     ................
    a06b:	fd fd fd fb fe fe fa 00 01 fd ff 01 fd fd ff fc     ................
    a07b:	fb fb f8 f9 f8 f9 fe 01 02 03 09 05 03 07 04 01     ................
    a08b:	01 ff f9 fa f6 f1 f4 f3 f4 f7 f9 fa ff 02 06 07     ................
    a09b:	09 09 0a 09 06 09 04 03 ff fe fb fa fb fb fc fb     ................
    a0ab:	ff fd 00 02 01 07 07 06 07 07 01 03 03 ff ff ff     ................
    a0bb:	fe fd fd fb fe fd fb 01 00 fd 01 00 fc fd ff fc     ................
    a0cb:	fc fb f9 fa f8 fa fe 01 02 03 08 04 04 07 02 01     ................
    a0db:	01 fe fa fb f6 f3 f5 f4 f5 f9 fa fc 00 02 06 06     ................
    a0eb:	09 08 09 08 06 08 03 02 ff fe fb fb fc fc fd fc     ................
    a0fb:	ff fe 01 01 02 08 06 05 07 06 01 04 03 00 ff ff     ................
    a10b:	ff fd fd fd 00 fd fd 02 00 fe 01 01 fd fe ff fd     ................
    a11b:	fd fb fa fb f9 fc ff 01 01 04 07 03 04 05 01 01     ................
    a12b:	00 fd fc fc f7 f6 f8 f6 f7 fa fc fe ff 02 04 04     ................
    a13b:	04 05 06 02 04 04 00 00 ff fe fd ff fe fe fd ff     ................
    a14b:	00 f9 fe 02 fd fc 04 02 ff 02 04 02 01 02 02 01     ................
    a15b:	ff fe fe fc fe 01 01 01 05 07 03 05 06 04 03 05     ................
    a16b:	02 00 00 fe fc fb f9 fa fd fe ff 00 01 01 00 02     ................
    a17b:	fc fc ff fc fa fa fa f9 fa f9 fb fc fd fe ff fe     ................
    a18b:	ff 01 00 fc 00 00 fe 01 00 ff ff 00 fd fe fb fe     ................
    a19b:	fc f8 fe ff f8 fb 04 fe fd 02 04 01 01 02 03 01     ................
    a1ab:	fe ff fe fc fd 01 01 01 05 04 04 05 05 02 03 05     ................
    a1bb:	01 00 ff fe fc fc fa fd ff ff 00 00 03 00 01 01     ................
    a1cb:	fb fc fd fc f9 fa fa fb fa fb fc fc ff fe ff fe     ................
    a1db:	ff 00 fe fb 00 fd fc ff fe fc fe ff fd fe fc fe     ................
    a1eb:	fc f9 fe fd f7 fd 03 fc fc 02 03 ff 00 01 02 ff     ................
    a1fb:	fd ff fd fc fe 01 01 01 04 03 04 02 04 01 03 02     ................
    a20b:	00 00 ff fe fc fd fc ff fe 01 00 02 02 01 02 02     ................
    a21b:	fb fd fe fd fa fb fc fd fd fd fd fe 00 01 00 fd     ................
    a22b:	00 00 00 fb 01 fd ff 00 fe fe 01 01 fc ff fd 01     ................
    a23b:	fa fb ff fd f9 ff 02 fd fd 03 02 00 00 03 03 ff     ................
    a24b:	fe ff fc fd ff 00 01 02 05 03 05 03 05 02 04 02     ................
    a25b:	01 00 00 fe fe fd fd fe 00 02 01 03 03 03 03 02     ................
    a26b:	fc 00 ff fe fc fd fe fd fe fe ff 01 01 03 01 01     ................
    a27b:	01 02 00 fe 03 fe 01 00 00 ff 03 00 fe 00 00 00     ................
    a28b:	fb fc 01 fd fa 02 02 fd ff 04 01 01 00 03 03 fe     ................
    a29b:	fe ff fc fd ff 00 00 03 03 03 03 03 04 02 03 01     ................
    a2ab:	02 fe ff fe fe fd fe fe 01 01 01 02 03 02 03 00     ................
    a2bb:	fd 00 fe ff fc fe fe fe fe ff ff 02 01 03 01 02     ................
    a2cb:	01 01 ff 00 03 fe 01 01 01 00 03 00 ff 01 00 00     ................
    a2db:	fc fd 01 fc fd 02 01 fd 00 04 01 02 00 04 02 ff     ................
    a2eb:	fe fe fb fd 00 00 01 02 03 03 03 04 03 03 03 02     ................
    a2fb:	01 ff ff fe ff fd fe ff 01 01 01 02 02 02 03 ff     ................
    a30b:	fe ff fe fe fc fe fe fe fe ff fe 01 00 02 00 01     ................
    a31b:	ff 01 fe 01 01 fe 01 00 00 00 03 ff 00 00 00 ff     ................
    a32b:	fb fd 01 fb ff 02 01 fc 01 03 01 01 01 04 01 fe     ................
    a33b:	fe fe fb fe 00 01 01 03 03 03 02 03 01 03 01 02     ................
    a34b:	00 fe 00 fe ff fd ff ff 01 00 00 01 01 01 02 fe     ................
    a35b:	fe 00 fe ff fe ff fe fd fd 00 fd ff 00 01 fe 00     ................
    a36b:	00 01 ff 01 01 00 ff ff ff fd ff ff 01 ff 02 01     ................
    a37b:	02 01 03 00 02 00 02 00 ff ff ff ff fe ff fe 01     ................
    a38b:	01 01 01 01 01 02 ff ff 00 ff fe fe fd ff fe ff     ................
    a39b:	ff 00 00 00 00 fe 01 fe 01 fe 00 00 fe ff ff ff     ................
    a3ab:	ff 01 ff 00 ff fe fe fd fe 00 fc ff 01 00 fd 00     ................
    a3bb:	01 01 00 00 01 00 fe 00 fe fd ff 00 00 00 01 02     ................
    a3cb:	02 02 03 01 02 00 03 ff 00 ff ff ff fe 00 ff 01     ................
    a3db:	01 01 01 00 01 01 ff ff 00 ff ff fe fe ff fe ff     ................
    a3eb:	ff 00 ff 00 00 ff 00 ff 00 fe 00 ff fe ff 00 ff     ................
    a3fb:	00 01 fe ff ff ff fe fd ff 00 fc ff 01 ff fe 00     ................
    a40b:	01 00 00 00 01 ff ff ff fe fe fe 01 ff 01 01 02     ................
    a41b:	01 03 01 01 01 00 03 ff 01 ff 00 ff ff ff 00 01     ................
    a42b:	01 01 01 00 01 02 ff 00 ff 00 ff fe ff ff ff ff     ................
    a43b:	ff ff ff 00 ff 00 ff 00 00 fe 00 fe fe ff 00 ff     ................
    a44b:	00 00 ff 00 ff ff fe fd 00 fe fd 00 01 ff ff 01     ................
    a45b:	01 ff 00 00 01 ff ff ff fe fe ff 01 ff 01 00 02     ................
    a46b:	00 03 00 01 00 01 01 ff 00 ff 00 fe 00 ff 01 01     ................
    a47b:	01 00 00 00 01 01 ff 00 ff 00 fe ff fe ff ff ff     ................
    a48b:	ff ff 00 00 00 00 ff ff ff ff 00 fe ff 00 00 ff     ................
    a49b:	00 ff fe 00 ff ff fe fd 00 fe fd 00 00 ff ff 01     ................
    a4ab:	01 ff 01 00 02 ff ff ff ff fd 00 00 ff 01 00 01     ................
    a4bb:	00 02 ff 02 ff 01 00 ff 00 ff 00 ff 00 ff 01 01     ................
    a4cb:	00 00 00 00 01 01 ff 00 ff ff ff ff ff ff ff ff     ................
    a4db:	00 ff 00 00 00 00 ff 00 ff ff ff fe ff ff ff ff     ................
    a4eb:	00 fe ff ff ff fe fe fe 00 fe fe 01 00 ff ff 01     ................
    a4fb:	00 00 00 01 01 ff ff ff fe fd 00 ff 00 00 01 01     ................
    a50b:	00 02 00 01 ff 02 ff 00 ff ff 00 fe 00 ff 01 00     ................
    a51b:	00 00 00 01 01 00 ff 00 ff ff ff ff ff ff ff ff     ................
    a52b:	ff ff 00 00 ff 00 ff 00 ff ff 00 fe ff 00 00 00     ................
    a53b:	01 ff ff ff ff fe fe fe 00 fd fe 00 00 ff ff 01     ................
    a54b:	00 00 00 01 00 ff ff ff fe fe 00 ff 00 00 01 00     ................
    a55b:	00 01 00 01 ff 01 ff 00 ff ff ff ff ff ff 00 ff     ................
    a56b:	00 00 00 00 00 00 ff 00 ff 00 ff ff ff ff ff 00     ................
    a57b:	00 ff 01 00 00 00 ff 00 ff ff ff fe ff fe ff ff     ................
    a58b:	00 ff ff ff fe fe fe fe ff fe ff 00 00 fe 00 00     ................
    a59b:	00 00 00 01 ff 00 ff 00 fe ff 01 ff 01 ff 01 00     ................
    a5ab:	01 01 01 01 ff 02 fe 01 fd 01 fe ff 00 ff 01 ff     ................
    a5bb:	02 00 02 00 02 ff 00 00 ff 00 ff ff ff ff ff 00     ................
    a5cb:	00 00 01 ff 01 01 ff 00 ff 00 ff ff fe fe ff 00     ................
    a5db:	ff ff fd 00 fd fe fd ff fe fe ff ff ff fe 00 00     ................
    a5eb:	00 00 00 01 ff 00 ff 00 00 00 02 00 02 00 02 01     ................
    a5fb:	01 01 01 01 00 01 00 00 fe 00 fe 00 ff 00 01 00     ................
    a60b:	01 00 01 ff 02 ff 01 00 ff 00 fe 00 ff 00 00 01     ................
    a61b:	00 01 01 00 02 01 00 00 01 00 00 ff ff fe 00 00     ................
    a62b:	ff 00 fe 00 fd fe fd ff fe fe ff ff fe fe 00 ff     ................
    a63b:	00 00 01 01 ff 00 ff 00 ff 00 01 ff 02 ff 02 00     ................
    a64b:	02 00 02 00 01 01 00 00 ff 01 fe 01 ff 01 00 00     ................
    a65b:	00 00 01 00 02 ff 01 ff 00 ff ff 00 ff 00 00 00     ................
    a66b:	00 01 01 00 02 00 00 00 00 ff fe ff fe fe ff ff     ................
    a67b:	ff ff fe 00 fd fe fd 00 fe ff ff ff fe fe 01 ff     ................
    a68b:	00 00 01 01 ff 00 ff 01 ff 01 00 00 01 00 02 ff     ................
    a69b:	02 00 02 ff 02 00 00 00 ff 00 fd 01 ff 01 00 00     ................
    a6ab:	01 01 00 00 01 ff 01 ff 00 fe 00 ff 00 ff ff 00     ................
    a6bb:	ff 01 00 00 01 01 ff 01 ff ff fe ff fe ff ff ff     ................
    a6cb:	ff ff ff ff fe fe fd 00 fd ff ff ff ff ff 01 fe     ................
    a6db:	00 ff 01 ff ff ff ff ff ff 00 ff ff 00 ff 00 ff     ................
    a6eb:	01 00 02 00 02 01 00 00 fe 00 fd 01 ff 01 ff 01     ................
    a6fb:	00 00 ff 00 00 ff 01 fe ff fd 00 ff 00 ff 00 ff     ................
    a70b:	00 00 00 ff 01 00 00 00 ff ff fe ff fd ff fe ff     ................
    a71b:	ff ff 00 fe ff fd fe ff fd ff fe 00 fe 00 ff ff     ................
    a72b:	ff ff 01 ff 00 ff 00 ff ff 00 fe 00 ff 00 00 ff     ................
    a73b:	00 00 02 ff 02 ff 00 ff ff ff fe 01 ff 01 ff 01     ................
    a74b:	00 00 ff 00 ff 00 00 fe ff fe 01 ff 01 ff 01 00     ................
    a75b:	01 01 01 01 02 00 01 00 ff ff ff 00 fd 00 fe 00     ................
    a76b:	ff ff 00 fe 00 fd ff fe fe 00 fe 00 fd 00 fe ff     ................
    a77b:	ff ff 00 ff 00 fe 00 fe 00 00 ff 00 ff 00 ff 00     ................
    a78b:	00 00 02 ff 02 ff ff fe ff ff fe 01 ff 01 fe 01     ................
    a79b:	ff 00 ff 00 ff 00 00 ff ff fe 00 ff 01 ff 01 00     ................
    a7ab:	00 01 00 01 00 ff 01 00 00 ff ff ff fe 00 ff 00     ................
    a7bb:	ff 00 00 ff 00 fe 00 ff 00 00 ff 00 fe 01 ff 00     ................
    a7cb:	ff 00 00 00 00 fe ff ff 00 00 ff 00 ff 00 ff 00     ................
    a7db:	00 00 01 00 01 fe 00 fe ff fe ff 00 ff 00 ff 00     ................
    a7eb:	ff 00 ff ff fe ff ff ff ff ff 00 ff 00 ff 00 00     ................
    a7fb:	00 00 00 00 00 ff 01 00 00 ff ff fe fe 00 ff 00     ................
    a80b:	ff 00 ff ff ff fe 00 ff 00 ff ff ff fe 00 fe 00     ................
    a81b:	ff 00 ff ff ff fe ff ff 00 ff ff ff ff 00 ff 00     ................
    a82b:	ff 00 00 00 00 fe ff fe ff fe ff ff ff ff ff 00     ................
    a83b:	ff ff ff ff fe ff fe ff fe ff ff ff ff ff 00 ff     ................
    a84b:	00 00 ff ff ff ff 00 ff ff fe ff fe fe ff ff 00     ................
    a85b:	ff 00 fe fe fe fe ff fe ff fe ff fe fe ff fe ff     ................
    a86b:	fe 00 ff ff fe fe ff fe ff fe ff ff ff ff fe ff     ................
    a87b:	ff 00 ff 00 00 fe ff fe ff fd ff ff ff ff ff ff     ................
    a88b:	ff ff ff ff fe ff ff ff fe ff ff ff ff ff 00 00     ................
    a89b:	00 00 00 00 ff 00 00 00 00 ff ff fe ff ff 00 00     ................
    a8ab:	ff 00 fe ff fe ff 00 ff 00 ff 00 fe ff ff ff 00     ................
    a8bb:	ff 00 ff 00 ff ff ff ff 00 ff 00 00 00 00 00 01     ................
    a8cb:	00 01 00 02 01 00 01 00 01 ff 01 00 02 01 01 01     ................
    a8db:	01 01 01 01 01 02 01 02 01 02 01 02 02 02 02 02     ................
    a8eb:	02 02 02 02 02 02 02 02 02 01 01 00 02 01 02 02     ................
    a8fb:	01 02 00 01 00 01 01 01 02 01 01 00 01 00 01 01     ................
    a90b:	01 01 00 01 00 00 00 00 01 00 00 00 01 00 00 01     ................
    a91b:	01 02 01 02 00 00 00 00 00 00 01 00 01 00 01 01     ................
    a92b:	01 00 01 01 01 01 01 01 00 01 01 02 01 02 01 02     ................
    a93b:	02 01 01 01 01 02 02 01 01 01 01 00 01 01 02 02     ................
    a94b:	01 01 00 01 00 01 01 01 01 01 01 00 01 00 01 00     ................
    a95b:	01 01 01 01 00 00 00 00 01 00 00 00 01 00 00 00     ................
    a96b:	00 01 00 01 00 00 00 00 00 00 01 00 00 00 01 00     ................
	...
    a983:	ff 00 00 01 00 01 00 01 00 01 00 01 00 02 00 01     ................
    a993:	00 fb 01 ff 00 ff 00 ff 00 00 ff 00 ff 00 ff 00     ................
    a9a3:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    a9b3:	ff 00 ff 00 00 ff 00 ff                             ........

0000a9bb <patch00>:
    a9bb:	00 02 04 00 07 70 00 00 d8 00 08 3c 01 05 00 00     .....p.....<....
    a9cb:	ff                                                  .

0000a9cc <patch01>:
    a9cc:	00 02 05 00 07 a0 00 08 1e 05 05 00 00 ff           ..............

0000a9da <patch02>:
    a9da:	00 02 09 00 07 d0 00 00 ec 00 08 3c 05 03 0c 05     ...........<....
    a9ea:	05 00 00 ff                                         ....

0000a9ee <patch03>:
    a9ee:	00 02 03 00 07 a0 00 00 f6 00 08 28 01 03 06 01     ...........(....
    a9fe:	03 06 01 03 06 01 03 06 01 03 06 01 05 00 00 ff     ................

0000aa0e <patch04>:
    aa0e:	00 02 03 00 07 a0 00 00 f6 00 08 46 01 04 06 01     ...........F....
    aa1e:	04 06 01 04 06 01 04 06 01 04 06 01 05 00 00 ff     ................

0000aa2e <patch05>:
    aa2e:	00 02 03 00 07 60 00 00 00 00 08 14 0a 05 00 00     .....`..........
    aa3e:	ff                                                  .

0000aa3f <patch06>:
    aa3f:	00 02 08 00 00 d8 00 08 50 00 07 f0 05 04 02 00     ........P.......
    aa4f:	07 f0 05 04 02 00 07 f0 05 03 02 00 07 f0 05 03     ................
    aa5f:	02 00 07 f0 05 07 f0 05 07 f0 00 ff                 ............

0000aa6b <patches>:
    aa6b:	00 00 00 bb a9 00 00 00 00 00 00 00 cc a9 00 00     ................
    aa7b:	00 00 00 00 00 da a9 00 00 00 00 00 00 00 ee a9     ................
    aa8b:	00 00 00 00 00 00 00 0e aa 00 00 00 00 00 00 00     ................
    aa9b:	2e aa 00 00 00 00 00 00 00 3f aa 00 00 00 00 01     .........?......
    aaab:	2b 94 00 00 90 15 90 15                             +.......

0000aab3 <__c.2037>:
    aab3:	4c 45 56 45 4c 20 44 45 53 49 47 4e 3a 20 41 4e     LEVEL DESIGN: AN
    aac3:	44 52 45 41 53 20 57 55 45 53 54 00                 DREAS WUEST.

0000aacf <__c.2035>:
    aacf:	50 52 4f 47 52 41 4d 3a 20 4d 41 52 54 49 4e 20     PROGRAM: MARTIN 
    aadf:	53 55 53 54 45 4b 00                                SUSTEK.

0000aae6 <__c.2033>:
    aae6:	32 30 31 31 20 55 5a 45 42 4f 58 20 41 54 4f 4d     2011 UZEBOX ATOM
    aaf6:	49 58 00                                            IX.

0000aaf9 <__c.1904>:
    aaf9:	4c 45 56 45 4c 00                                   LEVEL.

0000aaff <__c.1897>:
    aaff:	44 49 53 54 3a 00                                   DIST:.

0000ab05 <__c.1895>:
    ab05:	4d 4f 56 45 53 3a 00                                MOVES:.

0000ab0c <__c.1893>:
    ab0c:	54 49 4d 45 3a 00                                   TIME:.

0000ab12 <__ctors_end>:
    ab12:	11 24       	eor	r1, r1
    ab14:	1f be       	out	0x3f, r1	; 63
    ab16:	cf ef       	ldi	r28, 0xFF	; 255
    ab18:	d0 e1       	ldi	r29, 0x10	; 16
    ab1a:	de bf       	out	0x3e, r29	; 62
    ab1c:	cd bf       	out	0x3d, r28	; 61

0000ab1e <wdt_init>:
void Initialize(void) __attribute__((naked)) __attribute__((section(".init8")));


void wdt_init(void)
{
    MCUSR = 0;
    ab1e:	14 be       	out	0x34, r1	; 52
    wdt_disable();
    ab20:	88 e1       	ldi	r24, 0x18	; 24
    ab22:	0f b6       	in	r0, 0x3f	; 63
    ab24:	f8 94       	cli
    ab26:	80 93 60 00 	sts	0x0060, r24
    ab2a:	10 92 60 00 	sts	0x0060, r1
    ab2e:	0f be       	out	0x3f, r0	; 63

0000ab30 <__do_copy_data>:
    ab30:	11 e0       	ldi	r17, 0x01	; 1
    ab32:	a0 e0       	ldi	r26, 0x00	; 0
    ab34:	b1 e0       	ldi	r27, 0x01	; 1
    ab36:	ee e9       	ldi	r30, 0x9E	; 158
    ab38:	f2 ee       	ldi	r31, 0xE2	; 226
    ab3a:	02 c0       	rjmp	.+4      	; 0xab40 <.do_copy_data_start>

0000ab3c <.do_copy_data_loop>:
    ab3c:	05 90       	lpm	r0, Z+
    ab3e:	0d 92       	st	X+, r0

0000ab40 <.do_copy_data_start>:
    ab40:	a2 30       	cpi	r26, 0x02	; 2
    ab42:	b1 07       	cpc	r27, r17
    ab44:	d9 f7       	brne	.-10     	; 0xab3c <.do_copy_data_loop>

0000ab46 <__do_clear_bss>:
    ab46:	1e e0       	ldi	r17, 0x0E	; 14
    ab48:	a0 e2       	ldi	r26, 0x20	; 32
    ab4a:	b1 e0       	ldi	r27, 0x01	; 1
    ab4c:	01 c0       	rjmp	.+2      	; 0xab50 <.do_clear_bss_start>

0000ab4e <.do_clear_bss_loop>:
    ab4e:	1d 92       	st	X+, r1

0000ab50 <.do_clear_bss_start>:
    ab50:	af 3d       	cpi	r26, 0xDF	; 223
    ab52:	b1 07       	cpc	r27, r17
    ab54:	e1 f7       	brne	.-8      	; 0xab4e <.do_clear_bss_loop>

0000ab56 <Initialize>:

/**
 * Called by the assembler initialization routines, should not be called directly.
 */

void Initialize(void){
    ab56:	0e 94 dd 5a 	call	0xb5ba	; 0xb5ba <isEepromFormatted>
    ab5a:	88 23       	and	r24, r24
    ab5c:	11 f4       	brne	.+4      	; 0xab62 <Initialize+0xc>
    ab5e:	0e 94 bd 5b 	call	0xb77a	; 0xb77a <FormatEeprom>
	int i;

	if(!isEepromFormatted()) FormatEeprom();

	cli();
    ab62:	f8 94       	cli
    ab64:	e2 e2       	ldi	r30, 0x22	; 34
    ab66:	fb e0       	ldi	r31, 0x0B	; 11
	
	//Initialize the mixer buffer
	for(i=0;i<MIX_BANK_SIZE*2;i++){
		mix_buf[i]=0x80;
    ab68:	80 e8       	ldi	r24, 0x80	; 128
    ab6a:	81 93       	st	Z+, r24
	if(!isEepromFormatted()) FormatEeprom();

	cli();
	
	//Initialize the mixer buffer
	for(i=0;i<MIX_BANK_SIZE*2;i++){
    ab6c:	9d e0       	ldi	r25, 0x0D	; 13
    ab6e:	ee 32       	cpi	r30, 0x2E	; 46
    ab70:	f9 07       	cpc	r31, r25
    ab72:	d9 f7       	brne	.-10     	; 0xab6a <Initialize+0x14>
		mix_buf[i]=0x80;
	}	
	
	mix_pos=mix_buf;
    ab74:	82 e2       	ldi	r24, 0x22	; 34
    ab76:	9b e0       	ldi	r25, 0x0B	; 11
    ab78:	90 93 2f 0d 	sts	0x0D2F, r25
    ab7c:	80 93 2e 0d 	sts	0x0D2E, r24
	mix_bank=0;
    ab80:	10 92 30 0d 	sts	0x0D30, r1

	for(i=0;i<CHANNELS;i++){
		mixer.channels.all[i].volume=0;
    ab84:	10 92 34 0d 	sts	0x0D34, r1
    ab88:	10 92 3e 0d 	sts	0x0D3E, r1
    ab8c:	10 92 48 0d 	sts	0x0D48, r1
    ab90:	10 92 52 0d 	sts	0x0D52, r1
		UBRR0L=56; //31250 bauds (.5% error)
	#endif

	
	//stop timers
	TCCR1B=0;
    ab94:	10 92 81 00 	sts	0x0081, r1
	TCCR0B=0;
    ab98:	15 bc       	out	0x25, r1	; 37
	
	//set ports
	DDRC=0xff; //video dac
    ab9a:	8f ef       	ldi	r24, 0xFF	; 255
    ab9c:	87 b9       	out	0x07, r24	; 7
	DDRB=0xff; //h-sync for ad725
    ab9e:	84 b9       	out	0x04, r24	; 4
	DDRD=(1<<PD7)+(1<<PD4); //audio-out + led 
    aba0:	80 e9       	ldi	r24, 0x90	; 144
    aba2:	8a b9       	out	0x0a, r24	; 10
	PORTD|=(1<<PD4)+(1<<PD3)+(1<<PD2); //turn on led & activate pull-ups for soft-power switches
    aba4:	8b b1       	in	r24, 0x0b	; 11
    aba6:	8c 61       	ori	r24, 0x1C	; 28
    aba8:	8b b9       	out	0x0b, r24	; 11


	//setup port A for joypads
	DDRA =0b00001100; //set only control lines as outputs
    abaa:	8c e0       	ldi	r24, 0x0C	; 12
    abac:	81 b9       	out	0x01, r24	; 1
	PORTA=0b11111011; //activate pullups on the data lines
    abae:	8b ef       	ldi	r24, 0xFB	; 251
    abb0:	82 b9       	out	0x02, r24	; 2
	
	//PORTD=0;
	
	//set sync parameters. starts at odd field, in pre-eq pulses, line 1
	sync_phase=SYNC_PHASE_PRE_EQ;
    abb2:	10 92 fa 0a 	sts	0x0AFA, r1
	sync_pulse=SYNC_PRE_EQ_PULSES;
    abb6:	86 e0       	ldi	r24, 0x06	; 6
    abb8:	80 93 fb 0a 	sts	0x0AFB, r24

	//set rendering parameters
	render_lines_count_tmp=FRAME_LINES;
    abbc:	80 ee       	ldi	r24, 0xE0	; 224
    abbe:	80 93 07 0b 	sts	0x0B07, r24
	first_render_line_tmp=FIRST_RENDER_LINE;
    abc2:	84 e1       	ldi	r24, 0x14	; 20
    abc4:	80 93 06 0b 	sts	0x0B06, r24
	

	//clear timers
	TCNT1H=0;
    abc8:	10 92 85 00 	sts	0x0085, r1
	TCNT1L=0;
    abcc:	10 92 84 00 	sts	0x0084, r1

	//set sync generator counter on TIMER1
	OCR1AH=HDRIVE_CL_TWICE>>8;
    abd0:	83 e0       	ldi	r24, 0x03	; 3
    abd2:	80 93 89 00 	sts	0x0089, r24
	OCR1AL=HDRIVE_CL_TWICE&0xff;
    abd6:	8d e8       	ldi	r24, 0x8D	; 141
    abd8:	80 93 88 00 	sts	0x0088, r24

	TCCR1B=(1<<WGM12)+(1<<CS10);//CTC mode, use OCR1A for match
    abdc:	89 e0       	ldi	r24, 0x09	; 9
    abde:	80 93 81 00 	sts	0x0081, r24
	TIMSK1=(1<<OCIE1A);			//generate interrupt on match
    abe2:	82 e0       	ldi	r24, 0x02	; 2
    abe4:	80 93 6f 00 	sts	0x006F, r24

	//set clock divider counter for AD725 on TIMER0
	//outputs 14.31818Mhz (4FSC)
	TCCR0A=(1<<COM0A0)+(1<<WGM01); //toggle on compare match + CTC
    abe8:	82 e4       	ldi	r24, 0x42	; 66
    abea:	84 bd       	out	0x24, r24	; 36
	OCR0A=0; //divide main clock by 2
    abec:	17 bc       	out	0x27, r1	; 39
	TCCR0B=(1<<CS00); //enable timer, no pre-scaler
    abee:	91 e0       	ldi	r25, 0x01	; 1
    abf0:	95 bd       	out	0x25, r25	; 37

	//set sound PWM on TIMER2
	TCCR2A=(1<<COM2A1)+(1<<WGM21)+(1<<WGM20); //Fast PWM	
    abf2:	83 e8       	ldi	r24, 0x83	; 131
    abf4:	80 93 b0 00 	sts	0x00B0, r24
	OCR2A=0; //duty cycle (amplitude)
    abf8:	10 92 b3 00 	sts	0x00B3, r1
	TCCR2B=(1<<CS20);  //enable timer, no pre-scaler
    abfc:	90 93 b1 00 	sts	0x00B1, r25

	SYNC_PORT=(1<<SYNC_PIN)|(1<<VIDEOCE_PIN); //set sync & chip enable line to hi
    ac00:	81 e1       	ldi	r24, 0x11	; 17
    ac02:	85 b9       	out	0x05, r24	; 5

	burstOffset=0;
    ac04:	10 92 13 0b 	sts	0x0B13, r1
	curr_frame=0;
    ac08:	10 92 fe 0a 	sts	0x0AFE, r1
	vsync_phase=0;
    ac0c:	10 92 ff 0a 	sts	0x0AFF, r1
	joypad1_status_hi=0;
    ac10:	10 92 0e 0b 	sts	0x0B0E, r1
    ac14:	10 92 0d 0b 	sts	0x0B0D, r1
	joypad2_status_hi=0;
    ac18:	10 92 12 0b 	sts	0x0B12, r1
    ac1c:	10 92 11 0b 	sts	0x0B11, r1
	snesMouseEnabled=false;
    ac20:	10 92 20 0b 	sts	0x0B20, r1
	sound_enabled=1;
    ac24:	90 93 33 0d 	sts	0x0D33, r25

	//enable color correction
	ReadButtons();
    ac28:	0e 94 91 5a 	call	0xb522	; 0xb522 <ReadButtons>
	if(ReadJoypad(0)&BTN_B){
    ac2c:	80 e0       	ldi	r24, 0x00	; 0
    ac2e:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    ac32:	80 ff       	sbrs	r24, 0
    ac34:	03 c0       	rjmp	.+6      	; 0xac3c <Initialize+0xe6>
		SetColorBurstOffset(4);
    ac36:	84 e0       	ldi	r24, 0x04	; 4
    ac38:	0e 94 6a 5a 	call	0xb4d4	; 0xb4d4 <SetColorBurstOffset>
	}
	
	InitializeVideoMode();
    ac3c:	0e 94 17 67 	call	0xce2e	; 0xce2e <InitializeVideoMode>

	sei();
    ac40:	78 94       	sei
	
	DisplayLogo();
    ac42:	0e 94 dc 67 	call	0xcfb8	; 0xcfb8 <DisplayLogo>
    ac46:	0e 94 e8 70 	call	0xe1d0	; 0xe1d0 <main>
    ac4a:	0c 94 4d 71 	jmp	0xe29a	; 0xe29a <_exit>

0000ac4e <__bad_interrupt>:
    ac4e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000ac52 <sub_video_mode3>:
	; Mode 3 with NO scrolling
	;***************************************************	
	sub_video_mode3:

		;wait cycles to align with next hsync
		ldi r16,9
    ac52:	09 e0       	ldi	r16, 0x09	; 9
		dec r16
    ac54:	0a 95       	dec	r16
		brne .-4		
    ac56:	f1 f7       	brne	.-4      	; 0xac54 <sub_video_mode3+0x2>
		rjmp .
    ac58:	00 c0       	rjmp	.+0      	; 0xac5a <sub_video_mode3+0x8>


		;Set ramtiles indexes in VRAM 
		ldi ZL,lo8(ram_tiles_restore);
    ac5a:	eb e8       	ldi	r30, 0x8B	; 139
		ldi ZH,hi8(ram_tiles_restore);
    ac5c:	fa e0       	ldi	r31, 0x0A	; 10

		ldi YL,lo8(vram)
    ac5e:	c0 e2       	ldi	r28, 0x20	; 32
		ldi YH,hi8(vram)
    ac60:	d1 e0       	ldi	r29, 0x01	; 1

		lds r18,free_tile_index
    ac62:	20 91 ca 0d 	lds	r18, 0x0DCA


		clr r16
    ac66:	00 27       	eor	r16, r16

0000ac68 <upd_loop>:
	upd_loop:	
		ldd XL,Z+0
    ac68:	a0 81       	ld	r26, Z
		ldd XH,Z+1
    ac6a:	b1 81       	ldd	r27, Z+1	; 0x01
	
		add XL,YL
    ac6c:	ac 0f       	add	r26, r28
		adc XH,YH
    ac6e:	bd 1f       	adc	r27, r29

		ld r17,X	;currbgtile
    ac70:	1c 91       	ld	r17, X
		std Z+2,r17
    ac72:	12 83       	std	Z+2, r17	; 0x02

		cp r16,r18
    ac74:	02 17       	cp	r16, r18
		brsh noov
    ac76:	08 f4       	brcc	.+2      	; 0xac7a <noov>
		mov r17,r16
    ac78:	10 2f       	mov	r17, r16

0000ac7a <noov>:
	noov:
		st X,r17
    ac7a:	1c 93       	st	X, r17
	
		adiw ZL,3 ;sizeof(ram_tiles_restore)
    ac7c:	33 96       	adiw	r30, 0x03	; 3

		inc r16
    ac7e:	03 95       	inc	r16
		cpi r16,RAM_TILES_COUNT
    ac80:	08 31       	cpi	r16, 0x18	; 24
		brlo upd_loop ;23
    ac82:	90 f3       	brcs	.-28     	; 0xac68 <upd_loop>



		ldi r16,73-6-RAM_TILES_COUNT ;222*7 
    ac84:	0b e2       	ldi	r16, 0x2B	; 43

0000ac86 <wait_loop>:
	wait_loop:
	
		ldi r17,6
    ac86:	16 e0       	ldi	r17, 0x06	; 6
		dec r17
    ac88:	1a 95       	dec	r17
		brne .-4
    ac8a:	f1 f7       	brne	.-4      	; 0xac88 <wait_loop+0x2>

		dec r16
    ac8c:	0a 95       	dec	r16
		brne wait_loop
    ac8e:	d9 f7       	brne	.-10     	; 0xac86 <wait_loop>

	


		ldi YL,lo8(vram)
    ac90:	c0 e2       	ldi	r28, 0x20	; 32
		ldi YH,hi8(vram)
    ac92:	d1 e0       	ldi	r29, 0x01	; 1

		ldi r16,SCREEN_TILES_V*TILE_HEIGHT; total scanlines to draw (28*8)
    ac94:	00 ee       	ldi	r16, 0xE0	; 224
		mov r10,r16
    ac96:	a0 2e       	mov	r10, r16
		clr r22
    ac98:	66 27       	eor	r22, r22
		ldi r23,TILE_WIDTH ;tile width in pixels
    ac9a:	78 e0       	ldi	r23, 0x08	; 8

0000ac9c <next_text_line>:




	next_text_line:	
		rcall hsync_pulse ;3+144=147
    ac9c:	2c d2       	rcall	.+1112   	; 0xb0f6 <hsync_pulse>

		ldi r19,43 - 4 + CENTER_ADJUSTMENT 	
    ac9e:	37 e2       	ldi	r19, 0x27	; 39
		dec r19			
    aca0:	3a 95       	dec	r19
		brne .-4
    aca2:	f1 f7       	brne	.-4      	; 0xaca0 <next_text_line+0x4>

		;***draw line***
		call render_tile_line
    aca4:	0e 94 88 56 	call	0xad10	; 0xad10 <render_tile_line>

		ldi r19,7 + 4 - CENTER_ADJUSTMENT	
    aca8:	3b e0       	ldi	r19, 0x0B	; 11
		dec r19			
    acaa:	3a 95       	dec	r19
		brne .-4
    acac:	f1 f7       	brne	.-4      	; 0xacaa <next_text_line+0xe>
	
		rjmp .
    acae:	00 c0       	rjmp	.+0      	; 0xacb0 <next_text_line+0x14>

		dec r10
    acb0:	aa 94       	dec	r10
		breq text_frame_end
    acb2:	89 f0       	breq	.+34     	; 0xacd6 <text_frame_end>
	
		inc r22
    acb4:	63 95       	inc	r22
		lpm ;3 nop
    acb6:	c8 95       	lpm

		cpi r22,TILE_HEIGHT ;last char line? 1
    acb8:	68 30       	cpi	r22, 0x08	; 8
		breq next_text_row 
    acba:	29 f0       	breq	.+10     	; 0xacc6 <next_text_row>
	
		;wait to align with next_tile_row instructions (+1 cycle for the breq)
		lpm ;3 nop
    acbc:	c8 95       	lpm
		lpm ;3 nop
    acbe:	c8 95       	lpm
		lpm ;3 nop
    acc0:	c8 95       	lpm
		nop
    acc2:	00 00       	nop
		rjmp next_text_line	
    acc4:	eb cf       	rjmp	.-42     	; 0xac9c <next_text_line>

0000acc6 <next_text_row>:

	next_text_row:
		clr r22		;current char line			;1	
    acc6:	66 27       	eor	r22, r22

		clr r0
    acc8:	00 24       	eor	r0, r0
		ldi r19,VRAM_TILES_H
    acca:	3e e1       	ldi	r19, 0x1E	; 30
		add YL,r19
    accc:	c3 0f       	add	r28, r19
		adc YH,r0
    acce:	d0 1d       	adc	r29, r0

		lpm
    acd0:	c8 95       	lpm
		nop
    acd2:	00 00       	nop

		rjmp next_text_line
    acd4:	e3 cf       	rjmp	.-58     	; 0xac9c <next_text_line>

0000acd6 <text_frame_end>:

	text_frame_end:

		ldi r19,5
    acd6:	35 e0       	ldi	r19, 0x05	; 5
		dec r19			
    acd8:	3a 95       	dec	r19
		brne .-4
    acda:	f1 f7       	brne	.-4      	; 0xacd8 <text_frame_end+0x2>
		rjmp .
    acdc:	00 c0       	rjmp	.+0      	; 0xacde <text_frame_end+0x8>

		rcall hsync_pulse ;145
    acde:	0b d2       	rcall	.+1046   	; 0xb0f6 <hsync_pulse>
	
		clr r1
    ace0:	11 24       	eor	r1, r1
		call RestoreBackground
    ace2:	0e 94 00 67 	call	0xce00	; 0xce00 <RestoreBackground>

		;set vsync flag if beginning of next frame (each two fields)
		ldi r17,1
    ace6:	11 e0       	ldi	r17, 0x01	; 1
		lds r16,curr_field
    ace8:	00 91 fd 0a 	lds	r16, 0x0AFD
		eor r16,r17
    acec:	01 27       	eor	r16, r17
		sts curr_field,r16
    acee:	00 93 fd 0a 	sts	0x0AFD, r16

		lds r18,curr_frame
    acf2:	20 91 fe 0a 	lds	r18, 0x0AFE
		tst r16
    acf6:	00 23       	and	r16, r16
		breq .+2
    acf8:	09 f0       	breq	.+2      	; 0xacfc <text_frame_end+0x26>
		eor r18,r17
    acfa:	21 27       	eor	r18, r17
		sts curr_frame,r18
    acfc:	20 93 fe 0a 	sts	0x0AFE, r18

		;set vsync flag if beginning of next frame
		ldi ZL,1
    ad00:	e1 e0       	ldi	r30, 0x01	; 1
		sts vsync_flag,ZL
    ad02:	e0 93 fc 0a 	sts	0x0AFC, r30

		;clear any pending timer int
		ldi ZL,(1<<OCF1A)
    ad06:	e2 e0       	ldi	r30, 0x02	; 2
		sts _SFR_MEM_ADDR(TIFR1),ZL
    ad08:	e0 93 36 00 	sts	0x0036, r30



		clr r1
    ad0c:	11 24       	eor	r1, r1


		ret
    ad0e:	08 95       	ret

0000ad10 <render_tile_line>:
	;*************************************************
	render_tile_line:

		;load first tile and determine if its a ROM or RAM tile

		movw XL,YL
    ad10:	de 01       	movw	r26, r28

		mul r22,r23
    ad12:	67 9f       	mul	r22, r23

		nop
    ad14:	00 00       	nop

		lds r16,tile_table_lo 
    ad16:	00 91 08 0b 	lds	r16, 0x0B08
		lds r17,tile_table_hi
    ad1a:	10 91 09 0b 	lds	r17, 0x0B09
		subi r16,lo8(RAM_TILES_COUNT*TILE_HEIGHT*TILE_WIDTH)
    ad1e:	00 50       	subi	r16, 0x00	; 0
		sbci r17,hi8(RAM_TILES_COUNT*TILE_HEIGHT*TILE_WIDTH)
    ad20:	16 40       	sbci	r17, 0x06	; 6

		add r16,r0
    ad22:	00 0d       	add	r16, r0
		adc r17,r1
    ad24:	11 1d       	adc	r17, r1
		movw r2,r16			;rom tiles
    ad26:	18 01       	movw	r2, r16

		ldi r16,lo8(ram_tiles)
    ad28:	0b e8       	ldi	r16, 0x8B	; 139
		ldi r17,hi8(ram_tiles)
    ad2a:	14 e0       	ldi	r17, 0x04	; 4
		add r16,r0
    ad2c:	00 0d       	add	r16, r0
		adc r17,r1
    ad2e:	11 1d       	adc	r17, r1
		movw r4,r16			;ram tiles
    ad30:	28 01       	movw	r4, r16

		ldi r19,TILE_HEIGHT*TILE_WIDTH
    ad32:	30 e4       	ldi	r19, 0x40	; 64
		ldi r17,SCREEN_TILES_H
    ad34:	1e e1       	ldi	r17, 0x1E	; 30

	    ld r18,X+     	;load next tile # from VRAM
    ad36:	2d 91       	ld	r18, X+
		cpi r18,RAM_TILES_COUNT
    ad38:	28 31       	cpi	r18, 0x18	; 24
		in r6,_SFR_IO_ADDR(SREG)	;save the carry flag
    ad3a:	6f b6       	in	r6, 0x3f	; 63
		bst r6,SREG_C
    ad3c:	60 fa       	bst	r6, 0

		mul r18,r19 	;tile*width*height
    ad3e:	23 9f       	mul	r18, r19
		movw r20,r2		;rom tiles
    ad40:	a1 01       	movw	r20, r2
		brtc .+2
    ad42:	0e f4       	brtc	.+2      	; 0xad46 <render_tile_line+0x36>
		movw r20,r4		;ram tiles
    ad44:	a2 01       	movw	r20, r4

	    add r0,r20    ;add title table address +row offset
    ad46:	04 0e       	add	r0, r20
	    adc r1,r21
    ad48:	15 1e       	adc	r1, r21

		movw ZL,r0
    ad4a:	f0 01       	movw	r30, r0

		brts ramloop
    ad4c:	f6 f0       	brts	.+60     	; 0xad8a <ramloop>

0000ad4e <romloop>:
	

	romloop:
	    lpm r16,Z+
    ad4e:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 1
    ad50:	08 b9       	out	0x08, r16	; 8
	    ld r18,X+     ;load next tile # from VRAM
    ad52:	2d 91       	ld	r18, X+


	    lpm r16,Z+
    ad54:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 2
    ad56:	08 b9       	out	0x08, r16	; 8
		mul r18,r19 ;tile*width*height
    ad58:	23 9f       	mul	r18, r19


	    lpm r16,Z+
    ad5a:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 3
    ad5c:	08 b9       	out	0x08, r16	; 8
		cpi r18,RAM_TILES_COUNT		;is tile in RAM or ROM? (RAM tiles have indexes<RAM_TILES_COUNT)
    ad5e:	28 31       	cpi	r18, 0x18	; 24
		in r6,_SFR_IO_ADDR(SREG)	;save the carry flag
    ad60:	6f b6       	in	r6, 0x3f	; 63


	    lpm r16,Z+
    ad62:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 4
    ad64:	08 b9       	out	0x08, r16	; 8
		brsh .+2		;skip in next tile is in ROM	
    ad66:	08 f4       	brcc	.+2      	; 0xad6a <romloop+0x1c>
		movw r20,r4 	;load RAM title table address +row offset	
    ad68:	a2 01       	movw	r20, r4
   
	    lpm r16,Z+
    ad6a:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 5
    ad6c:	08 b9       	out	0x08, r16	; 8
	    bst r6,SREG_C	;store carry state in T flag for later branch
    ad6e:	60 fa       	bst	r6, 0
		add r0,r20		;add title table address +row offset lsb
    ad70:	04 0e       	add	r0, r20
    
	    lpm r16,Z+
    ad72:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 6
    ad74:	08 b9       	out	0x08, r16	; 8
		adc r1,r21		;add title table address +row offset msb
    ad76:	15 1e       	adc	r1, r21
		dec r17			;decrement tiles to draw on line
    ad78:	1a 95       	dec	r17

   
	    lpm r16,Z+
    ad7a:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 7   
    ad7c:	08 b9       	out	0x08, r16	; 8
	    lpm r16,Z+
    ad7e:	05 91       	lpm	r16, Z+

		breq end	
    ad80:	39 f1       	breq	.+78     	; 0xadd0 <end>
	    movw ZL,r0   	;copy next tile adress
    ad82:	f0 01       	movw	r30, r0

	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 8   
    ad84:	08 b9       	out	0x08, r16	; 8
	    brtc romloop
    ad86:	1e f7       	brtc	.-58     	; 0xad4e <romloop>
	
		rjmp .
    ad88:	00 c0       	rjmp	.+0      	; 0xad8a <ramloop>

0000ad8a <ramloop>:

	ramloop:

	    ld r16,Z+
    ad8a:	01 91       	ld	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 1
    ad8c:	08 b9       	out	0x08, r16	; 8
	    ld r18,X+     ;load next tile # from VRAM
    ad8e:	2d 91       	ld	r18, X+

	    ld r16,Z+ 
    ad90:	01 91       	ld	r16, Z+
		nop   
    ad92:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16 		;pixel 2
    ad94:	08 b9       	out	0x08, r16	; 8
		mul r18,r19 ;tile*width*height
    ad96:	23 9f       	mul	r18, r19


	    ld r16,Z+
    ad98:	01 91       	ld	r16, Z+
		nop
    ad9a:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16         ;pixel 3
    ad9c:	08 b9       	out	0x08, r16	; 8
		cpi r18,RAM_TILES_COUNT
    ad9e:	28 31       	cpi	r18, 0x18	; 24
		in r6,_SFR_IO_ADDR(SREG)	;save the carry flag
    ada0:	6f b6       	in	r6, 0x3f	; 63
		bst r6,SREG_C
    ada2:	60 fa       	bst	r6, 0
   

	    ld r16,Z+
    ada4:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 4
    ada6:	08 b9       	out	0x08, r16	; 8
		brts .+2 
    ada8:	0e f0       	brts	.+2      	; 0xadac <ramloop+0x22>
		movw r20,r2 	;ROM title table address +row offset	
    adaa:	a1 01       	movw	r20, r2
   
   
	    ld r16,Z+
    adac:	01 91       	ld	r16, Z+
	    add r0,r20    ;add title table address +row offset
    adae:	04 0e       	add	r0, r20
		out _SFR_IO_ADDR(DATA_PORT),r16       ;pixel 5
    adb0:	08 b9       	out	0x08, r16	; 8
	    adc r1,r21
    adb2:	15 1e       	adc	r1, r21
		rjmp .
    adb4:	00 c0       	rjmp	.+0      	; 0xadb6 <ramloop+0x2c>
    
		ld r16,Z+		
    adb6:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16       ;pixel 6
    adb8:	08 b9       	out	0x08, r16	; 8
		nop
    adba:	00 00       	nop
		rjmp .  
    adbc:	00 c0       	rjmp	.+0      	; 0xadbe <ramloop+0x34>

	    ld r16,Z+	
    adbe:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16      ;pixel 7   
    adc0:	08 b9       	out	0x08, r16	; 8
	    ld r16,Z+
    adc2:	01 91       	ld	r16, Z+

	    dec r17
    adc4:	1a 95       	dec	r17
	    breq end
    adc6:	21 f0       	breq	.+8      	; 0xadd0 <end>
	
		movw ZL,r0
    adc8:	f0 01       	movw	r30, r0
		out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 8   
    adca:	08 b9       	out	0x08, r16	; 8
	
	    brtc romloop
    adcc:	06 f6       	brtc	.-128    	; 0xad4e <romloop>
		rjmp ramloop
    adce:	dd cf       	rjmp	.-70     	; 0xad8a <ramloop>

0000add0 <end>:
	
	end:
		out _SFR_IO_ADDR(DATA_PORT),r16  	;pixel 8
    add0:	08 b9       	out	0x08, r16	; 8
		clr r16	
    add2:	00 27       	eor	r16, r16
		lpm	
    add4:	c8 95       	lpm
		nop
    add6:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16        
    add8:	08 b9       	out	0x08, r16	; 8

		;wait
		ldi r16,5
    adda:	05 e0       	ldi	r16, 0x05	; 5
		dec r16
    addc:	0a 95       	dec	r16
		brne .-4
    adde:	f1 f7       	brne	.-4      	; 0xaddc <end+0xc>

	


		ret
    ade0:	08 95       	ret

0000ade2 <CopyTileToRam>:
		px=pgm_read_byte(src++);
		*dest++=px;
	}
*/

	ldi r18,TILE_HEIGHT*TILE_WIDTH
    ade2:	20 e4       	ldi	r18, 0x40	; 64

	;compute source adress
	lds ZL,tile_table_lo
    ade4:	e0 91 08 0b 	lds	r30, 0x0B08
	lds ZH,tile_table_hi
    ade8:	f0 91 09 0b 	lds	r31, 0x0B09
	;andi r24,0x7f
	subi r24,RAM_TILES_COUNT
    adec:	88 51       	subi	r24, 0x18	; 24
	mul r24,r18
    adee:	82 9f       	mul	r24, r18
	add ZL,r0
    adf0:	e0 0d       	add	r30, r0
	adc ZH,r1
    adf2:	f1 1d       	adc	r31, r1

	;compute destination adress
	ldi XL,lo8(ram_tiles)
    adf4:	ab e8       	ldi	r26, 0x8B	; 139
	ldi XH,hi8(ram_tiles)
    adf6:	b4 e0       	ldi	r27, 0x04	; 4
	mul r22,r18
    adf8:	62 9f       	mul	r22, r18
	add XL,r0
    adfa:	a0 0d       	add	r26, r0
	adc XH,r1
    adfc:	b1 1d       	adc	r27, r1

	clr r0
    adfe:	00 24       	eor	r0, r0
	;copy data (fastest possible)
.rept TILE_HEIGHT*TILE_WIDTH
	lpm r0,Z+	
	st X+,r0
.endr
    ae00:	05 90       	lpm	r0, Z+
    ae02:	0d 92       	st	X+, r0
    ae04:	05 90       	lpm	r0, Z+
    ae06:	0d 92       	st	X+, r0
    ae08:	05 90       	lpm	r0, Z+
    ae0a:	0d 92       	st	X+, r0
    ae0c:	05 90       	lpm	r0, Z+
    ae0e:	0d 92       	st	X+, r0
    ae10:	05 90       	lpm	r0, Z+
    ae12:	0d 92       	st	X+, r0
    ae14:	05 90       	lpm	r0, Z+
    ae16:	0d 92       	st	X+, r0
    ae18:	05 90       	lpm	r0, Z+
    ae1a:	0d 92       	st	X+, r0
    ae1c:	05 90       	lpm	r0, Z+
    ae1e:	0d 92       	st	X+, r0
    ae20:	05 90       	lpm	r0, Z+
    ae22:	0d 92       	st	X+, r0
    ae24:	05 90       	lpm	r0, Z+
    ae26:	0d 92       	st	X+, r0
    ae28:	05 90       	lpm	r0, Z+
    ae2a:	0d 92       	st	X+, r0
    ae2c:	05 90       	lpm	r0, Z+
    ae2e:	0d 92       	st	X+, r0
    ae30:	05 90       	lpm	r0, Z+
    ae32:	0d 92       	st	X+, r0
    ae34:	05 90       	lpm	r0, Z+
    ae36:	0d 92       	st	X+, r0
    ae38:	05 90       	lpm	r0, Z+
    ae3a:	0d 92       	st	X+, r0
    ae3c:	05 90       	lpm	r0, Z+
    ae3e:	0d 92       	st	X+, r0
    ae40:	05 90       	lpm	r0, Z+
    ae42:	0d 92       	st	X+, r0
    ae44:	05 90       	lpm	r0, Z+
    ae46:	0d 92       	st	X+, r0
    ae48:	05 90       	lpm	r0, Z+
    ae4a:	0d 92       	st	X+, r0
    ae4c:	05 90       	lpm	r0, Z+
    ae4e:	0d 92       	st	X+, r0
    ae50:	05 90       	lpm	r0, Z+
    ae52:	0d 92       	st	X+, r0
    ae54:	05 90       	lpm	r0, Z+
    ae56:	0d 92       	st	X+, r0
    ae58:	05 90       	lpm	r0, Z+
    ae5a:	0d 92       	st	X+, r0
    ae5c:	05 90       	lpm	r0, Z+
    ae5e:	0d 92       	st	X+, r0
    ae60:	05 90       	lpm	r0, Z+
    ae62:	0d 92       	st	X+, r0
    ae64:	05 90       	lpm	r0, Z+
    ae66:	0d 92       	st	X+, r0
    ae68:	05 90       	lpm	r0, Z+
    ae6a:	0d 92       	st	X+, r0
    ae6c:	05 90       	lpm	r0, Z+
    ae6e:	0d 92       	st	X+, r0
    ae70:	05 90       	lpm	r0, Z+
    ae72:	0d 92       	st	X+, r0
    ae74:	05 90       	lpm	r0, Z+
    ae76:	0d 92       	st	X+, r0
    ae78:	05 90       	lpm	r0, Z+
    ae7a:	0d 92       	st	X+, r0
    ae7c:	05 90       	lpm	r0, Z+
    ae7e:	0d 92       	st	X+, r0
    ae80:	05 90       	lpm	r0, Z+
    ae82:	0d 92       	st	X+, r0
    ae84:	05 90       	lpm	r0, Z+
    ae86:	0d 92       	st	X+, r0
    ae88:	05 90       	lpm	r0, Z+
    ae8a:	0d 92       	st	X+, r0
    ae8c:	05 90       	lpm	r0, Z+
    ae8e:	0d 92       	st	X+, r0
    ae90:	05 90       	lpm	r0, Z+
    ae92:	0d 92       	st	X+, r0
    ae94:	05 90       	lpm	r0, Z+
    ae96:	0d 92       	st	X+, r0
    ae98:	05 90       	lpm	r0, Z+
    ae9a:	0d 92       	st	X+, r0
    ae9c:	05 90       	lpm	r0, Z+
    ae9e:	0d 92       	st	X+, r0
    aea0:	05 90       	lpm	r0, Z+
    aea2:	0d 92       	st	X+, r0
    aea4:	05 90       	lpm	r0, Z+
    aea6:	0d 92       	st	X+, r0
    aea8:	05 90       	lpm	r0, Z+
    aeaa:	0d 92       	st	X+, r0
    aeac:	05 90       	lpm	r0, Z+
    aeae:	0d 92       	st	X+, r0
    aeb0:	05 90       	lpm	r0, Z+
    aeb2:	0d 92       	st	X+, r0
    aeb4:	05 90       	lpm	r0, Z+
    aeb6:	0d 92       	st	X+, r0
    aeb8:	05 90       	lpm	r0, Z+
    aeba:	0d 92       	st	X+, r0
    aebc:	05 90       	lpm	r0, Z+
    aebe:	0d 92       	st	X+, r0
    aec0:	05 90       	lpm	r0, Z+
    aec2:	0d 92       	st	X+, r0
    aec4:	05 90       	lpm	r0, Z+
    aec6:	0d 92       	st	X+, r0
    aec8:	05 90       	lpm	r0, Z+
    aeca:	0d 92       	st	X+, r0
    aecc:	05 90       	lpm	r0, Z+
    aece:	0d 92       	st	X+, r0
    aed0:	05 90       	lpm	r0, Z+
    aed2:	0d 92       	st	X+, r0
    aed4:	05 90       	lpm	r0, Z+
    aed6:	0d 92       	st	X+, r0
    aed8:	05 90       	lpm	r0, Z+
    aeda:	0d 92       	st	X+, r0
    aedc:	05 90       	lpm	r0, Z+
    aede:	0d 92       	st	X+, r0
    aee0:	05 90       	lpm	r0, Z+
    aee2:	0d 92       	st	X+, r0
    aee4:	05 90       	lpm	r0, Z+
    aee6:	0d 92       	st	X+, r0
    aee8:	05 90       	lpm	r0, Z+
    aeea:	0d 92       	st	X+, r0
    aeec:	05 90       	lpm	r0, Z+
    aeee:	0d 92       	st	X+, r0
    aef0:	05 90       	lpm	r0, Z+
    aef2:	0d 92       	st	X+, r0
    aef4:	05 90       	lpm	r0, Z+
    aef6:	0d 92       	st	X+, r0
    aef8:	05 90       	lpm	r0, Z+
    aefa:	0d 92       	st	X+, r0
    aefc:	05 90       	lpm	r0, Z+
    aefe:	0d 92       	st	X+, r0


	clr r1
    af00:	11 24       	eor	r1, r1
	ret
    af02:	08 95       	ret

0000af04 <BlitSprite>:
; r22=RAM tile index (bt)
; r21:r20=Y:X
; r19:r18=DY:DX
;************************************
BlitSprite:
	push r16
    af04:	0f 93       	push	r16
	push r17
    af06:	1f 93       	push	r17

	;src=sprites_tiletable_lo+(sprites[i].tileIndex*TILE_HEIGHT*TILE_WIDTH)
	ldi r25,SPRITE_STRUCT_SIZE
    af08:	95 e0       	ldi	r25, 0x05	; 5
	mul r24,r25
    af0a:	89 9f       	mul	r24, r25

	ldi ZL,lo8(sprites)	
    af0c:	e8 e6       	ldi	r30, 0x68	; 104
	ldi ZH,hi8(sprites)	
    af0e:	f4 e0       	ldi	r31, 0x04	; 4
	add ZL,r0
    af10:	e0 0d       	add	r30, r0
	adc ZH,r1
    af12:	f1 1d       	adc	r31, r1

	ldd r16,Z+sprFlags
    af14:	04 81       	ldd	r16, Z+4	; 0x04

	;8x16 multiply
	ldd r24,Z+sprTileIndex_lo
    af16:	82 81       	ldd	r24, Z+2	; 0x02
	ldd r25,Z+sprTileIndex_hi
    af18:	93 81       	ldd	r25, Z+3	; 0x03
	ldi r30,TILE_WIDTH*TILE_HEIGHT
    af1a:	e0 e4       	ldi	r30, 0x40	; 64
	mul r24,r30
    af1c:	8e 9f       	mul	r24, r30
	movw r26,r0
    af1e:	d0 01       	movw	r26, r0
	mul r25,r30
    af20:	9e 9f       	mul	r25, r30
	add r27,r0
    af22:	b0 0d       	add	r27, r0
	
	;get tile bank addr
	ldi r25,4*2
    af24:	98 e0       	ldi	r25, 0x08	; 8
	mul r16,r25
    af26:	09 9f       	mul	r16, r25
	ldi ZL,lo8(sprites_tile_banks)	
    af28:	e3 ed       	ldi	r30, 0xD3	; 211
	ldi ZH,hi8(sprites_tile_banks)	
    af2a:	fa e0       	ldi	r31, 0x0A	; 10
	clr r0
    af2c:	00 24       	eor	r0, r0
	add ZL,r1
    af2e:	e1 0d       	add	r30, r1
	adc ZH,r0		
    af30:	f0 1d       	adc	r31, r0
	ldd r0,Z+0
    af32:	00 80       	ld	r0, Z
	ldd r1,Z+1
    af34:	11 80       	ldd	r1, Z+1	; 0x01
	movw ZL,r0
    af36:	f0 01       	movw	r30, r0

	//lds ZL,sprites_tile_banks
	//lds ZH,sprites_tile_banks+1
	add ZL,r26	;tile data src
    af38:	ea 0f       	add	r30, r26
	adc ZH,r27
    af3a:	fb 1f       	adc	r31, r27
	
	;dest=ram_tiles+(bt*TILE_HEIGHT*TILE_WIDTH)
	ldi XL,lo8(ram_tiles)	
    af3c:	ab e8       	ldi	r26, 0x8B	; 139
	ldi XH,hi8(ram_tiles)
    af3e:	b4 e0       	ldi	r27, 0x04	; 4
	ldi r25,TILE_WIDTH*TILE_HEIGHT
    af40:	90 e4       	ldi	r25, 0x40	; 64
	mul r22,r25
    af42:	69 9f       	mul	r22, r25
	add XL,r0
    af44:	a0 0d       	add	r26, r0
	adc XH,r1
    af46:	b1 1d       	adc	r27, r1
	;	xdiff=dx;
	;}else{
	;	src+=(8-dx);
	;	xdiff=(8-dx);
	;}	
	clr r1
    af48:	11 24       	eor	r1, r1

	cpi r20,0
    af4a:	40 30       	cpi	r20, 0x00	; 0
	brne x_2nd_tile
    af4c:	51 f4       	brne	.+20     	; 0xaf62 <x_2nd_tile>
	
	add XL,r18
    af4e:	a2 0f       	add	r26, r18
	adc XH,r1
    af50:	b1 1d       	adc	r27, r1
	mov r24,r18	;xdiff for dest
    af52:	82 2f       	mov	r24, r18
	mov r17,r18	;xdiff for src
    af54:	12 2f       	mov	r17, r18

	sbrs r16,SPRITE_FLIP_X_BIT
    af56:	00 ff       	sbrs	r16, 0
	rjmp x_check_end
    af58:	11 c0       	rjmp	.+34     	; 0xaf7c <x_check_end>

	adiw ZL,(TILE_WIDTH-1);7
    af5a:	37 96       	adiw	r30, 0x07	; 7
	ldi r17,16
    af5c:	10 e1       	ldi	r17, 0x10	; 16
	sub r17,r18	;xdiff for src
    af5e:	12 1b       	sub	r17, r18
	rjmp x_check_end
    af60:	0d c0       	rjmp	.+26     	; 0xaf7c <x_check_end>

0000af62 <x_2nd_tile>:


x_2nd_tile:
	ldi r24,TILE_WIDTH
    af62:	88 e0       	ldi	r24, 0x08	; 8
	sub r24,r18	;8-DX = xdiff for dest
    af64:	82 1b       	sub	r24, r18

	sbrc r16,SPRITE_FLIP_X_BIT
    af66:	00 fd       	sbrc	r16, 0
	rjmp x2_flip_x
    af68:	04 c0       	rjmp	.+8      	; 0xaf72 <x2_flip_x>

	mov r17,r24	;xdiff for src
    af6a:	18 2f       	mov	r17, r24
	add ZL,r24
    af6c:	e8 0f       	add	r30, r24
	adc ZH,r1	
    af6e:	f1 1d       	adc	r31, r1
	rjmp x_check_end
    af70:	05 c0       	rjmp	.+10     	; 0xaf7c <x_check_end>

0000af72 <x2_flip_x>:

x2_flip_x:
	ldi r17,TILE_WIDTH
    af72:	18 e0       	ldi	r17, 0x08	; 8
	add r17,r18	;xdiff for src
    af74:	12 0f       	add	r17, r18
	
	add ZL,r18
    af76:	e2 0f       	add	r30, r18
	adc ZH,r1
    af78:	f1 1d       	adc	r31, r1
	sbiw ZL,1
    af7a:	31 97       	sbiw	r30, 0x01	; 1

0000af7c <x_check_end>:
	;	ydiff=dy;
	;}else{
	;	src+=((8-dy)*TILE_WIDTH);
	;	ydiff=(8-dy);
	;}
	cpi r21,0
    af7c:	50 30       	cpi	r21, 0x00	; 0
	brne y_2nd_tile
    af7e:	31 f4       	brne	.+12     	; 0xaf8c <y_2nd_tile>
	ldi r25,TILE_WIDTH
    af80:	98 e0       	ldi	r25, 0x08	; 8
	mul r25,r19
    af82:	93 9f       	mul	r25, r19
	add XL,r0
    af84:	a0 0d       	add	r26, r0
	adc XH,r1
    af86:	b1 1d       	adc	r27, r1
	mov r25,r19	;ydiff
    af88:	93 2f       	mov	r25, r19
	rjmp y_check_end
    af8a:	06 c0       	rjmp	.+12     	; 0xaf98 <y_check_end>

0000af8c <y_2nd_tile>:
y_2nd_tile:
	ldi r25,TILE_HEIGHT
    af8c:	98 e0       	ldi	r25, 0x08	; 8
	sub r25,r19	;ydiff
    af8e:	93 1b       	sub	r25, r19
	ldi r21,TILE_WIDTH
    af90:	58 e0       	ldi	r21, 0x08	; 8
	mul r21,r25
    af92:	59 9f       	mul	r21, r25
	add ZL,r0
    af94:	e0 0d       	add	r30, r0
	adc ZH,r1	
    af96:	f1 1d       	adc	r31, r1

0000af98 <y_check_end>:
		dest+=xdiff;

	}
*/

	clr r1
    af98:	11 24       	eor	r1, r1
	ldi r19,TRANSLUCENT_COLOR
    af9a:	3e ef       	ldi	r19, 0xFE	; 254

	clt
    af9c:	e8 94       	clt
	sbrc r16,SPRITE_FLIP_X_BIT
    af9e:	00 fd       	sbrc	r16, 0
	set
    afa0:	68 94       	set

	ldi r21,TILE_HEIGHT ;8
    afa2:	58 e0       	ldi	r21, 0x08	; 8
	sub r21,r25 ;y2
    afa4:	59 1b       	sub	r21, r25

0000afa6 <y2_loop>:

y2_loop:
	ldi r20,TILE_WIDTH ;8
    afa6:	48 e0       	ldi	r20, 0x08	; 8
	sub r20,r24 ;x2
    afa8:	48 1b       	sub	r20, r24

	brts x2_loop_flip
    afaa:	3e f0       	brts	.+14     	; 0xafba <x2_loop_flip>

0000afac <x2_loop>:

	;normal X loop (11 cycles)
x2_loop:
	lpm r18,Z+
    afac:	25 91       	lpm	r18, Z+
	cpse r18,r19
    afae:	23 13       	cpse	r18, r19
	st X,r18
    afb0:	2c 93       	st	X, r18
	adiw XL,1
    afb2:	11 96       	adiw	r26, 0x01	; 1
	dec r20
    afb4:	4a 95       	dec	r20
	brne x2_loop
    afb6:	d1 f7       	brne	.-12     	; 0xafac <x2_loop>
	rjmp x2_loop_end
    afb8:	07 c0       	rjmp	.+14     	; 0xafc8 <x2_loop_end>

0000afba <x2_loop_flip>:

	;flipped X loop (13 cycles)
x2_loop_flip:
	lpm r18,Z
    afba:	24 91       	lpm	r18, Z+
	sbiw ZL,1
    afbc:	31 97       	sbiw	r30, 0x01	; 1
	cpse r18,r19
    afbe:	23 13       	cpse	r18, r19
	st X,r18
    afc0:	2c 93       	st	X, r18
	adiw XL,1
    afc2:	11 96       	adiw	r26, 0x01	; 1
	dec r20
    afc4:	4a 95       	dec	r20
	brne x2_loop_flip
    afc6:	c9 f7       	brne	.-14     	; 0xafba <x2_loop_flip>

0000afc8 <x2_loop_end>:

x2_loop_end:
	add ZL,r17
    afc8:	e1 0f       	add	r30, r17
	adc ZH,r1
    afca:	f1 1d       	adc	r31, r1
	add XL,r24
    afcc:	a8 0f       	add	r26, r24
	adc XH,r1
    afce:	b1 1d       	adc	r27, r1
	dec r21
    afd0:	5a 95       	dec	r21
	brne y2_loop
    afd2:	49 f7       	brne	.-46     	; 0xafa6 <y2_loop>




	clr r1
    afd4:	11 24       	eor	r1, r1

	pop r17
    afd6:	1f 91       	pop	r17
	pop r16
    afd8:	0f 91       	pop	r16
	ret
    afda:	08 95       	ret

0000afdc <sync_func_vectors>:
    afdc:	89 58       	subi	r24, 0x89	; 137
    afde:	a0 58       	subi	r26, 0x80	; 128
    afe0:	ae 58       	subi	r26, 0x8E	; 142
    afe2:	f2 57       	subi	r31, 0x72	; 114

0000afe4 <do_hsync>:

;************
; HSYNC
;************
do_hsync:
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ; HDRIVE sync pulse low
    afe4:	28 98       	cbi	0x05, 0	; 5

	call update_sound_buffer ;36 -> 63
    afe6:	0e 94 03 5a 	call	0xb406	; 0xb406 <update_sound_buffer>

	ldi ZL,32-10-10-1
    afea:	eb e0       	ldi	r30, 0x0B	; 11

0000afec <do_hsync_delay>:
do_hsync_delay:
	dec ZL
    afec:	ea 95       	dec	r30
	brne do_hsync_delay ;135
    afee:	f1 f7       	brne	.-4      	; 0xafec <do_hsync_delay>
	rjmp .
    aff0:	00 c0       	rjmp	.+0      	; 0xaff2 <do_hsync_delay+0x6>

	; Set HDRIVE to normal rate
	ldi ZL,hi8(HDRIVE_CL)
    aff2:	e7 e0       	ldi	r30, 0x07	; 7
	sts _SFR_MEM_ADDR(OCR1AH),ZL
    aff4:	e0 93 89 00 	sts	0x0089, r30
	
	ldi ZL,lo8(HDRIVE_CL)
    aff8:	eb e1       	ldi	r30, 0x1B	; 27
	sts _SFR_MEM_ADDR(OCR1AL),ZL
    affa:	e0 93 88 00 	sts	0x0088, r30

	ldi ZL,SYNC_PHASE_PRE_EQ
    affe:	e0 e0       	ldi	r30, 0x00	; 0
	ldi ZH,SYNC_PRE_EQ_PULSES
    b000:	f6 e0       	ldi	r31, 0x06	; 6
	rcall update_sync_phase
    b002:	d1 d0       	rcall	.+418    	; 0xb1a6 <update_sync_phase>

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;136
    b004:	28 9a       	sbi	0x05, 0	; 5


	sbrs ZL,0
    b006:	e0 ff       	sbrs	r30, 0
	rcall render
    b008:	30 d0       	rcall	.+96     	; 0xb06a <render>

	sbrs ZL,0
    b00a:	e0 ff       	sbrs	r30, 0
	rjmp not_vsync
    b00c:	2d c0       	rjmp	.+90     	; 0xb068 <not_vsync>

	;invoke vsync stuff
	
	;push C-call registers
	push r18
    b00e:	2f 93       	push	r18
	push r19
    b010:	3f 93       	push	r19
	push r20
    b012:	4f 93       	push	r20
	push r21
    b014:	5f 93       	push	r21
	push r22
    b016:	6f 93       	push	r22
	push r23
    b018:	7f 93       	push	r23
	push r24
    b01a:	8f 93       	push	r24
	push r25
    b01c:	9f 93       	push	r25
	push r26
    b01e:	af 93       	push	r26
	push r27
    b020:	bf 93       	push	r27

	sei ;must enable ints for hsync pulses
    b022:	78 94       	sei
	clr r1
    b024:	11 24       	eor	r1, r1

	;process user pre callback
	lds ZL,pre_vsync_user_callback+0
    b026:	e0 91 00 0b 	lds	r30, 0x0B00
	lds ZH,pre_vsync_user_callback+1
    b02a:	f0 91 01 0b 	lds	r31, 0x0B01
	cp  ZL,r1
    b02e:	e1 15       	cp	r30, r1
	cpc ZH,r1
    b030:	f1 05       	cpc	r31, r1
	breq .+2 
    b032:	09 f0       	breq	.+2      	; 0xb036 <do_hsync_delay+0x4a>
	icall
    b034:	09 95       	icall

	;invoke stuff the video mode may have to do
	call VideoModeVsync	
    b036:	0e 94 f2 68 	call	0xd1e4	; 0xd1e4 <VideoModeVsync>

	;refresh buttons states
	#if CONTROLLERS_VSYNC_READ == 1
		call ReadControllers
    b03a:	0e 94 cc 5a 	call	0xb598	; 0xb598 <ReadControllers>
	#if SNES_MOUSE == 1
		call ProcessMouseMovement
	#endif

	;process music (music, envelopes, etc)
	call MixSound
    b03e:	0e 94 12 59 	call	0xb224	; 0xb224 <MixSound>
	clr r1
    b042:	11 24       	eor	r1, r1

	;process user post callback
	lds ZL,post_vsync_user_callback+0
    b044:	e0 91 02 0b 	lds	r30, 0x0B02
	lds ZH,post_vsync_user_callback+1
    b048:	f0 91 03 0b 	lds	r31, 0x0B03
	cp  ZL,r1
    b04c:	e1 15       	cp	r30, r1
	cpc ZH,r1
    b04e:	f1 05       	cpc	r31, r1
	breq .+2 
    b050:	09 f0       	breq	.+2      	; 0xb054 <do_hsync_delay+0x68>
	icall
    b052:	09 95       	icall

	pop r27
    b054:	bf 91       	pop	r27
	pop r26
    b056:	af 91       	pop	r26
	pop r25
    b058:	9f 91       	pop	r25
	pop r24
    b05a:	8f 91       	pop	r24
	pop r23
    b05c:	7f 91       	pop	r23
	pop r22
    b05e:	6f 91       	pop	r22
	pop r21
    b060:	5f 91       	pop	r21
	pop r20
    b062:	4f 91       	pop	r20
	pop r19
    b064:	3f 91       	pop	r19
	pop r18
    b066:	2f 91       	pop	r18

0000b068 <not_vsync>:

not_vsync:
	ret
    b068:	08 95       	ret

0000b06a <render>:


;**** RENDER ****
render:
	push ZL
    b06a:	ef 93       	push	r30
	cpi ZL,SYNC_HSYNC_PULSES-FIRST_RENDER_LINE-FRAME_LINES
	brlo render_end
*/


	ldi ZH,SYNC_HSYNC_PULSES
    b06c:	fd ef       	ldi	r31, 0xFD	; 253
	lds r0,first_render_line
    b06e:	00 90 04 0b 	lds	r0, 0x0B04
	sub ZH,r0				
    b072:	f0 19       	sub	r31, r0
	lds ZL,sync_pulse
    b074:	e0 91 fb 0a 	lds	r30, 0x0AFB
	cp ZL,ZH
    b078:	ef 17       	cp	r30, r31
	brsh render_end
    b07a:	b8 f4       	brcc	.+46     	; 0xb0aa <render_end>


	ldi ZH,SYNC_HSYNC_PULSES
    b07c:	fd ef       	ldi	r31, 0xFD	; 253
	lds r0,first_render_line
    b07e:	00 90 04 0b 	lds	r0, 0x0B04
	sub ZH,r0				
    b082:	f0 19       	sub	r31, r0
	lds r0,render_lines_count
    b084:	00 90 05 0b 	lds	r0, 0x0B05
	sub ZH,r0			
    b088:	f0 19       	sub	r31, r0
	cp ZL,ZH
    b08a:	ef 17       	cp	r30, r31
	brlo render_end
    b08c:	70 f0       	brcs	.+28     	; 0xb0aa <render_end>


	;push r1-r29
	ldi ZL,29
    b08e:	ed e1       	ldi	r30, 0x1D	; 29
	clr ZH
    b090:	ff 27       	eor	r31, r31

0000b092 <push_loop>:
push_loop:
	ld r0,Z	;load value from register file
    b092:	00 80       	ld	r0, Z
	push r0
    b094:	0f 92       	push	r0
	dec ZL
    b096:	ea 95       	dec	r30
	brne push_loop	
    b098:	e1 f7       	brne	.-8      	; 0xb092 <push_loop>

	call VMODE_FUNC
    b09a:	0e 94 29 56 	call	0xac52	; 0xac52 <sub_video_mode3>

	;pop r1-r29
	ldi ZL,1
    b09e:	e1 e0       	ldi	r30, 0x01	; 1
	clr ZH
    b0a0:	ff 27       	eor	r31, r31

0000b0a2 <pop_loop>:
pop_loop:
	pop r0
    b0a2:	0f 90       	pop	r0
	st Z+,r0 ;store value to register file
    b0a4:	01 92       	st	Z+, r0
	cpi ZL,30
    b0a6:	ee 31       	cpi	r30, 0x1E	; 30
	brlo pop_loop	
    b0a8:	e0 f3       	brcs	.-8      	; 0xb0a2 <pop_loop>

0000b0aa <render_end>:

render_end:
	pop ZL
    b0aa:	ef 91       	pop	r30
	ret
    b0ac:	08 95       	ret

0000b0ae <__vector_13>:
; 4 cycles to invoke 
;
;***************************************************************************
TIMER1_COMPA_vect:

	push ZH;2
    b0ae:	ff 93       	push	r31
	push ZL;2
    b0b0:	ef 93       	push	r30

	;save flags & status register
	in ZL,_SFR_IO_ADDR(SREG);1
    b0b2:	ef b7       	in	r30, 0x3f	; 63
	push ZL ;2		
    b0b4:	ef 93       	push	r30

	;Read timer offset since rollover to remove cycles 
	;and conpensate for interrupt latency.
	;This is nessesary to eliminate frame jitter.

	lds ZL,_SFR_MEM_ADDR(TCNT1L)
    b0b6:	e0 91 84 00 	lds	r30, 0x0084
	subi ZL,0x0e ;MIN_INT_LATENCY
    b0ba:	ee 50       	subi	r30, 0x0E	; 14

	ldi ZH,1
    b0bc:	f1 e0       	ldi	r31, 0x01	; 1

0000b0be <latency_loop>:
latency_loop:
	cp ZL,ZH
    b0be:	ef 17       	cp	r30, r31
	brlo .		;advance PC to next instruction	
    b0c0:	00 f0       	brcs	.+0      	; 0xb0c2 <latency_loop+0x4>
	inc ZH
    b0c2:	f3 95       	inc	r31
	cpi ZH,10
    b0c4:	fa 30       	cpi	r31, 0x0A	; 10
	brlo latency_loop
    b0c6:	d8 f3       	brcs	.-10     	; 0xb0be <latency_loop>

	rcall sync
    b0c8:	05 d0       	rcall	.+10     	; 0xb0d4 <sync>

	pop ZL
    b0ca:	ef 91       	pop	r30
	out _SFR_IO_ADDR(SREG),ZL
    b0cc:	ef bf       	out	0x3f, r30	; 63
	pop ZL
    b0ce:	ef 91       	pop	r30
	pop ZH
    b0d0:	ff 91       	pop	r31
	reti
    b0d2:	18 95       	reti

0000b0d4 <sync>:
;***************************************************
; Composite SYNC
;***************************************************

sync:
	push r0
    b0d4:	0f 92       	push	r0
	push r1
    b0d6:	1f 92       	push	r1
			
	ldi ZL,lo8(sync_func_vectors)	
    b0d8:	ec ed       	ldi	r30, 0xDC	; 220
	ldi ZH,hi8(sync_func_vectors)
    b0da:	ff ea       	ldi	r31, 0xAF	; 175

	lds r0,sync_phase
    b0dc:	00 90 fa 0a 	lds	r0, 0x0AFA
	lsl r0 ;*2
    b0e0:	00 0c       	add	r0, r0
	clr r1
    b0e2:	11 24       	eor	r1, r1
	
	add ZL,r0
    b0e4:	e0 0d       	add	r30, r0
	adc ZH,r1
    b0e6:	f1 1d       	adc	r31, r1
	
	lpm r0,Z+
    b0e8:	05 90       	lpm	r0, Z+
	lpm r1,Z
    b0ea:	14 90       	lpm	r1, Z+
	movw ZL,r0
    b0ec:	f0 01       	movw	r30, r0

	icall	;call sync functions
    b0ee:	09 95       	icall

	pop r1
    b0f0:	1f 90       	pop	r1
	pop r0
    b0f2:	0f 90       	pop	r0
	ret
    b0f4:	08 95       	ret

0000b0f6 <hsync_pulse>:
;
; Cycles: 144
; Destroys: ZL (r30)
;*************************************************
hsync_pulse:
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    b0f6:	28 98       	cbi	0x05, 0	; 5
	
	call update_sound_buffer ;36 -> 63
    b0f8:	0e 94 03 5a 	call	0xb406	; 0xb406 <update_sound_buffer>
	
	ldi ZL,21
    b0fc:	e5 e1       	ldi	r30, 0x15	; 21
	dec ZL 
    b0fe:	ea 95       	dec	r30
	brne .-4
    b100:	f1 f7       	brne	.-4      	; 0xb0fe <hsync_pulse+0x8>

	lds ZL,sync_pulse
    b102:	e0 91 fb 0a 	lds	r30, 0x0AFB
	dec ZL
    b106:	ea 95       	dec	r30
	sts sync_pulse,ZL
    b108:	e0 93 fb 0a 	sts	0x0AFB, r30

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    b10c:	28 9a       	sbi	0x05, 0	; 5

	rjmp .
    b10e:	00 c0       	rjmp	.+0      	; 0xb110 <hsync_pulse+0x1a>

	ret
    b110:	08 95       	ret

0000b112 <do_pre_eq>:
; 0x68 on the cbi
; 0xAC on the sbi
; pulse duration: 68 clocks
;**************************
do_pre_eq:
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ; HDRIVE sync pulse low
    b112:	28 98       	cbi	0x05, 0	; 5

	call update_sound_buffer_2 ;36 -> 63
    b114:	0e 94 25 5a 	call	0xb44a	; 0xb44a <update_sound_buffer_2>

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;68
    b118:	28 9a       	sbi	0x05, 0	; 5
	nop
    b11a:	00 00       	nop

	ldi ZL,SYNC_PHASE_EQ
    b11c:	e1 e0       	ldi	r30, 0x01	; 1
	ldi ZH,SYNC_EQ_PULSES
    b11e:	f6 e0       	ldi	r31, 0x06	; 6
	rcall update_sync_phase
    b120:	42 d0       	rcall	.+132    	; 0xb1a6 <update_sync_phase>

	; Set HDRIVE to double rate during VSYNC
	ldi ZL,hi8(HDRIVE_CL_TWICE)
    b122:	e3 e0       	ldi	r30, 0x03	; 3
	sts _SFR_MEM_ADDR(OCR1AH),ZL
    b124:	e0 93 89 00 	sts	0x0089, r30
	
	ldi ZL,lo8(HDRIVE_CL_TWICE)
    b128:	ed e8       	ldi	r30, 0x8D	; 141
	sts _SFR_MEM_ADDR(OCR1AL),ZL
    b12a:	e0 93 88 00 	sts	0x0088, r30

	;fetch render height registers if they changed	
	lds ZH,first_render_line_tmp
    b12e:	f0 91 06 0b 	lds	r31, 0x0B06
	sts first_render_line,ZH
    b132:	f0 93 04 0b 	sts	0x0B04, r31
	
	lds ZH,render_lines_count_tmp
    b136:	f0 91 07 0b 	lds	r31, 0x0B07
	sts render_lines_count,ZH
    b13a:	f0 93 05 0b 	sts	0x0B05, r31

	ret
    b13e:	08 95       	ret

0000b140 <do_eq>:
; 0x68  on the cbi
; 0x36E on the sbi
; low pulse duration: 774 clocks
;************
do_eq:
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ; HDRIVE sync pulse low
    b140:	28 98       	cbi	0x05, 0	; 5

	call update_sound_buffer_2 ;36 -> 63
    b142:	0e 94 25 5a 	call	0xb44a	; 0xb44a <update_sound_buffer_2>

	ldi ZL,181-9+4-7
    b146:	e9 ea       	ldi	r30, 0xA9	; 169

0000b148 <do_eq_delay>:
do_eq_delay:
	nop
    b148:	00 00       	nop
	dec ZL
    b14a:	ea 95       	dec	r30
	brne do_eq_delay ;135
    b14c:	e9 f7       	brne	.-6      	; 0xb148 <do_eq_delay>

	rjmp .
    b14e:	00 c0       	rjmp	.+0      	; 0xb150 <do_eq_delay+0x8>
	nop
    b150:	00 00       	nop

	ldi ZH,SYNC_POST_EQ_PULSES
    b152:	f6 e0       	ldi	r31, 0x06	; 6
	ldi ZL,SYNC_PHASE_POST_EQ
    b154:	e2 e0       	ldi	r30, 0x02	; 2
	rcall update_sync_phase
    b156:	27 d0       	rcall	.+78     	; 0xb1a6 <update_sync_phase>

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;136
    b158:	28 9a       	sbi	0x05, 0	; 5
	;set sync generator counter on TIMER1
	;ldi ZH,hi8(0x90+704)
	;ldi ZL,lo8(0x90+704)
	;rjmp up_pulse
			
	ret
    b15a:	08 95       	ret

0000b15c <do_post_eq>:
; 0xAC on the sbi
; pulse cycles: 68 clocks
;************
do_post_eq:

	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ; HDRIVE sync pulse low
    b15c:	28 98       	cbi	0x05, 0	; 5

	call update_sound_buffer_2 ;36 -> 63
    b15e:	0e 94 25 5a 	call	0xb44a	; 0xb44a <update_sound_buffer_2>

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;68
    b162:	28 9a       	sbi	0x05, 0	; 5

	nop
    b164:	00 00       	nop

	ldi ZL,SYNC_PHASE_HSYNC
    b166:	e3 e0       	ldi	r30, 0x03	; 3
	ldi ZH,SYNC_HSYNC_PULSES
    b168:	fd ef       	ldi	r31, 0xFD	; 253
	rcall update_sync_phase
    b16a:	1d d0       	rcall	.+58     	; 0xb1a6 <update_sync_phase>



	lds ZL,sync_pulse
    b16c:	e0 91 fb 0a 	lds	r30, 0x0AFB
	cpi ZL,(SYNC_POST_EQ_PULSES-1)
    b170:	e5 30       	cpi	r30, 0x05	; 5
	brne noshift
    b172:	91 f4       	brne	.+36     	; 0xb198 <noshift>
	//cause a shift in the color burst phase
	//on odd frames (NTSC superframe?)
	lds ZL,curr_field
    b174:	e0 91 fd 0a 	lds	r30, 0x0AFD
	cpi ZL,1
    b178:	e1 30       	cpi	r30, 0x01	; 1
	nop
    b17a:	00 00       	nop
	
	lds ZH,burstOffset
    b17c:	f0 91 13 0b 	lds	r31, 0x0B13
	brne peq_odd
    b180:	19 f4       	brne	.+6      	; 0xb188 <peq_odd>
	lds ZH,burstOffset
    b182:	f0 91 13 0b 	lds	r31, 0x0B13
	neg ZH
    b186:	f1 95       	neg	r31

0000b188 <peq_odd>:
 peq_odd:

	ldi ZL,hi8(HDRIVE_CL_TWICE) //4
    b188:	e3 e0       	ldi	r30, 0x03	; 3
	sts _SFR_MEM_ADDR(OCR1AH),ZL	
    b18a:	e0 93 89 00 	sts	0x0089, r30
	
	ldi ZL,lo8(HDRIVE_CL_TWICE) //4
    b18e:	ed e8       	ldi	r30, 0x8D	; 141
	add ZL,ZH
    b190:	ef 0f       	add	r30, r31
	sts _SFR_MEM_ADDR(OCR1AL),ZL
    b192:	e0 93 88 00 	sts	0x0088, r30
	ret
    b196:	08 95       	ret

0000b198 <noshift>:

noshift:
	;restore full line size
	ldi ZL,hi8(HDRIVE_CL_TWICE)
    b198:	e3 e0       	ldi	r30, 0x03	; 3
	sts _SFR_MEM_ADDR(OCR1AH),ZL	
    b19a:	e0 93 89 00 	sts	0x0089, r30
	ldi ZL,lo8(HDRIVE_CL_TWICE)
    b19e:	ed e8       	ldi	r30, 0x8D	; 141
	sts _SFR_MEM_ADDR(OCR1AL),ZL
    b1a0:	e0 93 88 00 	sts	0x0088, r30

	ret
    b1a4:	08 95       	ret

0000b1a6 <update_sync_phase>:
;              1=was the last pulse in phase
; 21c
;***********
update_sync_phase:

	lds r0,sync_pulse
    b1a6:	00 90 fb 0a 	lds	r0, 0x0AFB
	dec r0
    b1aa:	0a 94       	dec	r0
	lds r1,_SFR_MEM_ADDR(SREG)
    b1ac:	10 90 5f 00 	lds	r1, 0x005F
	sbrc r1,SREG_Z
    b1b0:	11 fc       	sbrc	r1, 1
	mov r0,ZH
    b1b2:	0f 2e       	mov	r0, r31
	sts sync_pulse,r0	;set pulses for next sync phase
    b1b4:	00 92 fb 0a 	sts	0x0AFB, r0

	lds r0,sync_phase
    b1b8:	00 90 fa 0a 	lds	r0, 0x0AFA
	sbrc r1,SREG_Z
    b1bc:	11 fc       	sbrc	r1, 1
	mov r0,ZL			;go to next phase 
    b1be:	0e 2e       	mov	r0, r30
	sts sync_phase,r0
    b1c0:	00 92 fa 0a 	sts	0x0AFA, r0
	
	ldi ZL,0
    b1c4:	e0 e0       	ldi	r30, 0x00	; 0
	sbrc r1,SREG_Z
    b1c6:	11 fc       	sbrc	r1, 1
	ldi ZL,1
    b1c8:	e1 e0       	ldi	r30, 0x01	; 1

	ret
    b1ca:	08 95       	ret

0000b1cc <SetMixerNote>:
; r24: Channel (0,1,2,3)
; r22: -MIDI note, 69=A5(440) for waves channels (0,1,2)
;      -Noise params for channel 3
;***********************
SetMixerNote:
	clr r25
    b1cc:	99 27       	eor	r25, r25
	clr r23
    b1ce:	77 27       	eor	r23, r23

0000b1d0 <set_note_waves>:
	ret
#endif

set_note_waves:
	;get step for note
	ldi ZL,lo8(steptable)
    b1d0:	e8 e0       	ldi	r30, 0x08	; 8
	ldi ZH,hi8(steptable)
    b1d2:	f2 ec       	ldi	r31, 0xC2	; 194
	lsl r22
    b1d4:	66 0f       	add	r22, r22
	rol r23
    b1d6:	77 1f       	adc	r23, r23
	add ZL,r22
    b1d8:	e6 0f       	add	r30, r22
	adc ZH,r23	
    b1da:	f7 1f       	adc	r31, r23

	lpm r26,Z+
    b1dc:	a5 91       	lpm	r26, Z+
	lpm r27,Z
    b1de:	b4 91       	lpm	r27, Z+

	ldi ZL,lo8(mixerStruct)
    b1e0:	e4 e3       	ldi	r30, 0x34	; 52
	ldi ZH,hi8(mixerStruct)
    b1e2:	fd e0       	ldi	r31, 0x0D	; 13
	ldi r18,CHANNEL_STRUCT_SIZE
    b1e4:	2a e0       	ldi	r18, 0x0A	; 10
	mul r18,r24
    b1e6:	28 9f       	mul	r18, r24
	add ZL,r0
    b1e8:	e0 0d       	add	r30, r0
	adc ZH,r1
    b1ea:	f1 1d       	adc	r31, r1

	std Z+step_lo,r26
    b1ec:	a1 83       	std	Z+1, r26	; 0x01
	std Z+step_hi,r27
    b1ee:	b2 83       	std	Z+2, r27	; 0x02

	clr r1
    b1f0:	11 24       	eor	r1, r1
	

	ret
    b1f2:	08 95       	ret

0000b1f4 <SetMixerWave>:
; r23:r22 Waves channels: patch (0x00-0xfd) 
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
SetMixerWave:
	clr r25
    b1f4:	99 27       	eor	r25, r25
	clr r23
    b1f6:	77 27       	eor	r23, r23

	ldi ZL,lo8(mixerStruct)
    b1f8:	e4 e3       	ldi	r30, 0x34	; 52
	ldi ZH,hi8(mixerStruct)
    b1fa:	fd e0       	ldi	r31, 0x0D	; 13
	ldi r18,CHANNEL_STRUCT_SIZE
    b1fc:	2a e0       	ldi	r18, 0x0A	; 10
	mul r18,r24	
    b1fe:	28 9f       	mul	r18, r24
	add ZL,r0
    b200:	e0 0d       	add	r30, r0
	adc ZH,r1
    b202:	f1 1d       	adc	r31, r1
	sts tr4_params,r22	
	rjmp esmw
smw2:
#endif

	ldi r23,hi8(waves)
    b204:	74 ec       	ldi	r23, 0xC4	; 196
	add r23,r22
    b206:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    b208:	75 83       	std	Z+5, r23	; 0x05

0000b20a <esmw>:

esmw:
	clr r1	
    b20a:	11 24       	eor	r1, r1
	ret
    b20c:	08 95       	ret

0000b20e <SetMixerVolume>:
; (C-call compatible)
; r24 channel (0,1,2,3)
; r22 volume (0x00-0xff)
;***********************
SetMixerVolume:
	clr r25
    b20e:	99 27       	eor	r25, r25
	clr r23
    b210:	77 27       	eor	r23, r23

	ldi ZL,lo8(mixerStruct)
    b212:	e4 e3       	ldi	r30, 0x34	; 52
	ldi ZH,hi8(mixerStruct)
    b214:	fd e0       	ldi	r31, 0x0D	; 13
	ldi r18,CHANNEL_STRUCT_SIZE
    b216:	2a e0       	ldi	r18, 0x0A	; 10
	mul r18,r24	
    b218:	28 9f       	mul	r18, r24
	add ZL,r0
    b21a:	e0 0d       	add	r30, r0
	adc ZH,r1
    b21c:	f1 1d       	adc	r31, r1
	std Z+vol,r22 ;store vol
    b21e:	60 83       	st	Z, r22

	clr r1	
    b220:	11 24       	eor	r1, r1
	ret
    b222:	08 95       	ret

0000b224 <MixSound>:
;***********************
MixSound:

	
#if ENABLE_MIXER==1
	lds ZL,sound_enabled
    b224:	e0 91 33 0d 	lds	r30, 0x0D33
	sbrc ZL,0
    b228:	e0 fd       	sbrc	r30, 0
 	call ProcessMusic
    b22a:	0e 94 55 5d 	call	0xbaaa	; 0xbaaa <ProcessMusic>
#endif


	;Flip mix bank & set target bank adress for mixing
	lds r0,mix_bank
    b22e:	00 90 30 0d 	lds	r0, 0x0D30
	tst r0
    b232:	00 20       	and	r0, r0
	brne set_hi_bank
    b234:	19 f4       	brne	.+6      	; 0xb23c <set_hi_bank>
	ldi XL,lo8(mix_buf)
    b236:	a2 e2       	ldi	r26, 0x22	; 34
	ldi XH,hi8(mix_buf)
    b238:	bb e0       	ldi	r27, 0x0B	; 11
	rjmp end_set_bank
    b23a:	02 c0       	rjmp	.+4      	; 0xb240 <end_set_bank>

0000b23c <set_hi_bank>:
set_hi_bank:
	ldi XL,lo8(mix_buf+MIX_BANK_SIZE)
    b23c:	a8 e2       	ldi	r26, 0x28	; 40
	ldi XH,hi8(mix_buf+MIX_BANK_SIZE)
    b23e:	bc e0       	ldi	r27, 0x0C	; 12

0000b240 <end_set_bank>:
end_set_bank:

	ldi r18,1
    b240:	21 e0       	ldi	r18, 0x01	; 1
	eor	r0,r18
    b242:	02 26       	eor	r0, r18
	sts mix_bank,r0
    b244:	00 92 30 0d 	sts	0x0D30, r0
	
	ldi r18,2
    b248:	22 e0       	ldi	r18, 0x02	; 2
	sts mix_block,r18	
    b24a:	20 93 31 0d 	sts	0x0D31, r18


#if ENABLE_MIXER==1

	lds ZL,sound_enabled
    b24e:	e0 91 33 0d 	lds	r30, 0x0D33
	sbrs ZL,0
    b252:	e0 ff       	sbrs	r30, 0
	ret
    b254:	08 95       	ret

	push r2
    b256:	2f 92       	push	r2
	push r3
    b258:	3f 92       	push	r3
	push r4
    b25a:	4f 92       	push	r4
	push r5
    b25c:	5f 92       	push	r5
	push r6
    b25e:	6f 92       	push	r6
	push r7
    b260:	7f 92       	push	r7
	push r8
    b262:	8f 92       	push	r8
	push r9
    b264:	9f 92       	push	r9
	push r10
    b266:	af 92       	push	r10
	push r11
    b268:	bf 92       	push	r11
	push r12
    b26a:	cf 92       	push	r12
	push r13
    b26c:	df 92       	push	r13
	push r14
    b26e:	ef 92       	push	r14
	push r15
    b270:	ff 92       	push	r15
	push r16
    b272:	0f 93       	push	r16
	push r17
    b274:	1f 93       	push	r17
	push r28
    b276:	cf 93       	push	r28
	push r29
    b278:	df 93       	push	r29
		lds r21,tr4_vol
		lds r22,tr4_barrel_lo
		lds r23,tr4_barrel_hi
		lds r24,tr4_divider
	#else
		lds r21,tr4_vol
    b27a:	50 91 52 0d 	lds	r21, 0x0D52
		lds r22,tr4_pos_lo
    b27e:	60 91 56 0d 	lds	r22, 0x0D56
		lds r23,tr4_pos_hi
    b282:	70 91 57 0d 	lds	r23, 0x0D57
		lds r24,tr4_pos_frac
    b286:	80 91 55 0d 	lds	r24, 0x0D55

		lds r4,tr4_step_lo 
    b28a:	40 90 53 0d 	lds	r4, 0x0D53
		lds r5,tr4_step_hi 
    b28e:	50 90 54 0d 	lds	r5, 0x0D54
		clr r6
    b292:	66 24       	eor	r6, r6
		lds r8,tr4_loop_end_lo
    b294:	80 90 5a 0d 	lds	r8, 0x0D5A
		lds r9,tr4_loop_end_hi
    b298:	90 90 5b 0d 	lds	r9, 0x0D5B

		lds r10,tr4_loop_start_lo
    b29c:	a0 90 58 0d 	lds	r10, 0x0D58
		lds r11,tr4_loop_start_hi
    b2a0:	b0 90 59 0d 	lds	r11, 0x0D59

		movw r2,XL	;push
    b2a4:	1d 01       	movw	r2, r26

		ldi r28,lo8(262/2)
    b2a6:	c3 e8       	ldi	r28, 0x83	; 131

0000b2a8 <ch4_loop>:
		movw ZL,r22
		lpm	r20,Z	;load sample
		mulsu r20,r21;(sample*mixing vol)
		st X+,r1

	.endr	
    b2a8:	84 0d       	add	r24, r4
    b2aa:	65 1d       	adc	r22, r5
    b2ac:	76 1d       	adc	r23, r6
    b2ae:	68 15       	cp	r22, r8
    b2b0:	79 05       	cpc	r23, r9
    b2b2:	08 f0       	brcs	.+2      	; 0xb2b6 <ch4_loop+0xe>
    b2b4:	b5 01       	movw	r22, r10
    b2b6:	fb 01       	movw	r30, r22
    b2b8:	44 91       	lpm	r20, Z+
    b2ba:	45 03       	mulsu	r20, r21
    b2bc:	1d 92       	st	X+, r1
    b2be:	84 0d       	add	r24, r4
    b2c0:	65 1d       	adc	r22, r5
    b2c2:	76 1d       	adc	r23, r6
    b2c4:	68 15       	cp	r22, r8
    b2c6:	79 05       	cpc	r23, r9
    b2c8:	08 f0       	brcs	.+2      	; 0xb2cc <ch4_loop+0x24>
    b2ca:	b5 01       	movw	r22, r10
    b2cc:	fb 01       	movw	r30, r22
    b2ce:	44 91       	lpm	r20, Z+
    b2d0:	45 03       	mulsu	r20, r21
    b2d2:	1d 92       	st	X+, r1
		dec r28
    b2d4:	ca 95       	dec	r28
		brne ch4_loop
    b2d6:	41 f7       	brne	.-48     	; 0xb2a8 <ch4_loop>

		movw XL,r2	;push
    b2d8:	d1 01       	movw	r26, r2





	lds r2,tr1_step_lo
    b2da:	20 90 35 0d 	lds	r2, 0x0D35
	lds r3,tr1_step_hi
    b2de:	30 90 36 0d 	lds	r3, 0x0D36
	lds r4,tr1_pos_lo
    b2e2:	40 90 38 0d 	lds	r4, 0x0D38
	lds r5,tr1_pos_hi 
    b2e6:	50 90 39 0d 	lds	r5, 0x0D39
	lds r6,tr1_pos_frac
    b2ea:	60 90 37 0d 	lds	r6, 0x0D37
	lds r17,tr1_vol
    b2ee:	10 91 34 0d 	lds	r17, 0x0D34
	
	lds r7,tr2_step_lo
    b2f2:	70 90 3f 0d 	lds	r7, 0x0D3F
	lds r8,tr2_step_hi
    b2f6:	80 90 40 0d 	lds	r8, 0x0D40
	lds r9,tr2_pos_frac
    b2fa:	90 90 41 0d 	lds	r9, 0x0D41
	lds r10,tr2_pos_lo
    b2fe:	a0 90 42 0d 	lds	r10, 0x0D42
	lds r11,tr2_pos_hi
    b302:	b0 90 43 0d 	lds	r11, 0x0D43
	lds r18,tr2_vol	
    b306:	20 91 3e 0d 	lds	r18, 0x0D3E

	lds r12,tr3_step_lo
    b30a:	c0 90 49 0d 	lds	r12, 0x0D49
	lds r13,tr3_step_hi
    b30e:	d0 90 4a 0d 	lds	r13, 0x0D4A
	lds r14,tr3_pos_lo
    b312:	e0 90 4c 0d 	lds	r14, 0x0D4C
	lds r15,tr3_pos_hi
    b316:	f0 90 4d 0d 	lds	r15, 0x0D4D
	lds r16,tr3_pos_frac
    b31a:	00 91 4b 0d 	lds	r16, 0x0D4B
	lds r19,tr3_vol	
    b31e:	30 91 48 0d 	lds	r19, 0x0D48



	

	ldi r25,0xff 
    b322:	9f ef       	ldi	r25, 0xFF	; 255

0000b324 <mix_loop>:
mix_loop:

	#if MIXER_CHAN4_TYPE == 1 && SOUND_CHANNEL_4_ENABLE == 1
		ld 28,X
    b324:	cc 91       	ld	r28, X
		clr r29	;sign extend
    b326:	dd 27       	eor	r29, r29
		sbrc r28,7
    b328:	c7 fd       	sbrc	r28, 7
		ser r29
    b32a:	df ef       	ldi	r29, 0xFF	; 255
	#endif

	;channel 1 - 12 cycles/sample
	add	r6,r2	;add step to fractional part of sample pos
    b32c:	62 0c       	add	r6, r2
	adc r4,r3	;add step to low byte of sample pos
    b32e:	43 1c       	adc	r4, r3
	movw ZL,r4
    b330:	f2 01       	movw	r30, r4
	lpm	r20,Z	;load sample
    b332:	44 91       	lpm	r20, Z+
	mulsu r20,r17;(sample*mixing vol)
    b334:	41 03       	mulsu	r20, r17
	clr r0
    b336:	00 24       	eor	r0, r0
	sbc r0,r0	;sign extend
    b338:	00 08       	sbc	r0, r0

	#if MIXER_CHAN4_TYPE == 0 || SOUND_CHANNEL_4_ENABLE == 0
		mov r28,r1	;add (sample*vol>>8) to mix buffer lsb
		mov r29,r0	;ajust mix buffer msb
	#else
		add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b33a:	c1 0d       	add	r28, r1
		adc r29,r0	;ajust mix buffer msb		
    b33c:	d0 1d       	adc	r29, r0
	#endif

	#if SOUND_CHANNEL_2_ENABLE == 1
		;channel 2
		add	r9,r7	;add step to fractional part of sample pos
    b33e:	97 0c       	add	r9, r7
		adc r10,r8	;add step to low byte of sample pos 
    b340:	a8 1c       	adc	r10, r8
		movw ZL,r10
    b342:	f5 01       	movw	r30, r10
		lpm	r20,Z	;load sample
    b344:	44 91       	lpm	r20, Z+
		mulsu r20,r18;(sample*mixing vol)
    b346:	42 03       	mulsu	r20, r18
		clr r0
    b348:	00 24       	eor	r0, r0
		sbc r0,r0	;sign extend
    b34a:	00 08       	sbc	r0, r0
		add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b34c:	c1 0d       	add	r28, r1
		adc r29,r0	;ajust mix buffer msb
    b34e:	d0 1d       	adc	r29, r0
	#endif 

	#if SOUND_CHANNEL_3_ENABLE == 1
		;channel 3
		add	r16,r12	;add step to fractional part of sample pos
    b350:	0c 0d       	add	r16, r12
		adc r14,r13	;add step to low byte of sample pos 
    b352:	ed 1c       	adc	r14, r13
		movw ZL,r14
    b354:	f7 01       	movw	r30, r14
		lpm	r20,Z	;load sample
    b356:	44 91       	lpm	r20, Z+
		mulsu r20,r19;(sample*mixing vol)
    b358:	43 03       	mulsu	r20, r19
		clr r0
    b35a:	00 24       	eor	r0, r0
		sbc r0,r0	;sign extend
    b35c:	00 08       	sbc	r0, r0
		add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b35e:	c1 0d       	add	r28, r1
		adc r29,r0	;ajust mix buffer msb
    b360:	d0 1d       	adc	r29, r0
	#endif

	;final processing

	;clip
	clr r0
    b362:	00 24       	eor	r0, r0
	cpi r28,128	;> 127?
    b364:	c0 38       	cpi	r28, 0x80	; 128
	cpc r29,r0 ;0	
    b366:	d0 05       	cpc	r29, r0
	brlt .+2
    b368:	0c f0       	brlt	.+2      	; 0xb36c <mix_loop+0x48>
	ldi r28,127
    b36a:	cf e7       	ldi	r28, 0x7F	; 127
	
	dec r0
    b36c:	0a 94       	dec	r0
	cpi r28,-128; <-128?
    b36e:	c0 38       	cpi	r28, 0x80	; 128
	cpc r29,r0 ;0xff
    b370:	d0 05       	cpc	r29, r0
	brge .+2
    b372:	0c f4       	brge	.+2      	; 0xb376 <mix_loop+0x52>
	ldi r28,-128
    b374:	c0 e8       	ldi	r28, 0x80	; 128


	subi r28,128	;convert to unsigned		
    b376:	c0 58       	subi	r28, 0x80	; 128
	st X+,r28
    b378:	cd 93       	st	X+, r28


	dec r25
    b37a:	9a 95       	dec	r25
	breq .+2
    b37c:	09 f0       	breq	.+2      	; 0xb380 <mix_loop+0x5c>
	rjmp mix_loop
    b37e:	d2 cf       	rjmp	.-92     	; 0xb324 <mix_loop>

	lds r20,mix_block
    b380:	40 91 31 0d 	lds	r20, 0x0D31
	dec r20
    b384:	4a 95       	dec	r20
	sts mix_block,r20
    b386:	40 93 31 0d 	sts	0x0D31, r20
	ldi r25,(MIX_BANK_SIZE-0xff)
    b38a:	97 e0       	ldi	r25, 0x07	; 7
	breq .+2
    b38c:	09 f0       	breq	.+2      	; 0xb390 <mix_loop+0x6c>
	rjmp mix_loop
    b38e:	ca cf       	rjmp	.-108    	; 0xb324 <mix_loop>


	//save current positions
	sts tr1_pos_frac,r6
    b390:	60 92 37 0d 	sts	0x0D37, r6
	sts tr1_pos_lo,r4	
    b394:	40 92 38 0d 	sts	0x0D38, r4

	sts tr2_pos_frac,r9
    b398:	90 92 41 0d 	sts	0x0D41, r9
	sts tr2_pos_lo,r10
    b39c:	a0 92 42 0d 	sts	0x0D42, r10

	sts tr3_pos_frac,r16
    b3a0:	00 93 4b 0d 	sts	0x0D4B, r16
	sts tr3_pos_lo,r14
    b3a4:	e0 92 4c 0d 	sts	0x0D4C, r14
#if MIXER_CHAN4_TYPE == 0
	sts tr4_barrel_lo,r22
	sts tr4_barrel_hi,r23
	sts tr4_divider,r24
#else
	sts tr4_vol,r21	
    b3a8:	50 93 52 0d 	sts	0x0D52, r21
	sts tr4_pos_lo,r22
    b3ac:	60 93 56 0d 	sts	0x0D56, r22
	sts tr4_pos_hi,r23
    b3b0:	70 93 57 0d 	sts	0x0D57, r23
	sts tr4_pos_frac,r24
    b3b4:	80 93 55 0d 	sts	0x0D55, r24

#endif

	pop r29
    b3b8:	df 91       	pop	r29
	pop r28
    b3ba:	cf 91       	pop	r28
	pop r17
    b3bc:	1f 91       	pop	r17
	pop r16
    b3be:	0f 91       	pop	r16
	pop r15
    b3c0:	ff 90       	pop	r15
	pop r14
    b3c2:	ef 90       	pop	r14
	pop r13
    b3c4:	df 90       	pop	r13
	pop r12
    b3c6:	cf 90       	pop	r12
	pop r11
    b3c8:	bf 90       	pop	r11
	pop r10
    b3ca:	af 90       	pop	r10
	pop r9
    b3cc:	9f 90       	pop	r9
	pop r8
    b3ce:	8f 90       	pop	r8
	pop r7
    b3d0:	7f 90       	pop	r7
	pop r6
    b3d2:	6f 90       	pop	r6
	pop r5
    b3d4:	5f 90       	pop	r5
	pop r4
    b3d6:	4f 90       	pop	r4
	pop r3
    b3d8:	3f 90       	pop	r3
	pop r2
    b3da:	2f 90       	pop	r2
//	lds r22,sync_pulse
//	clr r1
//	call DisplayMixStats
	

	ret
    b3dc:	08 95       	ret

0000b3de <update_sound_buffer_fast>:
; NO MIDI
; Destroys: Z,r16,r17
; Cycles: 24
;**********************************
update_sound_buffer_fast:
	lds ZL,mix_pos
    b3de:	e0 91 2e 0d 	lds	r30, 0x0D2E
	lds ZH,mix_pos+1
    b3e2:	f0 91 2f 0d 	lds	r31, 0x0D2F
			
	ld r16,Z+		;load next sample
    b3e6:	01 91       	ld	r16, Z+
	;subi r16,128	;convert to unsigned
	nop
    b3e8:	00 00       	nop
	sts _SFR_MEM_ADDR(OCR2A),r16 ;output sound byte
    b3ea:	00 93 b3 00 	sts	0x00B3, r16

	;compare+wrap=8 cycles fixed
	ldi r16,hi8(MIX_BUF_SIZE+mix_buf)
    b3ee:	0d e0       	ldi	r16, 0x0D	; 13
	cpi ZL,lo8(MIX_BUF_SIZE+mix_buf)
    b3f0:	ee 32       	cpi	r30, 0x2E	; 46
	cpc ZH,r16
    b3f2:	f0 07       	cpc	r31, r16
	;12

	ldi r16,lo8(mix_buf)
    b3f4:	02 e2       	ldi	r16, 0x22	; 34
	ldi r17,hi8(mix_buf)
    b3f6:	1b e0       	ldi	r17, 0x0B	; 11
	brlo .+2
    b3f8:	08 f0       	brcs	.+2      	; 0xb3fc <update_sound_buffer_fast+0x1e>
	movw ZL,r16
    b3fa:	f8 01       	movw	r30, r16

	sts mix_pos,ZL
    b3fc:	e0 93 2e 0d 	sts	0x0D2E, r30
	sts mix_pos+1,ZH		
    b400:	f0 93 2f 0d 	sts	0x0D2F, r31

	ret ;20+4=24
    b404:	08 95       	ret

0000b406 <update_sound_buffer>:
; Handles MIDI.
;
; Cycles: 36 + 27 = 63
;***********************
update_sound_buffer:	
	jmp .
    b406:	0c 94 05 5a 	jmp	0xb40a	; 0xb40a <update_sound_buffer+0x4>
	jmp .
    b40a:	0c 94 07 5a 	jmp	0xb40e	; 0xb40e <update_sound_buffer_2b>

0000b40e <update_sound_buffer_2b>:
update_sound_buffer_2b:
	push r16
    b40e:	0f 93       	push	r16
	push r17
    b410:	1f 93       	push	r17
	push r18
    b412:	2f 93       	push	r18
	;out _SFR_IO_ADDR(GPIOR1),r18 ;push
	;nop

	lds ZL,mix_pos
    b414:	e0 91 2e 0d 	lds	r30, 0x0D2E
	lds ZH,mix_pos+1
    b418:	f0 91 2f 0d 	lds	r31, 0x0D2F
			
	ld r16,Z+
    b41c:	01 91       	ld	r16, Z+
	;subi r16,128  ;convert to unsigned
	sts _SFR_MEM_ADDR(OCR2A),r16 ;output sound byte
    b41e:	00 93 b3 00 	sts	0x00B3, r16

	;compare+wrap=8 cycles fixed
	ldi r16,hi8(MIX_BUF_SIZE+mix_buf)
    b422:	0d e0       	ldi	r16, 0x0D	; 13
	cpi ZL,lo8(MIX_BUF_SIZE+mix_buf)
    b424:	ee 32       	cpi	r30, 0x2E	; 46
	cpc ZH,r16
    b426:	f0 07       	cpc	r31, r16
	
	brsh s1
    b428:	08 f4       	brcc	.+2      	; 0xb42c <s1>
	rjmp .
    b42a:	00 c0       	rjmp	.+0      	; 0xb42c <s1>

0000b42c <s1>:
s1:
	brlo s2
    b42c:	10 f0       	brcs	.+4      	; 0xb432 <s2>
	ldi ZL,lo8(mix_buf)
    b42e:	e2 e2       	ldi	r30, 0x22	; 34
	ldi ZH,hi8(mix_buf)
    b430:	fb e0       	ldi	r31, 0x0B	; 11

0000b432 <s2>:
s2:

	sts mix_pos,ZL
    b432:	e0 93 2e 0d 	sts	0x0D2E, r30
	sts mix_pos+1,ZH	
    b436:	f0 93 2f 0d 	sts	0x0D2F, r31
	;lpm
	;lpm
	;lpm
	;nop
	;nop
	ldi r18,6
    b43a:	26 e0       	ldi	r18, 0x06	; 6
	dec r18
    b43c:	2a 95       	dec	r18
	brne .-4
    b43e:	f1 f7       	brne	.-4      	; 0xb43c <s2+0xa>
	rjmp .
    b440:	00 c0       	rjmp	.+0      	; 0xb442 <s2+0x10>
#endif


	;nop
	;in r18,_SFR_IO_ADDR(GPIOR1) ;pop
	pop r18
    b442:	2f 91       	pop	r18
	pop r17
    b444:	1f 91       	pop	r17
	pop r16
    b446:	0f 91       	pop	r16

	ret 
    b448:	08 95       	ret

0000b44a <update_sound_buffer_2>:


;no sound update for 1/2 dual-rate sync pulses
;cycles: 35
update_sound_buffer_2:
	nop
    b44a:	00 00       	nop
	lds ZL,sync_pulse
    b44c:	e0 91 fb 0a 	lds	r30, 0x0AFB
	sbrs ZL,0
    b450:	e0 ff       	sbrs	r30, 0
	rjmp update_sound_buffer_2b	
    b452:	dd cf       	rjmp	.-70     	; 0xb40e <update_sound_buffer_2b>

	ldi ZL,8+14-5
    b454:	e1 e1       	ldi	r30, 0x11	; 17

0000b456 <usb2>:
usb2:		
	dec ZL
    b456:	ea 95       	dec	r30
	brne usb2	
    b458:	f1 f7       	brne	.-4      	; 0xb456 <usb2>

	rjmp .
    b45a:	00 c0       	rjmp	.+0      	; 0xb45c <usb2+0x6>

	ret 
    b45c:	08 95       	ret

0000b45e <SetSpritesTileTable>:
; C-callable
; r25:r24=pointer to sprites pixel data.
;*****************************
.section .text.SetSpritesTileTable
SetSpritesTileTable:
	sts sprites_tile_banks,r24
    b45e:	80 93 d3 0a 	sts	0x0AD3, r24
	sts sprites_tile_banks+1,r25
    b462:	90 93 d4 0a 	sts	0x0AD4, r25
	ret
    b466:	08 95       	ret

0000b468 <ClearVram>:
	; C-callable
	;************************************
	.section .text.ClearVram
	ClearVram:
		//init vram		
		ldi r30,lo8(VRAM_SIZE)
    b468:	e8 e4       	ldi	r30, 0x48	; 72
		ldi r31,hi8(VRAM_SIZE)
    b46a:	f3 e0       	ldi	r31, 0x03	; 3

		ldi XL,lo8(vram)
    b46c:	a0 e2       	ldi	r26, 0x20	; 32
		ldi XH,hi8(vram)
    b46e:	b1 e0       	ldi	r27, 0x01	; 1

		ldi r22,RAM_TILES_COUNT
    b470:	68 e1       	ldi	r22, 0x18	; 24

0000b472 <fill_vram_loop>:


	fill_vram_loop:
		st X+,r22
    b472:	6d 93       	st	X+, r22
		sbiw r30,1
    b474:	31 97       	sbiw	r30, 0x01	; 1
		brne fill_vram_loop
    b476:	e9 f7       	brne	.-6      	; 0xb472 <fill_vram_loop>

		clr r1
    b478:	11 24       	eor	r1, r1

		ret
    b47a:	08 95       	ret

0000b47c <SetTile>:
	; r20=Tile No (8 bit)
	;************************************
	.section .text.SetTile
	SetTile:

		clr r25
    b47c:	99 27       	eor	r25, r25
		clr r23	
    b47e:	77 27       	eor	r23, r23

		ldi r18,VRAM_TILES_H
    b480:	2e e1       	ldi	r18, 0x1E	; 30

		mul r22,r18		;calculate Y line addr in vram
    b482:	62 9f       	mul	r22, r18
		add r0,r24		;add X offset
    b484:	08 0e       	add	r0, r24
		adc r1,r25
    b486:	19 1e       	adc	r1, r25
		ldi XL,lo8(vram)
    b488:	a0 e2       	ldi	r26, 0x20	; 32
		ldi XH,hi8(vram)
    b48a:	b1 e0       	ldi	r27, 0x01	; 1
		add XL,r0
    b48c:	a0 0d       	add	r26, r0
		adc XH,r1
    b48e:	b1 1d       	adc	r27, r1
		
		#if VIDEO_MODE == 3
			subi r20,~(RAM_TILES_COUNT-1)
    b490:	48 5e       	subi	r20, 0xE8	; 232
		#endif

		st X,r20
    b492:	4c 93       	st	X, r20

		clr r1
    b494:	11 24       	eor	r1, r1
	
		ret
    b496:	08 95       	ret

0000b498 <SetFont>:
	; r22=Y pos (8 bit)
	; r20=Font tile No (8 bit)
	;************************************
	.section .text.SetFont
	SetFont:
		clr r25
    b498:	99 27       	eor	r25, r25

		ldi r18,VRAM_TILES_H
    b49a:	2e e1       	ldi	r18, 0x1E	; 30

		mul r22,r18		;calculate Y line addr in vram
    b49c:	62 9f       	mul	r22, r18
		
		add r0,r24		;add X offset
    b49e:	08 0e       	add	r0, r24
		adc r1,r25
    b4a0:	19 1e       	adc	r1, r25

		ldi XL,lo8(vram)
    b4a2:	a0 e2       	ldi	r26, 0x20	; 32
		ldi XH,hi8(vram)
    b4a4:	b1 e0       	ldi	r27, 0x01	; 1
		add XL,r0
    b4a6:	a0 0d       	add	r26, r0
		adc XH,r1
    b4a8:	b1 1d       	adc	r27, r1

		lds r21,font_tile_index
    b4aa:	50 91 0a 0b 	lds	r21, 0x0B0A
		add r20,r21
    b4ae:	45 0f       	add	r20, r21

		st X,r20
    b4b0:	4c 93       	st	X, r20

		clr r1
    b4b2:	11 24       	eor	r1, r1
	
		ret
    b4b4:	08 95       	ret

0000b4b6 <SetFontTilesIndex>:
	; C-callable
	; r24=First font tile index in tile table (8 bit)
	;************************************
	.section .text.SetFontTilesIndex
 	SetFontTilesIndex:
		sts font_tile_index,r24
    b4b6:	80 93 0a 0b 	sts	0x0B0A, r24
		ret
    b4ba:	08 95       	ret

0000b4bc <SetTileTable>:
; C-callable
; r25:r24=pointer to tiles data
;************************************
.section .text.SetTileTable
SetTileTable:
	sts tile_table_lo,r24
    b4bc:	80 93 08 0b 	sts	0x0B08, r24
	sts tile_table_hi,r25	
    b4c0:	90 93 09 0b 	sts	0x0B09, r25
	ret
    b4c4:	08 95       	ret

0000b4c6 <GetVsyncFlag>:
;
; C-callable
;************************************
.section .text.GetVsyncFlag
GetVsyncFlag:
	lds r24,vsync_flag
    b4c6:	80 91 fc 0a 	lds	r24, 0x0AFC
	ret
    b4ca:	08 95       	ret

0000b4cc <ClearVsyncFlag>:
; 
; C-callable
;*****************************
.section .text.ClearVsyncFlag
ClearVsyncFlag:
	clr r1
    b4cc:	11 24       	eor	r1, r1
	sts vsync_flag,r1
    b4ce:	10 92 fc 0a 	sts	0x0AFC, r1
	ret
    b4d2:	08 95       	ret

0000b4d4 <SetColorBurstOffset>:
; C-callable
; r24=burst offset in clock cycles
;************************************
.section .text.SetColorBurstOffset
SetColorBurstOffset:
	sts burstOffset,r24
    b4d4:	80 93 13 0b 	sts	0x0B13, r24
	ret
    b4d8:	08 95       	ret

0000b4da <ReadJoypad>:
; r24=joypad No (0 or 1)
; returns: (int) r25:r24
;*****************************
.section .text.ReadJoypad
ReadJoypad:	
	tst r24
    b4da:	88 23       	and	r24, r24
	brne rj_p2
    b4dc:	29 f4       	brne	.+10     	; 0xb4e8 <rj_p2>
		
	lds r24,joypad1_status_lo
    b4de:	80 91 0b 0b 	lds	r24, 0x0B0B
	lds r25,joypad1_status_lo+1
    b4e2:	90 91 0c 0b 	lds	r25, 0x0B0C
	ret
    b4e6:	08 95       	ret

0000b4e8 <rj_p2>:
rj_p2:
	lds r24,joypad2_status_lo
    b4e8:	80 91 0f 0b 	lds	r24, 0x0B0F
	lds r25,joypad2_status_lo+1	
    b4ec:	90 91 10 0b 	lds	r25, 0x0B10

	ret
    b4f0:	08 95       	ret

0000b4f2 <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    b4f2:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    b4f4:	fe cf       	rjmp	.-4      	; 0xb4f2 <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    b4f6:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    b4f8:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    b4fa:	60 bd       	out	0x20, r22	; 32
   cli
    b4fc:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    b4fe:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    b500:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    b502:	78 94       	sei
   ret
    b504:	08 95       	ret

0000b506 <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    b506:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    b508:	fe cf       	rjmp	.-4      	; 0xb506 <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    b50a:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    b50c:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    b50e:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    b510:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    b512:	80 b5       	in	r24, 0x20	; 32
   sei
    b514:	78 94       	sei
   ret
    b516:	08 95       	ret

0000b518 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    b518:	80 93 02 0b 	sts	0x0B02, r24
	sts post_vsync_user_callback+1,r25
    b51c:	90 93 03 0b 	sts	0x0B03, r25
	ret
    b520:	08 95       	ret

0000b522 <ReadButtons>:
void ReadButtons(){
	unsigned int p1ButtonsLo=0,p2ButtonsLo=0;
	unsigned char i;

	//latch controllers
	JOYPAD_OUT_PORT|=_BV(JOYPAD_LATCH_PIN);
    b522:	12 9a       	sbi	0x02, 2	; 2
			WaitUs(1);
		}else{
			Wait200ns();
		}	
	#else
		Wait200ns();
    b524:	c8 95       	lpm
    b526:	c8 95       	lpm
	#endif
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));
    b528:	12 98       	cbi	0x02, 2	; 2
    b52a:	20 e0       	ldi	r18, 0x00	; 0
    b52c:	30 e0       	ldi	r19, 0x00	; 0
    b52e:	80 e0       	ldi	r24, 0x00	; 0
    b530:	90 e0       	ldi	r25, 0x00	; 0
    b532:	40 e0       	ldi	r20, 0x00	; 0


	//read button states
	for(i=0;i<16;i++){

		p1ButtonsLo>>=1;
    b534:	36 95       	lsr	r19
    b536:	27 95       	ror	r18
		p2ButtonsLo>>=1;
    b538:	96 95       	lsr	r25
    b53a:	87 95       	ror	r24
	
		//pulse clock pin		
		JOYPAD_OUT_PORT&=~(_BV(JOYPAD_CLOCK_PIN));
    b53c:	13 98       	cbi	0x02, 3	; 2
				WaitUs(5);
			}else{
				Wait200ns();
			}	
		#else
			Wait200ns();
    b53e:	c8 95       	lpm
    b540:	c8 95       	lpm
		#endif
		
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) p1ButtonsLo|=(1<<15);
    b542:	00 9b       	sbis	0x00, 0	; 0
    b544:	30 68       	ori	r19, 0x80	; 128
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) p2ButtonsLo|=(1<<15);
    b546:	01 9b       	sbis	0x00, 1	; 0
    b548:	90 68       	ori	r25, 0x80	; 128
		
		JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
    b54a:	13 9a       	sbi	0x02, 3	; 2
				WaitUs(5);
			}else{
				Wait200ns();
			}	
		#else
			Wait200ns();
    b54c:	c8 95       	lpm
    b54e:	c8 95       	lpm
	#endif
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));


	//read button states
	for(i=0;i<16;i++){
    b550:	4f 5f       	subi	r20, 0xFF	; 255
    b552:	40 31       	cpi	r20, 0x10	; 16
    b554:	79 f7       	brne	.-34     	; 0xb534 <ReadButtons+0x12>
		#endif

	}

	#if JOYSTICK==TYPE_SNES
		joypad1_status_lo=p1ButtonsLo;
    b556:	30 93 0c 0b 	sts	0x0B0C, r19
    b55a:	20 93 0b 0b 	sts	0x0B0B, r18
		joypad2_status_lo=p2ButtonsLo;
    b55e:	90 93 10 0b 	sts	0x0B10, r25
    b562:	80 93 0f 0b 	sts	0x0B0F, r24
	#else
		joypad1_status_lo=p1ButtonsLo&0xff;
		joypad2_status_lo=p2ButtonsLo&0xff;	
	#endif

	if(joypad1_status_lo==(BTN_START+BTN_SELECT+BTN_Y+BTN_B) || joypad2_status_lo==(BTN_START+BTN_SELECT+BTN_Y+BTN_B)){
    b566:	80 91 0b 0b 	lds	r24, 0x0B0B
    b56a:	90 91 0c 0b 	lds	r25, 0x0B0C
    b56e:	0f 97       	sbiw	r24, 0x0f	; 15
    b570:	31 f0       	breq	.+12     	; 0xb57e <ReadButtons+0x5c>
    b572:	80 91 0f 0b 	lds	r24, 0x0B0F
    b576:	90 91 10 0b 	lds	r25, 0x0B10
    b57a:	0f 97       	sbiw	r24, 0x0f	; 15
    b57c:	61 f4       	brne	.+24     	; 0xb596 <ReadButtons+0x74>

/**
 * Performs a software reset
 */
void SoftReset(void){        
	wdt_enable(WDTO_15MS);  
    b57e:	28 e0       	ldi	r18, 0x08	; 8
    b580:	88 e1       	ldi	r24, 0x18	; 24
    b582:	90 e0       	ldi	r25, 0x00	; 0
    b584:	0f b6       	in	r0, 0x3f	; 63
    b586:	f8 94       	cli
    b588:	a8 95       	wdr
    b58a:	80 93 60 00 	sts	0x0060, r24
    b58e:	0f be       	out	0x3f, r0	; 63
    b590:	20 93 60 00 	sts	0x0060, r18
    b594:	ff cf       	rjmp	.-2      	; 0xb594 <ReadButtons+0x72>
    b596:	08 95       	ret

0000b598 <ReadControllers>:
void ReadControllers(){

	//detect if joypads are connected
	//when no connector are plugged, the internal AVR pullup will drive the line high
	//otherwise the controller's shift register will drive the line low.
	joypadsConnectionStatus=0;
    b598:	10 92 5d 0d 	sts	0x0D5D, r1
	if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) joypadsConnectionStatus|=1;
    b59c:	00 99       	sbic	0x00, 0	; 0
    b59e:	03 c0       	rjmp	.+6      	; 0xb5a6 <ReadControllers+0xe>
    b5a0:	81 e0       	ldi	r24, 0x01	; 1
    b5a2:	80 93 5d 0d 	sts	0x0D5D, r24
	if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) joypadsConnectionStatus|=2;
    b5a6:	01 99       	sbic	0x00, 1	; 0
    b5a8:	05 c0       	rjmp	.+10     	; 0xb5b4 <ReadControllers+0x1c>
    b5aa:	80 91 5d 0d 	lds	r24, 0x0D5D
    b5ae:	82 60       	ori	r24, 0x02	; 2
    b5b0:	80 93 5d 0d 	sts	0x0D5D, r24
			
	


	//read the standard buttons
	ReadButtons();
    b5b4:	0e 94 91 5a 	call	0xb522	; 0xb522 <ReadButtons>

	}
#endif


}
    b5b8:	08 95       	ret

0000b5ba <isEepromFormatted>:
	  }
   }
}
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    b5ba:	1f 93       	push	r17
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    b5bc:	80 e0       	ldi	r24, 0x00	; 0
    b5be:	90 e0       	ldi	r25, 0x00	; 0
    b5c0:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b5c4:	18 2f       	mov	r17, r24
    b5c6:	81 e0       	ldi	r24, 0x01	; 1
    b5c8:	90 e0       	ldi	r25, 0x00	; 0
    b5ca:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b5ce:	90 e0       	ldi	r25, 0x00	; 0
    b5d0:	38 2f       	mov	r19, r24
    b5d2:	20 e0       	ldi	r18, 0x00	; 0
    b5d4:	21 0f       	add	r18, r17
    b5d6:	31 1d       	adc	r19, r1
    b5d8:	2a 55       	subi	r18, 0x5A	; 90
    b5da:	35 45       	sbci	r19, 0x55	; 85
    b5dc:	09 f4       	brne	.+2      	; 0xb5e0 <isEepromFormatted+0x26>
    b5de:	91 e0       	ldi	r25, 0x01	; 1
	return (id==EEPROM_SIGNATURE);
}
    b5e0:	89 2f       	mov	r24, r25
    b5e2:	1f 91       	pop	r17
    b5e4:	08 95       	ret

0000b5e6 <EepromReadBlock>:
 * 	0x01 = EEPROM_ERROR_INVALID_BLOCK
 *	0x02 = EEPROM_ERROR_FULL
 *	0x03 = EEPROM_ERROR_BLOCK_NOT_FOUND
 *	0x04 = EEPROM_ERROR_NOT_FORMATTED
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
    b5e6:	bf 92       	push	r11
    b5e8:	cf 92       	push	r12
    b5ea:	df 92       	push	r13
    b5ec:	ef 92       	push	r14
    b5ee:	ff 92       	push	r15
    b5f0:	0f 93       	push	r16
    b5f2:	1f 93       	push	r17
    b5f4:	cf 93       	push	r28
    b5f6:	df 93       	push	r29
    b5f8:	6c 01       	movw	r12, r24
    b5fa:	06 2f       	mov	r16, r22
    b5fc:	b7 2e       	mov	r11, r23
	unsigned char i;
	unsigned int destAddr=0xffff,id;
	unsigned char *destPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    b5fe:	0e 94 dd 5a 	call	0xb5ba	; 0xb5ba <isEepromFormatted>
    b602:	88 23       	and	r24, r24
    b604:	09 f4       	brne	.+2      	; 0xb608 <EepromReadBlock+0x22>
    b606:	40 c0       	rjmp	.+128    	; 0xb688 <EepromReadBlock+0xa2>
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;
    b608:	8f ef       	ldi	r24, 0xFF	; 255
    b60a:	c8 16       	cp	r12, r24
    b60c:	8f ef       	ldi	r24, 0xFF	; 255
    b60e:	d8 06       	cpc	r13, r24
    b610:	11 f4       	brne	.+4      	; 0xb616 <EepromReadBlock+0x30>
    b612:	81 e0       	ldi	r24, 0x01	; 1
    b614:	3c c0       	rjmp	.+120    	; 0xb68e <EepromReadBlock+0xa8>
    b616:	ee 24       	eor	r14, r14
    b618:	ff 24       	eor	r15, r15

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    b61a:	c7 01       	movw	r24, r14
    b61c:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b620:	18 2f       	mov	r17, r24
    b622:	c7 01       	movw	r24, r14
    b624:	01 96       	adiw	r24, 0x01	; 1
    b626:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
		if(id==blockId){
    b62a:	d8 2f       	mov	r29, r24
    b62c:	c0 e0       	ldi	r28, 0x00	; 0
    b62e:	ce 01       	movw	r24, r28
    b630:	81 0f       	add	r24, r17
    b632:	91 1d       	adc	r25, r1
    b634:	8c 15       	cp	r24, r12
    b636:	9d 05       	cpc	r25, r13
    b638:	31 f4       	brne	.+12     	; 0xb646 <EepromReadBlock+0x60>
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			
    b63a:	9f ef       	ldi	r25, 0xFF	; 255
    b63c:	e9 16       	cp	r14, r25
    b63e:	9f ef       	ldi	r25, 0xFF	; 255
    b640:	f9 06       	cpc	r15, r25
    b642:	59 f4       	brne	.+22     	; 0xb65a <EepromReadBlock+0x74>
    b644:	23 c0       	rjmp	.+70     	; 0xb68c <EepromReadBlock+0xa6>
    b646:	80 e2       	ldi	r24, 0x20	; 32
    b648:	90 e0       	ldi	r25, 0x00	; 0
    b64a:	e8 0e       	add	r14, r24
    b64c:	f9 1e       	adc	r15, r25

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
    b64e:	90 e0       	ldi	r25, 0x00	; 0
    b650:	e9 16       	cp	r14, r25
    b652:	94 e0       	ldi	r25, 0x04	; 4
    b654:	f9 06       	cpc	r15, r25
    b656:	09 f7       	brne	.-62     	; 0xb61a <EepromReadBlock+0x34>
    b658:	19 c0       	rjmp	.+50     	; 0xb68c <EepromReadBlock+0xa6>
 *	0x04 = EEPROM_ERROR_NOT_FORMATTED
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
	unsigned char i;
	unsigned int destAddr=0xffff,id;
	unsigned char *destPtr=(unsigned char *)block;
    b65a:	80 2f       	mov	r24, r16
    b65c:	9b 2d       	mov	r25, r11
    b65e:	9c 01       	movw	r18, r24
    b660:	e9 01       	movw	r28, r18
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b662:	70 e2       	ldi	r23, 0x20	; 32
    b664:	c7 2e       	mov	r12, r23
    b666:	d1 2c       	mov	r13, r1
    b668:	c2 0e       	add	r12, r18
    b66a:	d3 1e       	adc	r13, r19
		*destPtr=ReadEeprom(destAddr++);
    b66c:	87 01       	movw	r16, r14
    b66e:	0f 5f       	subi	r16, 0xFF	; 255
    b670:	1f 4f       	sbci	r17, 0xFF	; 255
    b672:	c7 01       	movw	r24, r14
    b674:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b678:	89 93       	st	Y+, r24
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b67a:	cc 15       	cp	r28, r12
    b67c:	dd 05       	cpc	r29, r13
    b67e:	11 f4       	brne	.+4      	; 0xb684 <EepromReadBlock+0x9e>
    b680:	80 e0       	ldi	r24, 0x00	; 0
    b682:	05 c0       	rjmp	.+10     	; 0xb68e <EepromReadBlock+0xa8>
    b684:	78 01       	movw	r14, r16
    b686:	f2 cf       	rjmp	.-28     	; 0xb66c <EepromReadBlock+0x86>
    b688:	84 e0       	ldi	r24, 0x04	; 4
    b68a:	01 c0       	rjmp	.+2      	; 0xb68e <EepromReadBlock+0xa8>
    b68c:	83 e0       	ldi	r24, 0x03	; 3
		*destPtr=ReadEeprom(destAddr++);
		destPtr++;	
	}
	
	return 0;
}
    b68e:	df 91       	pop	r29
    b690:	cf 91       	pop	r28
    b692:	1f 91       	pop	r17
    b694:	0f 91       	pop	r16
    b696:	ff 90       	pop	r15
    b698:	ef 90       	pop	r14
    b69a:	df 90       	pop	r13
    b69c:	cf 90       	pop	r12
    b69e:	bf 90       	pop	r11
    b6a0:	08 95       	ret

0000b6a2 <EepromWriteBlock>:
/*
 * Write a data block in the specified block id. If the block does not exist, it is created.
 *
 * Returns: 0 on success or error codes
 */
char EepromWriteBlock(struct EepromBlockStruct *block){
    b6a2:	bf 92       	push	r11
    b6a4:	cf 92       	push	r12
    b6a6:	df 92       	push	r13
    b6a8:	ef 92       	push	r14
    b6aa:	ff 92       	push	r15
    b6ac:	0f 93       	push	r16
    b6ae:	1f 93       	push	r17
    b6b0:	cf 93       	push	r28
    b6b2:	df 93       	push	r29
    b6b4:	6c 01       	movw	r12, r24
	unsigned char i,nextFreeBlock=0,c;
	unsigned int destAddr=0,id;
	unsigned char *srcPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    b6b6:	0e 94 dd 5a 	call	0xb5ba	; 0xb5ba <isEepromFormatted>
    b6ba:	88 23       	and	r24, r24
    b6bc:	11 f4       	brne	.+4      	; 0xb6c2 <EepromWriteBlock+0x20>
    b6be:	84 e0       	ldi	r24, 0x04	; 4
    b6c0:	4e c0       	rjmp	.+156    	; 0xb75e <EepromWriteBlock+0xbc>
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;
    b6c2:	f6 01       	movw	r30, r12
    b6c4:	80 81       	ld	r24, Z
    b6c6:	91 81       	ldd	r25, Z+1	; 0x01
    b6c8:	ff ef       	ldi	r31, 0xFF	; 255
    b6ca:	8f 3f       	cpi	r24, 0xFF	; 255
    b6cc:	9f 07       	cpc	r25, r31
    b6ce:	09 f4       	brne	.+2      	; 0xb6d2 <EepromWriteBlock+0x30>
    b6d0:	45 c0       	rjmp	.+138    	; 0xb75c <EepromWriteBlock+0xba>
    b6d2:	8a 55       	subi	r24, 0x5A	; 90
    b6d4:	95 45       	sbci	r25, 0x55	; 85
    b6d6:	09 f4       	brne	.+2      	; 0xb6da <EepromWriteBlock+0x38>
    b6d8:	41 c0       	rjmp	.+130    	; 0xb75c <EepromWriteBlock+0xba>
    b6da:	01 e0       	ldi	r16, 0x01	; 1
    b6dc:	10 e0       	ldi	r17, 0x00	; 0
    b6de:	f0 e2       	ldi	r31, 0x20	; 32
    b6e0:	ef 2e       	mov	r14, r31
    b6e2:	f1 2c       	mov	r15, r1

	//scan all blocks and get the adress of that block or the next free one.
	for(i=EEPROM_HEADER_SIZE;i<64;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    b6e4:	c7 01       	movw	r24, r14
    b6e6:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b6ea:	b8 2e       	mov	r11, r24
    b6ec:	c7 01       	movw	r24, r14
    b6ee:	01 96       	adiw	r24, 0x01	; 1
    b6f0:	0e 94 83 5a 	call	0xb506	; 0xb506 <ReadEeprom>
    b6f4:	d8 2f       	mov	r29, r24
    b6f6:	c0 e0       	ldi	r28, 0x00	; 0
    b6f8:	9e 01       	movw	r18, r28
    b6fa:	2b 0d       	add	r18, r11
    b6fc:	31 1d       	adc	r19, r1
		if(id==block->id){
    b6fe:	f6 01       	movw	r30, r12
    b700:	80 81       	ld	r24, Z
    b702:	91 81       	ldd	r25, Z+1	; 0x01
    b704:	28 17       	cp	r18, r24
    b706:	39 07       	cpc	r19, r25
    b708:	19 f4       	brne	.+6      	; 0xb710 <EepromWriteBlock+0x6e>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    b70a:	11 23       	and	r17, r17
    b70c:	b1 f0       	breq	.+44     	; 0xb73a <EepromWriteBlock+0x98>
    b70e:	0e c0       	rjmp	.+28     	; 0xb72c <EepromWriteBlock+0x8a>
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
		if(id==block->id){
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
    b710:	2f 5f       	subi	r18, 0xFF	; 255
    b712:	3f 4f       	sbci	r19, 0xFF	; 255
    b714:	19 f4       	brne	.+6      	; 0xb71c <EepromWriteBlock+0x7a>
    b716:	11 23       	and	r17, r17
    b718:	09 f4       	brne	.+2      	; 0xb71c <EepromWriteBlock+0x7a>
    b71a:	10 2f       	mov	r17, r16

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block or the next free one.
	for(i=EEPROM_HEADER_SIZE;i<64;i++){
    b71c:	0f 5f       	subi	r16, 0xFF	; 255
    b71e:	80 e2       	ldi	r24, 0x20	; 32
    b720:	90 e0       	ldi	r25, 0x00	; 0
    b722:	e8 0e       	add	r14, r24
    b724:	f9 1e       	adc	r15, r25
    b726:	00 34       	cpi	r16, 0x40	; 64
    b728:	e9 f6       	brne	.-70     	; 0xb6e4 <EepromWriteBlock+0x42>
    b72a:	23 c0       	rjmp	.+70     	; 0xb772 <EepromWriteBlock+0xd0>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    b72c:	e1 2e       	mov	r14, r17
    b72e:	ff 24       	eor	r15, r15
    b730:	e5 e0       	ldi	r30, 0x05	; 5
    b732:	ee 0c       	add	r14, r14
    b734:	ff 1c       	adc	r15, r15
    b736:	ea 95       	dec	r30
    b738:	e1 f7       	brne	.-8      	; 0xb732 <EepromWriteBlock+0x90>
    b73a:	c0 e0       	ldi	r28, 0x00	; 0
    b73c:	d0 e0       	ldi	r29, 0x00	; 0

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
		c=*srcPtr;
		WriteEeprom(destAddr++,c);
    b73e:	f6 01       	movw	r30, r12
    b740:	ec 0f       	add	r30, r28
    b742:	fd 1f       	adc	r31, r29
    b744:	ce 01       	movw	r24, r28
    b746:	8e 0d       	add	r24, r14
    b748:	9f 1d       	adc	r25, r15
    b74a:	60 81       	ld	r22, Z
    b74c:	0e 94 79 5a 	call	0xb4f2	; 0xb4f2 <WriteEeprom>
    b750:	21 96       	adiw	r28, 0x01	; 1
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b752:	c0 32       	cpi	r28, 0x20	; 32
    b754:	d1 05       	cpc	r29, r1
    b756:	99 f7       	brne	.-26     	; 0xb73e <EepromWriteBlock+0x9c>
    b758:	80 e0       	ldi	r24, 0x00	; 0
    b75a:	01 c0       	rjmp	.+2      	; 0xb75e <EepromWriteBlock+0xbc>
    b75c:	81 e0       	ldi	r24, 0x01	; 1
		WriteEeprom(destAddr++,c);
		srcPtr++;	
	}
	
	return 0;
}
    b75e:	df 91       	pop	r29
    b760:	cf 91       	pop	r28
    b762:	1f 91       	pop	r17
    b764:	0f 91       	pop	r16
    b766:	ff 90       	pop	r15
    b768:	ef 90       	pop	r14
    b76a:	df 90       	pop	r13
    b76c:	cf 90       	pop	r12
    b76e:	bf 90       	pop	r11
    b770:	08 95       	ret
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
    b772:	11 23       	and	r17, r17
    b774:	d9 f6       	brne	.-74     	; 0xb72c <EepromWriteBlock+0x8a>
    b776:	82 e0       	ldi	r24, 0x02	; 2
    b778:	f2 cf       	rjmp	.-28     	; 0xb75e <EepromWriteBlock+0xbc>

0000b77a <FormatEeprom>:
	return resp;
}

	
// Format eeprom, wiping all data to zero
void FormatEeprom(void) {
    b77a:	cf 93       	push	r28
    b77c:	df 93       	push	r29
    b77e:	c0 e0       	ldi	r28, 0x00	; 0
    b780:	d0 e0       	ldi	r29, 0x00	; 0

   // Set sig. so we don't format next time
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
    b782:	fe 01       	movw	r30, r28
    b784:	e0 59       	subi	r30, 0x90	; 144
    b786:	ff 4f       	sbci	r31, 0xFF	; 255
    b788:	e4 91       	lpm	r30, Z+
    b78a:	ce 01       	movw	r24, r28
    b78c:	6e 2f       	mov	r22, r30
    b78e:	0e 94 79 5a 	call	0xb4f2	; 0xb4f2 <WriteEeprom>
    b792:	21 96       	adiw	r28, 0x01	; 1
	
// Format eeprom, wiping all data to zero
void FormatEeprom(void) {

   // Set sig. so we don't format next time
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
    b794:	c0 32       	cpi	r28, 0x20	; 32
    b796:	d1 05       	cpc	r29, r1
    b798:	a1 f7       	brne	.-24     	; 0xb782 <FormatEeprom+0x8>
    b79a:	c0 e2       	ldi	r28, 0x20	; 32
    b79c:	d0 e0       	ldi	r29, 0x00	; 0
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
   }
   
   // Write free blocks IDs
   for (u16 i = (EEPROM_BLOCK_SIZE*EEPROM_HEADER_SIZE); i < (64*EEPROM_BLOCK_SIZE); i+=EEPROM_BLOCK_SIZE) {
	  WriteEeprom(i,(u8)EEPROM_FREE_BLOCK);
    b79e:	ce 01       	movw	r24, r28
    b7a0:	6f ef       	ldi	r22, 0xFF	; 255
    b7a2:	0e 94 79 5a 	call	0xb4f2	; 0xb4f2 <WriteEeprom>
	  WriteEeprom(i+1,(u8)(EEPROM_FREE_BLOCK>>8));
    b7a6:	ce 01       	movw	r24, r28
    b7a8:	01 96       	adiw	r24, 0x01	; 1
    b7aa:	6f ef       	ldi	r22, 0xFF	; 255
    b7ac:	0e 94 79 5a 	call	0xb4f2	; 0xb4f2 <WriteEeprom>
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
   }
   
   // Write free blocks IDs
   for (u16 i = (EEPROM_BLOCK_SIZE*EEPROM_HEADER_SIZE); i < (64*EEPROM_BLOCK_SIZE); i+=EEPROM_BLOCK_SIZE) {
    b7b0:	a0 96       	adiw	r28, 0x20	; 32
    b7b2:	88 e0       	ldi	r24, 0x08	; 8
    b7b4:	c0 30       	cpi	r28, 0x00	; 0
    b7b6:	d8 07       	cpc	r29, r24
    b7b8:	91 f7       	brne	.-28     	; 0xb79e <FormatEeprom+0x24>
	  WriteEeprom(i,(u8)EEPROM_FREE_BLOCK);
	  WriteEeprom(i+1,(u8)(EEPROM_FREE_BLOCK>>8));
   }
   
}
    b7ba:	df 91       	pop	r29
    b7bc:	cf 91       	pop	r28
    b7be:	08 95       	ret

0000b7c0 <PatchCommand00>:

/*
* Command 00: Set envelope speed per frame +127/-128, 0=no enveloppe
*/
void PatchCommand00(unsigned char track, char param){
	tracks[track].envelopeStep=param;
    b7c0:	90 e0       	ldi	r25, 0x00	; 0
    b7c2:	26 e1       	ldi	r18, 0x16	; 22
    b7c4:	30 e0       	ldi	r19, 0x00	; 0
    b7c6:	82 9f       	mul	r24, r18
    b7c8:	f0 01       	movw	r30, r0
    b7ca:	83 9f       	mul	r24, r19
    b7cc:	f0 0d       	add	r31, r0
    b7ce:	92 9f       	mul	r25, r18
    b7d0:	f0 0d       	add	r31, r0
    b7d2:	11 24       	eor	r1, r1
    b7d4:	e0 5a       	subi	r30, 0xA0	; 160
    b7d6:	f2 4f       	sbci	r31, 0xF2	; 242
    b7d8:	62 87       	std	Z+10, r22	; 0x0a
}
    b7da:	08 95       	ret

0000b7dc <PatchCommand01>:
/*
* Command 01: Set noise channel params
*/
void PatchCommand01(unsigned char track, char param){

	mixer.channels.type.noise.params=param;
    b7dc:	60 93 5d 0d 	sts	0x0D5D, r22
}
    b7e0:	08 95       	ret

0000b7e2 <PatchCommand05>:
}
/*
* Command 05: End of note/fx
*/
void PatchCommand05(unsigned char track, char param){
	tracks[track].patchPlaying=false;
    b7e2:	90 e0       	ldi	r25, 0x00	; 0
    b7e4:	26 e1       	ldi	r18, 0x16	; 22
    b7e6:	30 e0       	ldi	r19, 0x00	; 0
    b7e8:	82 9f       	mul	r24, r18
    b7ea:	f0 01       	movw	r30, r0
    b7ec:	83 9f       	mul	r24, r19
    b7ee:	f0 0d       	add	r31, r0
    b7f0:	92 9f       	mul	r25, r18
    b7f2:	f0 0d       	add	r31, r0
    b7f4:	11 24       	eor	r1, r1
    b7f6:	e0 5a       	subi	r30, 0xA0	; 160
    b7f8:	f2 4f       	sbci	r31, 0xF2	; 242
    b7fa:	13 86       	std	Z+11, r1	; 0x0b
	tracks[track].priority=0;
    b7fc:	11 82       	std	Z+1, r1	; 0x01
}
    b7fe:	08 95       	ret

0000b800 <PatchCommand06>:

/*
* Command 06: Note hold
*/
void PatchCommand06(unsigned char track, char param){
	tracks[track].patchEnvelopeHold=true;
    b800:	90 e0       	ldi	r25, 0x00	; 0
    b802:	26 e1       	ldi	r18, 0x16	; 22
    b804:	30 e0       	ldi	r19, 0x00	; 0
    b806:	82 9f       	mul	r24, r18
    b808:	f0 01       	movw	r30, r0
    b80a:	83 9f       	mul	r24, r19
    b80c:	f0 0d       	add	r31, r0
    b80e:	92 9f       	mul	r25, r18
    b810:	f0 0d       	add	r31, r0
    b812:	11 24       	eor	r1, r1
    b814:	e0 5a       	subi	r30, 0xA0	; 160
    b816:	f2 4f       	sbci	r31, 0xF2	; 242
    b818:	81 e0       	ldi	r24, 0x01	; 1
    b81a:	83 8b       	std	Z+19, r24	; 0x13
}
    b81c:	08 95       	ret

0000b81e <PatchCommand07>:
/*
* Command 07: Set envelope volume
*/

void PatchCommand07(unsigned char track, char param){
	tracks[track].envelopeVol=param;
    b81e:	90 e0       	ldi	r25, 0x00	; 0
    b820:	26 e1       	ldi	r18, 0x16	; 22
    b822:	30 e0       	ldi	r19, 0x00	; 0
    b824:	82 9f       	mul	r24, r18
    b826:	f0 01       	movw	r30, r0
    b828:	83 9f       	mul	r24, r19
    b82a:	f0 0d       	add	r31, r0
    b82c:	92 9f       	mul	r25, r18
    b82e:	f0 0d       	add	r31, r0
    b830:	11 24       	eor	r1, r1
    b832:	e0 5a       	subi	r30, 0xA0	; 160
    b834:	f2 4f       	sbci	r31, 0xF2	; 242
    b836:	61 87       	std	Z+9, r22	; 0x09
}
    b838:	08 95       	ret

0000b83a <PatchCommand09>:
/*
* Command 09: Set tremolo level
*/

void PatchCommand09(unsigned char track, char param){
	tracks[track].tremoloLevel=param;
    b83a:	90 e0       	ldi	r25, 0x00	; 0
    b83c:	26 e1       	ldi	r18, 0x16	; 22
    b83e:	30 e0       	ldi	r19, 0x00	; 0
    b840:	82 9f       	mul	r24, r18
    b842:	f0 01       	movw	r30, r0
    b844:	83 9f       	mul	r24, r19
    b846:	f0 0d       	add	r31, r0
    b848:	92 9f       	mul	r25, r18
    b84a:	f0 0d       	add	r31, r0
    b84c:	11 24       	eor	r1, r1
    b84e:	e0 5a       	subi	r30, 0xA0	; 160
    b850:	f2 4f       	sbci	r31, 0xF2	; 242
    b852:	64 83       	std	Z+4, r22	; 0x04
}
    b854:	08 95       	ret

0000b856 <PatchCommand10>:

/*
* Command 10: Set tremolo rate
*/
void PatchCommand10(unsigned char track, char param){
	tracks[track].tremoloRate=param;
    b856:	90 e0       	ldi	r25, 0x00	; 0
    b858:	26 e1       	ldi	r18, 0x16	; 22
    b85a:	30 e0       	ldi	r19, 0x00	; 0
    b85c:	82 9f       	mul	r24, r18
    b85e:	f0 01       	movw	r30, r0
    b860:	83 9f       	mul	r24, r19
    b862:	f0 0d       	add	r31, r0
    b864:	92 9f       	mul	r25, r18
    b866:	f0 0d       	add	r31, r0
    b868:	11 24       	eor	r1, r1
    b86a:	e0 5a       	subi	r30, 0xA0	; 160
    b86c:	f2 4f       	sbci	r31, 0xF2	; 242
    b86e:	65 83       	std	Z+5, r22	; 0x05
}
    b870:	08 95       	ret

0000b872 <InitMusicPlayer>:
//void InitMusicPlayer(const char *patchPointersParam[]){
void InitMusicPlayer(const struct PatchStruct *patchPointersParam){


	//patchPointers=(const char **)patchPointersParam;
	patchPointers=patchPointersParam;
    b872:	90 93 bb 0d 	sts	0x0DBB, r25
    b876:	80 93 ba 0d 	sts	0x0DBA, r24

	masterVolume=DEFAULT_MASTER_VOL;
    b87a:	8f e6       	ldi	r24, 0x6F	; 111
    b87c:	80 93 c0 0d 	sts	0x0DC0, r24
	//midi_rx_buf_end=0;
	UartInitRxBuffer();
	lastMidiInStatus=0;
#endif

	playSong=false;
    b880:	10 92 21 0b 	sts	0x0B21, r1
    b884:	e0 e6       	ldi	r30, 0x60	; 96
    b886:	fd e0       	ldi	r31, 0x0D	; 13

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].allocated=true;
    b888:	21 e0       	ldi	r18, 0x01	; 1
		tracks[t].noteVol=0;
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    b88a:	8f ef       	ldi	r24, 0xFF	; 255
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
		tracks[t].patchNo=DEFAULT_PATCH;
		tracks[t].priority=0;
		tracks[t].tremoloRate=24; //~6hz
    b88c:	98 e1       	ldi	r25, 0x18	; 24

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].allocated=true;
    b88e:	20 83       	st	Z, r18
		tracks[t].noteVol=0;
    b890:	10 86       	std	Z+8, r1	; 0x08
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    b892:	86 83       	std	Z+6, r24	; 0x06
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
    b894:	87 83       	std	Z+7, r24	; 0x07
		tracks[t].patchNo=DEFAULT_PATCH;
    b896:	14 86       	std	Z+12, r1	; 0x0c
		tracks[t].priority=0;
    b898:	11 82       	std	Z+1, r1	; 0x01
		tracks[t].tremoloRate=24; //~6hz
    b89a:	95 83       	std	Z+5, r25	; 0x05
    b89c:	76 96       	adiw	r30, 0x16	; 22
#endif

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){
    b89e:	3d e0       	ldi	r19, 0x0D	; 13
    b8a0:	e8 3b       	cpi	r30, 0xB8	; 184
    b8a2:	f3 07       	cpc	r31, r19
    b8a4:	a1 f7       	brne	.-24     	; 0xb88e <InitMusicPlayer+0x1c>
		tracks[t].tremoloRate=24; //~6hz
	}

	//tracks[0].tremoloRate=24;
	//tracks[0].tremoloLevel=80;
}
    b8a6:	08 95       	ret

0000b8a8 <ReadVarLen>:


}

unsigned int ReadVarLen(const char **songPos)
{
    b8a8:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    b8aa:	ed 91       	ld	r30, X+
    b8ac:	fc 91       	ld	r31, X
    b8ae:	11 97       	sbiw	r26, 0x01	; 1
    b8b0:	af 01       	movw	r20, r30
    b8b2:	4f 5f       	subi	r20, 0xFF	; 255
    b8b4:	5f 4f       	sbci	r21, 0xFF	; 255
    b8b6:	11 96       	adiw	r26, 0x01	; 1
    b8b8:	5c 93       	st	X, r21
    b8ba:	4e 93       	st	-X, r20
    b8bc:	e4 91       	lpm	r30, Z+
    b8be:	2e 2f       	mov	r18, r30
    b8c0:	30 e0       	ldi	r19, 0x00	; 0
    b8c2:	e7 ff       	sbrs	r30, 7
    b8c4:	13 c0       	rjmp	.+38     	; 0xb8ec <ReadVarLen+0x44>
    {
       value &= 0x7F;
    b8c6:	2f 77       	andi	r18, 0x7F	; 127
    b8c8:	30 70       	andi	r19, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    b8ca:	36 95       	lsr	r19
    b8cc:	32 2f       	mov	r19, r18
    b8ce:	22 27       	eor	r18, r18
    b8d0:	37 95       	ror	r19
    b8d2:	27 95       	ror	r18
    b8d4:	fa 01       	movw	r30, r20
    b8d6:	4f 5f       	subi	r20, 0xFF	; 255
    b8d8:	5f 4f       	sbci	r21, 0xFF	; 255
    b8da:	e4 91       	lpm	r30, Z+
    b8dc:	8e 2f       	mov	r24, r30
    b8de:	8f 77       	andi	r24, 0x7F	; 127
    b8e0:	28 0f       	add	r18, r24
    b8e2:	31 1d       	adc	r19, r1
       } while (c & 0x80);
    b8e4:	e7 fd       	sbrc	r30, 7
    b8e6:	f1 cf       	rjmp	.-30     	; 0xb8ca <ReadVarLen+0x22>
    b8e8:	4d 93       	st	X+, r20
    b8ea:	5c 93       	st	X, r21
    }


    return value;
}
    b8ec:	c9 01       	movw	r24, r18
    b8ee:	08 95       	ret

0000b8f0 <SetTriggerCommonValues>:
}




void SetTriggerCommonValues(struct TrackStruct* track, u8 volume, u8 note)  {
    b8f0:	fc 01       	movw	r30, r24

	track->patchCurrDeltaTime=0;
    b8f2:	10 8a       	std	Z+16, r1	; 0x10
	track->envelopeStep=0; 
    b8f4:	12 86       	std	Z+10, r1	; 0x0a
	track->envelopeVol=0xff; 
    b8f6:	9f ef       	ldi	r25, 0xFF	; 255
    b8f8:	91 87       	std	Z+9, r25	; 0x09
	track->noteVol=volume;
    b8fa:	60 87       	std	Z+8, r22	; 0x08
	track->patchEnvelopeHold=false;
    b8fc:	13 8a       	std	Z+19, r1	; 0x13
	track->patchPlayingTime=0;
    b8fe:	11 8a       	std	Z+17, r1	; 0x11
	track->patchPlaying=true;
    b900:	81 e0       	ldi	r24, 0x01	; 1
    b902:	83 87       	std	Z+11, r24	; 0x0b
	track->patchWave=0;
    b904:	12 8a       	std	Z+18, r1	; 0x12
	track->tremoloLevel=0;
    b906:	14 82       	std	Z+4, r1	; 0x04
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    b908:	96 83       	std	Z+6, r25	; 0x06
	track->note=note;
    b90a:	42 83       	std	Z+2, r20	; 0x02
}
    b90c:	08 95       	ret

0000b90e <SetMasterVolume>:



void SetMasterVolume(unsigned char vol){
	masterVolume=vol;
    b90e:	80 93 c0 0d 	sts	0x0DC0, r24
}
    b912:	08 95       	ret

0000b914 <PatchCommand02>:
}
/*
* Command 02: Set wave
*/
void PatchCommand02(unsigned char track, char param){
	SetMixerWave(track,param);
    b914:	0e 94 fa 58 	call	0xb1f4	; 0xb1f4 <SetMixerWave>
}
    b918:	08 95       	ret

0000b91a <TriggerNote>:
	#endif

}


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    b91a:	ef 92       	push	r14
    b91c:	ff 92       	push	r15
    b91e:	0f 93       	push	r16
    b920:	1f 93       	push	r17
    b922:	cf 93       	push	r28
    b924:	df 93       	push	r29
    b926:	18 2f       	mov	r17, r24
    b928:	06 2f       	mov	r16, r22
    b92a:	e4 2e       	mov	r14, r20
    b92c:	f2 2e       	mov	r15, r18

	//allow only other music notes 
	if(!tracks[channel].patchPlaying || tracks[channel].priority==0){
    b92e:	c8 2f       	mov	r28, r24
    b930:	d0 e0       	ldi	r29, 0x00	; 0
    b932:	86 e1       	ldi	r24, 0x16	; 22
    b934:	90 e0       	ldi	r25, 0x00	; 0
    b936:	c8 9f       	mul	r28, r24
    b938:	f0 01       	movw	r30, r0
    b93a:	c9 9f       	mul	r28, r25
    b93c:	f0 0d       	add	r31, r0
    b93e:	d8 9f       	mul	r29, r24
    b940:	f0 0d       	add	r31, r0
    b942:	11 24       	eor	r1, r1
    b944:	e0 5a       	subi	r30, 0xA0	; 160
    b946:	f2 4f       	sbci	r31, 0xF2	; 242
    b948:	83 85       	ldd	r24, Z+11	; 0x0b
    b94a:	88 23       	and	r24, r24
    b94c:	21 f0       	breq	.+8      	; 0xb956 <TriggerNote+0x3c>
    b94e:	81 81       	ldd	r24, Z+1	; 0x01
    b950:	88 23       	and	r24, r24
    b952:	09 f0       	breq	.+2      	; 0xb956 <TriggerNote+0x3c>
    b954:	a3 c0       	rjmp	.+326    	; 0xba9c <TriggerNote+0x182>
			
		if(volume==0){ //note-off received
    b956:	ff 20       	and	r15, r15
    b958:	91 f4       	brne	.+36     	; 0xb97e <TriggerNote+0x64>
			tracks[channel].patchEnvelopeHold=false;
    b95a:	86 e1       	ldi	r24, 0x16	; 22
    b95c:	90 e0       	ldi	r25, 0x00	; 0
    b95e:	c8 9f       	mul	r28, r24
    b960:	f0 01       	movw	r30, r0
    b962:	c9 9f       	mul	r28, r25
    b964:	f0 0d       	add	r31, r0
    b966:	d8 9f       	mul	r29, r24
    b968:	f0 0d       	add	r31, r0
    b96a:	11 24       	eor	r1, r1
    b96c:	e0 5a       	subi	r30, 0xA0	; 160
    b96e:	f2 4f       	sbci	r31, 0xF2	; 242
    b970:	13 8a       	std	Z+19, r1	; 0x13
			
			//cut note if theres not envelope
			if(tracks[channel].envelopeStep==0){
    b972:	82 85       	ldd	r24, Z+10	; 0x0a
    b974:	88 23       	and	r24, r24
    b976:	09 f0       	breq	.+2      	; 0xb97a <TriggerNote+0x60>
    b978:	91 c0       	rjmp	.+290    	; 0xba9c <TriggerNote+0x182>
				tracks[channel].noteVol=0;	
    b97a:	10 86       	std	Z+8, r1	; 0x08
    b97c:	8f c0       	rjmp	.+286    	; 0xba9c <TriggerNote+0x182>
					SetMixerNote(channel,note);
				}
			#else
				//unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
				//if(type==2){
				if(channel==3){
    b97e:	13 30       	cpi	r17, 0x03	; 3
    b980:	49 f5       	brne	.+82     	; 0xb9d4 <TriggerNote+0xba>
					mixer.channels.type.wave[3].positionFrac=0;
    b982:	10 92 55 0d 	sts	0x0D55, r1
					const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    b986:	89 e0       	ldi	r24, 0x09	; 9
    b988:	08 9f       	mul	r16, r24
    b98a:	c0 01       	movw	r24, r0
    b98c:	11 24       	eor	r1, r1
    b98e:	20 91 ba 0d 	lds	r18, 0x0DBA
    b992:	30 91 bb 0d 	lds	r19, 0x0DBB
    b996:	28 0f       	add	r18, r24
    b998:	39 1f       	adc	r19, r25
    b99a:	f9 01       	movw	r30, r18
    b99c:	31 96       	adiw	r30, 0x01	; 1
    b99e:	45 91       	lpm	r20, Z+
    b9a0:	54 91       	lpm	r21, Z+
					mixer.channels.type.wave[3].position=pos;
    b9a2:	50 93 57 0d 	sts	0x0D57, r21
    b9a6:	40 93 56 0d 	sts	0x0D56, r20
					mixer.channels.type.wave[3].loopStart=pos+pgm_read_word(&(patchPointers[patch].loopStart));
    b9aa:	f9 01       	movw	r30, r18
    b9ac:	35 96       	adiw	r30, 0x05	; 5
    b9ae:	85 91       	lpm	r24, Z+
    b9b0:	94 91       	lpm	r25, Z+
    b9b2:	84 0f       	add	r24, r20
    b9b4:	95 1f       	adc	r25, r21
    b9b6:	90 93 59 0d 	sts	0x0D59, r25
    b9ba:	80 93 58 0d 	sts	0x0D58, r24
					mixer.channels.type.wave[3].loopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    b9be:	f9 01       	movw	r30, r18
    b9c0:	37 96       	adiw	r30, 0x07	; 7
    b9c2:	85 91       	lpm	r24, Z+
    b9c4:	94 91       	lpm	r25, Z+
    b9c6:	48 0f       	add	r20, r24
    b9c8:	59 1f       	adc	r21, r25
    b9ca:	50 93 5b 0d 	sts	0x0D5B, r21
    b9ce:	40 93 5a 0d 	sts	0x0D5A, r20
    b9d2:	04 c0       	rjmp	.+8      	; 0xb9dc <TriggerNote+0xc2>
				}else{
					SetMixerWave(channel,0); //default wave
    b9d4:	81 2f       	mov	r24, r17
    b9d6:	60 e0       	ldi	r22, 0x00	; 0
    b9d8:	0e 94 fa 58 	call	0xb1f4	; 0xb1f4 <SetMixerWave>
				}
				
				SetMixerNote(channel,note);
    b9dc:	81 2f       	mov	r24, r17
    b9de:	6e 2d       	mov	r22, r14
    b9e0:	0e 94 e6 58 	call	0xb1cc	; 0xb1cc <SetMixerNote>
			#endif


			if(patch==127){
    b9e4:	0f 37       	cpi	r16, 0x7F	; 127
    b9e6:	99 f4       	brne	.+38     	; 0xba0e <TriggerNote+0xf4>
 				unsigned char *pos = ramPatch;
				tracks[channel].patchNextDeltaTime=*(pos++);
    b9e8:	86 e1       	ldi	r24, 0x16	; 22
    b9ea:	90 e0       	ldi	r25, 0x00	; 0
    b9ec:	c8 9f       	mul	r28, r24
    b9ee:	f0 01       	movw	r30, r0
    b9f0:	c9 9f       	mul	r28, r25
    b9f2:	f0 0d       	add	r31, r0
    b9f4:	d8 9f       	mul	r29, r24
    b9f6:	f0 0d       	add	r31, r0
    b9f8:	11 24       	eor	r1, r1
    b9fa:	e0 5a       	subi	r30, 0xA0	; 160
    b9fc:	f2 4f       	sbci	r31, 0xF2	; 242
    b9fe:	80 91 bd 0d 	lds	r24, 0x0DBD
    ba02:	87 87       	std	Z+15, r24	; 0x0f
				tracks[channel].patchCommandStreamPos=(char *)pos;
    ba04:	8e eb       	ldi	r24, 0xBE	; 190
    ba06:	9d e0       	ldi	r25, 0x0D	; 13
    ba08:	95 8b       	std	Z+21, r25	; 0x15
    ba0a:	84 8b       	std	Z+20, r24	; 0x14
    ba0c:	30 c0       	rjmp	.+96     	; 0xba6e <TriggerNote+0x154>
			}else{
				const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    ba0e:	89 e0       	ldi	r24, 0x09	; 9
    ba10:	08 9f       	mul	r16, r24
    ba12:	c0 01       	movw	r24, r0
    ba14:	11 24       	eor	r1, r1
    ba16:	e0 91 ba 0d 	lds	r30, 0x0DBA
    ba1a:	f0 91 bb 0d 	lds	r31, 0x0DBB
    ba1e:	e8 0f       	add	r30, r24
    ba20:	f9 1f       	adc	r31, r25
    ba22:	33 96       	adiw	r30, 0x03	; 3
    ba24:	45 91       	lpm	r20, Z+
    ba26:	54 91       	lpm	r21, Z+
				if(pos==NULL){
    ba28:	41 15       	cp	r20, r1
    ba2a:	51 05       	cpc	r21, r1
    ba2c:	71 f4       	brne	.+28     	; 0xba4a <TriggerNote+0x130>
					tracks[channel].patchCommandStreamPos=NULL;
    ba2e:	86 e1       	ldi	r24, 0x16	; 22
    ba30:	90 e0       	ldi	r25, 0x00	; 0
    ba32:	c8 9f       	mul	r28, r24
    ba34:	f0 01       	movw	r30, r0
    ba36:	c9 9f       	mul	r28, r25
    ba38:	f0 0d       	add	r31, r0
    ba3a:	d8 9f       	mul	r29, r24
    ba3c:	f0 0d       	add	r31, r0
    ba3e:	11 24       	eor	r1, r1
    ba40:	e0 5a       	subi	r30, 0xA0	; 160
    ba42:	f2 4f       	sbci	r31, 0xF2	; 242
    ba44:	15 8a       	std	Z+21, r1	; 0x15
    ba46:	14 8a       	std	Z+20, r1	; 0x14
    ba48:	12 c0       	rjmp	.+36     	; 0xba6e <TriggerNote+0x154>
				}else{
					tracks[channel].patchNextDeltaTime=pgm_read_byte(pos++);
    ba4a:	fa 01       	movw	r30, r20
    ba4c:	24 91       	lpm	r18, Z+
    ba4e:	86 e1       	ldi	r24, 0x16	; 22
    ba50:	90 e0       	ldi	r25, 0x00	; 0
    ba52:	c8 9f       	mul	r28, r24
    ba54:	f0 01       	movw	r30, r0
    ba56:	c9 9f       	mul	r28, r25
    ba58:	f0 0d       	add	r31, r0
    ba5a:	d8 9f       	mul	r29, r24
    ba5c:	f0 0d       	add	r31, r0
    ba5e:	11 24       	eor	r1, r1
    ba60:	e0 5a       	subi	r30, 0xA0	; 160
    ba62:	f2 4f       	sbci	r31, 0xF2	; 242
    ba64:	27 87       	std	Z+15, r18	; 0x0f
					tracks[channel].patchCommandStreamPos=pos;
    ba66:	4f 5f       	subi	r20, 0xFF	; 255
    ba68:	5f 4f       	sbci	r21, 0xFF	; 255
    ba6a:	55 8b       	std	Z+21, r21	; 0x15
    ba6c:	44 8b       	std	Z+20, r20	; 0x14
			tracks[channel].tremoloLevel=0;
			tracks[channel].expressionVol=DEFAULT_EXPRESSION_VOL;
			tracks[channel].note=note;
		*/

			tracks[channel].patchNo=patch;	
    ba6e:	86 e1       	ldi	r24, 0x16	; 22
    ba70:	90 e0       	ldi	r25, 0x00	; 0
    ba72:	c8 9f       	mul	r28, r24
    ba74:	f0 01       	movw	r30, r0
    ba76:	c9 9f       	mul	r28, r25
    ba78:	f0 0d       	add	r31, r0
    ba7a:	d8 9f       	mul	r29, r24
    ba7c:	f0 0d       	add	r31, r0
    ba7e:	11 24       	eor	r1, r1
    ba80:	e0 5a       	subi	r30, 0xA0	; 160
    ba82:	f2 4f       	sbci	r31, 0xF2	; 242
    ba84:	04 87       	std	Z+12, r16	; 0x0c
			tracks[channel].priority=0;	
    ba86:	11 82       	std	Z+1, r1	; 0x01
			SetTriggerCommonValues(&tracks[channel],volume,note);
    ba88:	86 e1       	ldi	r24, 0x16	; 22
    ba8a:	18 9f       	mul	r17, r24
    ba8c:	c0 01       	movw	r24, r0
    ba8e:	11 24       	eor	r1, r1
    ba90:	80 5a       	subi	r24, 0xA0	; 160
    ba92:	92 4f       	sbci	r25, 0xF2	; 242
    ba94:	6f 2d       	mov	r22, r15
    ba96:	4e 2d       	mov	r20, r14
    ba98:	0e 94 78 5c 	call	0xb8f0	; 0xb8f0 <SetTriggerCommonValues>


		}

	}
}
    ba9c:	df 91       	pop	r29
    ba9e:	cf 91       	pop	r28
    baa0:	1f 91       	pop	r17
    baa2:	0f 91       	pop	r16
    baa4:	ff 90       	pop	r15
    baa6:	ef 90       	pop	r14
    baa8:	08 95       	ret

0000baaa <ProcessMusic>:
	}

#endif

//static char wait=0;
void ProcessMusic(void){
    baaa:	cf 92       	push	r12
    baac:	df 92       	push	r13
    baae:	ff 92       	push	r15
    bab0:	0f 93       	push	r16
    bab2:	1f 93       	push	r17
    bab4:	cf 93       	push	r28
    bab6:	df 93       	push	r29
    bab8:	e9 e6       	ldi	r30, 0x69	; 105
    baba:	fd e0       	ldi	r31, 0x0D	; 13

	//process patches envelopes
	for(unsigned char track=0;track<CHANNELS;track++){

		//update envelope
		vol=tracks[track].envelopeVol+tracks[track].envelopeStep;		
    babc:	81 81       	ldd	r24, Z+1	; 0x01
    babe:	28 2f       	mov	r18, r24
    bac0:	33 27       	eor	r19, r19
    bac2:	27 fd       	sbrc	r18, 7
    bac4:	30 95       	com	r19
    bac6:	80 81       	ld	r24, Z
    bac8:	28 0f       	add	r18, r24
    baca:	31 1d       	adc	r19, r1
    bacc:	2f 3f       	cpi	r18, 0xFF	; 255
    bace:	31 05       	cpc	r19, r1
    bad0:	19 f0       	breq	.+6      	; 0xbad8 <ProcessMusic+0x2e>
    bad2:	14 f0       	brlt	.+4      	; 0xbad8 <ProcessMusic+0x2e>
    bad4:	2f ef       	ldi	r18, 0xFF	; 255
    bad6:	30 e0       	ldi	r19, 0x00	; 0
		if(vol<0){
			vol=0;			
		}else if(vol>0xff){
			vol=0xff;						
		}
		tracks[track].envelopeVol=vol;
    bad8:	c9 01       	movw	r24, r18
    bada:	37 ff       	sbrs	r19, 7
    badc:	02 c0       	rjmp	.+4      	; 0xbae2 <ProcessMusic+0x38>
    bade:	80 e0       	ldi	r24, 0x00	; 0
    bae0:	90 e0       	ldi	r25, 0x00	; 0
    bae2:	80 83       	st	Z, r24
    bae4:	76 96       	adiw	r30, 0x16	; 22
	unsigned int uVol,tVol;	

	

	//process patches envelopes
	for(unsigned char track=0;track<CHANNELS;track++){
    bae6:	4d e0       	ldi	r20, 0x0D	; 13
    bae8:	e1 3c       	cpi	r30, 0xC1	; 193
    baea:	f4 07       	cpc	r31, r20
    baec:	39 f7       	brne	.-50     	; 0xbabc <ProcessMusic+0x12>
	}



	//Process song MIDI notes
	if(playSong){
    baee:	80 91 21 0b 	lds	r24, 0x0B21
    baf2:	88 23       	and	r24, r24
    baf4:	09 f0       	breq	.+2      	; 0xbaf8 <ProcessMusic+0x4e>
    baf6:	28 c1       	rjmp	.+592    	; 0xbd48 <ProcessMusic+0x29e>
    baf8:	44 c1       	rjmp	.+648    	; 0xbd82 <ProcessMusic+0x2d8>
	

			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){

				c1=pgm_read_byte(songPos++);
    bafa:	e0 91 c3 0d 	lds	r30, 0x0DC3
    bafe:	f0 91 c4 0d 	lds	r31, 0x0DC4
    bb02:	9f 01       	movw	r18, r30
    bb04:	2f 5f       	subi	r18, 0xFF	; 255
    bb06:	3f 4f       	sbci	r19, 0xFF	; 255
    bb08:	30 93 c4 0d 	sts	0x0DC4, r19
    bb0c:	20 93 c3 0d 	sts	0x0DC3, r18
    bb10:	44 91       	lpm	r20, Z+
				
				if(c1==0xff){
    bb12:	4f 3f       	cpi	r20, 0xFF	; 255
    bb14:	69 f5       	brne	.+90     	; 0xbb70 <ProcessMusic+0xc6>
					//META data type event
					c1=pgm_read_byte(songPos++);
    bb16:	a9 01       	movw	r20, r18
    bb18:	4f 5f       	subi	r20, 0xFF	; 255
    bb1a:	5f 4f       	sbci	r21, 0xFF	; 255
    bb1c:	50 93 c4 0d 	sts	0x0DC4, r21
    bb20:	40 93 c3 0d 	sts	0x0DC3, r20
    bb24:	f9 01       	movw	r30, r18
    bb26:	84 91       	lpm	r24, Z+

					
					if(c1==0x2f){ //end of song
    bb28:	8f 32       	cpi	r24, 0x2F	; 47
    bb2a:	19 f4       	brne	.+6      	; 0xbb32 <ProcessMusic+0x88>
						playSong=false;
    bb2c:	10 92 21 0b 	sts	0x0B21, r1
    bb30:	19 c1       	rjmp	.+562    	; 0xbd64 <ProcessMusic+0x2ba>
						break;	
					}else if(c1==0x6){ //marker
    bb32:	86 30       	cpi	r24, 0x06	; 6
    bb34:	09 f0       	breq	.+2      	; 0xbb38 <ProcessMusic+0x8e>
    bb36:	fb c0       	rjmp	.+502    	; 0xbd2e <ProcessMusic+0x284>
						c1=pgm_read_byte(songPos++); //read len
    bb38:	fa 01       	movw	r30, r20
    bb3a:	31 96       	adiw	r30, 0x01	; 1
						c2=pgm_read_byte(songPos++); //read data
    bb3c:	cf 01       	movw	r24, r30
    bb3e:	01 96       	adiw	r24, 0x01	; 1
    bb40:	90 93 c4 0d 	sts	0x0DC4, r25
    bb44:	80 93 c3 0d 	sts	0x0DC3, r24
    bb48:	e4 91       	lpm	r30, Z+
						if(c2=='S'){ //loop start
    bb4a:	e3 35       	cpi	r30, 0x53	; 83
    bb4c:	29 f4       	brne	.+10     	; 0xbb58 <ProcessMusic+0xae>
							loopStart=songPos;
    bb4e:	90 93 c7 0d 	sts	0x0DC7, r25
    bb52:	80 93 c6 0d 	sts	0x0DC6, r24
    bb56:	eb c0       	rjmp	.+470    	; 0xbd2e <ProcessMusic+0x284>
						}else if(c2=='E'){//loop end
    bb58:	e5 34       	cpi	r30, 0x45	; 69
    bb5a:	09 f0       	breq	.+2      	; 0xbb5e <ProcessMusic+0xb4>
    bb5c:	e8 c0       	rjmp	.+464    	; 0xbd2e <ProcessMusic+0x284>
							songPos=loopStart;
    bb5e:	80 91 c6 0d 	lds	r24, 0x0DC6
    bb62:	90 91 c7 0d 	lds	r25, 0x0DC7
    bb66:	90 93 c4 0d 	sts	0x0DC4, r25
    bb6a:	80 93 c3 0d 	sts	0x0DC3, r24
    bb6e:	df c0       	rjmp	.+446    	; 0xbd2e <ProcessMusic+0x284>
					}
					

				}else{

					if(c1&0x80) lastStatus=c1;					
    bb70:	47 ff       	sbrs	r20, 7
    bb72:	02 c0       	rjmp	.+4      	; 0xbb78 <ProcessMusic+0xce>
    bb74:	40 93 bc 0d 	sts	0x0DBC, r20
					channel=c1&0x0f;
    bb78:	54 2f       	mov	r21, r20
    bb7a:	5f 70       	andi	r21, 0x0F	; 15

					switch(c1&0xf0){
    bb7c:	84 2f       	mov	r24, r20
    bb7e:	90 e0       	ldi	r25, 0x00	; 0
    bb80:	80 7f       	andi	r24, 0xF0	; 240
    bb82:	90 70       	andi	r25, 0x00	; 0
    bb84:	80 3b       	cpi	r24, 0xB0	; 176
    bb86:	91 05       	cpc	r25, r1
    bb88:	31 f1       	breq	.+76     	; 0xbbd6 <ProcessMusic+0x12c>
    bb8a:	80 3c       	cpi	r24, 0xC0	; 192
    bb8c:	91 05       	cpc	r25, r1
    bb8e:	81 f1       	breq	.+96     	; 0xbbf0 <ProcessMusic+0x146>
    bb90:	80 39       	cpi	r24, 0x90	; 144
    bb92:	91 05       	cpc	r25, r1
    bb94:	09 f0       	breq	.+2      	; 0xbb98 <ProcessMusic+0xee>
    bb96:	43 c0       	rjmp	.+134    	; 0xbc1e <ProcessMusic+0x174>
	
						//note-on
						case 0x90:
							c1=pgm_read_byte(songPos++); //get note
    bb98:	c9 01       	movw	r24, r18
    bb9a:	01 96       	adiw	r24, 0x01	; 1
    bb9c:	f9 01       	movw	r30, r18
    bb9e:	44 91       	lpm	r20, Z+
							c2=pgm_read_byte(songPos++)<<1; //get volume															
    bba0:	01 96       	adiw	r24, 0x01	; 1
    bba2:	90 93 c4 0d 	sts	0x0DC4, r25
    bba6:	80 93 c3 0d 	sts	0x0DC3, r24
    bbaa:	01 97       	sbiw	r24, 0x01	; 1
    bbac:	fc 01       	movw	r30, r24
    bbae:	24 91       	lpm	r18, Z+
							if(tracks[channel].allocated==true){
    bbb0:	85 2f       	mov	r24, r21
    bbb2:	90 e0       	ldi	r25, 0x00	; 0
    bbb4:	8c 9f       	mul	r24, r28
    bbb6:	f0 01       	movw	r30, r0
    bbb8:	8d 9f       	mul	r24, r29
    bbba:	f0 0d       	add	r31, r0
    bbbc:	9c 9f       	mul	r25, r28
    bbbe:	f0 0d       	add	r31, r0
    bbc0:	11 24       	eor	r1, r1
    bbc2:	e0 5a       	subi	r30, 0xA0	; 160
    bbc4:	f2 4f       	sbci	r31, 0xF2	; 242
    bbc6:	80 81       	ld	r24, Z
    bbc8:	88 23       	and	r24, r24
    bbca:	09 f4       	brne	.+2      	; 0xbbce <ProcessMusic+0x124>
    bbcc:	b0 c0       	rjmp	.+352    	; 0xbd2e <ProcessMusic+0x284>
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    bbce:	22 0f       	add	r18, r18
    bbd0:	85 2f       	mov	r24, r21
    bbd2:	64 85       	ldd	r22, Z+12	; 0x0c
    bbd4:	53 c0       	rjmp	.+166    	; 0xbc7c <ProcessMusic+0x1d2>
							}
							break;

						//controllers
						case 0xb0:
							c1=pgm_read_byte(songPos++); //get controller #
    bbd6:	c9 01       	movw	r24, r18
    bbd8:	01 96       	adiw	r24, 0x01	; 1
    bbda:	f9 01       	movw	r30, r18
    bbdc:	44 91       	lpm	r20, Z+
							c2=pgm_read_byte(songPos++); //get value
    bbde:	01 96       	adiw	r24, 0x01	; 1
    bbe0:	90 93 c4 0d 	sts	0x0DC4, r25
    bbe4:	80 93 c3 0d 	sts	0x0DC3, r24
    bbe8:	01 97       	sbiw	r24, 0x01	; 1
    bbea:	fc 01       	movw	r30, r24
    bbec:	24 91       	lpm	r18, Z+
    bbee:	53 c0       	rjmp	.+166    	; 0xbc96 <ProcessMusic+0x1ec>
							
							break;

						//program change
						case 0xc0:
							c1=pgm_read_byte(songPos++); //get patch
    bbf0:	2f 5f       	subi	r18, 0xFF	; 255
    bbf2:	3f 4f       	sbci	r19, 0xFF	; 255
    bbf4:	30 93 c4 0d 	sts	0x0DC4, r19
    bbf8:	20 93 c3 0d 	sts	0x0DC3, r18
    bbfc:	21 50       	subi	r18, 0x01	; 1
    bbfe:	30 40       	sbci	r19, 0x00	; 0
    bc00:	f9 01       	movw	r30, r18
    bc02:	24 91       	lpm	r18, Z+
							tracks[channel].patchNo=c1;								
    bc04:	85 2f       	mov	r24, r21
    bc06:	90 e0       	ldi	r25, 0x00	; 0
    bc08:	8c 9f       	mul	r24, r28
    bc0a:	f0 01       	movw	r30, r0
    bc0c:	8d 9f       	mul	r24, r29
    bc0e:	f0 0d       	add	r31, r0
    bc10:	9c 9f       	mul	r25, r28
    bc12:	f0 0d       	add	r31, r0
    bc14:	11 24       	eor	r1, r1
    bc16:	e0 5a       	subi	r30, 0xA0	; 160
    bc18:	f2 4f       	sbci	r31, 0xF2	; 242
    bc1a:	24 87       	std	Z+12, r18	; 0x0c
    bc1c:	88 c0       	rjmp	.+272    	; 0xbd2e <ProcessMusic+0x284>
							break;							

						//running status
						default:
							channel=lastStatus&0x0f;
    bc1e:	80 91 bc 0d 	lds	r24, 0x0DBC
    bc22:	58 2f       	mov	r21, r24
    bc24:	5f 70       	andi	r21, 0x0F	; 15

							switch(lastStatus&0xf0){
    bc26:	90 e0       	ldi	r25, 0x00	; 0
    bc28:	80 7f       	andi	r24, 0xF0	; 240
    bc2a:	90 70       	andi	r25, 0x00	; 0
    bc2c:	80 3b       	cpi	r24, 0xB0	; 176
    bc2e:	91 05       	cpc	r25, r1
    bc30:	41 f1       	breq	.+80     	; 0xbc82 <ProcessMusic+0x1d8>
    bc32:	80 3c       	cpi	r24, 0xC0	; 192
    bc34:	91 05       	cpc	r25, r1
    bc36:	09 f4       	brne	.+2      	; 0xbc3a <ProcessMusic+0x190>
    bc38:	6e c0       	rjmp	.+220    	; 0xbd16 <ProcessMusic+0x26c>
    bc3a:	80 39       	cpi	r24, 0x90	; 144
    bc3c:	91 05       	cpc	r25, r1
    bc3e:	09 f0       	breq	.+2      	; 0xbc42 <ProcessMusic+0x198>
    bc40:	76 c0       	rjmp	.+236    	; 0xbd2e <ProcessMusic+0x284>
		
								//note-on
								case 0x90:
									c2=pgm_read_byte(songPos++)<<1; //get volume
    bc42:	2f 5f       	subi	r18, 0xFF	; 255
    bc44:	3f 4f       	sbci	r19, 0xFF	; 255
    bc46:	30 93 c4 0d 	sts	0x0DC4, r19
    bc4a:	20 93 c3 0d 	sts	0x0DC3, r18
    bc4e:	21 50       	subi	r18, 0x01	; 1
    bc50:	30 40       	sbci	r19, 0x00	; 0
    bc52:	f9 01       	movw	r30, r18
    bc54:	24 91       	lpm	r18, Z+
									if(tracks[channel].allocated==true){
    bc56:	85 2f       	mov	r24, r21
    bc58:	90 e0       	ldi	r25, 0x00	; 0
    bc5a:	8c 9f       	mul	r24, r28
    bc5c:	d0 01       	movw	r26, r0
    bc5e:	8d 9f       	mul	r24, r29
    bc60:	b0 0d       	add	r27, r0
    bc62:	9c 9f       	mul	r25, r28
    bc64:	b0 0d       	add	r27, r0
    bc66:	11 24       	eor	r1, r1
    bc68:	a0 5a       	subi	r26, 0xA0	; 160
    bc6a:	b2 4f       	sbci	r27, 0xF2	; 242
    bc6c:	8c 91       	ld	r24, X
    bc6e:	88 23       	and	r24, r24
    bc70:	09 f4       	brne	.+2      	; 0xbc74 <ProcessMusic+0x1ca>
    bc72:	5d c0       	rjmp	.+186    	; 0xbd2e <ProcessMusic+0x284>
										TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    bc74:	22 0f       	add	r18, r18
    bc76:	85 2f       	mov	r24, r21
    bc78:	1c 96       	adiw	r26, 0x0c	; 12
    bc7a:	6c 91       	ld	r22, X
    bc7c:	0e 94 8d 5c 	call	0xb91a	; 0xb91a <TriggerNote>
    bc80:	56 c0       	rjmp	.+172    	; 0xbd2e <ProcessMusic+0x284>
									}
									break;

								//controllers
								case 0xb0:
									c2=pgm_read_byte(songPos++); //get value	
    bc82:	2f 5f       	subi	r18, 0xFF	; 255
    bc84:	3f 4f       	sbci	r19, 0xFF	; 255
    bc86:	30 93 c4 0d 	sts	0x0DC4, r19
    bc8a:	20 93 c3 0d 	sts	0x0DC3, r18
    bc8e:	21 50       	subi	r18, 0x01	; 1
    bc90:	30 40       	sbci	r19, 0x00	; 0
    bc92:	f9 01       	movw	r30, r18
    bc94:	24 91       	lpm	r18, Z+
									
									if(c1==CONTROLER_VOL){
    bc96:	47 30       	cpi	r20, 0x07	; 7
    bc98:	71 f4       	brne	.+28     	; 0xbcb6 <ProcessMusic+0x20c>
										tracks[channel].trackVol=c2<<1;
    bc9a:	85 2f       	mov	r24, r21
    bc9c:	90 e0       	ldi	r25, 0x00	; 0
    bc9e:	8c 9f       	mul	r24, r28
    bca0:	f0 01       	movw	r30, r0
    bca2:	8d 9f       	mul	r24, r29
    bca4:	f0 0d       	add	r31, r0
    bca6:	9c 9f       	mul	r25, r28
    bca8:	f0 0d       	add	r31, r0
    bcaa:	11 24       	eor	r1, r1
    bcac:	e0 5a       	subi	r30, 0xA0	; 160
    bcae:	f2 4f       	sbci	r31, 0xF2	; 242
    bcb0:	22 0f       	add	r18, r18
    bcb2:	27 83       	std	Z+7, r18	; 0x07
    bcb4:	3c c0       	rjmp	.+120    	; 0xbd2e <ProcessMusic+0x284>
									}else if(c1==CONTROLER_EXPRESSION){
    bcb6:	4b 30       	cpi	r20, 0x0B	; 11
    bcb8:	71 f4       	brne	.+28     	; 0xbcd6 <ProcessMusic+0x22c>
										tracks[channel].expressionVol=c2<<1;
    bcba:	85 2f       	mov	r24, r21
    bcbc:	90 e0       	ldi	r25, 0x00	; 0
    bcbe:	8c 9f       	mul	r24, r28
    bcc0:	f0 01       	movw	r30, r0
    bcc2:	8d 9f       	mul	r24, r29
    bcc4:	f0 0d       	add	r31, r0
    bcc6:	9c 9f       	mul	r25, r28
    bcc8:	f0 0d       	add	r31, r0
    bcca:	11 24       	eor	r1, r1
    bccc:	e0 5a       	subi	r30, 0xA0	; 160
    bcce:	f2 4f       	sbci	r31, 0xF2	; 242
    bcd0:	22 0f       	add	r18, r18
    bcd2:	26 83       	std	Z+6, r18	; 0x06
    bcd4:	2c c0       	rjmp	.+88     	; 0xbd2e <ProcessMusic+0x284>
									}else if(c1==CONTROLER_TREMOLO){
    bcd6:	4c 35       	cpi	r20, 0x5C	; 92
    bcd8:	71 f4       	brne	.+28     	; 0xbcf6 <ProcessMusic+0x24c>
										tracks[channel].tremoloLevel=c2<<1;
    bcda:	85 2f       	mov	r24, r21
    bcdc:	90 e0       	ldi	r25, 0x00	; 0
    bcde:	8c 9f       	mul	r24, r28
    bce0:	f0 01       	movw	r30, r0
    bce2:	8d 9f       	mul	r24, r29
    bce4:	f0 0d       	add	r31, r0
    bce6:	9c 9f       	mul	r25, r28
    bce8:	f0 0d       	add	r31, r0
    bcea:	11 24       	eor	r1, r1
    bcec:	e0 5a       	subi	r30, 0xA0	; 160
    bcee:	f2 4f       	sbci	r31, 0xF2	; 242
    bcf0:	22 0f       	add	r18, r18
    bcf2:	24 83       	std	Z+4, r18	; 0x04
    bcf4:	1c c0       	rjmp	.+56     	; 0xbd2e <ProcessMusic+0x284>
									}else if(c1==CONTROLER_TREMOLO_RATE){
    bcf6:	44 36       	cpi	r20, 0x64	; 100
    bcf8:	d1 f4       	brne	.+52     	; 0xbd2e <ProcessMusic+0x284>
										tracks[channel].tremoloRate=c2<<1;
    bcfa:	85 2f       	mov	r24, r21
    bcfc:	90 e0       	ldi	r25, 0x00	; 0
    bcfe:	8c 9f       	mul	r24, r28
    bd00:	f0 01       	movw	r30, r0
    bd02:	8d 9f       	mul	r24, r29
    bd04:	f0 0d       	add	r31, r0
    bd06:	9c 9f       	mul	r25, r28
    bd08:	f0 0d       	add	r31, r0
    bd0a:	11 24       	eor	r1, r1
    bd0c:	e0 5a       	subi	r30, 0xA0	; 160
    bd0e:	f2 4f       	sbci	r31, 0xF2	; 242
    bd10:	22 0f       	add	r18, r18
    bd12:	25 83       	std	Z+5, r18	; 0x05
    bd14:	0c c0       	rjmp	.+24     	; 0xbd2e <ProcessMusic+0x284>
																
									break;
								
								//program change
								case 0xc0:
									tracks[channel].patchNo=c1;
    bd16:	85 2f       	mov	r24, r21
    bd18:	90 e0       	ldi	r25, 0x00	; 0
    bd1a:	8c 9f       	mul	r24, r28
    bd1c:	f0 01       	movw	r30, r0
    bd1e:	8d 9f       	mul	r24, r29
    bd20:	f0 0d       	add	r31, r0
    bd22:	9c 9f       	mul	r25, r28
    bd24:	f0 0d       	add	r31, r0
    bd26:	11 24       	eor	r1, r1
    bd28:	e0 5a       	subi	r30, 0xA0	; 160
    bd2a:	f2 4f       	sbci	r31, 0xF2	; 242
    bd2c:	44 87       	std	Z+12, r20	; 0x0c

					}

				}
				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos); //Bug fix: remove divide by two 			
    bd2e:	83 ec       	ldi	r24, 0xC3	; 195
    bd30:	9d e0       	ldi	r25, 0x0D	; 13
    bd32:	0e 94 54 5c 	call	0xb8a8	; 0xb8a8 <ReadVarLen>
    bd36:	90 93 c2 0d 	sts	0x0DC2, r25
    bd3a:	80 93 c1 0d 	sts	0x0DC1, r24
				currDeltaTime=0;
    bd3e:	10 92 b9 0d 	sts	0x0DB9, r1
    bd42:	10 92 b8 0d 	sts	0x0DB8, r1
    bd46:	02 c0       	rjmp	.+4      	; 0xbd4c <ProcessMusic+0x2a2>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    bd48:	c6 e1       	ldi	r28, 0x16	; 22
    bd4a:	d0 e0       	ldi	r29, 0x00	; 0
	//Process song MIDI notes
	if(playSong){
	

			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    bd4c:	60 91 b8 0d 	lds	r22, 0x0DB8
    bd50:	70 91 b9 0d 	lds	r23, 0x0DB9
    bd54:	80 91 c1 0d 	lds	r24, 0x0DC1
    bd58:	90 91 c2 0d 	lds	r25, 0x0DC2
    bd5c:	68 17       	cp	r22, r24
    bd5e:	79 07       	cpc	r23, r25
    bd60:	09 f4       	brne	.+2      	; 0xbd64 <ProcessMusic+0x2ba>
    bd62:	cb ce       	rjmp	.-618    	; 0xbafa <ProcessMusic+0x50>
				currDeltaTime=0;
			
			}//end while

			
			currDeltaTime++;
    bd64:	6f 5f       	subi	r22, 0xFF	; 255
    bd66:	7f 4f       	sbci	r23, 0xFF	; 255
    bd68:	70 93 b9 0d 	sts	0x0DB9, r23
    bd6c:	60 93 b8 0d 	sts	0x0DB8, r22
			absoluteTime++;
    bd70:	80 91 be 0d 	lds	r24, 0x0DBE
    bd74:	90 91 bf 0d 	lds	r25, 0x0DBF
    bd78:	01 96       	adiw	r24, 0x01	; 1
    bd7a:	90 93 bf 0d 	sts	0x0DBF, r25
    bd7e:	80 93 be 0d 	sts	0x0DBE, r24
    bd82:	04 e3       	ldi	r16, 0x34	; 52
    bd84:	1d e0       	ldi	r17, 0x0D	; 13
    bd86:	c1 e6       	ldi	r28, 0x61	; 97
    bd88:	dd e0       	ldi	r29, 0x0D	; 13
    bd8a:	ff 24       	eor	r15, r15
					tmp-=128; //convert to unsigned

					tVol=(tracks[track].tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    bd8c:	bf ef       	ldi	r27, 0xFF	; 255
    bd8e:	cb 2e       	mov	r12, r27
    bd90:	d1 2c       	mov	r13, r1
	// Process patches command streams & final volume
	//
	
	for(unsigned char track=0;track<CHANNELS;track++){
		//process patch command stream
		if(tracks[track].patchEnvelopeHold==false){
    bd92:	8a 89       	ldd	r24, Y+18	; 0x12
    bd94:	88 23       	and	r24, r24
    bd96:	09 f0       	breq	.+2      	; 0xbd9a <ProcessMusic+0x2f0>
    bd98:	5e c0       	rjmp	.+188    	; 0xbe56 <ProcessMusic+0x3ac>

			if(tracks[track].patchCommandStreamPos!=NULL && 
    bd9a:	8b 89       	ldd	r24, Y+19	; 0x13
    bd9c:	9c 89       	ldd	r25, Y+20	; 0x14
    bd9e:	89 2b       	or	r24, r25
    bda0:	09 f4       	brne	.+2      	; 0xbda4 <ProcessMusic+0x2fa>
    bda2:	56 c0       	rjmp	.+172    	; 0xbe50 <ProcessMusic+0x3a6>
    bda4:	9f 85       	ldd	r25, Y+15	; 0x0f
    bda6:	8e 85       	ldd	r24, Y+14	; 0x0e
    bda8:	98 17       	cp	r25, r24
    bdaa:	08 f0       	brcs	.+2      	; 0xbdae <ProcessMusic+0x304>
    bdac:	4c c0       	rjmp	.+152    	; 0xbe46 <ProcessMusic+0x39c>
    bdae:	50 c0       	rjmp	.+160    	; 0xbe50 <ProcessMusic+0x3a6>

				//process all simultaneous events
				while(tracks[track].patchCurrDeltaTime==tracks[track].patchNextDeltaTime){	
					
					//RAM Patch
					if(tracks[track].patchNo==127){
    bdb0:	8b 85       	ldd	r24, Y+11	; 0x0b
    bdb2:	2b 89       	ldd	r18, Y+19	; 0x13
    bdb4:	3c 89       	ldd	r19, Y+20	; 0x14
    bdb6:	8f 37       	cpi	r24, 0x7F	; 127
    bdb8:	e9 f4       	brne	.+58     	; 0xbdf4 <ProcessMusic+0x34a>
						c1=*(tracks[track].patchCommandStreamPos++);
    bdba:	d9 01       	movw	r26, r18
    bdbc:	8d 91       	ld	r24, X+
    bdbe:	bc 8b       	std	Y+20, r27	; 0x14
    bdc0:	ab 8b       	std	Y+19, r26	; 0x13
						if(c1==0xff){					
    bdc2:	8f 3f       	cpi	r24, 0xFF	; 255
    bdc4:	01 f1       	breq	.+64     	; 0xbe06 <ProcessMusic+0x35c>
							//end of stream!
							tracks[track].priority=0;
							tracks[track].patchCommandStreamPos=NULL;
							break;
						}else{
							c2=*(tracks[track].patchCommandStreamPos++);
    bdc6:	f9 01       	movw	r30, r18
    bdc8:	61 81       	ldd	r22, Z+1	; 0x01
    bdca:	11 96       	adiw	r26, 0x01	; 1
    bdcc:	bc 8b       	std	Y+20, r27	; 0x14
    bdce:	ab 8b       	std	Y+19, r26	; 0x13
							//invoke patch command function
							(patchCommands[c1])(track,c2);				
    bdd0:	e8 2f       	mov	r30, r24
    bdd2:	f0 e0       	ldi	r31, 0x00	; 0
    bdd4:	ee 0f       	add	r30, r30
    bdd6:	ff 1f       	adc	r31, r31
    bdd8:	e0 57       	subi	r30, 0x70	; 112
    bdda:	ff 4f       	sbci	r31, 0xFF	; 255
    bddc:	01 90       	ld	r0, Z+
    bdde:	f0 81       	ld	r31, Z
    bde0:	e0 2d       	mov	r30, r0
    bde2:	8f 2d       	mov	r24, r15
    bde4:	09 95       	icall
						}			
				
						//read next delta time
						tracks[track].patchNextDeltaTime=*(tracks[track].patchCommandStreamPos++);
    bde6:	eb 89       	ldd	r30, Y+19	; 0x13
    bde8:	fc 89       	ldd	r31, Y+20	; 0x14
    bdea:	81 91       	ld	r24, Z+
    bdec:	8e 87       	std	Y+14, r24	; 0x0e
    bdee:	fc 8b       	std	Y+20, r31	; 0x14
    bdf0:	eb 8b       	std	Y+19, r30	; 0x13
    bdf2:	28 c0       	rjmp	.+80     	; 0xbe44 <ProcessMusic+0x39a>
				
					}else{
						//ROM patches
						c1=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    bdf4:	a9 01       	movw	r20, r18
    bdf6:	4f 5f       	subi	r20, 0xFF	; 255
    bdf8:	5f 4f       	sbci	r21, 0xFF	; 255
    bdfa:	5c 8b       	std	Y+20, r21	; 0x14
    bdfc:	4b 8b       	std	Y+19, r20	; 0x13
    bdfe:	f9 01       	movw	r30, r18
    be00:	84 91       	lpm	r24, Z+
						if(c1==0xff){					
    be02:	8f 3f       	cpi	r24, 0xFF	; 255
    be04:	21 f4       	brne	.+8      	; 0xbe0e <ProcessMusic+0x364>
							//end of stream!
							tracks[track].priority=0;
    be06:	18 82       	st	Y, r1
							tracks[track].patchCommandStreamPos=NULL;
    be08:	1c 8a       	std	Y+20, r1	; 0x14
    be0a:	1b 8a       	std	Y+19, r1	; 0x13
    be0c:	21 c0       	rjmp	.+66     	; 0xbe50 <ProcessMusic+0x3a6>
							break;

						}else{
							c2=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    be0e:	4f 5f       	subi	r20, 0xFF	; 255
    be10:	5f 4f       	sbci	r21, 0xFF	; 255
    be12:	5c 8b       	std	Y+20, r21	; 0x14
    be14:	4b 8b       	std	Y+19, r20	; 0x13
    be16:	41 50       	subi	r20, 0x01	; 1
    be18:	50 40       	sbci	r21, 0x00	; 0
    be1a:	fa 01       	movw	r30, r20
    be1c:	64 91       	lpm	r22, Z+
							//invoke patch command function
							( (PatchCommand)pgm_read_word(&patchCommands[c1]) )(track,c2);				
    be1e:	90 e0       	ldi	r25, 0x00	; 0
    be20:	88 0f       	add	r24, r24
    be22:	99 1f       	adc	r25, r25
    be24:	80 57       	subi	r24, 0x70	; 112
    be26:	9f 4f       	sbci	r25, 0xFF	; 255
    be28:	fc 01       	movw	r30, r24
    be2a:	25 91       	lpm	r18, Z+
    be2c:	34 91       	lpm	r19, Z+
    be2e:	8f 2d       	mov	r24, r15
    be30:	f9 01       	movw	r30, r18
    be32:	09 95       	icall
						}			
				
						//read next delta time
						tracks[track].patchNextDeltaTime=pgm_read_byte(tracks[track].patchCommandStreamPos++);
    be34:	eb 89       	ldd	r30, Y+19	; 0x13
    be36:	fc 89       	ldd	r31, Y+20	; 0x14
    be38:	31 96       	adiw	r30, 0x01	; 1
    be3a:	fc 8b       	std	Y+20, r31	; 0x14
    be3c:	eb 8b       	std	Y+19, r30	; 0x13
    be3e:	31 97       	sbiw	r30, 0x01	; 1
    be40:	e4 91       	lpm	r30, Z+
    be42:	ee 87       	std	Y+14, r30	; 0x0e
						
					}				
					tracks[track].patchCurrDeltaTime=0;	
    be44:	1f 86       	std	Y+15, r1	; 0x0f

			if(tracks[track].patchCommandStreamPos!=NULL && 
				tracks[track].patchCurrDeltaTime>=tracks[track].patchNextDeltaTime){			

				//process all simultaneous events
				while(tracks[track].patchCurrDeltaTime==tracks[track].patchNextDeltaTime){	
    be46:	9f 85       	ldd	r25, Y+15	; 0x0f
    be48:	8e 85       	ldd	r24, Y+14	; 0x0e
    be4a:	98 17       	cp	r25, r24
    be4c:	09 f4       	brne	.+2      	; 0xbe50 <ProcessMusic+0x3a6>
    be4e:	b0 cf       	rjmp	.-160    	; 0xbdb0 <ProcessMusic+0x306>
					tracks[track].patchCurrDeltaTime=0;	

				}		
			}				
			
			tracks[track].patchCurrDeltaTime++;
    be50:	8f 85       	ldd	r24, Y+15	; 0x0f
    be52:	8f 5f       	subi	r24, 0xFF	; 255
    be54:	8f 87       	std	Y+15, r24	; 0x0f
		}
	


		if(tracks[track].patchPlaying){
    be56:	8a 85       	ldd	r24, Y+10	; 0x0a
    be58:	88 23       	and	r24, r24
    be5a:	19 f4       	brne	.+6      	; 0xbe62 <ProcessMusic+0x3b8>
    be5c:	20 e0       	ldi	r18, 0x00	; 0
    be5e:	30 e0       	ldi	r19, 0x00	; 0
    be60:	6b c0       	rjmp	.+214    	; 0xbf38 <ProcessMusic+0x48e>
		
			if(tracks[track].patchPlayingTime<0xff){
    be62:	88 89       	ldd	r24, Y+16	; 0x10
    be64:	8f 3f       	cpi	r24, 0xFF	; 255
    be66:	11 f0       	breq	.+4      	; 0xbe6c <ProcessMusic+0x3c2>
				tracks[track].patchPlayingTime++;
    be68:	8f 5f       	subi	r24, 0xFF	; 255
    be6a:	88 8b       	std	Y+16, r24	; 0x10
			}

			//process final frame volume
			if(tracks[track].noteVol!=0 && tracks[track].envelopeVol!=0 && tracks[track].trackVol!=0 && masterVolume!=0){
    be6c:	9f 81       	ldd	r25, Y+7	; 0x07
    be6e:	99 23       	and	r25, r25
    be70:	09 f4       	brne	.+2      	; 0xbe74 <ProcessMusic+0x3ca>
    be72:	5c c0       	rjmp	.+184    	; 0xbf2c <ProcessMusic+0x482>
    be74:	28 85       	ldd	r18, Y+8	; 0x08
    be76:	22 23       	and	r18, r18
    be78:	09 f4       	brne	.+2      	; 0xbe7c <ProcessMusic+0x3d2>
    be7a:	58 c0       	rjmp	.+176    	; 0xbf2c <ProcessMusic+0x482>
    be7c:	8e 81       	ldd	r24, Y+6	; 0x06
    be7e:	88 23       	and	r24, r24
    be80:	09 f4       	brne	.+2      	; 0xbe84 <ProcessMusic+0x3da>
    be82:	54 c0       	rjmp	.+168    	; 0xbf2c <ProcessMusic+0x482>
    be84:	40 91 c0 0d 	lds	r20, 0x0DC0
    be88:	44 23       	and	r20, r20
    be8a:	09 f4       	brne	.+2      	; 0xbe8e <ProcessMusic+0x3e4>
    be8c:	4f c0       	rjmp	.+158    	; 0xbf2c <ProcessMusic+0x482>

				uVol=(tracks[track].noteVol*tracks[track].trackVol)+0x100;
    be8e:	89 9f       	mul	r24, r25
    be90:	c0 01       	movw	r24, r0
    be92:	11 24       	eor	r1, r1
    be94:	80 50       	subi	r24, 0x00	; 0
    be96:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*tracks[track].envelopeVol)+0x100;
    be98:	89 2f       	mov	r24, r25
    be9a:	99 27       	eor	r25, r25
    be9c:	30 e0       	ldi	r19, 0x00	; 0
    be9e:	b9 01       	movw	r22, r18
    bea0:	86 9f       	mul	r24, r22
    bea2:	90 01       	movw	r18, r0
    bea4:	87 9f       	mul	r24, r23
    bea6:	30 0d       	add	r19, r0
    bea8:	96 9f       	mul	r25, r22
    beaa:	30 0d       	add	r19, r0
    beac:	11 24       	eor	r1, r1
    beae:	20 50       	subi	r18, 0x00	; 0
    beb0:	3f 4f       	sbci	r19, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*tracks[track].expressionVol)+0x100;
    beb2:	23 2f       	mov	r18, r19
    beb4:	33 27       	eor	r19, r19
    beb6:	8d 81       	ldd	r24, Y+5	; 0x05
    beb8:	90 e0       	ldi	r25, 0x00	; 0
    beba:	fc 01       	movw	r30, r24
    bebc:	2e 9f       	mul	r18, r30
    bebe:	c0 01       	movw	r24, r0
    bec0:	2f 9f       	mul	r18, r31
    bec2:	90 0d       	add	r25, r0
    bec4:	3e 9f       	mul	r19, r30
    bec6:	90 0d       	add	r25, r0
    bec8:	11 24       	eor	r1, r1
    beca:	80 50       	subi	r24, 0x00	; 0
    becc:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*masterVolume)+0x100;
    bece:	89 2f       	mov	r24, r25
    bed0:	99 27       	eor	r25, r25
    bed2:	24 2f       	mov	r18, r20
    bed4:	30 e0       	ldi	r19, 0x00	; 0
    bed6:	ac 01       	movw	r20, r24
    bed8:	42 9f       	mul	r20, r18
    beda:	c0 01       	movw	r24, r0
    bedc:	43 9f       	mul	r20, r19
    bede:	90 0d       	add	r25, r0
    bee0:	52 9f       	mul	r21, r18
    bee2:	90 0d       	add	r25, r0
    bee4:	11 24       	eor	r1, r1
    bee6:	80 50       	subi	r24, 0x00	; 0
    bee8:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
    beea:	29 2f       	mov	r18, r25
    beec:	33 27       	eor	r19, r19

				if(tracks[track].tremoloLevel>0){					
    beee:	8b 81       	ldd	r24, Y+3	; 0x03
    bef0:	88 23       	and	r24, r24
    bef2:	f1 f0       	breq	.+60     	; 0xbf30 <ProcessMusic+0x486>
					tmp=pgm_read_byte(&(waves[tracks[track].tremoloPos]));
    bef4:	ea 81       	ldd	r30, Y+2	; 0x02
    bef6:	f0 e0       	ldi	r31, 0x00	; 0
    bef8:	e0 50       	subi	r30, 0x00	; 0
    befa:	fc 43       	sbci	r31, 0x3C	; 60
    befc:	e4 91       	lpm	r30, Z+
					tmp-=128; //convert to unsigned

					tVol=(tracks[track].tremoloLevel*tmp)+0x100;
    befe:	e0 58       	subi	r30, 0x80	; 128
    bf00:	e8 9f       	mul	r30, r24
    bf02:	c0 01       	movw	r24, r0
    bf04:	11 24       	eor	r1, r1
    bf06:	80 50       	subi	r24, 0x00	; 0
    bf08:	9f 4f       	sbci	r25, 0xFF	; 255
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    bf0a:	89 2f       	mov	r24, r25
    bf0c:	99 27       	eor	r25, r25
    bf0e:	b6 01       	movw	r22, r12
    bf10:	68 1b       	sub	r22, r24
    bf12:	79 0b       	sbc	r23, r25
    bf14:	62 9f       	mul	r22, r18
    bf16:	c0 01       	movw	r24, r0
    bf18:	63 9f       	mul	r22, r19
    bf1a:	90 0d       	add	r25, r0
    bf1c:	72 9f       	mul	r23, r18
    bf1e:	90 0d       	add	r25, r0
    bf20:	11 24       	eor	r1, r1
    bf22:	80 50       	subi	r24, 0x00	; 0
    bf24:	9f 4f       	sbci	r25, 0xFF	; 255
					uVol>>=8;
    bf26:	29 2f       	mov	r18, r25
    bf28:	33 27       	eor	r19, r19
    bf2a:	02 c0       	rjmp	.+4      	; 0xbf30 <ProcessMusic+0x486>
    bf2c:	20 e0       	ldi	r18, 0x00	; 0
    bf2e:	30 e0       	ldi	r19, 0x00	; 0
			
			}else{
				uVol=0;
			}	

			tracks[track].tremoloPos+=tracks[track].tremoloRate;	
    bf30:	8a 81       	ldd	r24, Y+2	; 0x02
    bf32:	9c 81       	ldd	r25, Y+4	; 0x04
    bf34:	89 0f       	add	r24, r25
    bf36:	8a 83       	std	Y+2, r24	; 0x02

		}else{
			uVol=0;
		}
		
		mixer.channels.all[track].volume=(uVol&0xff);
    bf38:	f8 01       	movw	r30, r16
    bf3a:	20 83       	st	Z, r18

	//
	// Process patches command streams & final volume
	//
	
	for(unsigned char track=0;track<CHANNELS;track++){
    bf3c:	f3 94       	inc	r15
    bf3e:	06 5f       	subi	r16, 0xF6	; 246
    bf40:	1f 4f       	sbci	r17, 0xFF	; 255
    bf42:	66 96       	adiw	r28, 0x16	; 22
    bf44:	f4 e0       	ldi	r31, 0x04	; 4
    bf46:	ff 16       	cp	r15, r31
    bf48:	09 f0       	breq	.+2      	; 0xbf4c <ProcessMusic+0x4a2>
    bf4a:	23 cf       	rjmp	.-442    	; 0xbd92 <ProcessMusic+0x2e8>
		mixer.channels.all[track].volume=(uVol&0xff);
	}



}
    bf4c:	df 91       	pop	r29
    bf4e:	cf 91       	pop	r28
    bf50:	1f 91       	pop	r17
    bf52:	0f 91       	pop	r16
    bf54:	ff 90       	pop	r15
    bf56:	df 90       	pop	r13
    bf58:	cf 90       	pop	r12
    bf5a:	08 95       	ret

0000bf5c <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    bf5c:	cf 92       	push	r12
    bf5e:	df 92       	push	r13
    bf60:	ef 92       	push	r14
    bf62:	ff 92       	push	r15
    bf64:	1f 93       	push	r17
    bf66:	cf 93       	push	r28
    bf68:	df 93       	push	r29
    bf6a:	38 2f       	mov	r19, r24
	unsigned char channel;
	
	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    bf6c:	89 e0       	ldi	r24, 0x09	; 9
    bf6e:	38 9f       	mul	r19, r24
    bf70:	60 01       	movw	r12, r0
    bf72:	11 24       	eor	r1, r1
    bf74:	c0 91 ba 0d 	lds	r28, 0x0DBA
    bf78:	d0 91 bb 0d 	lds	r29, 0x0DBB
    bf7c:	cc 0d       	add	r28, r12
    bf7e:	dd 1d       	adc	r29, r13
    bf80:	ce 01       	movw	r24, r28
    bf82:	03 96       	adiw	r24, 0x03	; 3
    bf84:	fc 01       	movw	r30, r24
    bf86:	a5 91       	lpm	r26, Z+
    bf88:	b4 91       	lpm	r27, Z+
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    bf8a:	fe 01       	movw	r30, r28
    bf8c:	84 91       	lpm	r24, Z+

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || type==2){
    bf8e:	81 50       	subi	r24, 0x01	; 1
    bf90:	82 30       	cpi	r24, 0x02	; 2
    bf92:	10 f4       	brcc	.+4      	; 0xbf98 <TriggerFx+0x3c>
    bf94:	13 e0       	ldi	r17, 0x03	; 3
    bf96:	1d c0       	rjmp	.+58     	; 0xbfd2 <TriggerFx+0x76>
		//noise or PCM channel fx
		channel=3;
	}else if(tracks[1].priority==0 || (tracks[1].fxPatchNo==patch && tracks[1].priority>0 && retrig==true)){ //fx already playing
    bf98:	80 91 77 0d 	lds	r24, 0x0D77
    bf9c:	88 23       	and	r24, r24
    bf9e:	b1 f0       	breq	.+44     	; 0xbfcc <TriggerFx+0x70>
    bfa0:	80 91 83 0d 	lds	r24, 0x0D83
    bfa4:	83 17       	cp	r24, r19
    bfa6:	11 f4       	brne	.+4      	; 0xbfac <TriggerFx+0x50>
    bfa8:	44 23       	and	r20, r20
    bfaa:	81 f4       	brne	.+32     	; 0xbfcc <TriggerFx+0x70>
		channel=1;
	}else if(tracks[2].priority==0 || (tracks[2].fxPatchNo==patch && tracks[2].priority>0 && retrig==true)){ //fx already playing				
    bfac:	80 91 8d 0d 	lds	r24, 0x0D8D
    bfb0:	88 23       	and	r24, r24
    bfb2:	71 f0       	breq	.+28     	; 0xbfd0 <TriggerFx+0x74>
    bfb4:	80 91 99 0d 	lds	r24, 0x0D99
    bfb8:	83 17       	cp	r24, r19
    bfba:	11 f4       	brne	.+4      	; 0xbfc0 <TriggerFx+0x64>
    bfbc:	44 23       	and	r20, r20
    bfbe:	41 f4       	brne	.+16     	; 0xbfd0 <TriggerFx+0x74>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    bfc0:	90 91 87 0d 	lds	r25, 0x0D87
    bfc4:	80 91 9d 0d 	lds	r24, 0x0D9D
    bfc8:	89 17       	cp	r24, r25
    bfca:	10 f4       	brcc	.+4      	; 0xbfd0 <TriggerFx+0x74>
    bfcc:	11 e0       	ldi	r17, 0x01	; 1
    bfce:	01 c0       	rjmp	.+2      	; 0xbfd2 <TriggerFx+0x76>
    bfd0:	12 e0       	ldi	r17, 0x02	; 2
	tracks[channel].expressionVol=DEFAULT_EXPRESSION_VOL;
	tracks[channel].note=80; //default 
*/


	tracks[channel].patchNextDeltaTime=pgm_read_byte(pos++); //pgm_read_byte(tracks[channel].patchCommandStreamPos++);
    bfd2:	e1 2e       	mov	r14, r17
    bfd4:	ff 24       	eor	r15, r15
    bfd6:	fd 01       	movw	r30, r26
    bfd8:	24 91       	lpm	r18, Z+
    bfda:	86 e1       	ldi	r24, 0x16	; 22
    bfdc:	90 e0       	ldi	r25, 0x00	; 0
    bfde:	e8 9e       	mul	r14, r24
    bfe0:	e0 01       	movw	r28, r0
    bfe2:	e9 9e       	mul	r14, r25
    bfe4:	d0 0d       	add	r29, r0
    bfe6:	f8 9e       	mul	r15, r24
    bfe8:	d0 0d       	add	r29, r0
    bfea:	11 24       	eor	r1, r1
    bfec:	c0 5a       	subi	r28, 0xA0	; 160
    bfee:	d2 4f       	sbci	r29, 0xF2	; 242
    bff0:	2f 87       	std	Y+15, r18	; 0x0f
	tracks[channel].patchCommandStreamPos=pos;
    bff2:	11 96       	adiw	r26, 0x01	; 1
    bff4:	bd 8b       	std	Y+21, r27	; 0x15
    bff6:	ac 8b       	std	Y+20, r26	; 0x14
	tracks[channel].fxPatchNo=patch;
    bff8:	3d 87       	std	Y+13, r19	; 0x0d
	tracks[channel].priority=1;	
    bffa:	81 e0       	ldi	r24, 0x01	; 1
    bffc:	89 83       	std	Y+1, r24	; 0x01
	SetTriggerCommonValues(&tracks[channel],volume,80);
    bffe:	86 e1       	ldi	r24, 0x16	; 22
    c000:	18 9f       	mul	r17, r24
    c002:	c0 01       	movw	r24, r0
    c004:	11 24       	eor	r1, r1
    c006:	80 5a       	subi	r24, 0xA0	; 160
    c008:	92 4f       	sbci	r25, 0xF2	; 242
    c00a:	40 e5       	ldi	r20, 0x50	; 80
    c00c:	0e 94 78 5c 	call	0xb8f0	; 0xb8f0 <SetTriggerCommonValues>
			SetMixerNote(channel,tracks[channel].note);
			SetMixerWave(channel,tracks[channel].patchWave);
		}
	#else

		if(channel==3){
    c010:	13 30       	cpi	r17, 0x03	; 3
    c012:	29 f5       	brne	.+74     	; 0xc05e <TriggerFx+0x102>
			mixer.channels.type.wave[3].positionFrac=0;
    c014:	10 92 55 0d 	sts	0x0D55, r1
			const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    c018:	20 91 ba 0d 	lds	r18, 0x0DBA
    c01c:	30 91 bb 0d 	lds	r19, 0x0DBB
    c020:	2c 0d       	add	r18, r12
    c022:	3d 1d       	adc	r19, r13
    c024:	f9 01       	movw	r30, r18
    c026:	31 96       	adiw	r30, 0x01	; 1
    c028:	45 91       	lpm	r20, Z+
    c02a:	54 91       	lpm	r21, Z+
			mixer.channels.type.wave[3].position=pos;
    c02c:	50 93 57 0d 	sts	0x0D57, r21
    c030:	40 93 56 0d 	sts	0x0D56, r20
			mixer.channels.type.wave[3].loopStart=pos+pgm_read_word(&(patchPointers[patch].loopStart));
    c034:	f9 01       	movw	r30, r18
    c036:	35 96       	adiw	r30, 0x05	; 5
    c038:	85 91       	lpm	r24, Z+
    c03a:	94 91       	lpm	r25, Z+
    c03c:	84 0f       	add	r24, r20
    c03e:	95 1f       	adc	r25, r21
    c040:	90 93 59 0d 	sts	0x0D59, r25
    c044:	80 93 58 0d 	sts	0x0D58, r24
			mixer.channels.type.wave[3].loopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    c048:	f9 01       	movw	r30, r18
    c04a:	37 96       	adiw	r30, 0x07	; 7
    c04c:	85 91       	lpm	r24, Z+
    c04e:	94 91       	lpm	r25, Z+
    c050:	48 0f       	add	r20, r24
    c052:	59 1f       	adc	r21, r25
    c054:	50 93 5b 0d 	sts	0x0D5B, r21
    c058:	40 93 5a 0d 	sts	0x0D5A, r20
    c05c:	04 c0       	rjmp	.+8      	; 0xc066 <TriggerFx+0x10a>
		}else{
			SetMixerWave(channel,tracks[channel].patchWave);
    c05e:	81 2f       	mov	r24, r17
    c060:	6a 89       	ldd	r22, Y+18	; 0x12
    c062:	0e 94 fa 58 	call	0xb1f4	; 0xb1f4 <SetMixerWave>
		}

		SetMixerNote(channel,tracks[channel].note);
    c066:	8b e0       	ldi	r24, 0x0B	; 11
    c068:	90 e0       	ldi	r25, 0x00	; 0
    c06a:	e8 9e       	mul	r14, r24
    c06c:	f0 01       	movw	r30, r0
    c06e:	e9 9e       	mul	r14, r25
    c070:	f0 0d       	add	r31, r0
    c072:	f8 9e       	mul	r15, r24
    c074:	f0 0d       	add	r31, r0
    c076:	11 24       	eor	r1, r1
    c078:	ee 0f       	add	r30, r30
    c07a:	ff 1f       	adc	r31, r31
    c07c:	ee 59       	subi	r30, 0x9E	; 158
    c07e:	f2 4f       	sbci	r31, 0xF2	; 242
    c080:	81 2f       	mov	r24, r17
    c082:	60 81       	ld	r22, Z
    c084:	0e 94 e6 58 	call	0xb1cc	; 0xb1cc <SetMixerNote>
		
	#endif

}
    c088:	df 91       	pop	r29
    c08a:	cf 91       	pop	r28
    c08c:	1f 91       	pop	r17
    c08e:	ff 90       	pop	r15
    c090:	ef 90       	pop	r14
    c092:	df 90       	pop	r13
    c094:	cf 90       	pop	r12
    c096:	08 95       	ret

0000c098 <PatchCommand08>:

/*
* Command 08: Set Note/Pitch
*/

void PatchCommand08(unsigned char track, char param){
    c098:	ff 92       	push	r15
    c09a:	0f 93       	push	r16
    c09c:	1f 93       	push	r17
    c09e:	08 2f       	mov	r16, r24
    c0a0:	f6 2e       	mov	r15, r22
	SetMixerNote(track,param);
    c0a2:	0e 94 e6 58 	call	0xb1cc	; 0xb1cc <SetMixerNote>
	tracks[track].note=param;
    c0a6:	10 e0       	ldi	r17, 0x00	; 0
    c0a8:	8b e0       	ldi	r24, 0x0B	; 11
    c0aa:	90 e0       	ldi	r25, 0x00	; 0
    c0ac:	08 9f       	mul	r16, r24
    c0ae:	f0 01       	movw	r30, r0
    c0b0:	09 9f       	mul	r16, r25
    c0b2:	f0 0d       	add	r31, r0
    c0b4:	18 9f       	mul	r17, r24
    c0b6:	f0 0d       	add	r31, r0
    c0b8:	11 24       	eor	r1, r1
    c0ba:	ee 0f       	add	r30, r30
    c0bc:	ff 1f       	adc	r31, r31
    c0be:	ee 59       	subi	r30, 0x9E	; 158
    c0c0:	f2 4f       	sbci	r31, 0xF2	; 242
    c0c2:	f0 82       	st	Z, r15
}
    c0c4:	1f 91       	pop	r17
    c0c6:	0f 91       	pop	r16
    c0c8:	ff 90       	pop	r15
    c0ca:	08 95       	ret

0000c0cc <PatchCommand04>:
	tracks[track].note+=param;
	SetMixerNote(track,tracks[track].note);
}/*
* Command 04: Note down * param
*/
void PatchCommand04(unsigned char track, char param){
    c0cc:	96 2f       	mov	r25, r22
	tracks[track].note-=param;
    c0ce:	48 2f       	mov	r20, r24
    c0d0:	50 e0       	ldi	r21, 0x00	; 0
    c0d2:	2b e0       	ldi	r18, 0x0B	; 11
    c0d4:	30 e0       	ldi	r19, 0x00	; 0
    c0d6:	42 9f       	mul	r20, r18
    c0d8:	f0 01       	movw	r30, r0
    c0da:	43 9f       	mul	r20, r19
    c0dc:	f0 0d       	add	r31, r0
    c0de:	52 9f       	mul	r21, r18
    c0e0:	f0 0d       	add	r31, r0
    c0e2:	11 24       	eor	r1, r1
    c0e4:	ee 0f       	add	r30, r30
    c0e6:	ff 1f       	adc	r31, r31
    c0e8:	ee 59       	subi	r30, 0x9E	; 158
    c0ea:	f2 4f       	sbci	r31, 0xF2	; 242
    c0ec:	60 81       	ld	r22, Z
    c0ee:	69 1b       	sub	r22, r25
    c0f0:	60 83       	st	Z, r22
	SetMixerNote(track,tracks[track].note);
    c0f2:	0e 94 e6 58 	call	0xb1cc	; 0xb1cc <SetMixerNote>
}
    c0f6:	08 95       	ret

0000c0f8 <PatchCommand03>:
}
/*
* Command 03: Note up * param
*/
void PatchCommand03(unsigned char track, char param){
	tracks[track].note+=param;
    c0f8:	48 2f       	mov	r20, r24
    c0fa:	50 e0       	ldi	r21, 0x00	; 0
    c0fc:	2b e0       	ldi	r18, 0x0B	; 11
    c0fe:	30 e0       	ldi	r19, 0x00	; 0
    c100:	42 9f       	mul	r20, r18
    c102:	f0 01       	movw	r30, r0
    c104:	43 9f       	mul	r20, r19
    c106:	f0 0d       	add	r31, r0
    c108:	52 9f       	mul	r21, r18
    c10a:	f0 0d       	add	r31, r0
    c10c:	11 24       	eor	r1, r1
    c10e:	ee 0f       	add	r30, r30
    c110:	ff 1f       	adc	r31, r31
    c112:	ee 59       	subi	r30, 0x9E	; 158
    c114:	f2 4f       	sbci	r31, 0xF2	; 242
    c116:	90 81       	ld	r25, Z
    c118:	69 0f       	add	r22, r25
    c11a:	60 83       	st	Z, r22
	SetMixerNote(track,tracks[track].note);
    c11c:	0e 94 e6 58 	call	0xb1cc	; 0xb1cc <SetMixerNote>
}/*
    c120:	08 95       	ret
	...

0000c200 <DisableSoundEngine>:
; no CPU cycles are consumed.
; C-callable
;*****************************
.section .text.DisableSoundEngine
DisableSoundEngine:	
	ldi r24,0
    c200:	80 e0       	ldi	r24, 0x00	; 0
	sts sound_enabled,r24
    c202:	80 93 33 0d 	sts	0x0D33, r24
	ret
    c206:	08 95       	ret

0000c208 <steptable>:
    c208:	22 00       	.word	0x0022	; ????
    c20a:	24 00       	.word	0x0024	; ????
    c20c:	26 00       	.word	0x0026	; ????
    c20e:	28 00       	.word	0x0028	; ????
    c210:	2b 00       	.word	0x002b	; ????
    c212:	2d 00       	.word	0x002d	; ????
    c214:	30 00       	.word	0x0030	; ????
    c216:	33 00       	.word	0x0033	; ????
    c218:	36 00       	.word	0x0036	; ????
    c21a:	39 00       	.word	0x0039	; ????
    c21c:	3d 00       	.word	0x003d	; ????
    c21e:	40 00       	.word	0x0040	; ????
    c220:	44 00       	.word	0x0044	; ????
    c222:	48 00       	.word	0x0048	; ????
    c224:	4c 00       	.word	0x004c	; ????
    c226:	51 00       	.word	0x0051	; ????
    c228:	56 00       	.word	0x0056	; ????
    c22a:	5b 00       	.word	0x005b	; ????
    c22c:	60 00       	.word	0x0060	; ????
    c22e:	66 00       	.word	0x0066	; ????
    c230:	6c 00       	.word	0x006c	; ????
    c232:	73 00       	.word	0x0073	; ????
    c234:	79 00       	.word	0x0079	; ????
    c236:	81 00       	.word	0x0081	; ????
    c238:	88 00       	.word	0x0088	; ????
    c23a:	90 00       	.word	0x0090	; ????
    c23c:	99 00       	.word	0x0099	; ????
    c23e:	a2 00       	.word	0x00a2	; ????
    c240:	ac 00       	.word	0x00ac	; ????
    c242:	b6 00       	.word	0x00b6	; ????
    c244:	c1 00       	.word	0x00c1	; ????
    c246:	cc 00       	.word	0x00cc	; ????
    c248:	d8 00       	.word	0x00d8	; ????
    c24a:	e5 00       	.word	0x00e5	; ????
    c24c:	f3 00       	.word	0x00f3	; ????
    c24e:	01 01       	movw	r0, r2
    c250:	10 01       	movw	r2, r0
    c252:	21 01       	movw	r4, r2
    c254:	32 01       	movw	r6, r4
    c256:	44 01       	movw	r8, r8
    c258:	57 01       	movw	r10, r14
    c25a:	6c 01       	movw	r12, r24
    c25c:	81 01       	movw	r16, r2
    c25e:	98 01       	movw	r18, r16
    c260:	b0 01       	movw	r22, r0
    c262:	ca 01       	movw	r24, r20
    c264:	e5 01       	movw	r28, r10
    c266:	02 02       	muls	r16, r18
    c268:	21 02       	muls	r18, r17
    c26a:	41 02       	muls	r20, r17
    c26c:	64 02       	muls	r22, r20
    c26e:	88 02       	muls	r24, r24
    c270:	ae 02       	muls	r26, r30
    c272:	d7 02       	muls	r29, r23
    c274:	03 03       	mulsu	r16, r19
    c276:	30 03       	mulsu	r19, r16
    c278:	61 03       	mulsu	r22, r17
    c27a:	94 03       	fmuls	r17, r20
    c27c:	cb 03       	fmulsu	r20, r19
    c27e:	05 04       	cpc	r0, r5
    c280:	42 04       	cpc	r4, r2
    c282:	83 04       	cpc	r8, r3
    c284:	c7 04       	cpc	r12, r7
    c286:	10 05       	cpc	r17, r0
    c288:	5d 05       	cpc	r21, r13
    c28a:	af 05       	cpc	r26, r15
    c28c:	05 06       	cpc	r0, r21
    c28e:	61 06       	cpc	r6, r17
    c290:	c2 06       	cpc	r12, r18
    c292:	29 07       	cpc	r18, r25
    c294:	96 07       	cpc	r25, r22
    c296:	09 08       	sbc	r0, r9
    c298:	83 08       	sbc	r8, r3
    c29a:	05 09       	sbc	r16, r5
    c29c:	8e 09       	sbc	r24, r14
    c29e:	20 0a       	sbc	r2, r16
    c2a0:	ba 0a       	sbc	r11, r26
    c2a2:	5d 0b       	sbc	r21, r29
    c2a4:	0a 0c       	add	r0, r10
    c2a6:	c1 0c       	add	r12, r1
    c2a8:	84 0d       	add	r24, r4
    c2aa:	51 0e       	add	r5, r17
    c2ac:	2b 0f       	add	r18, r27
    c2ae:	12 10       	cpse	r1, r2
    c2b0:	07 11       	cpse	r16, r7
    c2b2:	0a 12       	cpse	r0, r26
    c2b4:	1d 13       	cpse	r17, r29
    c2b6:	40 14       	cp	r4, r0
    c2b8:	74 15       	cp	r23, r4
    c2ba:	ba 16       	cp	r11, r26
    c2bc:	14 18       	sub	r1, r4
    c2be:	83 19       	sub	r24, r3
    c2c0:	07 1b       	sub	r16, r23
    c2c2:	a3 1c       	adc	r10, r3
    c2c4:	57 1e       	adc	r5, r23
    c2c6:	24 20       	and	r2, r4
    c2c8:	0e 22       	and	r0, r30
    c2ca:	14 24       	eor	r1, r4
    c2cc:	39 26       	eor	r3, r25
    c2ce:	7f 28       	or	r7, r15
    c2d0:	e8 2a       	or	r14, r24
    c2d2:	75 2d       	mov	r23, r5
    c2d4:	29 30       	cpi	r18, 0x09	; 9
    c2d6:	06 33       	cpi	r16, 0x36	; 54
    c2d8:	0f 36       	cpi	r16, 0x6F	; 111
    c2da:	45 39       	cpi	r20, 0x95	; 149
    c2dc:	ad 3c       	cpi	r26, 0xCD	; 205
    c2de:	49 40       	sbci	r20, 0x09	; 9
    c2e0:	1b 44       	sbci	r17, 0x4B	; 75
    c2e2:	28 48       	sbci	r18, 0x88	; 136
    c2e4:	73 4c       	sbci	r23, 0xC3	; 195
    c2e6:	fe 50       	subi	r31, 0x0E	; 14
    c2e8:	cf 55       	subi	r28, 0x5F	; 95
    c2ea:	ea 5a       	subi	r30, 0xAA	; 170
    c2ec:	51 60       	ori	r21, 0x01	; 1
    c2ee:	0c 66       	ori	r16, 0x6C	; 108
    c2f0:	1d 6c       	ori	r17, 0xCD	; 205
    c2f2:	8b 72       	andi	r24, 0x2B	; 43
    c2f4:	5a 79       	andi	r21, 0x9A	; 154
    c2f6:	92 80       	ldd	r9, Z+2	; 0x02
    c2f8:	37 88       	ldd	r3, Z+23	; 0x17
    c2fa:	50 90 e5 98 	lds	r5, 0x98E5
    c2fe:	fd a1       	ldd	r31, Y+37	; 0x25
    c300:	9f ab       	std	Y+55, r25	; 0x37
    c302:	d3 b5       	in	r29, 0x23	; 35
    c304:	a3 c0       	rjmp	.+326    	; 0xc44c <waves+0x4c>
	...

0000c400 <waves>:
    c400:	00 03       	mulsu	r16, r16
    c402:	06 09       	sbc	r16, r6
    c404:	0c 10       	cpse	r0, r12
    c406:	13 16       	cp	r1, r19
    c408:	19 1c       	adc	r1, r9
    c40a:	1f 22       	and	r1, r31
    c40c:	25 28       	or	r2, r5
    c40e:	2b 2e       	mov	r2, r27
    c410:	31 33       	cpi	r19, 0x31	; 49
    c412:	36 39       	cpi	r19, 0x96	; 150
    c414:	3c 3f       	cpi	r19, 0xFC	; 252
    c416:	41 44       	sbci	r20, 0x41	; 65
    c418:	47 49       	sbci	r20, 0x97	; 151
    c41a:	4c 4e       	sbci	r20, 0xEC	; 236
    c41c:	51 53       	subi	r21, 0x31	; 49
    c41e:	55 58       	subi	r21, 0x85	; 133
    c420:	5a 5c       	subi	r21, 0xCA	; 202
    c422:	5e 60       	ori	r21, 0x0E	; 14
    c424:	62 64       	ori	r22, 0x42	; 66
    c426:	66 68       	ori	r22, 0x86	; 134
    c428:	6a 6b       	ori	r22, 0xBA	; 186
    c42a:	6d 6f       	ori	r22, 0xFD	; 253
    c42c:	70 71       	andi	r23, 0x10	; 16
    c42e:	73 74       	andi	r23, 0x43	; 67
    c430:	75 76       	andi	r23, 0x65	; 101
    c432:	78 79       	andi	r23, 0x98	; 152
    c434:	7a 7a       	andi	r23, 0xAA	; 170
    c436:	7b 7c       	andi	r23, 0xCB	; 203
    c438:	7d 7d       	andi	r23, 0xDD	; 221
    c43a:	7e 7e       	andi	r23, 0xEE	; 238
    c43c:	7e 7f       	andi	r23, 0xFE	; 254
    c43e:	7f 7f       	andi	r23, 0xFF	; 255
    c440:	7f 7f       	andi	r23, 0xFF	; 255
    c442:	7f 7f       	andi	r23, 0xFF	; 255
    c444:	7e 7e       	andi	r23, 0xEE	; 238
    c446:	7e 7d       	andi	r23, 0xDE	; 222
    c448:	7d 7c       	andi	r23, 0xCD	; 205
    c44a:	7b 7a       	andi	r23, 0xAB	; 171
    c44c:	7a 79       	andi	r23, 0x9A	; 154
    c44e:	78 76       	andi	r23, 0x68	; 104
    c450:	75 74       	andi	r23, 0x45	; 69
    c452:	73 71       	andi	r23, 0x13	; 19
    c454:	70 6f       	ori	r23, 0xF0	; 240
    c456:	6d 6b       	ori	r22, 0xBD	; 189
    c458:	6a 68       	ori	r22, 0x8A	; 138
    c45a:	66 64       	ori	r22, 0x46	; 70
    c45c:	62 60       	ori	r22, 0x02	; 2
    c45e:	5e 5c       	subi	r21, 0xCE	; 206
    c460:	5a 58       	subi	r21, 0x8A	; 138
    c462:	55 53       	subi	r21, 0x35	; 53
    c464:	51 4e       	sbci	r21, 0xE1	; 225
    c466:	4c 49       	sbci	r20, 0x9C	; 156
    c468:	47 44       	sbci	r20, 0x47	; 71
    c46a:	41 3f       	cpi	r20, 0xF1	; 241
    c46c:	3c 39       	cpi	r19, 0x9C	; 156
    c46e:	36 33       	cpi	r19, 0x36	; 54
    c470:	31 2e       	mov	r3, r17
    c472:	2b 28       	or	r2, r11
    c474:	25 22       	and	r2, r21
    c476:	1f 1c       	adc	r1, r15
    c478:	19 16       	cp	r1, r25
    c47a:	13 10       	cpse	r1, r3
    c47c:	0c 09       	sbc	r16, r12
    c47e:	06 03       	mulsu	r16, r22
    c480:	00 fd       	sbrc	r16, 0
    c482:	fa f7       	brpl	.-2      	; 0xc482 <waves+0x82>
    c484:	f4 f0       	brlt	.+60     	; 0xc4c2 <waves+0xc2>
    c486:	ed ea       	ldi	r30, 0xAD	; 173
    c488:	e7 e4       	ldi	r30, 0x47	; 71
    c48a:	e1 de       	rcall	.-574    	; 0xc24e <steptable+0x46>
    c48c:	db d8       	rcall	.-3658   	; 0xb644 <EepromReadBlock+0x5e>
    c48e:	d5 d2       	rcall	.+1450   	; 0xca3a <waves+0x63a>
    c490:	cf cd       	rjmp	.-1122   	; 0xc030 <TriggerFx+0xd4>
    c492:	ca c7       	rjmp	.+3988   	; 0xd428 <print_time+0x9a>
    c494:	c4 c1       	rjmp	.+904    	; 0xc81e <waves+0x41e>
    c496:	bf bc       	out	0x2f, r11	; 47
    c498:	b9 b7       	in	r27, 0x39	; 57
    c49a:	b4 b2       	in	r11, 0x14	; 20
    c49c:	af ad       	ldd	r26, Y+63	; 0x3f
    c49e:	ab a8       	ldd	r10, Y+51	; 0x33
    c4a0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    c4a2:	a2 a0       	ldd	r10, Z+34	; 0x22
    c4a4:	9e 9c       	mul	r9, r14
    c4a6:	9a 98       	cbi	0x13, 2	; 19
    c4a8:	96 95       	lsr	r25
    c4aa:	93 91       	.word	0x9193	; ????
    c4ac:	90 8f       	std	Z+24, r25	; 0x18
    c4ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    c4b0:	8b 8a       	std	Y+19, r8	; 0x13
    c4b2:	88 87       	std	Y+8, r24	; 0x08
    c4b4:	86 86       	std	Z+14, r8	; 0x0e
    c4b6:	85 84       	ldd	r8, Z+13	; 0x0d
    c4b8:	83 83       	std	Z+3, r24	; 0x03
    c4ba:	82 82       	std	Z+2, r8	; 0x02
    c4bc:	82 81       	ldd	r24, Z+2	; 0x02
    c4be:	81 81       	ldd	r24, Z+1	; 0x01
    c4c0:	81 81       	ldd	r24, Z+1	; 0x01
    c4c2:	81 81       	ldd	r24, Z+1	; 0x01
    c4c4:	82 82       	std	Z+2, r8	; 0x02
    c4c6:	82 83       	std	Z+2, r24	; 0x02
    c4c8:	83 84       	ldd	r8, Z+11	; 0x0b
    c4ca:	85 86       	std	Z+13, r8	; 0x0d
    c4cc:	86 87       	std	Z+14, r24	; 0x0e
    c4ce:	88 8a       	std	Y+16, r8	; 0x10
    c4d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    c4d2:	8d 8f       	std	Y+29, r24	; 0x1d
    c4d4:	90 91 93 95 	lds	r25, 0x9593
    c4d8:	96 98       	cbi	0x12, 6	; 18
    c4da:	9a 9c       	mul	r9, r10
    c4dc:	9e a0       	ldd	r9, Y+38	; 0x26
    c4de:	a2 a4       	ldd	r10, Z+42	; 0x2a
    c4e0:	a6 a8       	ldd	r10, Z+54	; 0x36
    c4e2:	ab ad       	ldd	r26, Y+59	; 0x3b
    c4e4:	af b2       	in	r10, 0x1f	; 31
    c4e6:	b4 b7       	in	r27, 0x34	; 52
    c4e8:	b9 bc       	out	0x29, r11	; 41
    c4ea:	bf c1       	rjmp	.+894    	; 0xc86a <waves+0x46a>
    c4ec:	c4 c7       	rjmp	.+3976   	; 0xd476 <print_time+0xe8>
    c4ee:	ca cd       	rjmp	.-1132   	; 0xc084 <TriggerFx+0x128>
    c4f0:	cf d2       	rcall	.+1438   	; 0xca90 <waves+0x690>
    c4f2:	d5 d8       	rcall	.-3670   	; 0xb69e <EepromReadBlock+0xb8>
    c4f4:	db de       	rcall	.-586    	; 0xc2ac <steptable+0xa4>
    c4f6:	e1 e4       	ldi	r30, 0x41	; 65
    c4f8:	e7 ea       	ldi	r30, 0xA7	; 167
    c4fa:	ed f0       	brhs	.+58     	; 0xc536 <waves+0x136>
    c4fc:	f4 f7       	brge	.-4      	; 0xc4fa <waves+0xfa>
    c4fe:	fa fd       	.word	0xfdfa	; ????
    c500:	80 81       	ld	r24, Z
    c502:	82 83       	std	Z+2, r24	; 0x02
    c504:	84 85       	ldd	r24, Z+12	; 0x0c
    c506:	86 87       	std	Z+14, r24	; 0x0e
    c508:	88 89       	ldd	r24, Y+16	; 0x10
    c50a:	8a 8b       	std	Y+18, r24	; 0x12
    c50c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c50e:	8e 8f       	std	Y+30, r24	; 0x1e
    c510:	90 91 92 93 	lds	r25, 0x9392
    c514:	94 95       	.word	0x9594	; ????
    c516:	96 97       	sbiw	r26, 0x26	; 38
    c518:	98 99       	sbic	0x13, 0	; 19
    c51a:	9a 9b       	sbis	0x13, 2	; 19
    c51c:	9c 9d       	mul	r25, r12
    c51e:	9e 9f       	mul	r25, r30
    c520:	a0 a1       	ldd	r26, Z+32	; 0x20
    c522:	a2 a3       	std	Z+34, r26	; 0x22
    c524:	a4 a5       	ldd	r26, Z+44	; 0x2c
    c526:	a6 a7       	std	Z+46, r26	; 0x2e
    c528:	a8 a9       	ldd	r26, Y+48	; 0x30
    c52a:	aa ab       	std	Y+50, r26	; 0x32
    c52c:	ac ad       	ldd	r26, Y+60	; 0x3c
    c52e:	ae af       	std	Y+62, r26	; 0x3e
    c530:	b0 b1       	in	r27, 0x00	; 0
    c532:	b2 b3       	in	r27, 0x12	; 18
    c534:	b4 b5       	in	r27, 0x24	; 36
    c536:	b6 b7       	in	r27, 0x36	; 54
    c538:	b8 b9       	out	0x08, r27	; 8
    c53a:	ba bb       	out	0x1a, r27	; 26
    c53c:	bc bd       	out	0x2c, r27	; 44
    c53e:	be bf       	out	0x3e, r27	; 62
    c540:	c0 c1       	rjmp	.+896    	; 0xc8c2 <waves+0x4c2>
    c542:	c2 c3       	rjmp	.+1924   	; 0xccc8 <waves+0x8c8>
    c544:	c4 c5       	rjmp	.+2952   	; 0xd0ce <ProcessSprites+0x96>
    c546:	c6 c7       	rjmp	.+3980   	; 0xd4d4 <print_time+0x146>
    c548:	c8 c9       	rjmp	.-3184   	; 0xb8da <ReadVarLen+0x32>
    c54a:	ca cb       	rjmp	.-2156   	; 0xbce0 <ProcessMusic+0x236>
    c54c:	cc cd       	rjmp	.-1128   	; 0xc0e6 <PatchCommand04+0x1a>
    c54e:	ce cf       	rjmp	.-100    	; 0xc4ec <waves+0xec>
    c550:	d0 d1       	rcall	.+928    	; 0xc8f2 <waves+0x4f2>
    c552:	d2 d3       	rcall	.+1956   	; 0xccf8 <waves+0x8f8>
    c554:	d4 d5       	rcall	.+2984   	; 0xd0fe <ProcessSprites+0xc6>
    c556:	d6 d7       	rcall	.+4012   	; 0xd504 <print_time+0x176>
    c558:	d8 d9       	rcall	.-3152   	; 0xb90a <SetTriggerCommonValues+0x1a>
    c55a:	da db       	rcall	.-2124   	; 0xbd10 <ProcessMusic+0x266>
    c55c:	dc dd       	rcall	.-1096   	; 0xc116 <PatchCommand03+0x1e>
    c55e:	de df       	rcall	.-68     	; 0xc51c <waves+0x11c>
    c560:	e0 e1       	ldi	r30, 0x10	; 16
    c562:	e2 e3       	ldi	r30, 0x32	; 50
    c564:	e4 e5       	ldi	r30, 0x54	; 84
    c566:	e6 e7       	ldi	r30, 0x76	; 118
    c568:	e8 e9       	ldi	r30, 0x98	; 152
    c56a:	ea eb       	ldi	r30, 0xBA	; 186
    c56c:	ec ed       	ldi	r30, 0xDC	; 220
    c56e:	ee ef       	ldi	r30, 0xFE	; 254
    c570:	f0 f1       	brcs	.+124    	; 0xc5ee <waves+0x1ee>
    c572:	f2 f3       	brmi	.-4      	; 0xc570 <waves+0x170>
    c574:	f4 f5       	brge	.+124    	; 0xc5f2 <waves+0x1f2>
    c576:	f6 f7       	brtc	.-4      	; 0xc574 <waves+0x174>
    c578:	f8 f9       	.word	0xf9f8	; ????
    c57a:	fa fb       	.word	0xfbfa	; ????
    c57c:	fc fd       	.word	0xfdfc	; ????
    c57e:	fe ff       	.word	0xfffe	; ????
    c580:	00 01       	movw	r0, r0
    c582:	02 03       	mulsu	r16, r18
    c584:	04 05       	cpc	r16, r4
    c586:	06 07       	cpc	r16, r22
    c588:	08 09       	sbc	r16, r8
    c58a:	0a 0b       	sbc	r16, r26
    c58c:	0c 0d       	add	r16, r12
    c58e:	0e 0f       	add	r16, r30
    c590:	10 11       	cpse	r17, r0
    c592:	12 13       	cpse	r17, r18
    c594:	14 15       	cp	r17, r4
    c596:	16 17       	cp	r17, r22
    c598:	18 19       	sub	r17, r8
    c59a:	1a 1b       	sub	r17, r26
    c59c:	1c 1d       	adc	r17, r12
    c59e:	1e 1f       	adc	r17, r30
    c5a0:	20 21       	and	r18, r0
    c5a2:	22 23       	and	r18, r18
    c5a4:	24 25       	eor	r18, r4
    c5a6:	26 27       	eor	r18, r22
    c5a8:	28 29       	or	r18, r8
    c5aa:	2a 2b       	or	r18, r26
    c5ac:	2c 2d       	mov	r18, r12
    c5ae:	2e 2f       	mov	r18, r30
    c5b0:	30 31       	cpi	r19, 0x10	; 16
    c5b2:	32 33       	cpi	r19, 0x32	; 50
    c5b4:	34 35       	cpi	r19, 0x54	; 84
    c5b6:	36 37       	cpi	r19, 0x76	; 118
    c5b8:	38 39       	cpi	r19, 0x98	; 152
    c5ba:	3a 3b       	cpi	r19, 0xBA	; 186
    c5bc:	3c 3d       	cpi	r19, 0xDC	; 220
    c5be:	3e 3f       	cpi	r19, 0xFE	; 254
    c5c0:	40 41       	sbci	r20, 0x10	; 16
    c5c2:	42 43       	sbci	r20, 0x32	; 50
    c5c4:	44 45       	sbci	r20, 0x54	; 84
    c5c6:	46 47       	sbci	r20, 0x76	; 118
    c5c8:	48 49       	sbci	r20, 0x98	; 152
    c5ca:	4a 4b       	sbci	r20, 0xBA	; 186
    c5cc:	4c 4d       	sbci	r20, 0xDC	; 220
    c5ce:	4e 4f       	sbci	r20, 0xFE	; 254
    c5d0:	50 51       	subi	r21, 0x10	; 16
    c5d2:	52 53       	subi	r21, 0x32	; 50
    c5d4:	54 55       	subi	r21, 0x54	; 84
    c5d6:	56 57       	subi	r21, 0x76	; 118
    c5d8:	58 59       	subi	r21, 0x98	; 152
    c5da:	5a 5b       	subi	r21, 0xBA	; 186
    c5dc:	5c 5d       	subi	r21, 0xDC	; 220
    c5de:	5e 5f       	subi	r21, 0xFE	; 254
    c5e0:	60 61       	ori	r22, 0x10	; 16
    c5e2:	62 63       	ori	r22, 0x32	; 50
    c5e4:	64 65       	ori	r22, 0x54	; 84
    c5e6:	66 67       	ori	r22, 0x76	; 118
    c5e8:	68 69       	ori	r22, 0x98	; 152
    c5ea:	6a 6b       	ori	r22, 0xBA	; 186
    c5ec:	6c 6d       	ori	r22, 0xDC	; 220
    c5ee:	6e 6f       	ori	r22, 0xFE	; 254
    c5f0:	70 71       	andi	r23, 0x10	; 16
    c5f2:	72 73       	andi	r23, 0x32	; 50
    c5f4:	74 75       	andi	r23, 0x54	; 84
    c5f6:	76 77       	andi	r23, 0x76	; 118
    c5f8:	78 79       	andi	r23, 0x98	; 152
    c5fa:	7a 7b       	andi	r23, 0xBA	; 186
    c5fc:	7c 7d       	andi	r23, 0xDC	; 220
    c5fe:	7e 7f       	andi	r23, 0xFE	; 254
    c600:	00 02       	muls	r16, r16
    c602:	04 06       	cpc	r0, r20
    c604:	08 0a       	sbc	r0, r24
    c606:	0c 0e       	add	r0, r28
    c608:	10 12       	cpse	r1, r16
    c60a:	14 16       	cp	r1, r20
    c60c:	18 1a       	sub	r1, r24
    c60e:	1c 1e       	adc	r1, r28
    c610:	20 22       	and	r2, r16
    c612:	24 26       	eor	r2, r20
    c614:	28 2a       	or	r2, r24
    c616:	2c 2e       	mov	r2, r28
    c618:	30 32       	cpi	r19, 0x20	; 32
    c61a:	34 36       	cpi	r19, 0x64	; 100
    c61c:	38 3a       	cpi	r19, 0xA8	; 168
    c61e:	3c 3e       	cpi	r19, 0xEC	; 236
    c620:	40 42       	sbci	r20, 0x20	; 32
    c622:	44 46       	sbci	r20, 0x64	; 100
    c624:	48 4a       	sbci	r20, 0xA8	; 168
    c626:	4c 4e       	sbci	r20, 0xEC	; 236
    c628:	50 52       	subi	r21, 0x20	; 32
    c62a:	54 56       	subi	r21, 0x64	; 100
    c62c:	58 5a       	subi	r21, 0xA8	; 168
    c62e:	5c 5e       	subi	r21, 0xEC	; 236
    c630:	60 62       	ori	r22, 0x20	; 32
    c632:	64 66       	ori	r22, 0x64	; 100
    c634:	68 6a       	ori	r22, 0xA8	; 168
    c636:	6c 6e       	ori	r22, 0xEC	; 236
    c638:	70 72       	andi	r23, 0x20	; 32
    c63a:	74 76       	andi	r23, 0x64	; 100
    c63c:	78 7a       	andi	r23, 0xA8	; 168
    c63e:	7c 7e       	andi	r23, 0xEC	; 236
    c640:	7f 7d       	andi	r23, 0xDF	; 223
    c642:	7b 79       	andi	r23, 0x9B	; 155
    c644:	77 75       	andi	r23, 0x57	; 87
    c646:	73 71       	andi	r23, 0x13	; 19
    c648:	6f 6d       	ori	r22, 0xDF	; 223
    c64a:	6b 69       	ori	r22, 0x9B	; 155
    c64c:	67 65       	ori	r22, 0x57	; 87
    c64e:	63 61       	ori	r22, 0x13	; 19
    c650:	5f 5d       	subi	r21, 0xDF	; 223
    c652:	5b 59       	subi	r21, 0x9B	; 155
    c654:	57 55       	subi	r21, 0x57	; 87
    c656:	53 51       	subi	r21, 0x13	; 19
    c658:	4f 4d       	sbci	r20, 0xDF	; 223
    c65a:	4b 49       	sbci	r20, 0x9B	; 155
    c65c:	47 45       	sbci	r20, 0x57	; 87
    c65e:	43 41       	sbci	r20, 0x13	; 19
    c660:	3f 3d       	cpi	r19, 0xDF	; 223
    c662:	3b 39       	cpi	r19, 0x9B	; 155
    c664:	37 35       	cpi	r19, 0x57	; 87
    c666:	33 31       	cpi	r19, 0x13	; 19
    c668:	2f 2d       	mov	r18, r15
    c66a:	2b 29       	or	r18, r11
    c66c:	27 25       	eor	r18, r7
    c66e:	23 21       	and	r18, r3
    c670:	1f 1d       	adc	r17, r15
    c672:	1b 19       	sub	r17, r11
    c674:	17 15       	cp	r17, r7
    c676:	13 11       	cpse	r17, r3
    c678:	0f 0d       	add	r16, r15
    c67a:	0b 09       	sbc	r16, r11
    c67c:	07 05       	cpc	r16, r7
    c67e:	03 01       	movw	r0, r6
    c680:	ff fd       	.word	0xfdff	; ????
    c682:	fb f9       	.word	0xf9fb	; ????
    c684:	f7 f5       	brid	.+124    	; 0xc702 <waves+0x302>
    c686:	f3 f1       	brvs	.+124    	; 0xc704 <waves+0x304>
    c688:	ef ed       	ldi	r30, 0xDF	; 223
    c68a:	eb e9       	ldi	r30, 0x9B	; 155
    c68c:	e7 e5       	ldi	r30, 0x57	; 87
    c68e:	e3 e1       	ldi	r30, 0x13	; 19
    c690:	df dd       	rcall	.-1090   	; 0xc250 <steptable+0x48>
    c692:	db d9       	rcall	.-3146   	; 0xba4a <TriggerNote+0x130>
    c694:	d7 d5       	rcall	.+2990   	; 0xd244 <is_level_done+0x56>
    c696:	d3 d1       	rcall	.+934    	; 0xca3e <waves+0x63e>
    c698:	cf cd       	rjmp	.-1122   	; 0xc238 <steptable+0x30>
    c69a:	cb c9       	rjmp	.-3178   	; 0xba32 <TriggerNote+0x118>
    c69c:	c7 c5       	rjmp	.+2958   	; 0xd22c <is_level_done+0x3e>
    c69e:	c3 c1       	rjmp	.+902    	; 0xca26 <waves+0x626>
    c6a0:	bf bd       	out	0x2f, r27	; 47
    c6a2:	bb b9       	out	0x0b, r27	; 11
    c6a4:	b7 b5       	in	r27, 0x27	; 39
    c6a6:	b3 b1       	in	r27, 0x03	; 3
    c6a8:	af ad       	ldd	r26, Y+63	; 0x3f
    c6aa:	ab a9       	ldd	r26, Y+51	; 0x33
    c6ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    c6ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    c6b0:	9f 9d       	mul	r25, r15
    c6b2:	9b 99       	sbic	0x13, 3	; 19
    c6b4:	97 95       	ror	r25
    c6b6:	93 91       	.word	0x9193	; ????
    c6b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    c6ba:	8b 89       	ldd	r24, Y+19	; 0x13
    c6bc:	87 85       	ldd	r24, Z+15	; 0x0f
    c6be:	83 81       	ldd	r24, Z+3	; 0x03
    c6c0:	80 82       	st	Z, r8
    c6c2:	84 86       	std	Z+12, r8	; 0x0c
    c6c4:	88 8a       	std	Y+16, r8	; 0x10
    c6c6:	8c 8e       	std	Y+28, r8	; 0x1c
    c6c8:	90 92 94 96 	sts	0x9694, r9
    c6cc:	98 9a       	sbi	0x13, 0	; 19
    c6ce:	9c 9e       	mul	r9, r28
    c6d0:	a0 a2       	std	Z+32, r10	; 0x20
    c6d2:	a4 a6       	std	Z+44, r10	; 0x2c
    c6d4:	a8 aa       	std	Y+48, r10	; 0x30
    c6d6:	ac ae       	std	Y+60, r10	; 0x3c
    c6d8:	b0 b2       	in	r11, 0x10	; 16
    c6da:	b4 b6       	in	r11, 0x34	; 52
    c6dc:	b8 ba       	out	0x18, r11	; 24
    c6de:	bc be       	out	0x3c, r11	; 60
    c6e0:	c0 c2       	rjmp	.+1408   	; 0xcc62 <waves+0x862>
    c6e2:	c4 c6       	rjmp	.+3464   	; 0xd46c <print_time+0xde>
    c6e4:	c8 ca       	rjmp	.-2672   	; 0xbc76 <ProcessMusic+0x1cc>
    c6e6:	cc ce       	rjmp	.-616    	; 0xc480 <waves+0x80>
    c6e8:	d0 d2       	rcall	.+1440   	; 0xcc8a <waves+0x88a>
    c6ea:	d4 d6       	rcall	.+3496   	; 0xd494 <print_time+0x106>
    c6ec:	d8 da       	rcall	.-2640   	; 0xbc9e <ProcessMusic+0x1f4>
    c6ee:	dc de       	rcall	.-584    	; 0xc4a8 <waves+0xa8>
    c6f0:	e0 e2       	ldi	r30, 0x20	; 32
    c6f2:	e4 e6       	ldi	r30, 0x64	; 100
    c6f4:	e8 ea       	ldi	r30, 0xA8	; 168
    c6f6:	ec ee       	ldi	r30, 0xEC	; 236
    c6f8:	f0 f2       	brcs	.-68     	; 0xc6b6 <waves+0x2b6>
    c6fa:	f4 f6       	brge	.-68     	; 0xc6b8 <waves+0x2b8>
    c6fc:	f8 fa       	.word	0xfaf8	; ????
    c6fe:	fc fe       	.word	0xfefc	; ????
    c700:	7f 7f       	andi	r23, 0xFF	; 255
    c702:	7f 7f       	andi	r23, 0xFF	; 255
    c704:	7f 7f       	andi	r23, 0xFF	; 255
    c706:	7f 7f       	andi	r23, 0xFF	; 255
    c708:	7f 7f       	andi	r23, 0xFF	; 255
    c70a:	7f 7f       	andi	r23, 0xFF	; 255
    c70c:	7f 7f       	andi	r23, 0xFF	; 255
    c70e:	7f 7f       	andi	r23, 0xFF	; 255
    c710:	7f 7f       	andi	r23, 0xFF	; 255
    c712:	7f 7f       	andi	r23, 0xFF	; 255
    c714:	7f 7f       	andi	r23, 0xFF	; 255
    c716:	7f 7f       	andi	r23, 0xFF	; 255
    c718:	7f 7f       	andi	r23, 0xFF	; 255
    c71a:	7f 7f       	andi	r23, 0xFF	; 255
    c71c:	7f 7f       	andi	r23, 0xFF	; 255
    c71e:	7f 7f       	andi	r23, 0xFF	; 255
    c720:	7f 7f       	andi	r23, 0xFF	; 255
    c722:	7f 7f       	andi	r23, 0xFF	; 255
    c724:	7f 7f       	andi	r23, 0xFF	; 255
    c726:	7f 7f       	andi	r23, 0xFF	; 255
    c728:	7f 7f       	andi	r23, 0xFF	; 255
    c72a:	7f 7f       	andi	r23, 0xFF	; 255
    c72c:	7f 7f       	andi	r23, 0xFF	; 255
    c72e:	7f 7f       	andi	r23, 0xFF	; 255
    c730:	7f 7f       	andi	r23, 0xFF	; 255
    c732:	7f 7f       	andi	r23, 0xFF	; 255
    c734:	7f 7f       	andi	r23, 0xFF	; 255
    c736:	7f 7f       	andi	r23, 0xFF	; 255
    c738:	7f 7f       	andi	r23, 0xFF	; 255
    c73a:	7f 7f       	andi	r23, 0xFF	; 255
    c73c:	7f 7f       	andi	r23, 0xFF	; 255
    c73e:	7f 7f       	andi	r23, 0xFF	; 255
    c740:	80 80       	ld	r8, Z
    c742:	80 80       	ld	r8, Z
    c744:	80 80       	ld	r8, Z
    c746:	80 80       	ld	r8, Z
    c748:	80 80       	ld	r8, Z
    c74a:	80 80       	ld	r8, Z
    c74c:	80 80       	ld	r8, Z
    c74e:	80 80       	ld	r8, Z
    c750:	80 80       	ld	r8, Z
    c752:	80 80       	ld	r8, Z
    c754:	80 80       	ld	r8, Z
    c756:	80 80       	ld	r8, Z
    c758:	80 80       	ld	r8, Z
    c75a:	80 80       	ld	r8, Z
    c75c:	80 80       	ld	r8, Z
    c75e:	80 80       	ld	r8, Z
    c760:	80 80       	ld	r8, Z
    c762:	80 80       	ld	r8, Z
    c764:	80 80       	ld	r8, Z
    c766:	80 80       	ld	r8, Z
    c768:	80 80       	ld	r8, Z
    c76a:	80 80       	ld	r8, Z
    c76c:	80 80       	ld	r8, Z
    c76e:	80 80       	ld	r8, Z
    c770:	80 80       	ld	r8, Z
    c772:	80 80       	ld	r8, Z
    c774:	80 80       	ld	r8, Z
    c776:	80 80       	ld	r8, Z
    c778:	80 80       	ld	r8, Z
    c77a:	80 80       	ld	r8, Z
    c77c:	80 80       	ld	r8, Z
    c77e:	80 80       	ld	r8, Z
    c780:	80 80       	ld	r8, Z
    c782:	80 80       	ld	r8, Z
    c784:	80 80       	ld	r8, Z
    c786:	80 80       	ld	r8, Z
    c788:	80 80       	ld	r8, Z
    c78a:	80 80       	ld	r8, Z
    c78c:	80 80       	ld	r8, Z
    c78e:	80 80       	ld	r8, Z
    c790:	80 80       	ld	r8, Z
    c792:	80 80       	ld	r8, Z
    c794:	80 80       	ld	r8, Z
    c796:	80 80       	ld	r8, Z
    c798:	80 80       	ld	r8, Z
    c79a:	80 80       	ld	r8, Z
    c79c:	80 80       	ld	r8, Z
    c79e:	80 80       	ld	r8, Z
    c7a0:	80 80       	ld	r8, Z
    c7a2:	80 80       	ld	r8, Z
    c7a4:	80 80       	ld	r8, Z
    c7a6:	80 80       	ld	r8, Z
    c7a8:	80 80       	ld	r8, Z
    c7aa:	80 80       	ld	r8, Z
    c7ac:	80 80       	ld	r8, Z
    c7ae:	80 80       	ld	r8, Z
    c7b0:	80 80       	ld	r8, Z
    c7b2:	80 80       	ld	r8, Z
    c7b4:	80 80       	ld	r8, Z
    c7b6:	80 80       	ld	r8, Z
    c7b8:	80 80       	ld	r8, Z
    c7ba:	80 80       	ld	r8, Z
    c7bc:	80 80       	ld	r8, Z
    c7be:	80 80       	ld	r8, Z
    c7c0:	80 80       	ld	r8, Z
    c7c2:	80 80       	ld	r8, Z
    c7c4:	80 80       	ld	r8, Z
    c7c6:	80 80       	ld	r8, Z
    c7c8:	80 80       	ld	r8, Z
    c7ca:	80 80       	ld	r8, Z
    c7cc:	80 80       	ld	r8, Z
    c7ce:	80 80       	ld	r8, Z
    c7d0:	80 80       	ld	r8, Z
    c7d2:	80 80       	ld	r8, Z
    c7d4:	80 80       	ld	r8, Z
    c7d6:	80 80       	ld	r8, Z
    c7d8:	80 80       	ld	r8, Z
    c7da:	80 80       	ld	r8, Z
    c7dc:	80 80       	ld	r8, Z
    c7de:	80 80       	ld	r8, Z
    c7e0:	80 80       	ld	r8, Z
    c7e2:	80 80       	ld	r8, Z
    c7e4:	80 80       	ld	r8, Z
    c7e6:	80 80       	ld	r8, Z
    c7e8:	80 80       	ld	r8, Z
    c7ea:	80 80       	ld	r8, Z
    c7ec:	80 80       	ld	r8, Z
    c7ee:	80 80       	ld	r8, Z
    c7f0:	80 80       	ld	r8, Z
    c7f2:	80 80       	ld	r8, Z
    c7f4:	80 80       	ld	r8, Z
    c7f6:	80 80       	ld	r8, Z
    c7f8:	80 80       	ld	r8, Z
    c7fa:	80 80       	ld	r8, Z
    c7fc:	80 80       	ld	r8, Z
    c7fe:	80 80       	ld	r8, Z
    c800:	7f 7f       	andi	r23, 0xFF	; 255
    c802:	7f 7f       	andi	r23, 0xFF	; 255
    c804:	7f 7f       	andi	r23, 0xFF	; 255
    c806:	7f 7f       	andi	r23, 0xFF	; 255
    c808:	7f 7f       	andi	r23, 0xFF	; 255
    c80a:	7f 7f       	andi	r23, 0xFF	; 255
    c80c:	7f 7f       	andi	r23, 0xFF	; 255
    c80e:	7f 7f       	andi	r23, 0xFF	; 255
    c810:	7f 7f       	andi	r23, 0xFF	; 255
    c812:	7f 7f       	andi	r23, 0xFF	; 255
    c814:	7f 7f       	andi	r23, 0xFF	; 255
    c816:	7f 7f       	andi	r23, 0xFF	; 255
    c818:	7f 7f       	andi	r23, 0xFF	; 255
    c81a:	7f 7f       	andi	r23, 0xFF	; 255
    c81c:	7f 7f       	andi	r23, 0xFF	; 255
    c81e:	7f 7f       	andi	r23, 0xFF	; 255
    c820:	7f 7f       	andi	r23, 0xFF	; 255
    c822:	7f 7f       	andi	r23, 0xFF	; 255
    c824:	7f 7f       	andi	r23, 0xFF	; 255
    c826:	7f 7f       	andi	r23, 0xFF	; 255
    c828:	7f 7f       	andi	r23, 0xFF	; 255
    c82a:	7f 7f       	andi	r23, 0xFF	; 255
    c82c:	7f 7f       	andi	r23, 0xFF	; 255
    c82e:	7f 7f       	andi	r23, 0xFF	; 255
    c830:	7f 7f       	andi	r23, 0xFF	; 255
    c832:	7f 7f       	andi	r23, 0xFF	; 255
    c834:	7f 7f       	andi	r23, 0xFF	; 255
    c836:	7f 7f       	andi	r23, 0xFF	; 255
    c838:	7f 7f       	andi	r23, 0xFF	; 255
    c83a:	7f 7f       	andi	r23, 0xFF	; 255
    c83c:	7f 7f       	andi	r23, 0xFF	; 255
    c83e:	7f 7f       	andi	r23, 0xFF	; 255
    c840:	7f 7f       	andi	r23, 0xFF	; 255
    c842:	7f 7f       	andi	r23, 0xFF	; 255
    c844:	7f 7f       	andi	r23, 0xFF	; 255
    c846:	7f 7f       	andi	r23, 0xFF	; 255
    c848:	7f 7f       	andi	r23, 0xFF	; 255
    c84a:	7f 7f       	andi	r23, 0xFF	; 255
    c84c:	7f 7f       	andi	r23, 0xFF	; 255
    c84e:	7f 7f       	andi	r23, 0xFF	; 255
    c850:	7f 7f       	andi	r23, 0xFF	; 255
    c852:	7f 7f       	andi	r23, 0xFF	; 255
    c854:	7f 7f       	andi	r23, 0xFF	; 255
    c856:	7f 7f       	andi	r23, 0xFF	; 255
    c858:	7f 7f       	andi	r23, 0xFF	; 255
    c85a:	7f 7f       	andi	r23, 0xFF	; 255
    c85c:	7f 7f       	andi	r23, 0xFF	; 255
    c85e:	7f 7f       	andi	r23, 0xFF	; 255
    c860:	7f 7f       	andi	r23, 0xFF	; 255
    c862:	7f 7f       	andi	r23, 0xFF	; 255
    c864:	7f 7f       	andi	r23, 0xFF	; 255
    c866:	7f 7f       	andi	r23, 0xFF	; 255
    c868:	7f 7f       	andi	r23, 0xFF	; 255
    c86a:	7f 7f       	andi	r23, 0xFF	; 255
    c86c:	7f 7f       	andi	r23, 0xFF	; 255
    c86e:	7f 7f       	andi	r23, 0xFF	; 255
    c870:	7f 7f       	andi	r23, 0xFF	; 255
    c872:	7f 7f       	andi	r23, 0xFF	; 255
    c874:	7f 7f       	andi	r23, 0xFF	; 255
    c876:	7f 7f       	andi	r23, 0xFF	; 255
    c878:	7f 7f       	andi	r23, 0xFF	; 255
    c87a:	7f 7f       	andi	r23, 0xFF	; 255
    c87c:	7f 7f       	andi	r23, 0xFF	; 255
    c87e:	7f 7f       	andi	r23, 0xFF	; 255
    c880:	80 80       	ld	r8, Z
    c882:	80 80       	ld	r8, Z
    c884:	80 80       	ld	r8, Z
    c886:	80 80       	ld	r8, Z
    c888:	80 80       	ld	r8, Z
    c88a:	80 80       	ld	r8, Z
    c88c:	80 80       	ld	r8, Z
    c88e:	80 80       	ld	r8, Z
    c890:	80 80       	ld	r8, Z
    c892:	80 80       	ld	r8, Z
    c894:	80 80       	ld	r8, Z
    c896:	80 80       	ld	r8, Z
    c898:	80 80       	ld	r8, Z
    c89a:	80 80       	ld	r8, Z
    c89c:	80 80       	ld	r8, Z
    c89e:	80 80       	ld	r8, Z
    c8a0:	80 80       	ld	r8, Z
    c8a2:	80 80       	ld	r8, Z
    c8a4:	80 80       	ld	r8, Z
    c8a6:	80 80       	ld	r8, Z
    c8a8:	80 80       	ld	r8, Z
    c8aa:	80 80       	ld	r8, Z
    c8ac:	80 80       	ld	r8, Z
    c8ae:	80 80       	ld	r8, Z
    c8b0:	80 80       	ld	r8, Z
    c8b2:	80 80       	ld	r8, Z
    c8b4:	80 80       	ld	r8, Z
    c8b6:	80 80       	ld	r8, Z
    c8b8:	80 80       	ld	r8, Z
    c8ba:	80 80       	ld	r8, Z
    c8bc:	80 80       	ld	r8, Z
    c8be:	80 80       	ld	r8, Z
    c8c0:	80 80       	ld	r8, Z
    c8c2:	80 80       	ld	r8, Z
    c8c4:	80 80       	ld	r8, Z
    c8c6:	80 80       	ld	r8, Z
    c8c8:	80 80       	ld	r8, Z
    c8ca:	80 80       	ld	r8, Z
    c8cc:	80 80       	ld	r8, Z
    c8ce:	80 80       	ld	r8, Z
    c8d0:	80 80       	ld	r8, Z
    c8d2:	80 80       	ld	r8, Z
    c8d4:	80 80       	ld	r8, Z
    c8d6:	80 80       	ld	r8, Z
    c8d8:	80 80       	ld	r8, Z
    c8da:	80 80       	ld	r8, Z
    c8dc:	80 80       	ld	r8, Z
    c8de:	80 80       	ld	r8, Z
    c8e0:	80 80       	ld	r8, Z
    c8e2:	80 80       	ld	r8, Z
    c8e4:	80 80       	ld	r8, Z
    c8e6:	80 80       	ld	r8, Z
    c8e8:	80 80       	ld	r8, Z
    c8ea:	80 80       	ld	r8, Z
    c8ec:	80 80       	ld	r8, Z
    c8ee:	80 80       	ld	r8, Z
    c8f0:	80 80       	ld	r8, Z
    c8f2:	80 80       	ld	r8, Z
    c8f4:	80 80       	ld	r8, Z
    c8f6:	80 80       	ld	r8, Z
    c8f8:	80 80       	ld	r8, Z
    c8fa:	80 80       	ld	r8, Z
    c8fc:	80 80       	ld	r8, Z
    c8fe:	80 80       	ld	r8, Z
    c900:	7f 7f       	andi	r23, 0xFF	; 255
    c902:	7f 7f       	andi	r23, 0xFF	; 255
    c904:	7f 7f       	andi	r23, 0xFF	; 255
    c906:	7f 7f       	andi	r23, 0xFF	; 255
    c908:	7f 7f       	andi	r23, 0xFF	; 255
    c90a:	7f 7f       	andi	r23, 0xFF	; 255
    c90c:	7f 7f       	andi	r23, 0xFF	; 255
    c90e:	7f 7f       	andi	r23, 0xFF	; 255
    c910:	7f 7f       	andi	r23, 0xFF	; 255
    c912:	7f 7f       	andi	r23, 0xFF	; 255
    c914:	7f 7f       	andi	r23, 0xFF	; 255
    c916:	7f 7f       	andi	r23, 0xFF	; 255
    c918:	7f 7f       	andi	r23, 0xFF	; 255
    c91a:	7f 7f       	andi	r23, 0xFF	; 255
    c91c:	7f 7f       	andi	r23, 0xFF	; 255
    c91e:	7f 7f       	andi	r23, 0xFF	; 255
    c920:	7f 7f       	andi	r23, 0xFF	; 255
    c922:	7f 7f       	andi	r23, 0xFF	; 255
    c924:	7f 7f       	andi	r23, 0xFF	; 255
    c926:	7f 7f       	andi	r23, 0xFF	; 255
    c928:	7f 7f       	andi	r23, 0xFF	; 255
    c92a:	7f 7f       	andi	r23, 0xFF	; 255
    c92c:	7f 7f       	andi	r23, 0xFF	; 255
    c92e:	7f 7f       	andi	r23, 0xFF	; 255
    c930:	7f 7f       	andi	r23, 0xFF	; 255
    c932:	7f 7f       	andi	r23, 0xFF	; 255
    c934:	7f 7f       	andi	r23, 0xFF	; 255
    c936:	7f 7f       	andi	r23, 0xFF	; 255
    c938:	7f 7f       	andi	r23, 0xFF	; 255
    c93a:	7f 7f       	andi	r23, 0xFF	; 255
    c93c:	7f 7f       	andi	r23, 0xFF	; 255
    c93e:	7f 7f       	andi	r23, 0xFF	; 255
    c940:	7f 7f       	andi	r23, 0xFF	; 255
    c942:	7f 7f       	andi	r23, 0xFF	; 255
    c944:	7f 7f       	andi	r23, 0xFF	; 255
    c946:	7f 7f       	andi	r23, 0xFF	; 255
    c948:	7f 7f       	andi	r23, 0xFF	; 255
    c94a:	7f 7f       	andi	r23, 0xFF	; 255
    c94c:	7f 7f       	andi	r23, 0xFF	; 255
    c94e:	7f 7f       	andi	r23, 0xFF	; 255
    c950:	7f 7f       	andi	r23, 0xFF	; 255
    c952:	7f 7f       	andi	r23, 0xFF	; 255
    c954:	7f 7f       	andi	r23, 0xFF	; 255
    c956:	7f 7f       	andi	r23, 0xFF	; 255
    c958:	7f 7f       	andi	r23, 0xFF	; 255
    c95a:	7f 7f       	andi	r23, 0xFF	; 255
    c95c:	7f 7f       	andi	r23, 0xFF	; 255
    c95e:	7f 7f       	andi	r23, 0xFF	; 255
    c960:	7f 7f       	andi	r23, 0xFF	; 255
    c962:	7f 7f       	andi	r23, 0xFF	; 255
    c964:	7f 7f       	andi	r23, 0xFF	; 255
    c966:	7f 7f       	andi	r23, 0xFF	; 255
    c968:	7f 7f       	andi	r23, 0xFF	; 255
    c96a:	7f 7f       	andi	r23, 0xFF	; 255
    c96c:	7f 7f       	andi	r23, 0xFF	; 255
    c96e:	7f 7f       	andi	r23, 0xFF	; 255
    c970:	7f 7f       	andi	r23, 0xFF	; 255
    c972:	7f 7f       	andi	r23, 0xFF	; 255
    c974:	7f 7f       	andi	r23, 0xFF	; 255
    c976:	7f 7f       	andi	r23, 0xFF	; 255
    c978:	7f 7f       	andi	r23, 0xFF	; 255
    c97a:	7f 7f       	andi	r23, 0xFF	; 255
    c97c:	7f 7f       	andi	r23, 0xFF	; 255
    c97e:	7f 7f       	andi	r23, 0xFF	; 255
    c980:	7f 7f       	andi	r23, 0xFF	; 255
    c982:	7f 7f       	andi	r23, 0xFF	; 255
    c984:	7f 7f       	andi	r23, 0xFF	; 255
    c986:	7f 7f       	andi	r23, 0xFF	; 255
    c988:	7f 7f       	andi	r23, 0xFF	; 255
    c98a:	7f 7f       	andi	r23, 0xFF	; 255
    c98c:	7f 7f       	andi	r23, 0xFF	; 255
    c98e:	7f 7f       	andi	r23, 0xFF	; 255
    c990:	7f 7f       	andi	r23, 0xFF	; 255
    c992:	7f 7f       	andi	r23, 0xFF	; 255
    c994:	7f 7f       	andi	r23, 0xFF	; 255
    c996:	7f 7f       	andi	r23, 0xFF	; 255
    c998:	7f 7f       	andi	r23, 0xFF	; 255
    c99a:	7f 7f       	andi	r23, 0xFF	; 255
    c99c:	7f 7f       	andi	r23, 0xFF	; 255
    c99e:	7f 7f       	andi	r23, 0xFF	; 255
    c9a0:	7f 7f       	andi	r23, 0xFF	; 255
    c9a2:	7f 7f       	andi	r23, 0xFF	; 255
    c9a4:	7f 7f       	andi	r23, 0xFF	; 255
    c9a6:	7f 7f       	andi	r23, 0xFF	; 255
    c9a8:	7f 7f       	andi	r23, 0xFF	; 255
    c9aa:	7f 7f       	andi	r23, 0xFF	; 255
    c9ac:	7f 7f       	andi	r23, 0xFF	; 255
    c9ae:	7f 7f       	andi	r23, 0xFF	; 255
    c9b0:	7f 7f       	andi	r23, 0xFF	; 255
    c9b2:	7f 7f       	andi	r23, 0xFF	; 255
    c9b4:	7f 7f       	andi	r23, 0xFF	; 255
    c9b6:	7f 7f       	andi	r23, 0xFF	; 255
    c9b8:	7f 7f       	andi	r23, 0xFF	; 255
    c9ba:	7f 7f       	andi	r23, 0xFF	; 255
    c9bc:	7f 7f       	andi	r23, 0xFF	; 255
    c9be:	7f 7f       	andi	r23, 0xFF	; 255
    c9c0:	80 80       	ld	r8, Z
    c9c2:	80 80       	ld	r8, Z
    c9c4:	80 80       	ld	r8, Z
    c9c6:	80 80       	ld	r8, Z
    c9c8:	80 80       	ld	r8, Z
    c9ca:	80 80       	ld	r8, Z
    c9cc:	80 80       	ld	r8, Z
    c9ce:	80 80       	ld	r8, Z
    c9d0:	80 80       	ld	r8, Z
    c9d2:	80 80       	ld	r8, Z
    c9d4:	80 80       	ld	r8, Z
    c9d6:	80 80       	ld	r8, Z
    c9d8:	80 80       	ld	r8, Z
    c9da:	80 80       	ld	r8, Z
    c9dc:	80 80       	ld	r8, Z
    c9de:	80 80       	ld	r8, Z
    c9e0:	80 80       	ld	r8, Z
    c9e2:	80 80       	ld	r8, Z
    c9e4:	80 80       	ld	r8, Z
    c9e6:	80 80       	ld	r8, Z
    c9e8:	80 80       	ld	r8, Z
    c9ea:	80 80       	ld	r8, Z
    c9ec:	80 80       	ld	r8, Z
    c9ee:	80 80       	ld	r8, Z
    c9f0:	80 80       	ld	r8, Z
    c9f2:	80 80       	ld	r8, Z
    c9f4:	80 80       	ld	r8, Z
    c9f6:	80 80       	ld	r8, Z
    c9f8:	80 80       	ld	r8, Z
    c9fa:	80 80       	ld	r8, Z
    c9fc:	80 80       	ld	r8, Z
    c9fe:	80 80       	ld	r8, Z
    ca00:	03 09       	sbc	r16, r3
    ca02:	13 1e       	adc	r1, r19
    ca04:	28 31       	cpi	r18, 0x18	; 24
    ca06:	3a 40       	sbci	r19, 0x0A	; 10
    ca08:	46 4c       	sbci	r20, 0xC6	; 198
    ca0a:	50 54       	subi	r21, 0x40	; 64
    ca0c:	58 5b       	subi	r21, 0xB8	; 184
    ca0e:	5e 61       	ori	r21, 0x1E	; 30
    ca10:	63 65       	ori	r22, 0x53	; 83
    ca12:	67 69       	ori	r22, 0x97	; 151
    ca14:	6b 6c       	ori	r22, 0xCB	; 203
    ca16:	6e 6f       	ori	r22, 0xFE	; 254
    ca18:	70 71       	andi	r23, 0x10	; 16
    ca1a:	72 73       	andi	r23, 0x32	; 50
    ca1c:	74 75       	andi	r23, 0x54	; 84
    ca1e:	76 77       	andi	r23, 0x76	; 118
    ca20:	77 78       	andi	r23, 0x87	; 135
    ca22:	79 79       	andi	r23, 0x99	; 153
    ca24:	7a 7a       	andi	r23, 0xAA	; 170
    ca26:	7b 7b       	andi	r23, 0xBB	; 187
    ca28:	7c 7c       	andi	r23, 0xCC	; 204
    ca2a:	7c 7d       	andi	r23, 0xDC	; 220
    ca2c:	7d 7d       	andi	r23, 0xDD	; 221
    ca2e:	7e 7e       	andi	r23, 0xEE	; 238
    ca30:	7e 7e       	andi	r23, 0xEE	; 238
    ca32:	7f 7f       	andi	r23, 0xFF	; 255
    ca34:	7f 7f       	andi	r23, 0xFF	; 255
    ca36:	7f 7f       	andi	r23, 0xFF	; 255
    ca38:	7f 7f       	andi	r23, 0xFF	; 255
    ca3a:	7f 7f       	andi	r23, 0xFF	; 255
    ca3c:	7f 7f       	andi	r23, 0xFF	; 255
    ca3e:	7f 7f       	andi	r23, 0xFF	; 255
    ca40:	7f 7f       	andi	r23, 0xFF	; 255
    ca42:	7f 7f       	andi	r23, 0xFF	; 255
    ca44:	7f 7f       	andi	r23, 0xFF	; 255
    ca46:	7f 7f       	andi	r23, 0xFF	; 255
    ca48:	7f 7f       	andi	r23, 0xFF	; 255
    ca4a:	7f 7f       	andi	r23, 0xFF	; 255
    ca4c:	7f 7e       	andi	r23, 0xEF	; 239
    ca4e:	7e 7e       	andi	r23, 0xEE	; 238
    ca50:	7e 7d       	andi	r23, 0xDE	; 222
    ca52:	7d 7d       	andi	r23, 0xDD	; 221
    ca54:	7c 7c       	andi	r23, 0xCC	; 204
    ca56:	7c 7b       	andi	r23, 0xBC	; 188
    ca58:	7b 7a       	andi	r23, 0xAB	; 171
    ca5a:	7a 79       	andi	r23, 0x9A	; 154
    ca5c:	79 78       	andi	r23, 0x89	; 137
    ca5e:	77 77       	andi	r23, 0x77	; 119
    ca60:	76 75       	andi	r23, 0x56	; 86
    ca62:	74 73       	andi	r23, 0x34	; 52
    ca64:	72 71       	andi	r23, 0x12	; 18
    ca66:	70 6f       	ori	r23, 0xF0	; 240
    ca68:	6e 6c       	ori	r22, 0xCE	; 206
    ca6a:	6b 69       	ori	r22, 0x9B	; 155
    ca6c:	67 65       	ori	r22, 0x57	; 87
    ca6e:	63 61       	ori	r22, 0x13	; 19
    ca70:	5e 5b       	subi	r21, 0xBE	; 190
    ca72:	58 54       	subi	r21, 0x48	; 72
    ca74:	50 4c       	sbci	r21, 0xC0	; 192
    ca76:	46 40       	sbci	r20, 0x06	; 6
    ca78:	3a 31       	cpi	r19, 0x1A	; 26
    ca7a:	28 1e       	adc	r2, r24
    ca7c:	13 09       	sbc	r17, r3
    ca7e:	03 00       	.word	0x0003	; ????
    ca80:	c6 cc       	rjmp	.-1652   	; 0xc40e <waves+0xe>
    ca82:	d5 db       	rcall	.-2134   	; 0xc22e <steptable+0x26>
    ca84:	df e3       	ldi	r29, 0x3F	; 63
    ca86:	e5 e7       	ldi	r30, 0x75	; 117
    ca88:	e9 ea       	ldi	r30, 0xA9	; 169
    ca8a:	eb ec       	ldi	r30, 0xCB	; 203
    ca8c:	ed ee       	ldi	r30, 0xED	; 237
    ca8e:	ef ef       	ldi	r30, 0xFF	; 255
    ca90:	f0 f0       	brcs	.+60     	; 0xcace <waves+0x6ce>
    ca92:	f0 f1       	brcs	.+124    	; 0xcb10 <waves+0x710>
    ca94:	f1 f1       	breq	.+124    	; 0xcb12 <waves+0x712>
    ca96:	f1 f2       	breq	.-68     	; 0xca54 <waves+0x654>
    ca98:	f2 f2       	brmi	.-68     	; 0xca56 <waves+0x656>
    ca9a:	f2 f2       	brmi	.-68     	; 0xca58 <waves+0x658>
    ca9c:	f2 f2       	brmi	.-68     	; 0xca5a <waves+0x65a>
    ca9e:	f2 f3       	brmi	.-4      	; 0xca9c <waves+0x69c>
    caa0:	f3 f3       	brvs	.-4      	; 0xca9e <waves+0x69e>
    caa2:	f3 f3       	brvs	.-4      	; 0xcaa0 <waves+0x6a0>
    caa4:	f3 f3       	brvs	.-4      	; 0xcaa2 <waves+0x6a2>
    caa6:	f3 f3       	brvs	.-4      	; 0xcaa4 <waves+0x6a4>
    caa8:	f3 f3       	brvs	.-4      	; 0xcaa6 <waves+0x6a6>
    caaa:	f3 f3       	brvs	.-4      	; 0xcaa8 <waves+0x6a8>
    caac:	f3 f3       	brvs	.-4      	; 0xcaaa <waves+0x6aa>
    caae:	f3 f3       	brvs	.-4      	; 0xcaac <waves+0x6ac>
    cab0:	f3 f3       	brvs	.-4      	; 0xcaae <waves+0x6ae>
    cab2:	f3 f3       	brvs	.-4      	; 0xcab0 <waves+0x6b0>
    cab4:	f3 f3       	brvs	.-4      	; 0xcab2 <waves+0x6b2>
    cab6:	f3 f3       	brvs	.-4      	; 0xcab4 <waves+0x6b4>
    cab8:	f3 f3       	brvs	.-4      	; 0xcab6 <waves+0x6b6>
    caba:	f3 f3       	brvs	.-4      	; 0xcab8 <waves+0x6b8>
    cabc:	f3 f3       	brvs	.-4      	; 0xcaba <waves+0x6ba>
    cabe:	f3 f3       	brvs	.-4      	; 0xcabc <waves+0x6bc>
    cac0:	f3 f3       	brvs	.-4      	; 0xcabe <waves+0x6be>
    cac2:	f3 f3       	brvs	.-4      	; 0xcac0 <waves+0x6c0>
    cac4:	f3 f3       	brvs	.-4      	; 0xcac2 <waves+0x6c2>
    cac6:	f3 f3       	brvs	.-4      	; 0xcac4 <waves+0x6c4>
    cac8:	f3 f3       	brvs	.-4      	; 0xcac6 <waves+0x6c6>
    caca:	f3 f3       	brvs	.-4      	; 0xcac8 <waves+0x6c8>
    cacc:	f3 f3       	brvs	.-4      	; 0xcaca <waves+0x6ca>
    cace:	f3 f3       	brvs	.-4      	; 0xcacc <waves+0x6cc>
    cad0:	f3 f3       	brvs	.-4      	; 0xcace <waves+0x6ce>
    cad2:	f3 f3       	brvs	.-4      	; 0xcad0 <waves+0x6d0>
    cad4:	f3 f3       	brvs	.-4      	; 0xcad2 <waves+0x6d2>
    cad6:	f3 f3       	brvs	.-4      	; 0xcad4 <waves+0x6d4>
    cad8:	f3 f3       	brvs	.-4      	; 0xcad6 <waves+0x6d6>
    cada:	f3 f3       	brvs	.-4      	; 0xcad8 <waves+0x6d8>
    cadc:	f3 f3       	brvs	.-4      	; 0xcada <waves+0x6da>
    cade:	f3 f3       	brvs	.-4      	; 0xcadc <waves+0x6dc>
    cae0:	f2 f2       	brmi	.-68     	; 0xca9e <waves+0x69e>
    cae2:	f2 f2       	brmi	.-68     	; 0xcaa0 <waves+0x6a0>
    cae4:	f2 f2       	brmi	.-68     	; 0xcaa2 <waves+0x6a2>
    cae6:	f2 f2       	brmi	.-68     	; 0xcaa4 <waves+0x6a4>
    cae8:	f1 f1       	breq	.+124    	; 0xcb66 <waves+0x766>
    caea:	f1 f1       	breq	.+124    	; 0xcb68 <waves+0x768>
    caec:	f0 f0       	brcs	.+60     	; 0xcb2a <waves+0x72a>
    caee:	f0 ef       	ldi	r31, 0xF0	; 240
    caf0:	ef ee       	ldi	r30, 0xEF	; 239
    caf2:	ed ec       	ldi	r30, 0xCD	; 205
    caf4:	eb ea       	ldi	r30, 0xAB	; 171
    caf6:	e9 e7       	ldi	r30, 0x79	; 121
    caf8:	e5 e3       	ldi	r30, 0x35	; 53
    cafa:	df db       	rcall	.-2114   	; 0xc2ba <steptable+0xb2>
    cafc:	d5 cc       	rjmp	.-1622   	; 0xc4a8 <waves+0xa8>
    cafe:	c6 00       	.word	0x00c6	; ????
    cb00:	00 28       	or	r0, r0
    cb02:	3d 42       	sbci	r19, 0x2D	; 45
    cb04:	30 2d       	mov	r19, r0
    cb06:	2c 2b       	or	r18, r28
    cb08:	2c 2d       	mov	r18, r12
    cb0a:	2e 2f       	mov	r18, r30
    cb0c:	30 32       	cpi	r19, 0x20	; 32
    cb0e:	33 35       	cpi	r19, 0x53	; 83
    cb10:	37 39       	cpi	r19, 0x97	; 151
    cb12:	3b 3d       	cpi	r19, 0xDB	; 219
    cb14:	3f 41       	sbci	r19, 0x1F	; 31
    cb16:	43 45       	sbci	r20, 0x53	; 83
    cb18:	48 4a       	sbci	r20, 0xA8	; 168
    cb1a:	4c 4e       	sbci	r20, 0xEC	; 236
    cb1c:	50 53       	subi	r21, 0x30	; 48
    cb1e:	55 57       	subi	r21, 0x75	; 117
    cb20:	59 5b       	subi	r21, 0xB9	; 185
    cb22:	5d 5f       	subi	r21, 0xFD	; 253
    cb24:	61 63       	ori	r22, 0x31	; 49
    cb26:	65 67       	ori	r22, 0x75	; 117
    cb28:	69 6b       	ori	r22, 0xB9	; 185
    cb2a:	6c 6e       	ori	r22, 0xEC	; 236
    cb2c:	70 71       	andi	r23, 0x10	; 16
    cb2e:	73 74       	andi	r23, 0x43	; 67
    cb30:	75 77       	andi	r23, 0x75	; 117
    cb32:	78 79       	andi	r23, 0x98	; 152
    cb34:	7a 7b       	andi	r23, 0xBA	; 186
    cb36:	7c 7d       	andi	r23, 0xDC	; 220
    cb38:	7d 7e       	andi	r23, 0xED	; 237
    cb3a:	7e 7f       	andi	r23, 0xFE	; 254
    cb3c:	7f 7f       	andi	r23, 0xFF	; 255
    cb3e:	7f 7f       	andi	r23, 0xFF	; 255
    cb40:	7f 7f       	andi	r23, 0xFF	; 255
    cb42:	7f 7f       	andi	r23, 0xFF	; 255
    cb44:	7f 7f       	andi	r23, 0xFF	; 255
    cb46:	7e 7e       	andi	r23, 0xEE	; 238
    cb48:	7d 7d       	andi	r23, 0xDD	; 221
    cb4a:	7c 7b       	andi	r23, 0xBC	; 188
    cb4c:	7a 79       	andi	r23, 0x9A	; 154
    cb4e:	78 77       	andi	r23, 0x78	; 120
    cb50:	75 74       	andi	r23, 0x45	; 69
    cb52:	73 71       	andi	r23, 0x13	; 19
    cb54:	70 6e       	ori	r23, 0xE0	; 224
    cb56:	6c 6b       	ori	r22, 0xBC	; 188
    cb58:	69 67       	ori	r22, 0x79	; 121
    cb5a:	65 63       	ori	r22, 0x35	; 53
    cb5c:	61 5f       	subi	r22, 0xF1	; 241
    cb5e:	5d 5b       	subi	r21, 0xBD	; 189
    cb60:	59 57       	subi	r21, 0x79	; 121
    cb62:	55 53       	subi	r21, 0x35	; 53
    cb64:	50 4e       	sbci	r21, 0xE0	; 224
    cb66:	4c 4a       	sbci	r20, 0xAC	; 172
    cb68:	48 45       	sbci	r20, 0x58	; 88
    cb6a:	43 41       	sbci	r20, 0x13	; 19
    cb6c:	3f 3d       	cpi	r19, 0xDF	; 223
    cb6e:	3b 39       	cpi	r19, 0x9B	; 155
    cb70:	37 35       	cpi	r19, 0x57	; 87
    cb72:	33 32       	cpi	r19, 0x23	; 35
    cb74:	30 2f       	mov	r19, r16
    cb76:	2e 2d       	mov	r18, r14
    cb78:	2c 2b       	or	r18, r28
    cb7a:	2c 2d       	mov	r18, r12
    cb7c:	30 42       	sbci	r19, 0x20	; 32
    cb7e:	3d 28       	or	r3, r13
    cb80:	00 e9       	ldi	r16, 0x90	; 144
    cb82:	e5 fe       	sbrs	r14, 5
    cb84:	d4 d7       	rcall	.+4008   	; 0xdb2e <menu+0x2ae>
    cb86:	d7 d7       	rcall	.+4014   	; 0xdb36 <menu+0x2b6>
    cb88:	d6 d4       	rcall	.+2476   	; 0xd536 <print_long_8+0x14>
    cb8a:	d2 d0       	rcall	.+420    	; 0xcd30 <waves+0x930>
    cb8c:	ce cc       	rjmp	.-1636   	; 0xc52a <waves+0x12a>
    cb8e:	ca c8       	rjmp	.-3692   	; 0xbd24 <ProcessMusic+0x27a>
    cb90:	c6 c3       	rjmp	.+1932   	; 0xd31e <draw_name+0x28>
    cb92:	c1 bf       	out	0x31, r28	; 49
    cb94:	bd ba       	out	0x1d, r11	; 29
    cb96:	b8 b6       	in	r11, 0x38	; 56
    cb98:	b4 b1       	in	r27, 0x04	; 4
    cb9a:	af ad       	ldd	r26, Y+63	; 0x3f
    cb9c:	ab a9       	ldd	r26, Y+51	; 0x33
    cb9e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    cba0:	a3 a1       	ldd	r26, Z+35	; 0x23
    cba2:	9f 9e       	mul	r9, r31
    cba4:	9c 9a       	sbi	0x13, 4	; 19
    cba6:	99 97       	sbiw	r26, 0x29	; 41
    cba8:	95 94       	asr	r9
    cbaa:	93 91       	.word	0x9193	; ????
    cbac:	90 8f       	std	Z+24, r25	; 0x18
    cbae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    cbb0:	8b 8a       	std	Y+19, r8	; 0x13
    cbb2:	89 88       	ldd	r8, Y+17	; 0x11
    cbb4:	88 87       	std	Y+8, r24	; 0x08
    cbb6:	86 85       	ldd	r24, Z+14	; 0x0e
    cbb8:	85 84       	ldd	r8, Z+13	; 0x0d
    cbba:	84 84       	ldd	r8, Z+12	; 0x0c
    cbbc:	83 83       	std	Z+3, r24	; 0x03
    cbbe:	83 83       	std	Z+3, r24	; 0x03
    cbc0:	83 83       	std	Z+3, r24	; 0x03
    cbc2:	83 83       	std	Z+3, r24	; 0x03
    cbc4:	83 84       	ldd	r8, Z+11	; 0x0b
    cbc6:	84 84       	ldd	r8, Z+12	; 0x0c
    cbc8:	85 85       	ldd	r24, Z+13	; 0x0d
    cbca:	86 87       	std	Z+14, r24	; 0x0e
    cbcc:	88 88       	ldd	r8, Y+16	; 0x10
    cbce:	89 8a       	std	Y+17, r8	; 0x11
    cbd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    cbd2:	8d 8f       	std	Y+29, r24	; 0x1d
    cbd4:	90 91 93 94 	lds	r25, 0x9493
    cbd8:	95 97       	sbiw	r26, 0x25	; 37
    cbda:	99 9a       	sbi	0x13, 1	; 19
    cbdc:	9c 9e       	mul	r9, r28
    cbde:	9f a1       	ldd	r25, Y+39	; 0x27
    cbe0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    cbe2:	a7 a9       	ldd	r26, Z+55	; 0x37
    cbe4:	ab ad       	ldd	r26, Y+59	; 0x3b
    cbe6:	af b1       	in	r26, 0x0f	; 15
    cbe8:	b4 b6       	in	r11, 0x34	; 52
    cbea:	b8 ba       	out	0x18, r11	; 24
    cbec:	bd bf       	out	0x3d, r27	; 61
    cbee:	c1 c3       	rjmp	.+1922   	; 0xd372 <draw_name+0x7c>
    cbf0:	c6 c8       	rjmp	.-3700   	; 0xbd7e <ProcessMusic+0x2d4>
    cbf2:	ca cc       	rjmp	.-1644   	; 0xc588 <waves+0x188>
    cbf4:	ce d0       	rcall	.+412    	; 0xcd92 <waves+0x992>
    cbf6:	d2 d4       	rcall	.+2468   	; 0xd59c <print_long_8+0x7a>
    cbf8:	d6 d7       	rcall	.+4012   	; 0xdba6 <menu+0x326>
    cbfa:	d7 d7       	rcall	.+4014   	; 0xdbaa <menu+0x32a>
    cbfc:	d4 fe       	sbrs	r13, 4
    cbfe:	e5 e9       	ldi	r30, 0x95	; 149
    cc00:	f9 f8       	.word	0xf8f9	; ????
    cc02:	f9 f5       	brne	.+126    	; 0xcc82 <waves+0x882>
    cc04:	eb e1       	ldi	r30, 0x1B	; 27
    cc06:	dd de       	rcall	.-582    	; 0xc9c2 <waves+0x5c2>
    cc08:	e0 e2       	ldi	r30, 0x20	; 32
    cc0a:	e4 e5       	ldi	r30, 0x54	; 84
    cc0c:	e6 e5       	ldi	r30, 0x56	; 86
    cc0e:	e4 e2       	ldi	r30, 0x24	; 36
    cc10:	de d9       	rcall	.-3140   	; 0xbfce <TriggerFx+0x72>
    cc12:	d2 ca       	rjmp	.-2652   	; 0xc1b8 <PatchCommand03+0xc0>
    cc14:	c1 b7       	in	r28, 0x31	; 49
    cc16:	ac a2       	std	Y+36, r10	; 0x24
    cc18:	99 91       	ld	r25, Y+
    cc1a:	8a 86       	std	Y+10, r8	; 0x0a
    cc1c:	83 81       	ldd	r24, Z+3	; 0x03
    cc1e:	80 80       	ld	r8, Z
    cc20:	81 82       	std	Z+1, r8	; 0x01
    cc22:	83 85       	ldd	r24, Z+11	; 0x0b
    cc24:	86 88       	ldd	r8, Z+22	; 0x16
    cc26:	8a 8c       	ldd	r8, Y+26	; 0x1a
    cc28:	8d 8f       	std	Y+29, r24	; 0x1d
    cc2a:	90 92 93 95 	sts	0x9593, r9
    cc2e:	96 97       	sbiw	r26, 0x26	; 38
    cc30:	98 99       	sbic	0x13, 0	; 19
    cc32:	9a 9b       	sbis	0x13, 2	; 19
    cc34:	9b 9c       	mul	r9, r11
    cc36:	9d 9d       	mul	r25, r13
    cc38:	9d 9e       	mul	r9, r29
    cc3a:	9e 9e       	mul	r9, r30
    cc3c:	9f 9f       	mul	r25, r31
    cc3e:	9f 9f       	mul	r25, r31
    cc40:	9f 9f       	mul	r25, r31
    cc42:	9f 9e       	mul	r9, r31
    cc44:	9e 9e       	mul	r9, r30
    cc46:	9d 9d       	mul	r25, r13
    cc48:	9d 9c       	mul	r9, r13
    cc4a:	9b 9b       	sbis	0x13, 3	; 19
    cc4c:	9a 99       	sbic	0x13, 2	; 19
    cc4e:	98 97       	sbiw	r26, 0x28	; 40
    cc50:	96 95       	lsr	r25
    cc52:	93 92       	.word	0x9293	; ????
    cc54:	90 8f       	std	Z+24, r25	; 0x18
    cc56:	8d 8c       	ldd	r8, Y+29	; 0x1d
    cc58:	8a 88       	ldd	r8, Y+18	; 0x12
    cc5a:	86 85       	ldd	r24, Z+14	; 0x0e
    cc5c:	83 82       	std	Z+3, r8	; 0x03
    cc5e:	81 80       	ldd	r8, Z+1	; 0x01
    cc60:	80 81       	ld	r24, Z
    cc62:	83 86       	std	Z+11, r8	; 0x0b
    cc64:	8a 91       	ld	r24, -Y
    cc66:	99 a2       	std	Y+33, r9	; 0x21
    cc68:	ac b7       	in	r26, 0x3c	; 60
    cc6a:	c1 ca       	rjmp	.-2686   	; 0xc1ee <PatchCommand03+0xf6>
    cc6c:	d2 d9       	rcall	.-3164   	; 0xc012 <TriggerFx+0xb6>
    cc6e:	de e2       	ldi	r29, 0x2E	; 46
    cc70:	e4 e5       	ldi	r30, 0x54	; 84
    cc72:	e6 e5       	ldi	r30, 0x56	; 86
    cc74:	e4 e2       	ldi	r30, 0x24	; 36
    cc76:	e0 de       	rcall	.-576    	; 0xca38 <waves+0x638>
    cc78:	dd e1       	ldi	r29, 0x1D	; 29
    cc7a:	eb f5       	brvc	.+122    	; 0xccf6 <waves+0x8f6>
    cc7c:	f9 f8       	.word	0xf8f9	; ????
    cc7e:	f9 00       	.word	0x00f9	; ????
    cc80:	07 08       	sbc	r0, r7
    cc82:	07 0b       	sbc	r16, r23
    cc84:	15 1f       	adc	r17, r21
    cc86:	23 22       	and	r2, r19
    cc88:	20 1e       	adc	r2, r16
    cc8a:	1c 1b       	sub	r17, r28
    cc8c:	1a 1b       	sub	r17, r26
    cc8e:	1c 1e       	adc	r1, r28
    cc90:	22 27       	eor	r18, r18
    cc92:	2e 36       	cpi	r18, 0x6E	; 110
    cc94:	3f 49       	sbci	r19, 0x9F	; 159
    cc96:	54 5e       	subi	r21, 0xE4	; 228
    cc98:	67 6f       	ori	r22, 0xF7	; 247
    cc9a:	76 7a       	andi	r23, 0xA6	; 166
    cc9c:	7e 7f       	andi	r23, 0xFE	; 254
    cc9e:	7f 7f       	andi	r23, 0xFF	; 255
    cca0:	7f 7e       	andi	r23, 0xEF	; 239
    cca2:	7d 7b       	andi	r23, 0xBD	; 189
    cca4:	7a 78       	andi	r23, 0x8A	; 138
    cca6:	76 74       	andi	r23, 0x46	; 70
    cca8:	73 71       	andi	r23, 0x13	; 19
    ccaa:	70 6e       	ori	r23, 0xE0	; 224
    ccac:	6d 6b       	ori	r22, 0xBD	; 189
    ccae:	6a 69       	ori	r22, 0x9A	; 154
    ccb0:	68 67       	ori	r22, 0x78	; 120
    ccb2:	66 65       	ori	r22, 0x56	; 86
    ccb4:	65 64       	ori	r22, 0x45	; 69
    ccb6:	64 63       	ori	r22, 0x34	; 52
    ccb8:	63 62       	ori	r22, 0x23	; 35
    ccba:	62 62       	ori	r22, 0x22	; 34
    ccbc:	61 61       	ori	r22, 0x11	; 17
    ccbe:	61 61       	ori	r22, 0x11	; 17
    ccc0:	61 61       	ori	r22, 0x11	; 17
    ccc2:	61 62       	ori	r22, 0x21	; 33
    ccc4:	62 62       	ori	r22, 0x22	; 34
    ccc6:	63 63       	ori	r22, 0x33	; 51
    ccc8:	63 64       	ori	r22, 0x43	; 67
    ccca:	65 65       	ori	r22, 0x55	; 85
    cccc:	66 67       	ori	r22, 0x76	; 118
    ccce:	68 69       	ori	r22, 0x98	; 152
    ccd0:	6a 6b       	ori	r22, 0xBA	; 186
    ccd2:	6d 6e       	ori	r22, 0xED	; 237
    ccd4:	70 71       	andi	r23, 0x10	; 16
    ccd6:	73 74       	andi	r23, 0x43	; 67
    ccd8:	76 78       	andi	r23, 0x86	; 134
    ccda:	7a 7b       	andi	r23, 0xBA	; 186
    ccdc:	7d 7e       	andi	r23, 0xED	; 237
    ccde:	7f 7f       	andi	r23, 0xFF	; 255
    cce0:	7f 7f       	andi	r23, 0xFF	; 255
    cce2:	7e 7a       	andi	r23, 0xAE	; 174
    cce4:	76 6f       	ori	r23, 0xF6	; 246
    cce6:	67 5e       	subi	r22, 0xE7	; 231
    cce8:	54 49       	sbci	r21, 0x94	; 148
    ccea:	3f 36       	cpi	r19, 0x6F	; 111
    ccec:	2e 27       	eor	r18, r30
    ccee:	22 1e       	adc	r2, r18
    ccf0:	1c 1b       	sub	r17, r28
    ccf2:	1a 1b       	sub	r17, r26
    ccf4:	1c 1e       	adc	r1, r28
    ccf6:	20 22       	and	r2, r16
    ccf8:	23 1f       	adc	r18, r19
    ccfa:	15 0b       	sbc	r17, r21
    ccfc:	07 08       	sbc	r0, r7
    ccfe:	07 00       	.word	0x0007	; ????
    cd00:	1f 31       	cpi	r17, 0x1F	; 31
    cd02:	3d 44       	sbci	r19, 0x4D	; 77
    cd04:	4e 53       	subi	r20, 0x3E	; 62
    cd06:	54 56       	subi	r21, 0x64	; 100
    cd08:	5a 5f       	subi	r21, 0xFA	; 250
    cd0a:	64 69       	ori	r22, 0x94	; 148
    cd0c:	6e 74       	andi	r22, 0x4E	; 78
    cd0e:	76 79       	andi	r23, 0x96	; 150
    cd10:	7c 7f       	andi	r23, 0xFC	; 252
    cd12:	7f 7f       	andi	r23, 0xFF	; 255
    cd14:	7f 7f       	andi	r23, 0xFF	; 255
    cd16:	7f 7f       	andi	r23, 0xFF	; 255
    cd18:	7f 7f       	andi	r23, 0xFF	; 255
    cd1a:	7f 7f       	andi	r23, 0xFF	; 255
    cd1c:	7f 7f       	andi	r23, 0xFF	; 255
    cd1e:	7f 7f       	andi	r23, 0xFF	; 255
    cd20:	7f 7f       	andi	r23, 0xFF	; 255
    cd22:	7f 7f       	andi	r23, 0xFF	; 255
    cd24:	7f 7f       	andi	r23, 0xFF	; 255
    cd26:	7f 7f       	andi	r23, 0xFF	; 255
    cd28:	7f 7f       	andi	r23, 0xFF	; 255
    cd2a:	7f 7f       	andi	r23, 0xFF	; 255
    cd2c:	7f 7f       	andi	r23, 0xFF	; 255
    cd2e:	7f 7f       	andi	r23, 0xFF	; 255
    cd30:	7f 7f       	andi	r23, 0xFF	; 255
    cd32:	7f 7f       	andi	r23, 0xFF	; 255
    cd34:	7f 7f       	andi	r23, 0xFF	; 255
    cd36:	7f 7f       	andi	r23, 0xFF	; 255
    cd38:	7f 7f       	andi	r23, 0xFF	; 255
    cd3a:	7f 7f       	andi	r23, 0xFF	; 255
    cd3c:	7f 7f       	andi	r23, 0xFF	; 255
    cd3e:	7f 7f       	andi	r23, 0xFF	; 255
    cd40:	7f 7f       	andi	r23, 0xFF	; 255
    cd42:	7f 7f       	andi	r23, 0xFF	; 255
    cd44:	7f 7f       	andi	r23, 0xFF	; 255
    cd46:	7f 7f       	andi	r23, 0xFF	; 255
    cd48:	7f 7f       	andi	r23, 0xFF	; 255
    cd4a:	7f 7f       	andi	r23, 0xFF	; 255
    cd4c:	7f 7f       	andi	r23, 0xFF	; 255
    cd4e:	7f 7f       	andi	r23, 0xFF	; 255
    cd50:	7f 7f       	andi	r23, 0xFF	; 255
    cd52:	7f 7f       	andi	r23, 0xFF	; 255
    cd54:	7f 7f       	andi	r23, 0xFF	; 255
    cd56:	7f 7f       	andi	r23, 0xFF	; 255
    cd58:	7f 7f       	andi	r23, 0xFF	; 255
    cd5a:	7f 7f       	andi	r23, 0xFF	; 255
    cd5c:	7f 7f       	andi	r23, 0xFF	; 255
    cd5e:	7f 7f       	andi	r23, 0xFF	; 255
    cd60:	7f 7f       	andi	r23, 0xFF	; 255
    cd62:	7f 7f       	andi	r23, 0xFF	; 255
    cd64:	7f 7f       	andi	r23, 0xFF	; 255
    cd66:	7f 7f       	andi	r23, 0xFF	; 255
    cd68:	7f 7f       	andi	r23, 0xFF	; 255
    cd6a:	7f 7f       	andi	r23, 0xFF	; 255
    cd6c:	7f 7f       	andi	r23, 0xFF	; 255
    cd6e:	7f 7f       	andi	r23, 0xFF	; 255
    cd70:	7f 7f       	andi	r23, 0xFF	; 255
    cd72:	7f 7f       	andi	r23, 0xFF	; 255
    cd74:	7f 7f       	andi	r23, 0xFF	; 255
    cd76:	7f 7f       	andi	r23, 0xFF	; 255
    cd78:	7f 7f       	andi	r23, 0xFF	; 255
    cd7a:	7f 7c       	andi	r23, 0xCF	; 207
    cd7c:	78 71       	andi	r23, 0x18	; 24
    cd7e:	68 4c       	sbci	r22, 0xC8	; 200
    cd80:	2c 1c       	adc	r2, r12
    cd82:	12 0c       	add	r1, r2
    cd84:	0a 0b       	sbc	r16, r26
    cd86:	0a 05       	cpc	r16, r10
    cd88:	fd f3       	brhs	.-2      	; 0xcd88 <waves+0x988>
    cd8a:	e9 df       	rcall	.-46     	; 0xcd5e <waves+0x95e>
    cd8c:	d4 ca       	rjmp	.-2648   	; 0xc336 <steptable+0x12e>
    cd8e:	c0 b7       	in	r28, 0x30	; 48
    cd90:	ae a6       	std	Y+46, r10	; 0x2e
    cd92:	9e 97       	sbiw	r26, 0x2e	; 46
    cd94:	91 8b       	std	Z+17, r25	; 0x11
    cd96:	86 85       	ldd	r24, Z+14	; 0x0e
    cd98:	82 80       	ldd	r8, Z+2	; 0x02
    cd9a:	80 80       	ld	r8, Z
    cd9c:	80 80       	ld	r8, Z
    cd9e:	80 80       	ld	r8, Z
    cda0:	80 80       	ld	r8, Z
    cda2:	80 80       	ld	r8, Z
    cda4:	80 80       	ld	r8, Z
    cda6:	80 80       	ld	r8, Z
    cda8:	80 80       	ld	r8, Z
    cdaa:	80 80       	ld	r8, Z
    cdac:	80 80       	ld	r8, Z
    cdae:	80 80       	ld	r8, Z
    cdb0:	80 80       	ld	r8, Z
    cdb2:	80 80       	ld	r8, Z
    cdb4:	80 80       	ld	r8, Z
    cdb6:	80 80       	ld	r8, Z
    cdb8:	80 80       	ld	r8, Z
    cdba:	80 80       	ld	r8, Z
    cdbc:	80 80       	ld	r8, Z
    cdbe:	80 80       	ld	r8, Z
    cdc0:	80 80       	ld	r8, Z
    cdc2:	80 80       	ld	r8, Z
    cdc4:	80 80       	ld	r8, Z
    cdc6:	80 80       	ld	r8, Z
    cdc8:	80 80       	ld	r8, Z
    cdca:	80 80       	ld	r8, Z
    cdcc:	80 80       	ld	r8, Z
    cdce:	80 80       	ld	r8, Z
    cdd0:	80 80       	ld	r8, Z
    cdd2:	80 80       	ld	r8, Z
    cdd4:	80 80       	ld	r8, Z
    cdd6:	80 80       	ld	r8, Z
    cdd8:	80 80       	ld	r8, Z
    cdda:	80 80       	ld	r8, Z
    cddc:	80 80       	ld	r8, Z
    cdde:	80 80       	ld	r8, Z
    cde0:	80 80       	ld	r8, Z
    cde2:	80 80       	ld	r8, Z
    cde4:	80 80       	ld	r8, Z
    cde6:	80 80       	ld	r8, Z
    cde8:	80 80       	ld	r8, Z
    cdea:	80 80       	ld	r8, Z
    cdec:	80 80       	ld	r8, Z
    cdee:	80 80       	ld	r8, Z
    cdf0:	80 80       	ld	r8, Z
    cdf2:	80 80       	ld	r8, Z
    cdf4:	80 87       	std	Z+8, r24	; 0x08
    cdf6:	91 9d       	mul	r25, r1
    cdf8:	ac c4       	rjmp	.+2392   	; 0xd752 <draw_molecule+0x5e>
    cdfa:	cb d4       	rcall	.+2454   	; 0xd792 <draw_field+0xe>
    cdfc:	dd f2       	brhs	.-74     	; 0xcdb4 <waves+0x9b4>
    cdfe:	fa fa       	.word	0xfafa	; ????

0000ce00 <RestoreBackground>:
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i,j;
		unsigned int a;
		for(i=0;i<free_tile_index;i++){			
    ce00:	30 91 ca 0d 	lds	r19, 0x0DCA
    ce04:	20 e0       	ldi	r18, 0x00	; 0
    ce06:	10 c0       	rjmp	.+32     	; 0xce28 <RestoreBackground+0x28>
			a=ram_tiles_restore[i].addr;
    ce08:	82 2f       	mov	r24, r18
    ce0a:	90 e0       	ldi	r25, 0x00	; 0
			j=ram_tiles_restore[i].tileIndex;
			vram[a]=j;
    ce0c:	fc 01       	movw	r30, r24
    ce0e:	ee 0f       	add	r30, r30
    ce10:	ff 1f       	adc	r31, r31
    ce12:	e8 0f       	add	r30, r24
    ce14:	f9 1f       	adc	r31, r25
    ce16:	e5 57       	subi	r30, 0x75	; 117
    ce18:	f5 4f       	sbci	r31, 0xF5	; 245
    ce1a:	a0 81       	ld	r26, Z
    ce1c:	b1 81       	ldd	r27, Z+1	; 0x01
    ce1e:	a0 5e       	subi	r26, 0xE0	; 224
    ce20:	be 4f       	sbci	r27, 0xFE	; 254
    ce22:	82 81       	ldd	r24, Z+2	; 0x02
    ce24:	8c 93       	st	X, r24
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i,j;
		unsigned int a;
		for(i=0;i<free_tile_index;i++){			
    ce26:	2f 5f       	subi	r18, 0xFF	; 255
    ce28:	23 17       	cp	r18, r19
    ce2a:	70 f3       	brcs	.-36     	; 0xce08 <RestoreBackground+0x8>
			a=ram_tiles_restore[i].addr;
			j=ram_tiles_restore[i].tileIndex;
			vram[a]=j;
			//vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}	
	}
    ce2c:	08 95       	ret

0000ce2e <InitializeVideoMode>:
		#endif	
	}


	//Callback invoked by UzeboxCore.Initialize()
	void InitializeVideoMode(){
    ce2e:	e8 e6       	ldi	r30, 0x68	; 104
    ce30:	f4 e0       	ldi	r31, 0x04	; 4

		//disable sprites
		for(int i=0;i<MAX_SPRITES;i++){
			sprites[i].x=(SCREEN_TILES_H*TILE_WIDTH);		
    ce32:	80 ef       	ldi	r24, 0xF0	; 240
    ce34:	80 83       	st	Z, r24
    ce36:	35 96       	adiw	r30, 0x05	; 5

	//Callback invoked by UzeboxCore.Initialize()
	void InitializeVideoMode(){

		//disable sprites
		for(int i=0;i<MAX_SPRITES;i++){
    ce38:	94 e0       	ldi	r25, 0x04	; 4
    ce3a:	eb 38       	cpi	r30, 0x8B	; 139
    ce3c:	f9 07       	cpc	r31, r25
    ce3e:	d1 f7       	brne	.-12     	; 0xce34 <InitializeVideoMode+0x6>
			screenSections[i].wrapLine=0;
			screenSections[i].flags=SCT_PRIORITY_SPR;
		}
		*/

	}
    ce40:	08 95       	ret

0000ce42 <DrawMap2>:



//Draws a map of tile at the specified position

void DrawMap2(unsigned char x,unsigned char y,const char *map){
    ce42:	1f 93       	push	r17
    ce44:	cf 93       	push	r28
    ce46:	df 93       	push	r29
    ce48:	fa 01       	movw	r30, r20
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
    ce4a:	74 91       	lpm	r23, Z+
	unsigned char mapHeight=pgm_read_byte(&(map[1]));
    ce4c:	31 96       	adiw	r30, 0x01	; 1
    ce4e:	14 91       	lpm	r17, Z+
    ce50:	c7 2f       	mov	r28, r23
    ce52:	d0 e0       	ldi	r29, 0x00	; 0
    ce54:	af 01       	movw	r20, r30
    ce56:	4f 5f       	subi	r20, 0xFF	; 255
    ce58:	5f 4f       	sbci	r21, 0xFF	; 255
    ce5a:	9e e1       	ldi	r25, 0x1E	; 30
    ce5c:	69 9f       	mul	r22, r25
    ce5e:	90 01       	movw	r18, r0
    ce60:	11 24       	eor	r1, r1
    ce62:	28 0f       	add	r18, r24
    ce64:	31 1d       	adc	r19, r1
    ce66:	60 e0       	ldi	r22, 0x00	; 0
    ce68:	0c c0       	rjmp	.+24     	; 0xce82 <DrawMap2+0x40>

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
			
			i=pgm_read_byte(&(map[(dy*mapWidth)+dx+2]));
    ce6a:	84 91       	lpm	r24, Z+
			
			vram[((y+dy)*VRAM_TILES_H)+x+dx]=(i + RAM_TILES_COUNT) ;
    ce6c:	88 5e       	subi	r24, 0xE8	; 232
    ce6e:	8d 93       	st	X+, r24
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
	unsigned char mapHeight=pgm_read_byte(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
		for(unsigned char dx=0;dx<mapWidth;dx++){
    ce70:	9f 5f       	subi	r25, 0xFF	; 255
    ce72:	31 96       	adiw	r30, 0x01	; 1
    ce74:	97 17       	cp	r25, r23
    ce76:	c8 f3       	brcs	.-14     	; 0xce6a <DrawMap2+0x28>
void DrawMap2(unsigned char x,unsigned char y,const char *map){
	unsigned char i;
	unsigned char mapWidth=pgm_read_byte(&(map[0]));
	unsigned char mapHeight=pgm_read_byte(&(map[1]));

	for(unsigned char dy=0;dy<mapHeight;dy++){
    ce78:	6f 5f       	subi	r22, 0xFF	; 255
    ce7a:	4c 0f       	add	r20, r28
    ce7c:	5d 1f       	adc	r21, r29
    ce7e:	22 5e       	subi	r18, 0xE2	; 226
    ce80:	3f 4f       	sbci	r19, 0xFF	; 255
    ce82:	61 17       	cp	r22, r17
    ce84:	30 f4       	brcc	.+12     	; 0xce92 <DrawMap2+0x50>
    ce86:	d9 01       	movw	r26, r18
    ce88:	a0 5e       	subi	r26, 0xE0	; 224
    ce8a:	be 4f       	sbci	r27, 0xFE	; 254
    ce8c:	fa 01       	movw	r30, r20
    ce8e:	90 e0       	ldi	r25, 0x00	; 0
    ce90:	f1 cf       	rjmp	.-30     	; 0xce74 <DrawMap2+0x32>
			
		
		}
	}

}
    ce92:	df 91       	pop	r29
    ce94:	cf 91       	pop	r28
    ce96:	1f 91       	pop	r17
    ce98:	08 95       	ret

0000ce9a <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    ce9a:	80 91 cb 0d 	lds	r24, 0x0DCB
    ce9e:	88 23       	and	r24, r24
    cea0:	f9 f0       	breq	.+62     	; 0xcee0 <ProcessFading+0x46>
		if(currFadeFrame==0){
    cea2:	80 91 cc 0d 	lds	r24, 0x0DCC
    cea6:	88 23       	and	r24, r24
    cea8:	c1 f4       	brne	.+48     	; 0xceda <ProcessFading+0x40>
			currFadeFrame=fadeSpeed;
    ceaa:	80 91 c8 0d 	lds	r24, 0x0DC8
    ceae:	80 93 cc 0d 	sts	0x0DCC, r24
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    ceb2:	80 91 cd 0d 	lds	r24, 0x0DCD
    ceb6:	e8 2f       	mov	r30, r24
    ceb8:	f0 e0       	ldi	r31, 0x00	; 0
    ceba:	eb 5a       	subi	r30, 0xAB	; 171
    cebc:	f7 4e       	sbci	r31, 0xE7	; 231
    cebe:	e4 91       	lpm	r30, Z+
    cec0:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    cec2:	90 91 c9 0d 	lds	r25, 0x0DC9
    cec6:	98 0f       	add	r25, r24
    cec8:	90 93 cd 0d 	sts	0x0DCD, r25
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    cecc:	99 23       	and	r25, r25
    cece:	11 f0       	breq	.+4      	; 0xced4 <ProcessFading+0x3a>
    ced0:	9d 30       	cpi	r25, 0x0D	; 13
    ced2:	31 f4       	brne	.+12     	; 0xcee0 <ProcessFading+0x46>
				fadeActive=false;
    ced4:	10 92 cb 0d 	sts	0x0DCB, r1
    ced8:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    ceda:	81 50       	subi	r24, 0x01	; 1
    cedc:	80 93 cc 0d 	sts	0x0DCC, r24
    cee0:	08 95       	ret

0000cee2 <WaitVsync>:
		}
	}
}

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    cee2:	0f 93       	push	r16
    cee4:	1f 93       	push	r17
    cee6:	cf 93       	push	r28
    cee8:	df 93       	push	r29
    ceea:	8c 01       	movw	r16, r24
    ceec:	c0 e0       	ldi	r28, 0x00	; 0
    ceee:	d0 e0       	ldi	r29, 0x00	; 0
    cef0:	07 c0       	rjmp	.+14     	; 0xcf00 <WaitVsync+0x1e>
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
		while(!GetVsyncFlag());
    cef2:	0e 94 63 5a 	call	0xb4c6	; 0xb4c6 <GetVsyncFlag>
    cef6:	88 23       	and	r24, r24
    cef8:	e1 f3       	breq	.-8      	; 0xcef2 <WaitVsync+0x10>
		ClearVsyncFlag();		
    cefa:	0e 94 66 5a 	call	0xb4cc	; 0xb4cc <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    cefe:	21 96       	adiw	r28, 0x01	; 1
    cf00:	c0 17       	cp	r28, r16
    cf02:	d1 07       	cpc	r29, r17
    cf04:	b4 f3       	brlt	.-20     	; 0xcef2 <WaitVsync+0x10>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    cf06:	df 91       	pop	r29
    cf08:	cf 91       	pop	r28
    cf0a:	1f 91       	pop	r17
    cf0c:	0f 91       	pop	r16
    cf0e:	08 95       	ret

0000cf10 <PrintChar>:
}

//Print a single character
void PrintChar(int x,int y,char c){

	SetFont(x,y,(c-32)+RAM_TILES_COUNT);
    cf10:	48 50       	subi	r20, 0x08	; 8
    cf12:	0e 94 4c 5a 	call	0xb498	; 0xb498 <SetFont>
	
}
    cf16:	08 95       	ret

0000cf18 <Print>:
	PrintHexByte(x+4,y, value>>8);
	PrintHexByte(x+6,y,value&0xff);
}

//Print a string from flash
void Print(int x,int y,const char *string){
    cf18:	ff 92       	push	r15
    cf1a:	0f 93       	push	r16
    cf1c:	1f 93       	push	r17
    cf1e:	cf 93       	push	r28
    cf20:	df 93       	push	r29
    cf22:	8c 01       	movw	r16, r24
    cf24:	f6 2e       	mov	r15, r22
    cf26:	ea 01       	movw	r28, r20

	int i=0;
	char c;

	while(1){
		c=pgm_read_byte(&(string[i++]));		
    cf28:	fe 01       	movw	r30, r28
    cf2a:	44 91       	lpm	r20, Z+
    cf2c:	21 96       	adiw	r28, 0x01	; 1
		if(c!=0){
    cf2e:	44 23       	and	r20, r20
    cf30:	49 f0       	breq	.+18     	; 0xcf44 <Print+0x2c>
			c=((c&127)-32) + RAM_TILES_COUNT;			
			SetFont(x++,y,c);
		}else{
			break;
    cf32:	80 2f       	mov	r24, r16

	while(1){
		c=pgm_read_byte(&(string[i++]));		
		if(c!=0){
			c=((c&127)-32) + RAM_TILES_COUNT;			
			SetFont(x++,y,c);
    cf34:	0f 5f       	subi	r16, 0xFF	; 255
    cf36:	1f 4f       	sbci	r17, 0xFF	; 255
    cf38:	4f 77       	andi	r20, 0x7F	; 127
    cf3a:	48 50       	subi	r20, 0x08	; 8
    cf3c:	6f 2d       	mov	r22, r15
    cf3e:	0e 94 4c 5a 	call	0xb498	; 0xb498 <SetFont>
    cf42:	f2 cf       	rjmp	.-28     	; 0xcf28 <Print+0x10>
		}else{
			break;
		}
	}
	
}
    cf44:	df 91       	pop	r29
    cf46:	cf 91       	pop	r28
    cf48:	1f 91       	pop	r17
    cf4a:	0f 91       	pop	r16
    cf4c:	ff 90       	pop	r15
    cf4e:	08 95       	ret

0000cf50 <PrintByte>:
	}
		
}

//Print an unsigned byte in decimal
void PrintByte(int x,int y, unsigned char val,bool zeropad){
    cf50:	ef 92       	push	r14
    cf52:	ff 92       	push	r15
    cf54:	0f 93       	push	r16
    cf56:	1f 93       	push	r17
    cf58:	cf 93       	push	r28
    cf5a:	df 93       	push	r29
    cf5c:	f6 2e       	mov	r15, r22
    cf5e:	04 2f       	mov	r16, r20
    cf60:	e2 2e       	mov	r14, r18
    cf62:	ec 01       	movw	r28, r24
    cf64:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char c,i;

	for(i=0;i<3;i++){
		c=val%10;
		if(val>0 || i==0){
    cf66:	00 23       	and	r16, r16
    cf68:	11 f4       	brne	.+4      	; 0xcf6e <PrintByte+0x1e>
    cf6a:	11 23       	and	r17, r17
    cf6c:	49 f4       	brne	.+18     	; 0xcf80 <PrintByte+0x30>
			SetFont(x--,y,c+CHAR_ZERO+RAM_TILES_COUNT);
    cf6e:	80 2f       	mov	r24, r16
    cf70:	6a e0       	ldi	r22, 0x0A	; 10
    cf72:	0e 94 16 71 	call	0xe22c	; 0xe22c <__udivmodqi4>
    cf76:	98 5d       	subi	r25, 0xD8	; 216
    cf78:	8c 2f       	mov	r24, r28
    cf7a:	6f 2d       	mov	r22, r15
    cf7c:	49 2f       	mov	r20, r25
    cf7e:	09 c0       	rjmp	.+18     	; 0xcf92 <PrintByte+0x42>
		}else{
			if(zeropad){
    cf80:	ee 20       	and	r14, r14
    cf82:	21 f0       	breq	.+8      	; 0xcf8c <PrintByte+0x3c>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
    cf84:	8c 2f       	mov	r24, r28
    cf86:	6f 2d       	mov	r22, r15
    cf88:	48 e2       	ldi	r20, 0x28	; 40
    cf8a:	03 c0       	rjmp	.+6      	; 0xcf92 <PrintByte+0x42>
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
    cf8c:	8c 2f       	mov	r24, r28
    cf8e:	6f 2d       	mov	r22, r15
    cf90:	48 e1       	ldi	r20, 0x18	; 24
    cf92:	0e 94 4c 5a 	call	0xb498	; 0xb498 <SetFont>

//Print an unsigned byte in decimal
void PrintByte(int x,int y, unsigned char val,bool zeropad){
	unsigned char c,i;

	for(i=0;i<3;i++){
    cf96:	1f 5f       	subi	r17, 0xFF	; 255
    cf98:	21 97       	sbiw	r28, 0x01	; 1
    cf9a:	13 30       	cpi	r17, 0x03	; 3
    cf9c:	31 f0       	breq	.+12     	; 0xcfaa <PrintByte+0x5a>
				SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
			}else{
				SetFont(x--,y,0+RAM_TILES_COUNT);
			}
		}
		val=val/10;
    cf9e:	80 2f       	mov	r24, r16
    cfa0:	6a e0       	ldi	r22, 0x0A	; 10
    cfa2:	0e 94 16 71 	call	0xe22c	; 0xe22c <__udivmodqi4>
    cfa6:	08 2f       	mov	r16, r24
    cfa8:	de cf       	rjmp	.-68     	; 0xcf66 <PrintByte+0x16>
	}
		
}
    cfaa:	df 91       	pop	r29
    cfac:	cf 91       	pop	r28
    cfae:	1f 91       	pop	r17
    cfb0:	0f 91       	pop	r16
    cfb2:	ff 90       	pop	r15
    cfb4:	ef 90       	pop	r14
    cfb6:	08 95       	ret

0000cfb8 <DisplayLogo>:
		}	

	}

	//Callback invoked by UzeboxCore.Initialize()
	void DisplayLogo(){
    cfb8:	0f 93       	push	r16
    cfba:	1f 93       	push	r17
	
		#if INTRO_LOGO !=0
			#define LOGO_X_POS 13
			
			InitMusicPlayer(logoInitPatches);
    cfbc:	86 e2       	ldi	r24, 0x26	; 38
    cfbe:	90 e1       	ldi	r25, 0x10	; 16
    cfc0:	0e 94 39 5c 	call	0xb872	; 0xb872 <InitMusicPlayer>
			SetTileTable(logo_tileset);
    cfc4:	8f e2       	ldi	r24, 0x2F	; 47
    cfc6:	90 e1       	ldi	r25, 0x10	; 16
    cfc8:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <SetTileTable>
			
			//draw logo
			ClearVram();
    cfcc:	0e 94 34 5a 	call	0xb468	; 0xb468 <ClearVram>
			WaitVsync(15);		
    cfd0:	8f e0       	ldi	r24, 0x0F	; 15
    cfd2:	90 e0       	ldi	r25, 0x00	; 0
    cfd4:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>

			#if INTRO_LOGO == 1 
				TriggerFx(0,0xff,true);
			#endif

			DrawMap2(LOGO_X_POS,12,map_uzeboxlogo);
    cfd8:	0f e2       	ldi	r16, 0x2F	; 47
    cfda:	18 e1       	ldi	r17, 0x18	; 24
    cfdc:	8d e0       	ldi	r24, 0x0D	; 13
    cfde:	6c e0       	ldi	r22, 0x0C	; 12
    cfe0:	a8 01       	movw	r20, r16
    cfe2:	0e 94 21 67 	call	0xce42	; 0xce42 <DrawMap2>
			WaitVsync(3);
    cfe6:	83 e0       	ldi	r24, 0x03	; 3
    cfe8:	90 e0       	ldi	r25, 0x00	; 0
    cfea:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
			DrawMap2(LOGO_X_POS,12,map_uzeboxlogo2);
    cfee:	8d e0       	ldi	r24, 0x0D	; 13
    cff0:	6c e0       	ldi	r22, 0x0C	; 12
    cff2:	45 e4       	ldi	r20, 0x45	; 69
    cff4:	58 e1       	ldi	r21, 0x18	; 24
    cff6:	0e 94 21 67 	call	0xce42	; 0xce42 <DrawMap2>
			WaitVsync(2);
    cffa:	82 e0       	ldi	r24, 0x02	; 2
    cffc:	90 e0       	ldi	r25, 0x00	; 0
    cffe:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
			DrawMap2(LOGO_X_POS,12,map_uzeboxlogo);
    d002:	8d e0       	ldi	r24, 0x0D	; 13
    d004:	6c e0       	ldi	r22, 0x0C	; 12
    d006:	a8 01       	movw	r20, r16
    d008:	0e 94 21 67 	call	0xce42	; 0xce42 <DrawMap2>

			#if INTRO_LOGO == 2
				SetMasterVolume(0xc0);
    d00c:	80 ec       	ldi	r24, 0xC0	; 192
    d00e:	0e 94 87 5c 	call	0xb90e	; 0xb90e <SetMasterVolume>
				TriggerNote(3,0,16,0xff);
    d012:	83 e0       	ldi	r24, 0x03	; 3
    d014:	60 e0       	ldi	r22, 0x00	; 0
    d016:	40 e1       	ldi	r20, 0x10	; 16
    d018:	2f ef       	ldi	r18, 0xFF	; 255
    d01a:	0e 94 8d 5c 	call	0xb91a	; 0xb91a <TriggerNote>
			#endif 
		
			WaitVsync(65);
    d01e:	81 e4       	ldi	r24, 0x41	; 65
    d020:	90 e0       	ldi	r25, 0x00	; 0
    d022:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
			ClearVram();
    d026:	0e 94 34 5a 	call	0xb468	; 0xb468 <ClearVram>
			WaitVsync(20);
    d02a:	84 e1       	ldi	r24, 0x14	; 20
    d02c:	90 e0       	ldi	r25, 0x00	; 0
    d02e:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
		#endif	
	}
    d032:	1f 91       	pop	r17
    d034:	0f 91       	pop	r16
    d036:	08 95       	ret

0000d038 <ProcessSprites>:

	void SetSpriteVisibility(bool visible){
		spritesOn=visible;
	}

	void ProcessSprites(){
    d038:	2f 92       	push	r2
    d03a:	3f 92       	push	r3
    d03c:	4f 92       	push	r4
    d03e:	5f 92       	push	r5
    d040:	6f 92       	push	r6
    d042:	7f 92       	push	r7
    d044:	8f 92       	push	r8
    d046:	9f 92       	push	r9
    d048:	af 92       	push	r10
    d04a:	bf 92       	push	r11
    d04c:	cf 92       	push	r12
    d04e:	df 92       	push	r13
    d050:	ef 92       	push	r14
    d052:	ff 92       	push	r15
    d054:	0f 93       	push	r16
    d056:	1f 93       	push	r17
    d058:	df 93       	push	r29
    d05a:	cf 93       	push	r28
    d05c:	00 d0       	rcall	.+0      	; 0xd05e <ProcessSprites+0x26>
    d05e:	0f 92       	push	r0
    d060:	cd b7       	in	r28, 0x3d	; 61
    d062:	de b7       	in	r29, 0x3e	; 62
	
		unsigned char i,bx,by,dx,dy,bt,x,y,tx=1,ty=1,wx,wy;
		unsigned int ramPtr,ssx,ssy;

		free_tile_index=0;	
    d064:	10 92 ca 0d 	sts	0x0DCA, r1
		if(!spritesOn) return;
    d068:	80 91 00 01 	lds	r24, 0x0100
    d06c:	88 23       	and	r24, r24
    d06e:	09 f4       	brne	.+2      	; 0xd072 <ProcessSprites+0x3a>
    d070:	a3 c0       	rjmp	.+326    	; 0xd1b8 <ProcessSprites+0x180>
    d072:	a8 e6       	ldi	r26, 0x68	; 104
    d074:	8a 2e       	mov	r8, r26
    d076:	a4 e0       	ldi	r26, 0x04	; 4
    d078:	9a 2e       	mov	r9, r26
    d07a:	77 24       	eor	r7, r7
	
		for(i=0;i<MAX_SPRITES;i++){
			bx=sprites[i].x;
    d07c:	f4 01       	movw	r30, r8
    d07e:	80 81       	ld	r24, Z

			if(bx!=(SCREEN_TILES_H*TILE_WIDTH)){
    d080:	80 3f       	cpi	r24, 0xF0	; 240
    d082:	09 f4       	brne	.+2      	; 0xd086 <ProcessSprites+0x4e>
    d084:	7a c0       	rjmp	.+244    	; 0xd17a <ProcessSprites+0x142>
				#if SCROLLING == 1
					ssx=sprites[i].x+Screen.scrollX;
					ssy=sprites[i].y+Screen.scrollY;
				#else
					ssx=sprites[i].x;
					ssy=sprites[i].y;
    d086:	91 81       	ldd	r25, Z+1	; 0x01

				tx=1;
				ty=1;

				//get the BG tiles that are overlapped by the sprite
				bx=ssx>>3;
    d088:	f8 2f       	mov	r31, r24
    d08a:	f6 95       	lsr	r31
    d08c:	f6 95       	lsr	r31
    d08e:	f6 95       	lsr	r31
    d090:	f9 83       	std	Y+1, r31	; 0x01
				dx=ssx&0x7;
    d092:	28 2f       	mov	r18, r24
    d094:	27 70       	andi	r18, 0x07	; 7
				if(dx>0) tx++;
    d096:	19 f0       	breq	.+6      	; 0xd09e <ProcessSprites+0x66>
    d098:	f2 e0       	ldi	r31, 0x02	; 2
    d09a:	2f 2e       	mov	r2, r31
    d09c:	02 c0       	rjmp	.+4      	; 0xd0a2 <ProcessSprites+0x6a>
    d09e:	22 24       	eor	r2, r2
    d0a0:	23 94       	inc	r2

				//by=ssy>>3;
				//dy=ssy&0x7;
				by=ssy/TILE_HEIGHT;
    d0a2:	39 2f       	mov	r19, r25
    d0a4:	36 95       	lsr	r19
    d0a6:	36 95       	lsr	r19
    d0a8:	36 95       	lsr	r19
				dy=ssy%TILE_HEIGHT;
    d0aa:	89 2f       	mov	r24, r25
    d0ac:	87 70       	andi	r24, 0x07	; 7
				if(dy>0) ty++;			
    d0ae:	19 f0       	breq	.+6      	; 0xd0b6 <ProcessSprites+0x7e>
    d0b0:	e2 e0       	ldi	r30, 0x02	; 2
    d0b2:	6e 2e       	mov	r6, r30
    d0b4:	02 c0       	rjmp	.+4      	; 0xd0ba <ProcessSprites+0x82>
    d0b6:	66 24       	eor	r6, r6
    d0b8:	63 94       	inc	r6
						}
				
						if(bt<RAM_TILES_COUNT){
				

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    d0ba:	b8 2e       	mov	r11, r24
    d0bc:	aa 24       	eor	r10, r10
    d0be:	25 01       	movw	r4, r10
    d0c0:	42 0e       	add	r4, r18
    d0c2:	51 1c       	adc	r5, r1
    d0c4:	c3 2e       	mov	r12, r19
    d0c6:	ee 24       	eor	r14, r14
    d0c8:	ff 24       	eor	r15, r15
    d0ca:	4d c0       	rjmp	.+154    	; 0xd166 <ProcessSprites+0x12e>
						wx=bx+x;

						//process X-Y wrapping
						if(wy>=(VRAM_TILES_V*2)){
							wy-=(VRAM_TILES_V*2);
						}else if(wy>=VRAM_TILES_V){
    d0cc:	2b e1       	ldi	r18, 0x1B	; 27
    d0ce:	2c 15       	cp	r18, r12
    d0d0:	10 f0       	brcs	.+4      	; 0xd0d6 <ProcessSprites+0x9e>
    d0d2:	9c 2d       	mov	r25, r12
    d0d4:	01 c0       	rjmp	.+2      	; 0xd0d8 <ProcessSprites+0xa0>
    d0d6:	93 2d       	mov	r25, r3
							wy-=VRAM_TILES_V;
						}
						if(wx>=VRAM_TILES_H)wx-=VRAM_TILES_H; //should always be 32
    d0d8:	4d e1       	ldi	r20, 0x1D	; 29
    d0da:	4d 15       	cp	r20, r13
    d0dc:	10 f0       	brcs	.+4      	; 0xd0e2 <ProcessSprites+0xaa>
    d0de:	8d 2d       	mov	r24, r13
    d0e0:	02 c0       	rjmp	.+4      	; 0xd0e6 <ProcessSprites+0xae>
    d0e2:	8d 2d       	mov	r24, r13
    d0e4:	8e 51       	subi	r24, 0x1E	; 30

						ramPtr=(wy*VRAM_TILES_H)+wx;
    d0e6:	ee e1       	ldi	r30, 0x1E	; 30
    d0e8:	9e 9f       	mul	r25, r30
    d0ea:	90 01       	movw	r18, r0
    d0ec:	11 24       	eor	r1, r1
    d0ee:	28 0f       	add	r18, r24
    d0f0:	31 1d       	adc	r19, r1
						bt=vram[ramPtr];						
    d0f2:	89 01       	movw	r16, r18
    d0f4:	00 5e       	subi	r16, 0xE0	; 224
    d0f6:	1e 4f       	sbci	r17, 0xFE	; 254
    d0f8:	f8 01       	movw	r30, r16
    d0fa:	60 81       	ld	r22, Z

						if( (bt>=RAM_TILES_COUNT)  && (free_tile_index < RAM_TILES_COUNT) ){
    d0fc:	68 31       	cpi	r22, 0x18	; 24
    d0fe:	f0 f0       	brcs	.+60     	; 0xd13c <ProcessSprites+0x104>
    d100:	40 91 ca 0d 	lds	r20, 0x0DCA
    d104:	48 31       	cpi	r20, 0x18	; 24
    d106:	00 f5       	brcc	.+64     	; 0xd148 <ProcessSprites+0x110>

							//tile is mapped to flash. Copy it to next free RAM tile.
							//if no ram free ignore tile
							ram_tiles_restore[free_tile_index].addr=ramPtr;
    d108:	84 2f       	mov	r24, r20
    d10a:	90 e0       	ldi	r25, 0x00	; 0
    d10c:	fc 01       	movw	r30, r24
    d10e:	ee 0f       	add	r30, r30
    d110:	ff 1f       	adc	r31, r31
    d112:	e8 0f       	add	r30, r24
    d114:	f9 1f       	adc	r31, r25
    d116:	e5 57       	subi	r30, 0x75	; 117
    d118:	f5 4f       	sbci	r31, 0xF5	; 245
    d11a:	31 83       	std	Z+1, r19	; 0x01
    d11c:	20 83       	st	Z, r18
							ram_tiles_restore[free_tile_index].tileIndex=bt;
    d11e:	62 83       	std	Z+2, r22	; 0x02
													
							CopyTileToRam(bt,free_tile_index);
    d120:	86 2f       	mov	r24, r22
    d122:	64 2f       	mov	r22, r20
    d124:	0e 94 f1 56 	call	0xade2	; 0xade2 <CopyTileToRam>

							vram[ramPtr]=free_tile_index;
    d128:	60 91 ca 0d 	lds	r22, 0x0DCA
    d12c:	f8 01       	movw	r30, r16
    d12e:	60 83       	st	Z, r22
							bt=free_tile_index;
							free_tile_index++;										
    d130:	6f 5f       	subi	r22, 0xFF	; 255
    d132:	60 93 ca 0d 	sts	0x0DCA, r22
    d136:	61 50       	subi	r22, 0x01	; 1
						}
				
						if(bt<RAM_TILES_COUNT){
    d138:	68 31       	cpi	r22, 0x18	; 24
    d13a:	30 f4       	brcc	.+12     	; 0xd148 <ProcessSprites+0x110>
				

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    d13c:	87 2d       	mov	r24, r7
    d13e:	4a 81       	ldd	r20, Y+2	; 0x02
    d140:	5b 81       	ldd	r21, Y+3	; 0x03
    d142:	92 01       	movw	r18, r4
    d144:	0e 94 82 57 	call	0xaf04	; 0xaf04 <BlitSprite>
    d148:	8a 81       	ldd	r24, Y+2	; 0x02
    d14a:	9b 81       	ldd	r25, Y+3	; 0x03
    d14c:	01 96       	adiw	r24, 0x01	; 1
    d14e:	9b 83       	std	Y+3, r25	; 0x03
    d150:	8a 83       	std	Y+2, r24	; 0x02
    d152:	d3 94       	inc	r13
				dy=ssy%TILE_HEIGHT;
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){

					for(x=0;x<tx;x++){
    d154:	82 15       	cp	r24, r2
    d156:	08 f4       	brcc	.+2      	; 0xd15a <ProcessSprites+0x122>
    d158:	b9 cf       	rjmp	.-142    	; 0xd0cc <ProcessSprites+0x94>
    d15a:	08 94       	sec
    d15c:	e1 1c       	adc	r14, r1
    d15e:	f1 1c       	adc	r15, r1
    d160:	c3 94       	inc	r12
				//dy=ssy&0x7;
				by=ssy/TILE_HEIGHT;
				dy=ssy%TILE_HEIGHT;
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){
    d162:	e6 14       	cp	r14, r6
    d164:	50 f4       	brcc	.+20     	; 0xd17a <ProcessSprites+0x142>
						}
				
						if(bt<RAM_TILES_COUNT){
				

							BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);
    d166:	80 e0       	ldi	r24, 0x00	; 0
    d168:	9e 2d       	mov	r25, r14
    d16a:	9c 01       	movw	r18, r24
    d16c:	3b 83       	std	Y+3, r19	; 0x03
    d16e:	2a 83       	std	Y+2, r18	; 0x02
    d170:	d9 80       	ldd	r13, Y+1	; 0x01
						wx=bx+x;

						//process X-Y wrapping
						if(wy>=(VRAM_TILES_V*2)){
							wy-=(VRAM_TILES_V*2);
						}else if(wy>=VRAM_TILES_V){
    d172:	64 ee       	ldi	r22, 0xE4	; 228
    d174:	36 2e       	mov	r3, r22
    d176:	3c 0c       	add	r3, r12
    d178:	a9 cf       	rjmp	.-174    	; 0xd0cc <ProcessSprites+0x94>
		unsigned int ramPtr,ssx,ssy;

		free_tile_index=0;	
		if(!spritesOn) return;
	
		for(i=0;i<MAX_SPRITES;i++){
    d17a:	73 94       	inc	r7
    d17c:	e5 e0       	ldi	r30, 0x05	; 5
    d17e:	f0 e0       	ldi	r31, 0x00	; 0
    d180:	8e 0e       	add	r8, r30
    d182:	9f 1e       	adc	r9, r31
    d184:	f7 e0       	ldi	r31, 0x07	; 7
    d186:	7f 16       	cp	r7, r31
    d188:	09 f0       	breq	.+2      	; 0xd18c <ProcessSprites+0x154>
    d18a:	78 cf       	rjmp	.-272    	; 0xd07c <ProcessSprites+0x44>
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i,j;
		unsigned int a;
		for(i=0;i<free_tile_index;i++){			
    d18c:	30 91 ca 0d 	lds	r19, 0x0DCA
    d190:	20 e0       	ldi	r18, 0x00	; 0
    d192:	10 c0       	rjmp	.+32     	; 0xd1b4 <ProcessSprites+0x17c>
			a=ram_tiles_restore[i].addr;
    d194:	82 2f       	mov	r24, r18
    d196:	90 e0       	ldi	r25, 0x00	; 0
			j=ram_tiles_restore[i].tileIndex;
			vram[a]=j;
    d198:	fc 01       	movw	r30, r24
    d19a:	ee 0f       	add	r30, r30
    d19c:	ff 1f       	adc	r31, r31
    d19e:	e8 0f       	add	r30, r24
    d1a0:	f9 1f       	adc	r31, r25
    d1a2:	e5 57       	subi	r30, 0x75	; 117
    d1a4:	f5 4f       	sbci	r31, 0xF5	; 245
    d1a6:	a0 81       	ld	r26, Z
    d1a8:	b1 81       	ldd	r27, Z+1	; 0x01
    d1aa:	a0 5e       	subi	r26, 0xE0	; 224
    d1ac:	be 4f       	sbci	r27, 0xFE	; 254
    d1ae:	82 81       	ldd	r24, Z+2	; 0x02
    d1b0:	8c 93       	st	X, r24
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i,j;
		unsigned int a;
		for(i=0;i<free_tile_index;i++){			
    d1b2:	2f 5f       	subi	r18, 0xFF	; 255
    d1b4:	23 17       	cp	r18, r19
    d1b6:	70 f3       	brcs	.-36     	; 0xd194 <ProcessSprites+0x15c>


		//restore BG tiles
		RestoreBackground();

	}
    d1b8:	0f 90       	pop	r0
    d1ba:	0f 90       	pop	r0
    d1bc:	0f 90       	pop	r0
    d1be:	cf 91       	pop	r28
    d1c0:	df 91       	pop	r29
    d1c2:	1f 91       	pop	r17
    d1c4:	0f 91       	pop	r16
    d1c6:	ff 90       	pop	r15
    d1c8:	ef 90       	pop	r14
    d1ca:	df 90       	pop	r13
    d1cc:	cf 90       	pop	r12
    d1ce:	bf 90       	pop	r11
    d1d0:	af 90       	pop	r10
    d1d2:	9f 90       	pop	r9
    d1d4:	8f 90       	pop	r8
    d1d6:	7f 90       	pop	r7
    d1d8:	6f 90       	pop	r6
    d1da:	5f 90       	pop	r5
    d1dc:	4f 90       	pop	r4
    d1de:	3f 90       	pop	r3
    d1e0:	2f 90       	pop	r2
    d1e2:	08 95       	ret

0000d1e4 <VideoModeVsync>:
	}

	//Callback invoked during hsync
	void VideoModeVsync(){
		
		ProcessFading();
    d1e4:	0e 94 4d 67 	call	0xce9a	; 0xce9a <ProcessFading>
		ProcessSprites();
    d1e8:	0e 94 1c 68 	call	0xd038	; 0xd038 <ProcessSprites>

	}
    d1ec:	08 95       	ret

0000d1ee <is_level_done>:
}

/**
 * Returns, if level is done
 */
uint8_t is_level_done() {
    d1ee:	ef 92       	push	r14
    d1f0:	ff 92       	push	r15
    d1f2:	0f 93       	push	r16
    d1f4:	1f 93       	push	r17
    d1f6:	cf 93       	push	r28
    d1f8:	df 93       	push	r29
    d1fa:	af e0       	ldi	r26, 0x0F	; 15
    d1fc:	7f e0       	ldi	r23, 0x0F	; 15
    d1fe:	20 e0       	ldi	r18, 0x00	; 0
    d200:	30 e0       	ldi	r19, 0x00	; 0
    d202:	13 c0       	rjmp	.+38     	; 0xd22a <is_level_done+0x3c>
	uint8_t molecule_offset_x = LEVEL_FIELD_WIDTH;
	uint8_t molecule_offset_y = LEVEL_FIELD_HEIGHT;

	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_FIELD_HEIGHT; y++) {
			if ((level_field[x + y * LEVEL_FIELD_WIDTH] >= TILE_FIRST_ATOM) && (level_field[x + y * LEVEL_FIELD_WIDTH] <= TILE_LAST_ATOM)) {
    d204:	80 81       	ld	r24, Z
    d206:	83 50       	subi	r24, 0x03	; 3
    d208:	83 34       	cpi	r24, 0x43	; 67
    d20a:	30 f4       	brcc	.+12     	; 0xd218 <is_level_done+0x2a>
    d20c:	9a 17       	cp	r25, r26
    d20e:	08 f4       	brcc	.+2      	; 0xd212 <is_level_done+0x24>
    d210:	a9 2f       	mov	r26, r25
				if (x < molecule_offset_x) {
					molecule_offset_x = x;
				}
				if (y < molecule_offset_y) {
    d212:	67 17       	cp	r22, r23
    d214:	08 f4       	brcc	.+2      	; 0xd218 <is_level_done+0x2a>
    d216:	76 2f       	mov	r23, r22
uint8_t is_level_done() {
	uint8_t molecule_offset_x = LEVEL_FIELD_WIDTH;
	uint8_t molecule_offset_y = LEVEL_FIELD_HEIGHT;

	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_FIELD_HEIGHT; y++) {
    d218:	6f 5f       	subi	r22, 0xFF	; 255
    d21a:	3f 96       	adiw	r30, 0x0f	; 15
    d21c:	6f 30       	cpi	r22, 0x0F	; 15
    d21e:	91 f7       	brne	.-28     	; 0xd204 <is_level_done+0x16>
    d220:	2f 5f       	subi	r18, 0xFF	; 255
    d222:	3f 4f       	sbci	r19, 0xFF	; 255
 */
uint8_t is_level_done() {
	uint8_t molecule_offset_x = LEVEL_FIELD_WIDTH;
	uint8_t molecule_offset_y = LEVEL_FIELD_HEIGHT;

	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
    d224:	2f 30       	cpi	r18, 0x0F	; 15
    d226:	31 05       	cpc	r19, r1
    d228:	31 f0       	breq	.+12     	; 0xd236 <is_level_done+0x48>
    d22a:	92 2f       	mov	r25, r18
    d22c:	f9 01       	movw	r30, r18
    d22e:	e2 53       	subi	r30, 0x32	; 50
    d230:	f2 4f       	sbci	r31, 0xF2	; 242
    d232:	60 e0       	ldi	r22, 0x00	; 0
    d234:	e7 cf       	rjmp	.-50     	; 0xd204 <is_level_done+0x16>
		}
	}

	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
			char molecule_atom = pgm_read_byte(&(levels[(level - 1) * LEVEL_BYTE_SIZE + LEVEL_NAME_LENGTH + LEVEL_FIELD_WIDTH * LEVEL_FIELD_HEIGHT + x + y * LEVEL_MOLECULE_WIDTH]));
    d236:	80 91 5c 0d 	lds	r24, 0x0D5C
    d23a:	90 e0       	ldi	r25, 0x00	; 0
    d23c:	01 97       	sbiw	r24, 0x01	; 1
    d23e:	2b e3       	ldi	r18, 0x3B	; 59
    d240:	31 e0       	ldi	r19, 0x01	; 1
    d242:	82 9f       	mul	r24, r18
    d244:	a0 01       	movw	r20, r0
    d246:	83 9f       	mul	r24, r19
    d248:	50 0d       	add	r21, r0
    d24a:	92 9f       	mul	r25, r18
    d24c:	50 0d       	add	r21, r0
    d24e:	11 24       	eor	r1, r1
    d250:	76 9f       	mul	r23, r22
    d252:	90 01       	movw	r18, r0
    d254:	11 24       	eor	r1, r1
    d256:	8a 2f       	mov	r24, r26
    d258:	90 e0       	ldi	r25, 0x00	; 0
    d25a:	e9 01       	movw	r28, r18
    d25c:	c8 0f       	add	r28, r24
    d25e:	d9 1f       	adc	r29, r25
    d260:	9e 01       	movw	r18, r28
    d262:	2a 5b       	subi	r18, 0xBA	; 186
    d264:	31 4f       	sbci	r19, 0xF1	; 241
    d266:	da 01       	movw	r26, r20
    d268:	a0 56       	subi	r26, 0x60	; 96
    d26a:	b8 4a       	sbci	r27, 0xA8	; 168
				}
			}
		}
	}

	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
    d26c:	8a 01       	movw	r16, r20
    d26e:	08 55       	subi	r16, 0x58	; 88
    d270:	18 4a       	sbci	r17, 0xA8	; 168
    d272:	1d c0       	rjmp	.+58     	; 0xd2ae <is_level_done+0xc0>
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
			char molecule_atom = pgm_read_byte(&(levels[(level - 1) * LEVEL_BYTE_SIZE + LEVEL_NAME_LENGTH + LEVEL_FIELD_WIDTH * LEVEL_FIELD_HEIGHT + x + y * LEVEL_MOLECULE_WIDTH]));
    d274:	fb 01       	movw	r30, r22
    d276:	94 91       	lpm	r25, Z+
			char field_atom = level_field[(x + molecule_offset_x) + (y + molecule_offset_y) * LEVEL_FIELD_WIDTH];
    d278:	f7 01       	movw	r30, r14
    d27a:	40 81       	ld	r20, Z

			if ((molecule_atom >= TILE_FIRST_ATOM) && (molecule_atom <= TILE_LAST_ATOM)) {
    d27c:	89 2f       	mov	r24, r25
    d27e:	83 50       	subi	r24, 0x03	; 3
    d280:	83 34       	cpi	r24, 0x43	; 67
    d282:	10 f4       	brcc	.+4      	; 0xd288 <is_level_done+0x9a>
				if (molecule_atom != field_atom) {
    d284:	94 17       	cp	r25, r20
    d286:	d9 f4       	brne	.+54     	; 0xd2be <is_level_done+0xd0>
    d288:	68 5f       	subi	r22, 0xF8	; 248
    d28a:	7f 4f       	sbci	r23, 0xFF	; 255
    d28c:	8f e0       	ldi	r24, 0x0F	; 15
    d28e:	90 e0       	ldi	r25, 0x00	; 0
    d290:	e8 0e       	add	r14, r24
    d292:	f9 1e       	adc	r15, r25
			}
		}
	}

	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
    d294:	e2 16       	cp	r14, r18
    d296:	f3 06       	cpc	r15, r19
    d298:	69 f7       	brne	.-38     	; 0xd274 <is_level_done+0x86>
    d29a:	21 96       	adiw	r28, 0x01	; 1
    d29c:	97 01       	movw	r18, r14
    d29e:	2f 5f       	subi	r18, 0xFF	; 255
    d2a0:	3f 4f       	sbci	r19, 0xFF	; 255
    d2a2:	11 96       	adiw	r26, 0x01	; 1
				}
			}
		}
	}

	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
    d2a4:	a0 17       	cp	r26, r16
    d2a6:	b1 07       	cpc	r27, r17
    d2a8:	11 f4       	brne	.+4      	; 0xd2ae <is_level_done+0xc0>
    d2aa:	81 e0       	ldi	r24, 0x01	; 1
    d2ac:	09 c0       	rjmp	.+18     	; 0xd2c0 <is_level_done+0xd2>
    d2ae:	8e ec       	ldi	r24, 0xCE	; 206
    d2b0:	e8 2e       	mov	r14, r24
    d2b2:	8d e0       	ldi	r24, 0x0D	; 13
    d2b4:	f8 2e       	mov	r15, r24
    d2b6:	ec 0e       	add	r14, r28
    d2b8:	fd 1e       	adc	r15, r29
    d2ba:	bd 01       	movw	r22, r26
    d2bc:	db cf       	rjmp	.-74     	; 0xd274 <is_level_done+0x86>
    d2be:	80 e0       	ldi	r24, 0x00	; 0
			}
		}
	}

	return true;
}
    d2c0:	df 91       	pop	r29
    d2c2:	cf 91       	pop	r28
    d2c4:	1f 91       	pop	r17
    d2c6:	0f 91       	pop	r16
    d2c8:	ff 90       	pop	r15
    d2ca:	ef 90       	pop	r14
    d2cc:	08 95       	ret

0000d2ce <vsync_callback>:

/**
 * Vsync callback to measure time
 */
void vsync_callback() {
	time++;
    d2ce:	80 91 da 0e 	lds	r24, 0x0EDA
    d2d2:	90 91 db 0e 	lds	r25, 0x0EDB
    d2d6:	a0 91 dc 0e 	lds	r26, 0x0EDC
    d2da:	b0 91 dd 0e 	lds	r27, 0x0EDD
    d2de:	01 96       	adiw	r24, 0x01	; 1
    d2e0:	a1 1d       	adc	r26, r1
    d2e2:	b1 1d       	adc	r27, r1
    d2e4:	80 93 da 0e 	sts	0x0EDA, r24
    d2e8:	90 93 db 0e 	sts	0x0EDB, r25
    d2ec:	a0 93 dc 0e 	sts	0x0EDC, r26
    d2f0:	b0 93 dd 0e 	sts	0x0EDD, r27
}
    d2f4:	08 95       	ret

0000d2f6 <draw_name>:

/**
 * Draws level (molecule) name
 */
void draw_name() {
	Print(SCREEN_TEXT_X, SCREEN_TEXT_Y, PSTR("LEVEL"));
    d2f6:	83 e0       	ldi	r24, 0x03	; 3
    d2f8:	90 e0       	ldi	r25, 0x00	; 0
    d2fa:	65 e1       	ldi	r22, 0x15	; 21
    d2fc:	70 e0       	ldi	r23, 0x00	; 0
    d2fe:	49 ef       	ldi	r20, 0xF9	; 249
    d300:	5a ea       	ldi	r21, 0xAA	; 170
    d302:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
	if (level < 10) {
    d306:	40 91 5c 0d 	lds	r20, 0x0D5C
    d30a:	4a 30       	cpi	r20, 0x0A	; 10
    d30c:	50 f4       	brcc	.+20     	; 0xd322 <draw_name+0x2c>
		PrintChar(SCREEN_TEXT_X + 6, SCREEN_TEXT_Y, '0' + level);
    d30e:	40 5d       	subi	r20, 0xD0	; 208
    d310:	89 e0       	ldi	r24, 0x09	; 9
    d312:	90 e0       	ldi	r25, 0x00	; 0
    d314:	65 e1       	ldi	r22, 0x15	; 21
    d316:	70 e0       	ldi	r23, 0x00	; 0
    d318:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(SCREEN_TEXT_X + 7, SCREEN_TEXT_Y, ':');
    d31c:	8a e0       	ldi	r24, 0x0A	; 10
    d31e:	90 e0       	ldi	r25, 0x00	; 0
    d320:	1b c0       	rjmp	.+54     	; 0xd358 <draw_name+0x62>
	} else {
		PrintChar(SCREEN_TEXT_X + 6, SCREEN_TEXT_Y, '0' + (level / 10));
    d322:	84 2f       	mov	r24, r20
    d324:	6a e0       	ldi	r22, 0x0A	; 10
    d326:	0e 94 16 71 	call	0xe22c	; 0xe22c <__udivmodqi4>
    d32a:	48 2f       	mov	r20, r24
    d32c:	40 5d       	subi	r20, 0xD0	; 208
    d32e:	89 e0       	ldi	r24, 0x09	; 9
    d330:	90 e0       	ldi	r25, 0x00	; 0
    d332:	65 e1       	ldi	r22, 0x15	; 21
    d334:	70 e0       	ldi	r23, 0x00	; 0
    d336:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(SCREEN_TEXT_X + 7, SCREEN_TEXT_Y, '0' + (level % 10));
    d33a:	80 91 5c 0d 	lds	r24, 0x0D5C
    d33e:	6a e0       	ldi	r22, 0x0A	; 10
    d340:	0e 94 16 71 	call	0xe22c	; 0xe22c <__udivmodqi4>
    d344:	49 2f       	mov	r20, r25
    d346:	40 5d       	subi	r20, 0xD0	; 208
    d348:	8a e0       	ldi	r24, 0x0A	; 10
    d34a:	90 e0       	ldi	r25, 0x00	; 0
    d34c:	65 e1       	ldi	r22, 0x15	; 21
    d34e:	70 e0       	ldi	r23, 0x00	; 0
    d350:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(SCREEN_TEXT_X + 8, SCREEN_TEXT_Y, ':');
    d354:	8b e0       	ldi	r24, 0x0B	; 11
    d356:	90 e0       	ldi	r25, 0x00	; 0
    d358:	65 e1       	ldi	r22, 0x15	; 21
    d35a:	70 e0       	ldi	r23, 0x00	; 0
    d35c:	4a e3       	ldi	r20, 0x3A	; 58
    d35e:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
	}
	Print(SCREEN_TEXT_X, SCREEN_TEXT_Y + 2, levels + (level - 1) * LEVEL_BYTE_SIZE);
    d362:	80 91 5c 0d 	lds	r24, 0x0D5C
    d366:	90 e0       	ldi	r25, 0x00	; 0
    d368:	01 97       	sbiw	r24, 0x01	; 1
    d36a:	2b e3       	ldi	r18, 0x3B	; 59
    d36c:	31 e0       	ldi	r19, 0x01	; 1
    d36e:	82 9f       	mul	r24, r18
    d370:	a0 01       	movw	r20, r0
    d372:	83 9f       	mul	r24, r19
    d374:	50 0d       	add	r21, r0
    d376:	92 9f       	mul	r25, r18
    d378:	50 0d       	add	r21, r0
    d37a:	11 24       	eor	r1, r1
    d37c:	4b 55       	subi	r20, 0x5B	; 91
    d37e:	59 4a       	sbci	r21, 0xA9	; 169
    d380:	83 e0       	ldi	r24, 0x03	; 3
    d382:	90 e0       	ldi	r25, 0x00	; 0
    d384:	67 e1       	ldi	r22, 0x17	; 23
    d386:	70 e0       	ldi	r23, 0x00	; 0
    d388:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
}
    d38c:	08 95       	ret

0000d38e <print_time>:
 * Prints an uint32_t as time
 * @param uint8_t x x coordinate on screen
 * @param uint8_t y y coordinate on screen
 * @param uint32_t val value to print
 */
void print_time(uint8_t x, uint8_t y, uint32_t val) {
    d38e:	cf 92       	push	r12
    d390:	df 92       	push	r13
    d392:	ef 92       	push	r14
    d394:	ff 92       	push	r15
    d396:	0f 93       	push	r16
    d398:	1f 93       	push	r17
    d39a:	cf 93       	push	r28
    d39c:	df 93       	push	r29
    d39e:	d8 2e       	mov	r13, r24
    d3a0:	c6 2e       	mov	r12, r22
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    d3a2:	ca 01       	movw	r24, r20
    d3a4:	b9 01       	movw	r22, r18
    d3a6:	2c e3       	ldi	r18, 0x3C	; 60
    d3a8:	30 e0       	ldi	r19, 0x00	; 0
    d3aa:	40 e0       	ldi	r20, 0x00	; 0
    d3ac:	50 e0       	ldi	r21, 0x00	; 0
    d3ae:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d3b2:	12 2f       	mov	r17, r18
    d3b4:	03 2f       	mov	r16, r19
    d3b6:	f4 2e       	mov	r15, r20
    d3b8:	e5 2e       	mov	r14, r21
	PrintChar(x - 0, y, '0' + (tmp % 10));
    d3ba:	cd 2d       	mov	r28, r13
    d3bc:	d0 e0       	ldi	r29, 0x00	; 0
    d3be:	62 2f       	mov	r22, r18
    d3c0:	73 2f       	mov	r23, r19
    d3c2:	84 2f       	mov	r24, r20
    d3c4:	95 2f       	mov	r25, r21
    d3c6:	2a e0       	ldi	r18, 0x0A	; 10
    d3c8:	30 e0       	ldi	r19, 0x00	; 0
    d3ca:	40 e0       	ldi	r20, 0x00	; 0
    d3cc:	50 e0       	ldi	r21, 0x00	; 0
    d3ce:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d3d2:	46 2f       	mov	r20, r22
    d3d4:	40 5d       	subi	r20, 0xD0	; 208
    d3d6:	ce 01       	movw	r24, r28
    d3d8:	6c 2d       	mov	r22, r12
    d3da:	70 e0       	ldi	r23, 0x00	; 0
    d3dc:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
	PrintChar(x - 1, y, '0' + ((tmp / 10) % 6));
    d3e0:	61 2f       	mov	r22, r17
    d3e2:	70 2f       	mov	r23, r16
    d3e4:	8f 2d       	mov	r24, r15
    d3e6:	9e 2d       	mov	r25, r14
    d3e8:	2a e0       	ldi	r18, 0x0A	; 10
    d3ea:	30 e0       	ldi	r19, 0x00	; 0
    d3ec:	40 e0       	ldi	r20, 0x00	; 0
    d3ee:	50 e0       	ldi	r21, 0x00	; 0
    d3f0:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d3f4:	ca 01       	movw	r24, r20
    d3f6:	b9 01       	movw	r22, r18
    d3f8:	26 e0       	ldi	r18, 0x06	; 6
    d3fa:	30 e0       	ldi	r19, 0x00	; 0
    d3fc:	40 e0       	ldi	r20, 0x00	; 0
    d3fe:	50 e0       	ldi	r21, 0x00	; 0
    d400:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d404:	46 2f       	mov	r20, r22
    d406:	40 5d       	subi	r20, 0xD0	; 208
    d408:	ce 01       	movw	r24, r28
    d40a:	01 97       	sbiw	r24, 0x01	; 1
    d40c:	6c 2d       	mov	r22, r12
    d40e:	70 e0       	ldi	r23, 0x00	; 0
    d410:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
	tmp /= 60;
    d414:	61 2f       	mov	r22, r17
    d416:	70 2f       	mov	r23, r16
    d418:	8f 2d       	mov	r24, r15
    d41a:	9e 2d       	mov	r25, r14
    d41c:	2c e3       	ldi	r18, 0x3C	; 60
    d41e:	30 e0       	ldi	r19, 0x00	; 0
    d420:	40 e0       	ldi	r20, 0x00	; 0
    d422:	50 e0       	ldi	r21, 0x00	; 0
    d424:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d428:	79 01       	movw	r14, r18
    d42a:	8a 01       	movw	r16, r20
	if (tmp > 0) {
    d42c:	e1 14       	cp	r14, r1
    d42e:	f1 04       	cpc	r15, r1
    d430:	01 05       	cpc	r16, r1
    d432:	11 05       	cpc	r17, r1
    d434:	79 f1       	breq	.+94     	; 0xd494 <print_time+0x106>
		PrintChar(x - 2, y, ':');
    d436:	ce 01       	movw	r24, r28
    d438:	02 97       	sbiw	r24, 0x02	; 2
    d43a:	6c 2d       	mov	r22, r12
    d43c:	70 e0       	ldi	r23, 0x00	; 0
    d43e:	4a e3       	ldi	r20, 0x3A	; 58
    d440:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(x - 3, y, '0' + (tmp % 10));
    d444:	c8 01       	movw	r24, r16
    d446:	b7 01       	movw	r22, r14
    d448:	2a e0       	ldi	r18, 0x0A	; 10
    d44a:	30 e0       	ldi	r19, 0x00	; 0
    d44c:	40 e0       	ldi	r20, 0x00	; 0
    d44e:	50 e0       	ldi	r21, 0x00	; 0
    d450:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d454:	46 2f       	mov	r20, r22
    d456:	40 5d       	subi	r20, 0xD0	; 208
    d458:	ce 01       	movw	r24, r28
    d45a:	03 97       	sbiw	r24, 0x03	; 3
    d45c:	6c 2d       	mov	r22, r12
    d45e:	70 e0       	ldi	r23, 0x00	; 0
    d460:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(x - 4, y, '0' + ((tmp / 10) % 6));
    d464:	c8 01       	movw	r24, r16
    d466:	b7 01       	movw	r22, r14
    d468:	2a e0       	ldi	r18, 0x0A	; 10
    d46a:	30 e0       	ldi	r19, 0x00	; 0
    d46c:	40 e0       	ldi	r20, 0x00	; 0
    d46e:	50 e0       	ldi	r21, 0x00	; 0
    d470:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d474:	ca 01       	movw	r24, r20
    d476:	b9 01       	movw	r22, r18
    d478:	26 e0       	ldi	r18, 0x06	; 6
    d47a:	30 e0       	ldi	r19, 0x00	; 0
    d47c:	40 e0       	ldi	r20, 0x00	; 0
    d47e:	50 e0       	ldi	r21, 0x00	; 0
    d480:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d484:	46 2f       	mov	r20, r22
    d486:	40 5d       	subi	r20, 0xD0	; 208
    d488:	ce 01       	movw	r24, r28
    d48a:	04 97       	sbiw	r24, 0x04	; 4
    d48c:	6c 2d       	mov	r22, r12
    d48e:	70 e0       	ldi	r23, 0x00	; 0
    d490:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
	}
	tmp /= 60;
    d494:	c8 01       	movw	r24, r16
    d496:	b7 01       	movw	r22, r14
    d498:	2c e3       	ldi	r18, 0x3C	; 60
    d49a:	30 e0       	ldi	r19, 0x00	; 0
    d49c:	40 e0       	ldi	r20, 0x00	; 0
    d49e:	50 e0       	ldi	r21, 0x00	; 0
    d4a0:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d4a4:	79 01       	movw	r14, r18
    d4a6:	8a 01       	movw	r16, r20
	if (tmp > 0) {
    d4a8:	e1 14       	cp	r14, r1
    d4aa:	f1 04       	cpc	r15, r1
    d4ac:	01 05       	cpc	r16, r1
    d4ae:	11 05       	cpc	r17, r1
    d4b0:	79 f1       	breq	.+94     	; 0xd510 <print_time+0x182>
		PrintChar(x - 5, y, ':');
    d4b2:	ce 01       	movw	r24, r28
    d4b4:	05 97       	sbiw	r24, 0x05	; 5
    d4b6:	6c 2d       	mov	r22, r12
    d4b8:	70 e0       	ldi	r23, 0x00	; 0
    d4ba:	4a e3       	ldi	r20, 0x3A	; 58
    d4bc:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(x - 6, y, '0' + (tmp % 10));
    d4c0:	c8 01       	movw	r24, r16
    d4c2:	b7 01       	movw	r22, r14
    d4c4:	2a e0       	ldi	r18, 0x0A	; 10
    d4c6:	30 e0       	ldi	r19, 0x00	; 0
    d4c8:	40 e0       	ldi	r20, 0x00	; 0
    d4ca:	50 e0       	ldi	r21, 0x00	; 0
    d4cc:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d4d0:	46 2f       	mov	r20, r22
    d4d2:	40 5d       	subi	r20, 0xD0	; 208
    d4d4:	ce 01       	movw	r24, r28
    d4d6:	06 97       	sbiw	r24, 0x06	; 6
    d4d8:	6c 2d       	mov	r22, r12
    d4da:	70 e0       	ldi	r23, 0x00	; 0
    d4dc:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
		PrintChar(x - 7, y, '0' + ((tmp / 10) % 10));
    d4e0:	c8 01       	movw	r24, r16
    d4e2:	b7 01       	movw	r22, r14
    d4e4:	2a e0       	ldi	r18, 0x0A	; 10
    d4e6:	30 e0       	ldi	r19, 0x00	; 0
    d4e8:	40 e0       	ldi	r20, 0x00	; 0
    d4ea:	50 e0       	ldi	r21, 0x00	; 0
    d4ec:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d4f0:	ca 01       	movw	r24, r20
    d4f2:	b9 01       	movw	r22, r18
    d4f4:	2a e0       	ldi	r18, 0x0A	; 10
    d4f6:	30 e0       	ldi	r19, 0x00	; 0
    d4f8:	40 e0       	ldi	r20, 0x00	; 0
    d4fa:	50 e0       	ldi	r21, 0x00	; 0
    d4fc:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d500:	46 2f       	mov	r20, r22
    d502:	40 5d       	subi	r20, 0xD0	; 208
    d504:	ce 01       	movw	r24, r28
    d506:	07 97       	sbiw	r24, 0x07	; 7
    d508:	6c 2d       	mov	r22, r12
    d50a:	70 e0       	ldi	r23, 0x00	; 0
    d50c:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
	}
}
    d510:	df 91       	pop	r29
    d512:	cf 91       	pop	r28
    d514:	1f 91       	pop	r17
    d516:	0f 91       	pop	r16
    d518:	ff 90       	pop	r15
    d51a:	ef 90       	pop	r14
    d51c:	df 90       	pop	r13
    d51e:	cf 90       	pop	r12
    d520:	08 95       	ret

0000d522 <print_long_8>:
 * Prints an uint32_t in decimal to max 8 tiles
 * @param uint8_t x x coordinate on screen
 * @param uint8_t y y coordinate on screen
 * @param uint32_t val value to print
 */
void print_long_8(uint8_t x,uint8_t y, uint32_t val){
    d522:	af 92       	push	r10
    d524:	bf 92       	push	r11
    d526:	cf 92       	push	r12
    d528:	df 92       	push	r13
    d52a:	ef 92       	push	r14
    d52c:	ff 92       	push	r15
    d52e:	0f 93       	push	r16
    d530:	1f 93       	push	r17
    d532:	a8 2e       	mov	r10, r24
    d534:	b6 2e       	mov	r11, r22
    d536:	79 01       	movw	r14, r18
    d538:	8a 01       	movw	r16, r20
    d53a:	cc 24       	eor	r12, r12
    d53c:	da 2c       	mov	r13, r10
    d53e:	dc 18       	sub	r13, r12
	unsigned char c,i;

	for(i=0;i<8;i++){
		c=val%10;
		if(val>0 || i==0){
    d540:	e1 14       	cp	r14, r1
    d542:	f1 04       	cpc	r15, r1
    d544:	01 05       	cpc	r16, r1
    d546:	11 05       	cpc	r17, r1
    d548:	11 f4       	brne	.+4      	; 0xd54e <print_long_8+0x2c>
    d54a:	cc 20       	and	r12, r12
    d54c:	79 f4       	brne	.+30     	; 0xd56c <print_long_8+0x4a>
			PrintChar(x--,y,c+'0');
    d54e:	c8 01       	movw	r24, r16
    d550:	b7 01       	movw	r22, r14
    d552:	2a e0       	ldi	r18, 0x0A	; 10
    d554:	30 e0       	ldi	r19, 0x00	; 0
    d556:	40 e0       	ldi	r20, 0x00	; 0
    d558:	50 e0       	ldi	r21, 0x00	; 0
    d55a:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d55e:	46 2f       	mov	r20, r22
    d560:	40 5d       	subi	r20, 0xD0	; 208
    d562:	8d 2d       	mov	r24, r13
    d564:	90 e0       	ldi	r25, 0x00	; 0
    d566:	6b 2d       	mov	r22, r11
    d568:	70 e0       	ldi	r23, 0x00	; 0
    d56a:	05 c0       	rjmp	.+10     	; 0xd576 <print_long_8+0x54>
		}else{
			PrintChar(x--,y,' ');
    d56c:	8d 2d       	mov	r24, r13
    d56e:	90 e0       	ldi	r25, 0x00	; 0
    d570:	6b 2d       	mov	r22, r11
    d572:	70 e0       	ldi	r23, 0x00	; 0
    d574:	40 e2       	ldi	r20, 0x20	; 32
    d576:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
 * @param uint32_t val value to print
 */
void print_long_8(uint8_t x,uint8_t y, uint32_t val){
	unsigned char c,i;

	for(i=0;i<8;i++){
    d57a:	c3 94       	inc	r12
    d57c:	88 e0       	ldi	r24, 0x08	; 8
    d57e:	c8 16       	cp	r12, r24
    d580:	69 f0       	breq	.+26     	; 0xd59c <print_long_8+0x7a>
		if(val>0 || i==0){
			PrintChar(x--,y,c+'0');
		}else{
			PrintChar(x--,y,' ');
		}
		val=val/10;
    d582:	c8 01       	movw	r24, r16
    d584:	b7 01       	movw	r22, r14
    d586:	2a e0       	ldi	r18, 0x0A	; 10
    d588:	30 e0       	ldi	r19, 0x00	; 0
    d58a:	40 e0       	ldi	r20, 0x00	; 0
    d58c:	50 e0       	ldi	r21, 0x00	; 0
    d58e:	0e 94 22 71 	call	0xe244	; 0xe244 <__udivmodsi4>
    d592:	c9 01       	movw	r24, r18
    d594:	da 01       	movw	r26, r20
    d596:	7c 01       	movw	r14, r24
    d598:	8d 01       	movw	r16, r26
    d59a:	d0 cf       	rjmp	.-96     	; 0xd53c <print_long_8+0x1a>
	}
}
    d59c:	1f 91       	pop	r17
    d59e:	0f 91       	pop	r16
    d5a0:	ff 90       	pop	r15
    d5a2:	ef 90       	pop	r14
    d5a4:	df 90       	pop	r13
    d5a6:	cf 90       	pop	r12
    d5a8:	bf 90       	pop	r11
    d5aa:	af 90       	pop	r10
    d5ac:	08 95       	ret

0000d5ae <draw_statistics>:

/**
 * Draws statistics of level
 */
void draw_statistics() {
	Print(SCREEN_STATISTICS_X, SCREEN_STATISTICS_Y, PSTR("TIME:"));
    d5ae:	83 e1       	ldi	r24, 0x13	; 19
    d5b0:	90 e0       	ldi	r25, 0x00	; 0
    d5b2:	6e e0       	ldi	r22, 0x0E	; 14
    d5b4:	70 e0       	ldi	r23, 0x00	; 0
    d5b6:	4c e0       	ldi	r20, 0x0C	; 12
    d5b8:	5b ea       	ldi	r21, 0xAB	; 171
    d5ba:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
	Print(SCREEN_STATISTICS_X, SCREEN_STATISTICS_Y+2, PSTR("MOVES:"));
    d5be:	83 e1       	ldi	r24, 0x13	; 19
    d5c0:	90 e0       	ldi	r25, 0x00	; 0
    d5c2:	60 e1       	ldi	r22, 0x10	; 16
    d5c4:	70 e0       	ldi	r23, 0x00	; 0
    d5c6:	45 e0       	ldi	r20, 0x05	; 5
    d5c8:	5b ea       	ldi	r21, 0xAB	; 171
    d5ca:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
	Print(SCREEN_STATISTICS_X, SCREEN_STATISTICS_Y+4, PSTR("DIST:"));
    d5ce:	83 e1       	ldi	r24, 0x13	; 19
    d5d0:	90 e0       	ldi	r25, 0x00	; 0
    d5d2:	62 e1       	ldi	r22, 0x12	; 18
    d5d4:	70 e0       	ldi	r23, 0x00	; 0
    d5d6:	4f ef       	ldi	r20, 0xFF	; 255
    d5d8:	5a ea       	ldi	r21, 0xAA	; 170
    d5da:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>

	print_time(SCREEN_STATISTICS_X + 7, SCREEN_STATISTICS_Y + 1, time);
    d5de:	20 91 da 0e 	lds	r18, 0x0EDA
    d5e2:	30 91 db 0e 	lds	r19, 0x0EDB
    d5e6:	40 91 dc 0e 	lds	r20, 0x0EDC
    d5ea:	50 91 dd 0e 	lds	r21, 0x0EDD
    d5ee:	8a e1       	ldi	r24, 0x1A	; 26
    d5f0:	6f e0       	ldi	r22, 0x0F	; 15
    d5f2:	0e 94 c7 69 	call	0xd38e	; 0xd38e <print_time>
	print_long_8(SCREEN_STATISTICS_X + 7, SCREEN_STATISTICS_Y + 3, moves);
    d5f6:	20 91 b0 0e 	lds	r18, 0x0EB0
    d5fa:	30 91 b1 0e 	lds	r19, 0x0EB1
    d5fe:	40 91 b2 0e 	lds	r20, 0x0EB2
    d602:	50 91 b3 0e 	lds	r21, 0x0EB3
    d606:	8a e1       	ldi	r24, 0x1A	; 26
    d608:	61 e1       	ldi	r22, 0x11	; 17
    d60a:	0e 94 91 6a 	call	0xd522	; 0xd522 <print_long_8>
	print_long_8(SCREEN_STATISTICS_X + 7, SCREEN_STATISTICS_Y + 5, distance);
    d60e:	20 91 b5 0e 	lds	r18, 0x0EB5
    d612:	30 91 b6 0e 	lds	r19, 0x0EB6
    d616:	40 91 b7 0e 	lds	r20, 0x0EB7
    d61a:	50 91 b8 0e 	lds	r21, 0x0EB8
    d61e:	8a e1       	ldi	r24, 0x1A	; 26
    d620:	63 e1       	ldi	r22, 0x13	; 19
    d622:	0e 94 91 6a 	call	0xd522	; 0xd522 <print_long_8>
}
    d626:	08 95       	ret

0000d628 <draw_arrow>:
}

/**
 * Draws arrow at specified point on screen, if field is floor
 */
void draw_arrow(uint8_t x, uint8_t y, uint8_t tile) {
    d628:	28 2f       	mov	r18, r24
	if (level_field[x + y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    d62a:	86 2f       	mov	r24, r22
    d62c:	90 e0       	ldi	r25, 0x00	; 0
    d62e:	fc 01       	movw	r30, r24
    d630:	34 e0       	ldi	r19, 0x04	; 4
    d632:	ee 0f       	add	r30, r30
    d634:	ff 1f       	adc	r31, r31
    d636:	3a 95       	dec	r19
    d638:	e1 f7       	brne	.-8      	; 0xd632 <draw_arrow+0xa>
    d63a:	e8 1b       	sub	r30, r24
    d63c:	f9 0b       	sbc	r31, r25
    d63e:	e2 0f       	add	r30, r18
    d640:	f1 1d       	adc	r31, r1
    d642:	e2 53       	subi	r30, 0x32	; 50
    d644:	f2 4f       	sbci	r31, 0xF2	; 242
    d646:	80 81       	ld	r24, Z
    d648:	82 30       	cpi	r24, 0x02	; 2
    d64a:	31 f4       	brne	.+12     	; 0xd658 <draw_arrow+0x30>
		SetTile(SCREEN_FIELD_X + x, SCREEN_FIELD_Y + y, tile);
    d64c:	6b 5f       	subi	r22, 0xFB	; 251
    d64e:	82 2f       	mov	r24, r18
    d650:	8d 5f       	subi	r24, 0xFD	; 253
    d652:	50 e0       	ldi	r21, 0x00	; 0
    d654:	0e 94 3e 5a 	call	0xb47c	; 0xb47c <SetTile>
    d658:	08 95       	ret

0000d65a <draw_cursor>:

/**
 * Draws cursor
 */
void draw_cursor() {
	if (holding_atom) {
    d65a:	80 91 af 0e 	lds	r24, 0x0EAF
    d65e:	60 91 b4 0e 	lds	r22, 0x0EB4
    d662:	88 23       	and	r24, r24
    d664:	19 f1       	breq	.+70     	; 0xd6ac <draw_cursor+0x52>
		sprites[SPRITE_CURSOR].tileIndex = holding_atom;
    d666:	80 93 6a 04 	sts	0x046A, r24
    d66a:	10 92 6b 04 	sts	0x046B, r1
		draw_arrow(cursor_x, cursor_y - 1, TILE_ARROW_UP);
    d66e:	61 50       	subi	r22, 0x01	; 1
    d670:	80 91 de 0e 	lds	r24, 0x0EDE
    d674:	4a e4       	ldi	r20, 0x4A	; 74
    d676:	0e 94 14 6b 	call	0xd628	; 0xd628 <draw_arrow>
		draw_arrow(cursor_x + 1, cursor_y, TILE_ARROW_RIGHT);
    d67a:	80 91 de 0e 	lds	r24, 0x0EDE
    d67e:	8f 5f       	subi	r24, 0xFF	; 255
    d680:	60 91 b4 0e 	lds	r22, 0x0EB4
    d684:	4b e4       	ldi	r20, 0x4B	; 75
    d686:	0e 94 14 6b 	call	0xd628	; 0xd628 <draw_arrow>
		draw_arrow(cursor_x, cursor_y + 1, TILE_ARROW_DOWN);
    d68a:	60 91 b4 0e 	lds	r22, 0x0EB4
    d68e:	6f 5f       	subi	r22, 0xFF	; 255
    d690:	80 91 de 0e 	lds	r24, 0x0EDE
    d694:	4c e4       	ldi	r20, 0x4C	; 76
    d696:	0e 94 14 6b 	call	0xd628	; 0xd628 <draw_arrow>
		draw_arrow(cursor_x - 1, cursor_y, TILE_ARROW_LEFT);
    d69a:	80 91 de 0e 	lds	r24, 0x0EDE
    d69e:	81 50       	subi	r24, 0x01	; 1
    d6a0:	60 91 b4 0e 	lds	r22, 0x0EB4
    d6a4:	4d e4       	ldi	r20, 0x4D	; 77
    d6a6:	0e 94 14 6b 	call	0xd628	; 0xd628 <draw_arrow>
    d6aa:	08 95       	ret
	} else {
		cursor_animation = (cursor_animation + 1) % 4;
    d6ac:	80 91 d9 0e 	lds	r24, 0x0ED9
    d6b0:	90 e0       	ldi	r25, 0x00	; 0
    d6b2:	01 96       	adiw	r24, 0x01	; 1
    d6b4:	83 70       	andi	r24, 0x03	; 3
    d6b6:	90 70       	andi	r25, 0x00	; 0
    d6b8:	80 93 d9 0e 	sts	0x0ED9, r24
		sprites[SPRITE_CURSOR].tileIndex = TILE_FIRST_CURSOR + cursor_animation;
    d6bc:	8a 5b       	subi	r24, 0xBA	; 186
    d6be:	9f 4f       	sbci	r25, 0xFF	; 255
    d6c0:	90 93 6b 04 	sts	0x046B, r25
    d6c4:	80 93 6a 04 	sts	0x046A, r24
		sprites[SPRITE_CURSOR].x = (cursor_x + SCREEN_FIELD_X) * TILE_WIDTH;
    d6c8:	80 91 de 0e 	lds	r24, 0x0EDE
    d6cc:	90 e0       	ldi	r25, 0x00	; 0
    d6ce:	03 96       	adiw	r24, 0x03	; 3
    d6d0:	53 e0       	ldi	r21, 0x03	; 3
    d6d2:	88 0f       	add	r24, r24
    d6d4:	99 1f       	adc	r25, r25
    d6d6:	5a 95       	dec	r21
    d6d8:	e1 f7       	brne	.-8      	; 0xd6d2 <draw_cursor+0x78>
    d6da:	80 93 68 04 	sts	0x0468, r24
		sprites[SPRITE_CURSOR].y = (cursor_y + SCREEN_FIELD_Y) * TILE_HEIGHT;
    d6de:	86 2f       	mov	r24, r22
    d6e0:	90 e0       	ldi	r25, 0x00	; 0
    d6e2:	05 96       	adiw	r24, 0x05	; 5
    d6e4:	43 e0       	ldi	r20, 0x03	; 3
    d6e6:	88 0f       	add	r24, r24
    d6e8:	99 1f       	adc	r25, r25
    d6ea:	4a 95       	dec	r20
    d6ec:	e1 f7       	brne	.-8      	; 0xd6e6 <draw_cursor+0x8c>
    d6ee:	80 93 69 04 	sts	0x0469, r24
    d6f2:	08 95       	ret

0000d6f4 <draw_molecule>:
}

/**
 * Draws molecule
 */
void draw_molecule(uint8_t sx, uint8_t sy) {
    d6f4:	af 92       	push	r10
    d6f6:	bf 92       	push	r11
    d6f8:	cf 92       	push	r12
    d6fa:	df 92       	push	r13
    d6fc:	ef 92       	push	r14
    d6fe:	ff 92       	push	r15
    d700:	0f 93       	push	r16
    d702:	1f 93       	push	r17
    d704:	cf 93       	push	r28
    d706:	df 93       	push	r29
    d708:	a8 2e       	mov	r10, r24
    d70a:	b6 2e       	mov	r11, r22
    d70c:	00 e0       	ldi	r16, 0x00	; 0
    d70e:	10 e0       	ldi	r17, 0x00	; 0
	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
			SetTile(sx + x, sy + y, pgm_read_byte(&(levels[(level - 1) * LEVEL_BYTE_SIZE + LEVEL_NAME_LENGTH + LEVEL_FIELD_WIDTH * LEVEL_FIELD_HEIGHT + x + y * LEVEL_MOLECULE_HEIGHT])));
    d710:	6b e3       	ldi	r22, 0x3B	; 59
    d712:	c6 2e       	mov	r12, r22
    d714:	61 e0       	ldi	r22, 0x01	; 1
    d716:	d6 2e       	mov	r13, r22
    d718:	24 c0       	rjmp	.+72     	; 0xd762 <draw_molecule+0x6e>
    d71a:	80 91 5c 0d 	lds	r24, 0x0D5C
    d71e:	90 e0       	ldi	r25, 0x00	; 0
    d720:	01 97       	sbiw	r24, 0x01	; 1
    d722:	8c 9d       	mul	r24, r12
    d724:	f0 01       	movw	r30, r0
    d726:	8d 9d       	mul	r24, r13
    d728:	f0 0d       	add	r31, r0
    d72a:	9c 9d       	mul	r25, r12
    d72c:	f0 0d       	add	r31, r0
    d72e:	11 24       	eor	r1, r1
    d730:	e5 50       	subi	r30, 0x05	; 5
    d732:	ff 4f       	sbci	r31, 0xFF	; 255
    d734:	e0 0f       	add	r30, r16
    d736:	f1 1f       	adc	r31, r17
    d738:	ec 0f       	add	r30, r28
    d73a:	fd 1f       	adc	r31, r29
    d73c:	eb 55       	subi	r30, 0x5B	; 91
    d73e:	f9 4a       	sbci	r31, 0xA9	; 169
    d740:	e4 91       	lpm	r30, Z+
    d742:	8e 2d       	mov	r24, r14
    d744:	6f 2d       	mov	r22, r15
    d746:	4e 2f       	mov	r20, r30
    d748:	50 e0       	ldi	r21, 0x00	; 0
    d74a:	0e 94 3e 5a 	call	0xb47c	; 0xb47c <SetTile>
    d74e:	28 96       	adiw	r28, 0x08	; 8
    d750:	f3 94       	inc	r15
/**
 * Draws molecule
 */
void draw_molecule(uint8_t sx, uint8_t sy) {
	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
    d752:	c0 34       	cpi	r28, 0x40	; 64
    d754:	d1 05       	cpc	r29, r1
    d756:	09 f7       	brne	.-62     	; 0xd71a <draw_molecule+0x26>
    d758:	0f 5f       	subi	r16, 0xFF	; 255
    d75a:	1f 4f       	sbci	r17, 0xFF	; 255

/**
 * Draws molecule
 */
void draw_molecule(uint8_t sx, uint8_t sy) {
	for (uint8_t x = 0; x < LEVEL_MOLECULE_WIDTH; x++) {
    d75c:	08 30       	cpi	r16, 0x08	; 8
    d75e:	11 05       	cpc	r17, r1
    d760:	31 f0       	breq	.+12     	; 0xd76e <draw_molecule+0x7a>
    d762:	fb 2c       	mov	r15, r11
    d764:	c0 e0       	ldi	r28, 0x00	; 0
    d766:	d0 e0       	ldi	r29, 0x00	; 0
		for (uint8_t y = 0; y < LEVEL_MOLECULE_HEIGHT; y++) {
			SetTile(sx + x, sy + y, pgm_read_byte(&(levels[(level - 1) * LEVEL_BYTE_SIZE + LEVEL_NAME_LENGTH + LEVEL_FIELD_WIDTH * LEVEL_FIELD_HEIGHT + x + y * LEVEL_MOLECULE_HEIGHT])));
    d768:	ea 2c       	mov	r14, r10
    d76a:	e0 0e       	add	r14, r16
    d76c:	d6 cf       	rjmp	.-84     	; 0xd71a <draw_molecule+0x26>
		}
	}
}
    d76e:	df 91       	pop	r29
    d770:	cf 91       	pop	r28
    d772:	1f 91       	pop	r17
    d774:	0f 91       	pop	r16
    d776:	ff 90       	pop	r15
    d778:	ef 90       	pop	r14
    d77a:	df 90       	pop	r13
    d77c:	cf 90       	pop	r12
    d77e:	bf 90       	pop	r11
    d780:	af 90       	pop	r10
    d782:	08 95       	ret

0000d784 <draw_field>:
}

/**
 * Draws field
 */
void draw_field() {
    d784:	cf 92       	push	r12
    d786:	df 92       	push	r13
    d788:	ff 92       	push	r15
    d78a:	0f 93       	push	r16
    d78c:	1f 93       	push	r17
    d78e:	df 93       	push	r29
    d790:	cf 93       	push	r28
    d792:	0f 92       	push	r0
    d794:	cd b7       	in	r28, 0x3d	; 61
    d796:	de b7       	in	r29, 0x3e	; 62
    d798:	cc 24       	eor	r12, r12
    d79a:	dd 24       	eor	r13, r13
    d79c:	17 c0       	rjmp	.+46     	; 0xd7cc <draw_field+0x48>
	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_FIELD_HEIGHT; y++) {
			SetTile(SCREEN_FIELD_X + x, SCREEN_FIELD_Y + y, level_field[x + y * LEVEL_FIELD_WIDTH]);
    d79e:	f8 01       	movw	r30, r16
    d7a0:	40 81       	ld	r20, Z
    d7a2:	55 27       	eor	r21, r21
    d7a4:	47 fd       	sbrc	r20, 7
    d7a6:	50 95       	com	r21
    d7a8:	8f 2d       	mov	r24, r15
    d7aa:	69 2f       	mov	r22, r25
    d7ac:	99 83       	std	Y+1, r25	; 0x01
    d7ae:	0e 94 3e 5a 	call	0xb47c	; 0xb47c <SetTile>
    d7b2:	01 5f       	subi	r16, 0xF1	; 241
    d7b4:	1f 4f       	sbci	r17, 0xFF	; 255
    d7b6:	99 81       	ldd	r25, Y+1	; 0x01
    d7b8:	9f 5f       	subi	r25, 0xFF	; 255
/**
 * Draws field
 */
void draw_field() {
	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
		for (uint8_t y = 0; y < LEVEL_FIELD_HEIGHT; y++) {
    d7ba:	94 31       	cpi	r25, 0x14	; 20
    d7bc:	81 f7       	brne	.-32     	; 0xd79e <draw_field+0x1a>
    d7be:	08 94       	sec
    d7c0:	c1 1c       	adc	r12, r1
    d7c2:	d1 1c       	adc	r13, r1

/**
 * Draws field
 */
void draw_field() {
	for (uint8_t x = 0; x < LEVEL_FIELD_WIDTH; x++) {
    d7c4:	ff e0       	ldi	r31, 0x0F	; 15
    d7c6:	cf 16       	cp	r12, r31
    d7c8:	d1 04       	cpc	r13, r1
    d7ca:	41 f0       	breq	.+16     	; 0xd7dc <draw_field+0x58>
    d7cc:	86 01       	movw	r16, r12
    d7ce:	02 53       	subi	r16, 0x32	; 50
    d7d0:	12 4f       	sbci	r17, 0xF2	; 242
    d7d2:	95 e0       	ldi	r25, 0x05	; 5
		for (uint8_t y = 0; y < LEVEL_FIELD_HEIGHT; y++) {
			SetTile(SCREEN_FIELD_X + x, SCREEN_FIELD_Y + y, level_field[x + y * LEVEL_FIELD_WIDTH]);
    d7d4:	73 e0       	ldi	r23, 0x03	; 3
    d7d6:	f7 2e       	mov	r15, r23
    d7d8:	fc 0c       	add	r15, r12
    d7da:	e1 cf       	rjmp	.-62     	; 0xd79e <draw_field+0x1a>
		}
	}
}
    d7dc:	0f 90       	pop	r0
    d7de:	cf 91       	pop	r28
    d7e0:	df 91       	pop	r29
    d7e2:	1f 91       	pop	r17
    d7e4:	0f 91       	pop	r16
    d7e6:	ff 90       	pop	r15
    d7e8:	df 90       	pop	r13
    d7ea:	cf 90       	pop	r12
    d7ec:	08 95       	ret

0000d7ee <refresh_game_screen>:

/**
 * Does complete refresh of game screen
 */
void refresh_game_screen() {
	ClearVram();
    d7ee:	0e 94 34 5a 	call	0xb468	; 0xb468 <ClearVram>
	DrawMap2(0, 0, tiles_screen);
    d7f2:	80 e0       	ldi	r24, 0x00	; 0
    d7f4:	60 e0       	ldi	r22, 0x00	; 0
    d7f6:	42 ee       	ldi	r20, 0xE2	; 226
    d7f8:	52 e5       	ldi	r21, 0x52	; 82
    d7fa:	0e 94 21 67 	call	0xce42	; 0xce42 <DrawMap2>
	draw_field();
    d7fe:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
	draw_molecule(SCREEN_MOLECULE_X, SCREEN_MOLECULE_Y);
    d802:	83 e1       	ldi	r24, 0x13	; 19
    d804:	65 e0       	ldi	r22, 0x05	; 5
    d806:	0e 94 7a 6b 	call	0xd6f4	; 0xd6f4 <draw_molecule>
	draw_statistics();
    d80a:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
	draw_name();
    d80e:	0e 94 7b 69 	call	0xd2f6	; 0xd2f6 <draw_name>
	draw_cursor();
    d812:	0e 94 2d 6b 	call	0xd65a	; 0xd65a <draw_cursor>
}
    d816:	08 95       	ret

0000d818 <load_level>:

/**
 * Loads given level
 */
void load_level() {
	memcpy_P(level_field, (level - 1) * LEVEL_BYTE_SIZE + levels + LEVEL_NAME_LENGTH, LEVEL_FIELD_WIDTH * LEVEL_FIELD_HEIGHT);
    d818:	80 91 5c 0d 	lds	r24, 0x0D5C
    d81c:	90 e0       	ldi	r25, 0x00	; 0
    d81e:	01 97       	sbiw	r24, 0x01	; 1
    d820:	2b e3       	ldi	r18, 0x3B	; 59
    d822:	31 e0       	ldi	r19, 0x01	; 1
    d824:	82 9f       	mul	r24, r18
    d826:	b0 01       	movw	r22, r0
    d828:	83 9f       	mul	r24, r19
    d82a:	70 0d       	add	r23, r0
    d82c:	92 9f       	mul	r25, r18
    d82e:	70 0d       	add	r23, r0
    d830:	11 24       	eor	r1, r1
    d832:	61 54       	subi	r22, 0x41	; 65
    d834:	79 4a       	sbci	r23, 0xA9	; 169
    d836:	8e ec       	ldi	r24, 0xCE	; 206
    d838:	9d e0       	ldi	r25, 0x0D	; 13
    d83a:	41 ee       	ldi	r20, 0xE1	; 225
    d83c:	50 e0       	ldi	r21, 0x00	; 0
    d83e:	0e 94 44 71 	call	0xe288	; 0xe288 <memcpy_P>

	cursor_x = 0;
    d842:	10 92 de 0e 	sts	0x0EDE, r1
	cursor_y = 0;
    d846:	10 92 b4 0e 	sts	0x0EB4, r1
	holding_atom = 0;
    d84a:	10 92 af 0e 	sts	0x0EAF, r1

	time = 0;
    d84e:	10 92 da 0e 	sts	0x0EDA, r1
    d852:	10 92 db 0e 	sts	0x0EDB, r1
    d856:	10 92 dc 0e 	sts	0x0EDC, r1
    d85a:	10 92 dd 0e 	sts	0x0EDD, r1
	moves = 0;
    d85e:	10 92 b0 0e 	sts	0x0EB0, r1
    d862:	10 92 b1 0e 	sts	0x0EB1, r1
    d866:	10 92 b2 0e 	sts	0x0EB2, r1
    d86a:	10 92 b3 0e 	sts	0x0EB3, r1
	distance = 0;
    d86e:	10 92 b5 0e 	sts	0x0EB5, r1
    d872:	10 92 b6 0e 	sts	0x0EB6, r1
    d876:	10 92 b7 0e 	sts	0x0EB7, r1
    d87a:	10 92 b8 0e 	sts	0x0EB8, r1
}
    d87e:	08 95       	ret

0000d880 <menu>:
}

/**
 * Main menu (level selection)
 */
void menu() {
    d880:	3f 92       	push	r3
    d882:	4f 92       	push	r4
    d884:	5f 92       	push	r5
    d886:	6f 92       	push	r6
    d888:	7f 92       	push	r7
    d88a:	8f 92       	push	r8
    d88c:	9f 92       	push	r9
    d88e:	af 92       	push	r10
    d890:	bf 92       	push	r11
    d892:	cf 92       	push	r12
    d894:	df 92       	push	r13
    d896:	ef 92       	push	r14
    d898:	ff 92       	push	r15
    d89a:	0f 93       	push	r16
    d89c:	1f 93       	push	r17
    d89e:	cf 93       	push	r28
    d8a0:	df 93       	push	r29
	uint8_t e_traj_offset1 = 0;
	uint8_t e_traj_offset2 = ELECTRON_TRAJECTORY_LAST_STEP / 2;

	unsigned int joypad;

	ClearVram();
    d8a2:	0e 94 34 5a 	call	0xb468	; 0xb468 <ClearVram>
    d8a6:	b8 e6       	ldi	r27, 0x68	; 104
    d8a8:	4b 2e       	mov	r4, r27
    d8aa:	b4 e0       	ldi	r27, 0x04	; 4
    d8ac:	5b 2e       	mov	r5, r27
    d8ae:	f2 01       	movw	r30, r4
/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
		sprites[i].x = (SCREEN_TILES_H * TILE_WIDTH);
    d8b0:	80 ef       	ldi	r24, 0xF0	; 240
    d8b2:	80 83       	st	Z, r24
    d8b4:	35 96       	adiw	r30, 0x05	; 5

/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
    d8b6:	24 e0       	ldi	r18, 0x04	; 4
    d8b8:	eb 38       	cpi	r30, 0x8B	; 139
    d8ba:	f2 07       	cpc	r31, r18
    d8bc:	d1 f7       	brne	.-12     	; 0xd8b2 <menu+0x32>
    d8be:	b1 97       	sbiw	r30, 0x21	; 33
    d8c0:	8f e9       	ldi	r24, 0x9F	; 159
    d8c2:	90 e0       	ldi	r25, 0x00	; 0

	ClearVram();
	hide_sprites();

	for (uint8_t sprite_id = 0; sprite_id < 6; sprite_id++) {
		sprites[sprite_id].tileIndex = TILE_FIRST_ELECTRON + sprite_id;
    d8c4:	91 83       	std	Z+1, r25	; 0x01
    d8c6:	80 83       	st	Z, r24
    d8c8:	35 96       	adiw	r30, 0x05	; 5
    d8ca:	01 96       	adiw	r24, 0x01	; 1
	unsigned int joypad;

	ClearVram();
	hide_sprites();

	for (uint8_t sprite_id = 0; sprite_id < 6; sprite_id++) {
    d8cc:	34 e0       	ldi	r19, 0x04	; 4
    d8ce:	e8 38       	cpi	r30, 0x88	; 136
    d8d0:	f3 07       	cpc	r31, r19
    d8d2:	c1 f7       	brne	.-16     	; 0xd8c4 <menu+0x44>
		sprites[sprite_id].tileIndex = TILE_FIRST_ELECTRON + sprite_id;
	}

	DrawMap2(2, 2, logo_logo_map);
    d8d4:	82 e0       	ldi	r24, 0x02	; 2
    d8d6:	62 e0       	ldi	r22, 0x02	; 2
    d8d8:	4c e2       	ldi	r20, 0x2C	; 44
    d8da:	56 e5       	ldi	r21, 0x56	; 86
    d8dc:	0e 94 21 67 	call	0xce42	; 0xce42 <DrawMap2>

	// credits
	Print(2, 23, PSTR("2011 UZEBOX ATOMIX"));
    d8e0:	82 e0       	ldi	r24, 0x02	; 2
    d8e2:	90 e0       	ldi	r25, 0x00	; 0
    d8e4:	67 e1       	ldi	r22, 0x17	; 23
    d8e6:	70 e0       	ldi	r23, 0x00	; 0
    d8e8:	46 ee       	ldi	r20, 0xE6	; 230
    d8ea:	5a ea       	ldi	r21, 0xAA	; 170
    d8ec:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
	Print(2, 24, PSTR("PROGRAM: MARTIN SUSTEK"));
    d8f0:	82 e0       	ldi	r24, 0x02	; 2
    d8f2:	90 e0       	ldi	r25, 0x00	; 0
    d8f4:	68 e1       	ldi	r22, 0x18	; 24
    d8f6:	70 e0       	ldi	r23, 0x00	; 0
    d8f8:	4f ec       	ldi	r20, 0xCF	; 207
    d8fa:	5a ea       	ldi	r21, 0xAA	; 170
    d8fc:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>
	Print(2, 25, PSTR("LEVEL DESIGN: ANDREAS WUEST"));
    d900:	82 e0       	ldi	r24, 0x02	; 2
    d902:	90 e0       	ldi	r25, 0x00	; 0
    d904:	69 e1       	ldi	r22, 0x19	; 25
    d906:	70 e0       	ldi	r23, 0x00	; 0
    d908:	43 eb       	ldi	r20, 0xB3	; 179
    d90a:	5a ea       	ldi	r21, 0xAA	; 170
    d90c:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <Print>

	// initial scroll position
	scroll = (level - 1);
    d910:	20 91 5c 0d 	lds	r18, 0x0D5C
	if ((level - 1) < SCREEN_MENU_LEVEL_LINES) {
    d914:	42 2f       	mov	r20, r18
    d916:	50 e0       	ldi	r21, 0x00	; 0
    d918:	4b 30       	cpi	r20, 0x0B	; 11
    d91a:	51 05       	cpc	r21, r1
    d91c:	14 f4       	brge	.+4      	; 0xd922 <menu+0xa2>
    d91e:	77 24       	eor	r7, r7
    d920:	07 c0       	rjmp	.+14     	; 0xd930 <menu+0xb0>
	Print(2, 23, PSTR("2011 UZEBOX ATOMIX"));
	Print(2, 24, PSTR("PROGRAM: MARTIN SUSTEK"));
	Print(2, 25, PSTR("LEVEL DESIGN: ANDREAS WUEST"));

	// initial scroll position
	scroll = (level - 1);
    d922:	72 2e       	mov	r7, r18
    d924:	7a 94       	dec	r7
	if ((level - 1) < SCREEN_MENU_LEVEL_LINES) {
		scroll = 0;
	}
	if ((level - 1) > LEVEL_COUNT - SCREEN_MENU_LEVEL_LINES) {
    d926:	4a 32       	cpi	r20, 0x2A	; 42
    d928:	51 05       	cpc	r21, r1
    d92a:	14 f0       	brlt	.+4      	; 0xd930 <menu+0xb0>
    d92c:	a8 e2       	ldi	r26, 0x28	; 40
    d92e:	7a 2e       	mov	r7, r26
    d930:	88 24       	eor	r8, r8
    d932:	33 24       	eor	r3, r3
    d934:	ff e0       	ldi	r31, 0x0F	; 15
    d936:	6f 2e       	mov	r6, r31
		scroll = LEVEL_COUNT - SCREEN_MENU_LEVEL_LINES;
	}

	while (true) {
		WaitVsync(1);
    d938:	81 e0       	ldi	r24, 0x01	; 1
    d93a:	90 e0       	ldi	r25, 0x00	; 0
    d93c:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>

		// electrons animation
		e_traj_offset1++;
    d940:	33 94       	inc	r3
		if (e_traj_offset1 > ELECTRON_TRAJECTORY_LAST_STEP) {
    d942:	8f e1       	ldi	r24, 0x1F	; 31
    d944:	83 15       	cp	r24, r3
    d946:	08 f4       	brcc	.+2      	; 0xd94a <menu+0xca>
    d948:	33 24       	eor	r3, r3
			e_traj_offset1 = 0;
		}
		e_traj_offset2++;
    d94a:	63 94       	inc	r6
		if (e_traj_offset2 > ELECTRON_TRAJECTORY_LAST_STEP) {
    d94c:	9f e1       	ldi	r25, 0x1F	; 31
    d94e:	96 15       	cp	r25, r6
    d950:	08 f4       	brcc	.+2      	; 0xd954 <menu+0xd4>
    d952:	66 24       	eor	r6, r6
			e_traj_offset2 = 0;
		}
		sprites[0].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_1x + e_traj_offset1));
    d954:	23 2d       	mov	r18, r3
    d956:	30 e0       	ldi	r19, 0x00	; 0
    d958:	f9 01       	movw	r30, r18
    d95a:	ee 59       	subi	r30, 0x9E	; 158
    d95c:	f7 4e       	sbci	r31, 0xE7	; 231
    d95e:	e4 91       	lpm	r30, Z+
    d960:	e8 5d       	subi	r30, 0xD8	; 216
    d962:	e0 93 68 04 	sts	0x0468, r30
		sprites[0].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_1y + e_traj_offset1));
    d966:	f9 01       	movw	r30, r18
    d968:	ee 57       	subi	r30, 0x7E	; 126
    d96a:	f7 4e       	sbci	r31, 0xE7	; 231
    d96c:	e4 91       	lpm	r30, Z+
    d96e:	e6 5f       	subi	r30, 0xF6	; 246
    d970:	e0 93 69 04 	sts	0x0469, r30
		sprites[1].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_2x + e_traj_offset2));
    d974:	86 2d       	mov	r24, r6
    d976:	90 e0       	ldi	r25, 0x00	; 0
    d978:	fc 01       	movw	r30, r24
    d97a:	ee 55       	subi	r30, 0x5E	; 94
    d97c:	f7 4e       	sbci	r31, 0xE7	; 231
    d97e:	e4 91       	lpm	r30, Z+
    d980:	e8 5d       	subi	r30, 0xD8	; 216
    d982:	e0 93 6d 04 	sts	0x046D, r30
		sprites[1].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_2y + e_traj_offset2));
    d986:	fc 01       	movw	r30, r24
    d988:	ee 53       	subi	r30, 0x3E	; 62
    d98a:	f7 4e       	sbci	r31, 0xE7	; 231
    d98c:	e4 91       	lpm	r30, Z+
    d98e:	e6 5f       	subi	r30, 0xF6	; 246
    d990:	e0 93 6e 04 	sts	0x046E, r30
		sprites[2].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_3x + e_traj_offset1));
    d994:	f9 01       	movw	r30, r18
    d996:	ee 51       	subi	r30, 0x1E	; 30
    d998:	f7 4e       	sbci	r31, 0xE7	; 231
    d99a:	e4 91       	lpm	r30, Z+
    d99c:	e8 5d       	subi	r30, 0xD8	; 216
    d99e:	e0 93 72 04 	sts	0x0472, r30
		sprites[2].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_3y + e_traj_offset1));
    d9a2:	f9 01       	movw	r30, r18
    d9a4:	ee 5f       	subi	r30, 0xFE	; 254
    d9a6:	f6 4e       	sbci	r31, 0xE6	; 230
    d9a8:	e4 91       	lpm	r30, Z+
    d9aa:	e6 5f       	subi	r30, 0xF6	; 246
    d9ac:	e0 93 73 04 	sts	0x0473, r30
		sprites[3].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_1x + e_traj_offset2));
    d9b0:	fc 01       	movw	r30, r24
    d9b2:	ee 59       	subi	r30, 0x9E	; 158
    d9b4:	f7 4e       	sbci	r31, 0xE7	; 231
    d9b6:	e4 91       	lpm	r30, Z+
    d9b8:	e8 5d       	subi	r30, 0xD8	; 216
    d9ba:	e0 93 77 04 	sts	0x0477, r30
		sprites[3].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_1y + e_traj_offset2));
    d9be:	fc 01       	movw	r30, r24
    d9c0:	ee 57       	subi	r30, 0x7E	; 126
    d9c2:	f7 4e       	sbci	r31, 0xE7	; 231
    d9c4:	e4 91       	lpm	r30, Z+
    d9c6:	e6 5f       	subi	r30, 0xF6	; 246
    d9c8:	e0 93 78 04 	sts	0x0478, r30
		sprites[4].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_2x + e_traj_offset1));
    d9cc:	f9 01       	movw	r30, r18
    d9ce:	ee 55       	subi	r30, 0x5E	; 94
    d9d0:	f7 4e       	sbci	r31, 0xE7	; 231
    d9d2:	e4 91       	lpm	r30, Z+
    d9d4:	e8 5d       	subi	r30, 0xD8	; 216
    d9d6:	e0 93 7c 04 	sts	0x047C, r30
		sprites[4].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_2y + e_traj_offset1));
    d9da:	2e 53       	subi	r18, 0x3E	; 62
    d9dc:	37 4e       	sbci	r19, 0xE7	; 231
    d9de:	f9 01       	movw	r30, r18
    d9e0:	24 91       	lpm	r18, Z+
    d9e2:	26 5f       	subi	r18, 0xF6	; 246
    d9e4:	20 93 7d 04 	sts	0x047D, r18
		sprites[5].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_3x + e_traj_offset2));
    d9e8:	fc 01       	movw	r30, r24
    d9ea:	ee 51       	subi	r30, 0x1E	; 30
    d9ec:	f7 4e       	sbci	r31, 0xE7	; 231
    d9ee:	e4 91       	lpm	r30, Z+
    d9f0:	e8 5d       	subi	r30, 0xD8	; 216
    d9f2:	e0 93 81 04 	sts	0x0481, r30
		sprites[5].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_3y + e_traj_offset2));
    d9f6:	8e 5f       	subi	r24, 0xFE	; 254
    d9f8:	96 4e       	sbci	r25, 0xE6	; 230
    d9fa:	fc 01       	movw	r30, r24
    d9fc:	84 91       	lpm	r24, Z+
    d9fe:	86 5f       	subi	r24, 0xF6	; 246
    da00:	80 93 82 04 	sts	0x0482, r24
    da04:	87 2d       	mov	r24, r7
    da06:	eb e0       	ldi	r30, 0x0B	; 11
    da08:	ce 2e       	mov	r12, r30
    da0a:	d1 2c       	mov	r13, r1
    da0c:	98 2e       	mov	r9, r24
    da0e:	93 94       	inc	r9

		for (uint8_t i = 0; i < SCREEN_MENU_LEVEL_LINES; i++) {
			uint8_t current_level = (i + 1 + scroll);
			if ((current_level > 0) && (current_level <= 50)) {
    da10:	82 33       	cpi	r24, 0x32	; 50
    da12:	08 f0       	brcs	.+2      	; 0xda16 <menu+0x196>
    da14:	5e c0       	rjmp	.+188    	; 0xdad2 <menu+0x252>
    da16:	bc 2c       	mov	r11, r12
    da18:	ad 2c       	mov	r10, r13
				uint8_t y = 11 + i;
				// level number
				PrintByte(3, y, current_level, false);
    da1a:	83 e0       	ldi	r24, 0x03	; 3
    da1c:	90 e0       	ldi	r25, 0x00	; 0
    da1e:	b6 01       	movw	r22, r12
    da20:	49 2d       	mov	r20, r9
    da22:	20 e0       	ldi	r18, 0x00	; 0
    da24:	0e 94 a8 67 	call	0xcf50	; 0xcf50 <PrintByte>

				// level name (shorten and pad with spaces)
				for (uint8_t j = 0; j < 24; j++) {
					char ch = pgm_read_byte(levels + (current_level - 1) * LEVEL_BYTE_SIZE + j);
    da28:	c9 2d       	mov	r28, r9
    da2a:	d0 e0       	ldi	r29, 0x00	; 0
    da2c:	21 97       	sbiw	r28, 0x01	; 1
    da2e:	2b e3       	ldi	r18, 0x3B	; 59
    da30:	31 e0       	ldi	r19, 0x01	; 1
    da32:	c2 9f       	mul	r28, r18
    da34:	70 01       	movw	r14, r0
    da36:	c3 9f       	mul	r28, r19
    da38:	f0 0c       	add	r15, r0
    da3a:	d2 9f       	mul	r29, r18
    da3c:	f0 0c       	add	r15, r0
    da3e:	11 24       	eor	r1, r1
    da40:	21 96       	adiw	r28, 0x01	; 1
    da42:	85 ea       	ldi	r24, 0xA5	; 165
    da44:	96 e5       	ldi	r25, 0x56	; 86
    da46:	e8 0e       	add	r14, r24
    da48:	f9 1e       	adc	r15, r25
    da4a:	06 e0       	ldi	r16, 0x06	; 6
    da4c:	10 e0       	ldi	r17, 0x00	; 0
    da4e:	f7 01       	movw	r30, r14
    da50:	44 91       	lpm	r20, Z+
					if (ch == '\0') {
    da52:	44 23       	and	r20, r20
    da54:	09 f4       	brne	.+2      	; 0xda58 <menu+0x1d8>
    da56:	40 e2       	ldi	r20, 0x20	; 32
						ch = ' ';
					}
					PrintChar(6 + j, y, ch);
    da58:	c8 01       	movw	r24, r16
    da5a:	6b 2d       	mov	r22, r11
    da5c:	7a 2d       	mov	r23, r10
    da5e:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
    da62:	08 94       	sec
    da64:	e1 1c       	adc	r14, r1
    da66:	f1 1c       	adc	r15, r1
    da68:	0f 5f       	subi	r16, 0xFF	; 255
    da6a:	1f 4f       	sbci	r17, 0xFF	; 255
				uint8_t y = 11 + i;
				// level number
				PrintByte(3, y, current_level, false);

				// level name (shorten and pad with spaces)
				for (uint8_t j = 0; j < 24; j++) {
    da6c:	0e 31       	cpi	r16, 0x1E	; 30
    da6e:	11 05       	cpc	r17, r1
    da70:	71 f7       	brne	.-36     	; 0xda4e <menu+0x1ce>
					}
					PrintChar(6 + j, y, ch);
				}

				// level done yet symbol
				if (eeprom_data.data[current_level / 8] & 1 << (current_level % 8)) {
    da72:	e9 2d       	mov	r30, r9
    da74:	e6 95       	lsr	r30
    da76:	e6 95       	lsr	r30
    da78:	e6 95       	lsr	r30
    da7a:	f0 e0       	ldi	r31, 0x00	; 0
    da7c:	e7 54       	subi	r30, 0x47	; 71
    da7e:	f1 4f       	sbci	r31, 0xF1	; 241
    da80:	82 81       	ldd	r24, Z+2	; 0x02
    da82:	90 e0       	ldi	r25, 0x00	; 0
    da84:	c7 70       	andi	r28, 0x07	; 7
    da86:	d0 70       	andi	r29, 0x00	; 0
    da88:	02 c0       	rjmp	.+4      	; 0xda8e <menu+0x20e>
    da8a:	95 95       	asr	r25
    da8c:	87 95       	ror	r24
    da8e:	ca 95       	dec	r28
    da90:	e2 f7       	brpl	.-8      	; 0xda8a <menu+0x20a>
    da92:	80 ff       	sbrs	r24, 0
    da94:	06 c0       	rjmp	.+12     	; 0xdaa2 <menu+0x222>
					PrintChar(4, y, FONT_TICK);
    da96:	84 e0       	ldi	r24, 0x04	; 4
    da98:	90 e0       	ldi	r25, 0x00	; 0
    da9a:	6b 2d       	mov	r22, r11
    da9c:	7a 2d       	mov	r23, r10
    da9e:	4c e5       	ldi	r20, 0x5C	; 92
    daa0:	05 c0       	rjmp	.+10     	; 0xdaac <menu+0x22c>
				} else {
					PrintChar(4, y, ' ');
    daa2:	84 e0       	ldi	r24, 0x04	; 4
    daa4:	90 e0       	ldi	r25, 0x00	; 0
    daa6:	6b 2d       	mov	r22, r11
    daa8:	7a 2d       	mov	r23, r10
    daaa:	40 e2       	ldi	r20, 0x20	; 32
    daac:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
				}

				// cursor symbol
				if (current_level == level) {
    dab0:	80 91 5c 0d 	lds	r24, 0x0D5C
    dab4:	98 16       	cp	r9, r24
    dab6:	31 f4       	brne	.+12     	; 0xdac4 <menu+0x244>
					PrintChar(5, y, FONT_CURSOR);
    dab8:	85 e0       	ldi	r24, 0x05	; 5
    daba:	90 e0       	ldi	r25, 0x00	; 0
    dabc:	6b 2d       	mov	r22, r11
    dabe:	7a 2d       	mov	r23, r10
    dac0:	4f e5       	ldi	r20, 0x5F	; 95
    dac2:	05 c0       	rjmp	.+10     	; 0xdace <menu+0x24e>
				} else {
					PrintChar(5, y, ' ');
    dac4:	85 e0       	ldi	r24, 0x05	; 5
    dac6:	90 e0       	ldi	r25, 0x00	; 0
    dac8:	6b 2d       	mov	r22, r11
    daca:	7a 2d       	mov	r23, r10
    dacc:	40 e2       	ldi	r20, 0x20	; 32
    dace:	0e 94 88 67 	call	0xcf10	; 0xcf10 <PrintChar>
    dad2:	08 94       	sec
    dad4:	c1 1c       	adc	r12, r1
    dad6:	d1 1c       	adc	r13, r1
		sprites[4].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_2x + e_traj_offset1));
		sprites[4].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_2y + e_traj_offset1));
		sprites[5].x = (SCREEN_ELECTRON_X + pgm_read_byte(e_traj_3x + e_traj_offset2));
		sprites[5].y = (SCREEN_ELECTRON_Y + pgm_read_byte(e_traj_3y + e_traj_offset2));

		for (uint8_t i = 0; i < SCREEN_MENU_LEVEL_LINES; i++) {
    dad8:	f5 e1       	ldi	r31, 0x15	; 21
    dada:	cf 16       	cp	r12, r31
    dadc:	d1 04       	cpc	r13, r1
    dade:	11 f0       	breq	.+4      	; 0xdae4 <menu+0x264>
    dae0:	89 2d       	mov	r24, r9
    dae2:	94 cf       	rjmp	.-216    	; 0xda0c <menu+0x18c>
					PrintChar(5, y, ' ');
				}
			}
		}
		// molecule thumbnail
		draw_molecule(21, 2);
    dae4:	85 e1       	ldi	r24, 0x15	; 21
    dae6:	62 e0       	ldi	r22, 0x02	; 2
    dae8:	0e 94 7a 6b 	call	0xd6f4	; 0xd6f4 <draw_molecule>

		// controls
		if (delay) {
    daec:	88 20       	and	r8, r8
    daee:	21 f0       	breq	.+8      	; 0xdaf8 <menu+0x278>
			WaitVsync(4);
    daf0:	84 e0       	ldi	r24, 0x04	; 4
    daf2:	90 e0       	ldi	r25, 0x00	; 0
    daf4:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
			delay = false;
		}
		joypad = ReadJoypad(0);
    daf8:	80 e0       	ldi	r24, 0x00	; 0
    dafa:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    dafe:	18 2f       	mov	r17, r24
		if (joypad & BTN_UP) {
    db00:	84 ff       	sbrs	r24, 4
    db02:	1d c0       	rjmp	.+58     	; 0xdb3e <menu+0x2be>
			if (level > 1) {
    db04:	80 91 5c 0d 	lds	r24, 0x0D5C
    db08:	82 30       	cpi	r24, 0x02	; 2
    db0a:	a0 f0       	brcs	.+40     	; 0xdb34 <menu+0x2b4>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    db0c:	80 e0       	ldi	r24, 0x00	; 0
    db0e:	6f ef       	ldi	r22, 0xFF	; 255
    db10:	41 e0       	ldi	r20, 0x01	; 1
    db12:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
		}
		joypad = ReadJoypad(0);
		if (joypad & BTN_UP) {
			if (level > 1) {
				play_sound(SOUND_MENU_MOVE);
				level--;
    db16:	80 91 5c 0d 	lds	r24, 0x0D5C
    db1a:	81 50       	subi	r24, 0x01	; 1
    db1c:	80 93 5c 0d 	sts	0x0D5C, r24
				if (scroll + 1 > level) {
    db20:	27 2d       	mov	r18, r7
    db22:	30 e0       	ldi	r19, 0x00	; 0
    db24:	90 e0       	ldi	r25, 0x00	; 0
    db26:	28 17       	cp	r18, r24
    db28:	39 07       	cpc	r19, r25
    db2a:	0c f0       	brlt	.+2      	; 0xdb2e <menu+0x2ae>
					scroll--;
    db2c:	7a 94       	dec	r7
    db2e:	88 24       	eor	r8, r8
    db30:	83 94       	inc	r8
    db32:	06 c0       	rjmp	.+12     	; 0xdb40 <menu+0x2c0>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    db34:	81 e0       	ldi	r24, 0x01	; 1
    db36:	6f ef       	ldi	r22, 0xFF	; 255
    db38:	41 e0       	ldi	r20, 0x01	; 1
    db3a:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    db3e:	88 24       	eor	r8, r8
				delay = true;
			} else {
				play_sound(SOUND_MENU_CANT_MOVE);
			}
		}
		if (joypad & BTN_DOWN) {
    db40:	15 ff       	sbrs	r17, 5
    db42:	1e c0       	rjmp	.+60     	; 0xdb80 <menu+0x300>
			if (level < LEVEL_COUNT) {
    db44:	80 91 5c 0d 	lds	r24, 0x0D5C
    db48:	82 33       	cpi	r24, 0x32	; 50
    db4a:	a8 f4       	brcc	.+42     	; 0xdb76 <menu+0x2f6>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    db4c:	80 e0       	ldi	r24, 0x00	; 0
    db4e:	6f ef       	ldi	r22, 0xFF	; 255
    db50:	41 e0       	ldi	r20, 0x01	; 1
    db52:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
			}
		}
		if (joypad & BTN_DOWN) {
			if (level < LEVEL_COUNT) {
				play_sound(SOUND_MENU_MOVE);
				level++;
    db56:	20 91 5c 0d 	lds	r18, 0x0D5C
    db5a:	2f 5f       	subi	r18, 0xFF	; 255
    db5c:	20 93 5c 0d 	sts	0x0D5C, r18
				if (scroll + SCREEN_MENU_LEVEL_LINES < level) {
    db60:	87 2d       	mov	r24, r7
    db62:	90 e0       	ldi	r25, 0x00	; 0
    db64:	0a 96       	adiw	r24, 0x0a	; 10
    db66:	30 e0       	ldi	r19, 0x00	; 0
    db68:	82 17       	cp	r24, r18
    db6a:	93 07       	cpc	r25, r19
    db6c:	0c f4       	brge	.+2      	; 0xdb70 <menu+0x2f0>
					scroll++;
    db6e:	73 94       	inc	r7
    db70:	88 24       	eor	r8, r8
    db72:	83 94       	inc	r8
    db74:	05 c0       	rjmp	.+10     	; 0xdb80 <menu+0x300>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    db76:	81 e0       	ldi	r24, 0x01	; 1
    db78:	6f ef       	ldi	r22, 0xFF	; 255
    db7a:	41 e0       	ldi	r20, 0x01	; 1
    db7c:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
				delay = true;
			} else {
				play_sound(SOUND_MENU_CANT_MOVE);
			}
		}
		if (joypad & BTN_START) {
    db80:	13 ff       	sbrs	r17, 3
    db82:	da ce       	rjmp	.-588    	; 0xd938 <menu+0xb8>
/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
		sprites[i].x = (SCREEN_TILES_H * TILE_WIDTH);
    db84:	80 ef       	ldi	r24, 0xF0	; 240
    db86:	f2 01       	movw	r30, r4
    db88:	80 83       	st	Z, r24
    db8a:	25 e0       	ldi	r18, 0x05	; 5
    db8c:	30 e0       	ldi	r19, 0x00	; 0
    db8e:	42 0e       	add	r4, r18
    db90:	53 1e       	adc	r5, r19

/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
    db92:	3b e8       	ldi	r19, 0x8B	; 139
    db94:	43 16       	cp	r4, r19
    db96:	34 e0       	ldi	r19, 0x04	; 4
    db98:	53 06       	cpc	r5, r19
    db9a:	a9 f7       	brne	.-22     	; 0xdb86 <menu+0x306>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    db9c:	82 e0       	ldi	r24, 0x02	; 2
    db9e:	6f ef       	ldi	r22, 0xFF	; 255
    dba0:	41 e0       	ldi	r20, 0x01	; 1
    dba2:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
			play_sound(SOUND_MENU_SELECT);
			return;
		}

	}
}
    dba6:	df 91       	pop	r29
    dba8:	cf 91       	pop	r28
    dbaa:	1f 91       	pop	r17
    dbac:	0f 91       	pop	r16
    dbae:	ff 90       	pop	r15
    dbb0:	ef 90       	pop	r14
    dbb2:	df 90       	pop	r13
    dbb4:	cf 90       	pop	r12
    dbb6:	bf 90       	pop	r11
    dbb8:	af 90       	pop	r10
    dbba:	9f 90       	pop	r9
    dbbc:	8f 90       	pop	r8
    dbbe:	7f 90       	pop	r7
    dbc0:	6f 90       	pop	r6
    dbc2:	5f 90       	pop	r5
    dbc4:	4f 90       	pop	r4
    dbc6:	3f 90       	pop	r3
    dbc8:	08 95       	ret

0000dbca <game>:

/**
 * Game loop
 */
void game() {
    dbca:	cf 92       	push	r12
    dbcc:	df 92       	push	r13
    dbce:	ef 92       	push	r14
    dbd0:	ff 92       	push	r15
    dbd2:	0f 93       	push	r16
    dbd4:	1f 93       	push	r17
    dbd6:	cf 93       	push	r28
    dbd8:	df 93       	push	r29
		refresh_game_screen();

		while (!is_level_done()) {

			int buttons = ReadJoypad(0);
			char* cursor_field_ptr = &(level_field[cursor_x + cursor_y * LEVEL_FIELD_WIDTH]);
    dbda:	0f e0       	ldi	r16, 0x0F	; 15
			} else {
				if ((buttons & (BTN_A | BTN_B | BTN_X | BTN_Y))) {
					if ((*cursor_field_ptr >= TILE_FIRST_ATOM) && (*cursor_field_ptr <= TILE_LAST_ATOM)) {
						while (ReadJoypad(0) & (BTN_A | BTN_B | BTN_X | BTN_Y)) {};
						holding_atom = *cursor_field_ptr;
						*cursor_field_ptr = TILE_FLOOR;
    dbdc:	82 e0       	ldi	r24, 0x02	; 2
    dbde:	d8 2e       	mov	r13, r24
/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
		sprites[i].x = (SCREEN_TILES_H * TILE_WIDTH);
    dbe0:	10 ef       	ldi	r17, 0xF0	; 240
    dbe2:	c1 2e       	mov	r12, r17
    dbe4:	e7 c2       	rjmp	.+1486   	; 0xe1b4 <game+0x5ea>
/**
 * Game loop
 */
void game() {
	while (level < LEVEL_COUNT) {
		level++;
    dbe6:	8f 5f       	subi	r24, 0xFF	; 255
    dbe8:	80 93 5c 0d 	sts	0x0D5C, r24
	MENU:
		menu();
    dbec:	0e 94 40 6c 	call	0xd880	; 0xd880 <menu>

		load_level();
    dbf0:	0e 94 0c 6c 	call	0xd818	; 0xd818 <load_level>
		refresh_game_screen();
    dbf4:	0e 94 f7 6b 	call	0xd7ee	; 0xd7ee <refresh_game_screen>
    dbf8:	af c2       	rjmp	.+1374   	; 0xe158 <game+0x58e>

		while (!is_level_done()) {

			int buttons = ReadJoypad(0);
    dbfa:	80 e0       	ldi	r24, 0x00	; 0
    dbfc:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    dc00:	7c 01       	movw	r14, r24
			char* cursor_field_ptr = &(level_field[cursor_x + cursor_y * LEVEL_FIELD_WIDTH]);
    dc02:	80 91 b4 0e 	lds	r24, 0x0EB4
    dc06:	80 9f       	mul	r24, r16
    dc08:	e0 01       	movw	r28, r0
    dc0a:	11 24       	eor	r1, r1
    dc0c:	80 91 de 0e 	lds	r24, 0x0EDE
    dc10:	c8 0f       	add	r28, r24
    dc12:	d1 1d       	adc	r29, r1
    dc14:	c2 53       	subi	r28, 0x32	; 50
    dc16:	d2 4f       	sbci	r29, 0xF2	; 242

			if (holding_atom) {
    dc18:	80 91 af 0e 	lds	r24, 0x0EAF
    dc1c:	97 01       	movw	r18, r14
    dc1e:	23 70       	andi	r18, 0x03	; 3
    dc20:	33 70       	andi	r19, 0x03	; 3
    dc22:	88 23       	and	r24, r24
    dc24:	09 f4       	brne	.+2      	; 0xdc28 <game+0x5e>
    dc26:	e6 c1       	rjmp	.+972    	; 0xdff4 <game+0x42a>
				if ((buttons & (BTN_A | BTN_B | BTN_X | BTN_Y))) {
    dc28:	23 2b       	or	r18, r19
    dc2a:	99 f0       	breq	.+38     	; 0xdc52 <game+0x88>
					while (ReadJoypad(0) & (BTN_A | BTN_B | BTN_X | BTN_Y)) {};
    dc2c:	80 e0       	ldi	r24, 0x00	; 0
    dc2e:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    dc32:	83 70       	andi	r24, 0x03	; 3
    dc34:	93 70       	andi	r25, 0x03	; 3
    dc36:	89 2b       	or	r24, r25
    dc38:	c9 f7       	brne	.-14     	; 0xdc2c <game+0x62>
					*cursor_field_ptr = holding_atom;
    dc3a:	80 91 af 0e 	lds	r24, 0x0EAF
    dc3e:	88 83       	st	Y, r24
					holding_atom = false;
    dc40:	10 92 af 0e 	sts	0x0EAF, r1
					draw_field();
    dc44:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    dc48:	84 e0       	ldi	r24, 0x04	; 4
    dc4a:	6f ef       	ldi	r22, 0xFF	; 255
    dc4c:	41 e0       	ldi	r20, 0x01	; 1
    dc4e:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
					*cursor_field_ptr = holding_atom;
					holding_atom = false;
					draw_field();
					play_sound(SOUND_LEVEL_RELEASE);
				}
				if (buttons & BTN_LEFT) {
    dc52:	e6 fe       	sbrs	r14, 6
    dc54:	74 c0       	rjmp	.+232    	; 0xdd3e <game+0x174>
					draw_field();
    dc56:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
					if (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    dc5a:	20 91 de 0e 	lds	r18, 0x0EDE
    dc5e:	80 91 b4 0e 	lds	r24, 0x0EB4
    dc62:	90 e0       	ldi	r25, 0x00	; 0
    dc64:	fc 01       	movw	r30, r24
    dc66:	b4 e0       	ldi	r27, 0x04	; 4
    dc68:	ee 0f       	add	r30, r30
    dc6a:	ff 1f       	adc	r31, r31
    dc6c:	ba 95       	dec	r27
    dc6e:	e1 f7       	brne	.-8      	; 0xdc68 <game+0x9e>
    dc70:	e8 1b       	sub	r30, r24
    dc72:	f9 0b       	sbc	r31, r25
    dc74:	e2 53       	subi	r30, 0x32	; 50
    dc76:	f2 4f       	sbci	r31, 0xF2	; 242
    dc78:	e2 0f       	add	r30, r18
    dc7a:	f1 1d       	adc	r31, r1
    dc7c:	31 97       	sbiw	r30, 0x01	; 1
    dc7e:	80 81       	ld	r24, Z
    dc80:	82 30       	cpi	r24, 0x02	; 2
    dc82:	09 f0       	breq	.+2      	; 0xdc86 <game+0xbc>
    dc84:	57 c0       	rjmp	.+174    	; 0xdd34 <game+0x16a>
						moves++;
    dc86:	80 91 b0 0e 	lds	r24, 0x0EB0
    dc8a:	90 91 b1 0e 	lds	r25, 0x0EB1
    dc8e:	a0 91 b2 0e 	lds	r26, 0x0EB2
    dc92:	b0 91 b3 0e 	lds	r27, 0x0EB3
    dc96:	01 96       	adiw	r24, 0x01	; 1
    dc98:	a1 1d       	adc	r26, r1
    dc9a:	b1 1d       	adc	r27, r1
    dc9c:	80 93 b0 0e 	sts	0x0EB0, r24
    dca0:	90 93 b1 0e 	sts	0x0EB1, r25
    dca4:	a0 93 b2 0e 	sts	0x0EB2, r26
    dca8:	b0 93 b3 0e 	sts	0x0EB3, r27
    dcac:	2c c0       	rjmp	.+88     	; 0xdd06 <game+0x13c>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    dcae:	85 e0       	ldi	r24, 0x05	; 5
    dcb0:	6f ef       	ldi	r22, 0xFF	; 255
    dcb2:	41 e0       	ldi	r20, 0x01	; 1
    dcb4:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    dcb8:	10 e0       	ldi	r17, 0x00	; 0
					if (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
								sprites[SPRITE_CURSOR].x--;
    dcba:	80 91 68 04 	lds	r24, 0x0468
    dcbe:	81 50       	subi	r24, 0x01	; 1
    dcc0:	80 93 68 04 	sts	0x0468, r24
								draw_statistics();
    dcc4:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
								WaitVsync(1);
    dcc8:	81 e0       	ldi	r24, 0x01	; 1
    dcca:	90 e0       	ldi	r25, 0x00	; 0
    dccc:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
					draw_field();
					if (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    dcd0:	1f 5f       	subi	r17, 0xFF	; 255
    dcd2:	18 30       	cpi	r17, 0x08	; 8
    dcd4:	91 f7       	brne	.-28     	; 0xdcba <game+0xf0>
								sprites[SPRITE_CURSOR].x--;
								draw_statistics();
								WaitVsync(1);
							}
							cursor_x--;
    dcd6:	80 91 de 0e 	lds	r24, 0x0EDE
    dcda:	81 50       	subi	r24, 0x01	; 1
    dcdc:	80 93 de 0e 	sts	0x0EDE, r24
							distance++;
    dce0:	80 91 b5 0e 	lds	r24, 0x0EB5
    dce4:	90 91 b6 0e 	lds	r25, 0x0EB6
    dce8:	a0 91 b7 0e 	lds	r26, 0x0EB7
    dcec:	b0 91 b8 0e 	lds	r27, 0x0EB8
    dcf0:	01 96       	adiw	r24, 0x01	; 1
    dcf2:	a1 1d       	adc	r26, r1
    dcf4:	b1 1d       	adc	r27, r1
    dcf6:	80 93 b5 0e 	sts	0x0EB5, r24
    dcfa:	90 93 b6 0e 	sts	0x0EB6, r25
    dcfe:	a0 93 b7 0e 	sts	0x0EB7, r26
    dd02:	b0 93 b8 0e 	sts	0x0EB8, r27
				}
				if (buttons & BTN_LEFT) {
					draw_field();
					if (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x - 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    dd06:	20 91 de 0e 	lds	r18, 0x0EDE
    dd0a:	80 91 b4 0e 	lds	r24, 0x0EB4
    dd0e:	90 e0       	ldi	r25, 0x00	; 0
    dd10:	fc 01       	movw	r30, r24
    dd12:	a4 e0       	ldi	r26, 0x04	; 4
    dd14:	ee 0f       	add	r30, r30
    dd16:	ff 1f       	adc	r31, r31
    dd18:	aa 95       	dec	r26
    dd1a:	e1 f7       	brne	.-8      	; 0xdd14 <game+0x14a>
    dd1c:	e8 1b       	sub	r30, r24
    dd1e:	f9 0b       	sbc	r31, r25
    dd20:	e2 53       	subi	r30, 0x32	; 50
    dd22:	f2 4f       	sbci	r31, 0xF2	; 242
    dd24:	e2 0f       	add	r30, r18
    dd26:	f1 1d       	adc	r31, r1
    dd28:	31 97       	sbiw	r30, 0x01	; 1
    dd2a:	80 81       	ld	r24, Z
    dd2c:	82 30       	cpi	r24, 0x02	; 2
    dd2e:	09 f4       	brne	.+2      	; 0xdd32 <game+0x168>
    dd30:	be cf       	rjmp	.-132    	; 0xdcae <game+0xe4>
    dd32:	05 c0       	rjmp	.+10     	; 0xdd3e <game+0x174>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    dd34:	81 e0       	ldi	r24, 0x01	; 1
    dd36:	6f ef       	ldi	r22, 0xFF	; 255
    dd38:	41 e0       	ldi	r20, 0x01	; 1
    dd3a:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						}
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_RIGHT) {
    dd3e:	e7 fe       	sbrs	r14, 7
    dd40:	72 c0       	rjmp	.+228    	; 0xde26 <game+0x25c>
					draw_field();
    dd42:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
					if (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    dd46:	20 91 de 0e 	lds	r18, 0x0EDE
    dd4a:	80 91 b4 0e 	lds	r24, 0x0EB4
    dd4e:	90 e0       	ldi	r25, 0x00	; 0
    dd50:	fc 01       	movw	r30, r24
    dd52:	74 e0       	ldi	r23, 0x04	; 4
    dd54:	ee 0f       	add	r30, r30
    dd56:	ff 1f       	adc	r31, r31
    dd58:	7a 95       	dec	r23
    dd5a:	e1 f7       	brne	.-8      	; 0xdd54 <game+0x18a>
    dd5c:	e8 1b       	sub	r30, r24
    dd5e:	f9 0b       	sbc	r31, r25
    dd60:	e2 53       	subi	r30, 0x32	; 50
    dd62:	f2 4f       	sbci	r31, 0xF2	; 242
    dd64:	e2 0f       	add	r30, r18
    dd66:	f1 1d       	adc	r31, r1
    dd68:	81 81       	ldd	r24, Z+1	; 0x01
    dd6a:	82 30       	cpi	r24, 0x02	; 2
    dd6c:	09 f0       	breq	.+2      	; 0xdd70 <game+0x1a6>
    dd6e:	56 c0       	rjmp	.+172    	; 0xde1c <game+0x252>
						moves++;
    dd70:	80 91 b0 0e 	lds	r24, 0x0EB0
    dd74:	90 91 b1 0e 	lds	r25, 0x0EB1
    dd78:	a0 91 b2 0e 	lds	r26, 0x0EB2
    dd7c:	b0 91 b3 0e 	lds	r27, 0x0EB3
    dd80:	01 96       	adiw	r24, 0x01	; 1
    dd82:	a1 1d       	adc	r26, r1
    dd84:	b1 1d       	adc	r27, r1
    dd86:	80 93 b0 0e 	sts	0x0EB0, r24
    dd8a:	90 93 b1 0e 	sts	0x0EB1, r25
    dd8e:	a0 93 b2 0e 	sts	0x0EB2, r26
    dd92:	b0 93 b3 0e 	sts	0x0EB3, r27
    dd96:	2c c0       	rjmp	.+88     	; 0xddf0 <game+0x226>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    dd98:	85 e0       	ldi	r24, 0x05	; 5
    dd9a:	6f ef       	ldi	r22, 0xFF	; 255
    dd9c:	41 e0       	ldi	r20, 0x01	; 1
    dd9e:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    dda2:	10 e0       	ldi	r17, 0x00	; 0
					if (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
								sprites[SPRITE_CURSOR].x++;
    dda4:	80 91 68 04 	lds	r24, 0x0468
    dda8:	8f 5f       	subi	r24, 0xFF	; 255
    ddaa:	80 93 68 04 	sts	0x0468, r24
								draw_statistics();
    ddae:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
								WaitVsync(1);
    ddb2:	81 e0       	ldi	r24, 0x01	; 1
    ddb4:	90 e0       	ldi	r25, 0x00	; 0
    ddb6:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
					draw_field();
					if (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    ddba:	1f 5f       	subi	r17, 0xFF	; 255
    ddbc:	18 30       	cpi	r17, 0x08	; 8
    ddbe:	91 f7       	brne	.-28     	; 0xdda4 <game+0x1da>
								sprites[SPRITE_CURSOR].x++;
								draw_statistics();
								WaitVsync(1);
							}
							cursor_x++;
    ddc0:	80 91 de 0e 	lds	r24, 0x0EDE
    ddc4:	8f 5f       	subi	r24, 0xFF	; 255
    ddc6:	80 93 de 0e 	sts	0x0EDE, r24
							distance++;
    ddca:	80 91 b5 0e 	lds	r24, 0x0EB5
    ddce:	90 91 b6 0e 	lds	r25, 0x0EB6
    ddd2:	a0 91 b7 0e 	lds	r26, 0x0EB7
    ddd6:	b0 91 b8 0e 	lds	r27, 0x0EB8
    ddda:	01 96       	adiw	r24, 0x01	; 1
    dddc:	a1 1d       	adc	r26, r1
    ddde:	b1 1d       	adc	r27, r1
    dde0:	80 93 b5 0e 	sts	0x0EB5, r24
    dde4:	90 93 b6 0e 	sts	0x0EB6, r25
    dde8:	a0 93 b7 0e 	sts	0x0EB7, r26
    ddec:	b0 93 b8 0e 	sts	0x0EB8, r27
				}
				if (buttons & BTN_RIGHT) {
					draw_field();
					if (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[(cursor_x + 1) + cursor_y * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    ddf0:	20 91 de 0e 	lds	r18, 0x0EDE
    ddf4:	80 91 b4 0e 	lds	r24, 0x0EB4
    ddf8:	90 e0       	ldi	r25, 0x00	; 0
    ddfa:	fc 01       	movw	r30, r24
    ddfc:	64 e0       	ldi	r22, 0x04	; 4
    ddfe:	ee 0f       	add	r30, r30
    de00:	ff 1f       	adc	r31, r31
    de02:	6a 95       	dec	r22
    de04:	e1 f7       	brne	.-8      	; 0xddfe <game+0x234>
    de06:	e8 1b       	sub	r30, r24
    de08:	f9 0b       	sbc	r31, r25
    de0a:	e2 53       	subi	r30, 0x32	; 50
    de0c:	f2 4f       	sbci	r31, 0xF2	; 242
    de0e:	e2 0f       	add	r30, r18
    de10:	f1 1d       	adc	r31, r1
    de12:	81 81       	ldd	r24, Z+1	; 0x01
    de14:	82 30       	cpi	r24, 0x02	; 2
    de16:	09 f4       	brne	.+2      	; 0xde1a <game+0x250>
    de18:	bf cf       	rjmp	.-130    	; 0xdd98 <game+0x1ce>
    de1a:	05 c0       	rjmp	.+10     	; 0xde26 <game+0x25c>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    de1c:	81 e0       	ldi	r24, 0x01	; 1
    de1e:	6f ef       	ldi	r22, 0xFF	; 255
    de20:	41 e0       	ldi	r20, 0x01	; 1
    de22:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						}
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_UP) {
    de26:	e4 fe       	sbrs	r14, 4
    de28:	74 c0       	rjmp	.+232    	; 0xdf12 <game+0x348>
					draw_field();
    de2a:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
					if (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    de2e:	80 91 b4 0e 	lds	r24, 0x0EB4
    de32:	90 e0       	ldi	r25, 0x00	; 0
    de34:	01 97       	sbiw	r24, 0x01	; 1
    de36:	20 91 de 0e 	lds	r18, 0x0EDE
    de3a:	fc 01       	movw	r30, r24
    de3c:	54 e0       	ldi	r21, 0x04	; 4
    de3e:	ee 0f       	add	r30, r30
    de40:	ff 1f       	adc	r31, r31
    de42:	5a 95       	dec	r21
    de44:	e1 f7       	brne	.-8      	; 0xde3e <game+0x274>
    de46:	e8 1b       	sub	r30, r24
    de48:	f9 0b       	sbc	r31, r25
    de4a:	e2 0f       	add	r30, r18
    de4c:	f1 1d       	adc	r31, r1
    de4e:	e2 53       	subi	r30, 0x32	; 50
    de50:	f2 4f       	sbci	r31, 0xF2	; 242
    de52:	80 81       	ld	r24, Z
    de54:	82 30       	cpi	r24, 0x02	; 2
    de56:	09 f0       	breq	.+2      	; 0xde5a <game+0x290>
    de58:	57 c0       	rjmp	.+174    	; 0xdf08 <game+0x33e>
						moves++;
    de5a:	80 91 b0 0e 	lds	r24, 0x0EB0
    de5e:	90 91 b1 0e 	lds	r25, 0x0EB1
    de62:	a0 91 b2 0e 	lds	r26, 0x0EB2
    de66:	b0 91 b3 0e 	lds	r27, 0x0EB3
    de6a:	01 96       	adiw	r24, 0x01	; 1
    de6c:	a1 1d       	adc	r26, r1
    de6e:	b1 1d       	adc	r27, r1
    de70:	80 93 b0 0e 	sts	0x0EB0, r24
    de74:	90 93 b1 0e 	sts	0x0EB1, r25
    de78:	a0 93 b2 0e 	sts	0x0EB2, r26
    de7c:	b0 93 b3 0e 	sts	0x0EB3, r27
    de80:	2c c0       	rjmp	.+88     	; 0xdeda <game+0x310>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    de82:	85 e0       	ldi	r24, 0x05	; 5
    de84:	6f ef       	ldi	r22, 0xFF	; 255
    de86:	41 e0       	ldi	r20, 0x01	; 1
    de88:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    de8c:	10 e0       	ldi	r17, 0x00	; 0
					if (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
								sprites[SPRITE_CURSOR].y--;
    de8e:	80 91 69 04 	lds	r24, 0x0469
    de92:	81 50       	subi	r24, 0x01	; 1
    de94:	80 93 69 04 	sts	0x0469, r24
								draw_statistics();
    de98:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
								WaitVsync(1);
    de9c:	81 e0       	ldi	r24, 0x01	; 1
    de9e:	90 e0       	ldi	r25, 0x00	; 0
    dea0:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
					draw_field();
					if (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    dea4:	1f 5f       	subi	r17, 0xFF	; 255
    dea6:	18 30       	cpi	r17, 0x08	; 8
    dea8:	91 f7       	brne	.-28     	; 0xde8e <game+0x2c4>
								sprites[SPRITE_CURSOR].y--;
								draw_statistics();
								WaitVsync(1);
							}
							cursor_y--;
    deaa:	80 91 b4 0e 	lds	r24, 0x0EB4
    deae:	81 50       	subi	r24, 0x01	; 1
    deb0:	80 93 b4 0e 	sts	0x0EB4, r24
							distance++;
    deb4:	80 91 b5 0e 	lds	r24, 0x0EB5
    deb8:	90 91 b6 0e 	lds	r25, 0x0EB6
    debc:	a0 91 b7 0e 	lds	r26, 0x0EB7
    dec0:	b0 91 b8 0e 	lds	r27, 0x0EB8
    dec4:	01 96       	adiw	r24, 0x01	; 1
    dec6:	a1 1d       	adc	r26, r1
    dec8:	b1 1d       	adc	r27, r1
    deca:	80 93 b5 0e 	sts	0x0EB5, r24
    dece:	90 93 b6 0e 	sts	0x0EB6, r25
    ded2:	a0 93 b7 0e 	sts	0x0EB7, r26
    ded6:	b0 93 b8 0e 	sts	0x0EB8, r27
				}
				if (buttons & BTN_UP) {
					draw_field();
					if (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y - 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    deda:	80 91 b4 0e 	lds	r24, 0x0EB4
    dede:	90 e0       	ldi	r25, 0x00	; 0
    dee0:	01 97       	sbiw	r24, 0x01	; 1
    dee2:	20 91 de 0e 	lds	r18, 0x0EDE
    dee6:	fc 01       	movw	r30, r24
    dee8:	44 e0       	ldi	r20, 0x04	; 4
    deea:	ee 0f       	add	r30, r30
    deec:	ff 1f       	adc	r31, r31
    deee:	4a 95       	dec	r20
    def0:	e1 f7       	brne	.-8      	; 0xdeea <game+0x320>
    def2:	e8 1b       	sub	r30, r24
    def4:	f9 0b       	sbc	r31, r25
    def6:	e2 0f       	add	r30, r18
    def8:	f1 1d       	adc	r31, r1
    defa:	e2 53       	subi	r30, 0x32	; 50
    defc:	f2 4f       	sbci	r31, 0xF2	; 242
    defe:	80 81       	ld	r24, Z
    df00:	82 30       	cpi	r24, 0x02	; 2
    df02:	09 f4       	brne	.+2      	; 0xdf06 <game+0x33c>
    df04:	be cf       	rjmp	.-132    	; 0xde82 <game+0x2b8>
    df06:	05 c0       	rjmp	.+10     	; 0xdf12 <game+0x348>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    df08:	81 e0       	ldi	r24, 0x01	; 1
    df0a:	6f ef       	ldi	r22, 0xFF	; 255
    df0c:	41 e0       	ldi	r20, 0x01	; 1
    df0e:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						}
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_DOWN) {
    df12:	e5 fe       	sbrs	r14, 5
    df14:	01 c1       	rjmp	.+514    	; 0xe118 <game+0x54e>
					draw_field();
    df16:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
					if (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    df1a:	80 91 b4 0e 	lds	r24, 0x0EB4
    df1e:	90 e0       	ldi	r25, 0x00	; 0
    df20:	01 96       	adiw	r24, 0x01	; 1
    df22:	20 91 de 0e 	lds	r18, 0x0EDE
    df26:	fc 01       	movw	r30, r24
    df28:	34 e0       	ldi	r19, 0x04	; 4
    df2a:	ee 0f       	add	r30, r30
    df2c:	ff 1f       	adc	r31, r31
    df2e:	3a 95       	dec	r19
    df30:	e1 f7       	brne	.-8      	; 0xdf2a <game+0x360>
    df32:	e8 1b       	sub	r30, r24
    df34:	f9 0b       	sbc	r31, r25
    df36:	e2 0f       	add	r30, r18
    df38:	f1 1d       	adc	r31, r1
    df3a:	e2 53       	subi	r30, 0x32	; 50
    df3c:	f2 4f       	sbci	r31, 0xF2	; 242
    df3e:	80 81       	ld	r24, Z
    df40:	82 30       	cpi	r24, 0x02	; 2
    df42:	09 f0       	breq	.+2      	; 0xdf46 <game+0x37c>
    df44:	e4 c0       	rjmp	.+456    	; 0xe10e <game+0x544>
						moves++;
    df46:	80 91 b0 0e 	lds	r24, 0x0EB0
    df4a:	90 91 b1 0e 	lds	r25, 0x0EB1
    df4e:	a0 91 b2 0e 	lds	r26, 0x0EB2
    df52:	b0 91 b3 0e 	lds	r27, 0x0EB3
    df56:	01 96       	adiw	r24, 0x01	; 1
    df58:	a1 1d       	adc	r26, r1
    df5a:	b1 1d       	adc	r27, r1
    df5c:	80 93 b0 0e 	sts	0x0EB0, r24
    df60:	90 93 b1 0e 	sts	0x0EB1, r25
    df64:	a0 93 b2 0e 	sts	0x0EB2, r26
    df68:	b0 93 b3 0e 	sts	0x0EB3, r27
    df6c:	2c c0       	rjmp	.+88     	; 0xdfc6 <game+0x3fc>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    df6e:	85 e0       	ldi	r24, 0x05	; 5
    df70:	6f ef       	ldi	r22, 0xFF	; 255
    df72:	41 e0       	ldi	r20, 0x01	; 1
    df74:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    df78:	10 e0       	ldi	r17, 0x00	; 0
					if (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
								sprites[SPRITE_CURSOR].y++;
    df7a:	80 91 69 04 	lds	r24, 0x0469
    df7e:	8f 5f       	subi	r24, 0xFF	; 255
    df80:	80 93 69 04 	sts	0x0469, r24
								draw_statistics();
    df84:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
								WaitVsync(1);
    df88:	81 e0       	ldi	r24, 0x01	; 1
    df8a:	90 e0       	ldi	r25, 0x00	; 0
    df8c:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
					draw_field();
					if (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
							play_sound(SOUND_LEVEL_MOVE);
							for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    df90:	1f 5f       	subi	r17, 0xFF	; 255
    df92:	18 30       	cpi	r17, 0x08	; 8
    df94:	91 f7       	brne	.-28     	; 0xdf7a <game+0x3b0>
								sprites[SPRITE_CURSOR].y++;
								draw_statistics();
								WaitVsync(1);
							}
							cursor_y++;
    df96:	80 91 b4 0e 	lds	r24, 0x0EB4
    df9a:	8f 5f       	subi	r24, 0xFF	; 255
    df9c:	80 93 b4 0e 	sts	0x0EB4, r24
							distance++;
    dfa0:	80 91 b5 0e 	lds	r24, 0x0EB5
    dfa4:	90 91 b6 0e 	lds	r25, 0x0EB6
    dfa8:	a0 91 b7 0e 	lds	r26, 0x0EB7
    dfac:	b0 91 b8 0e 	lds	r27, 0x0EB8
    dfb0:	01 96       	adiw	r24, 0x01	; 1
    dfb2:	a1 1d       	adc	r26, r1
    dfb4:	b1 1d       	adc	r27, r1
    dfb6:	80 93 b5 0e 	sts	0x0EB5, r24
    dfba:	90 93 b6 0e 	sts	0x0EB6, r25
    dfbe:	a0 93 b7 0e 	sts	0x0EB7, r26
    dfc2:	b0 93 b8 0e 	sts	0x0EB8, r27
				}
				if (buttons & BTN_DOWN) {
					draw_field();
					if (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
						moves++;
						while (level_field[cursor_x + (cursor_y + 1) * LEVEL_FIELD_WIDTH] == TILE_FLOOR) {
    dfc6:	80 91 b4 0e 	lds	r24, 0x0EB4
    dfca:	90 e0       	ldi	r25, 0x00	; 0
    dfcc:	01 96       	adiw	r24, 0x01	; 1
    dfce:	20 91 de 0e 	lds	r18, 0x0EDE
    dfd2:	fc 01       	movw	r30, r24
    dfd4:	14 e0       	ldi	r17, 0x04	; 4
    dfd6:	ee 0f       	add	r30, r30
    dfd8:	ff 1f       	adc	r31, r31
    dfda:	1a 95       	dec	r17
    dfdc:	e1 f7       	brne	.-8      	; 0xdfd6 <game+0x40c>
    dfde:	e8 1b       	sub	r30, r24
    dfe0:	f9 0b       	sbc	r31, r25
    dfe2:	e2 0f       	add	r30, r18
    dfe4:	f1 1d       	adc	r31, r1
    dfe6:	e2 53       	subi	r30, 0x32	; 50
    dfe8:	f2 4f       	sbci	r31, 0xF2	; 242
    dfea:	80 81       	ld	r24, Z
    dfec:	82 30       	cpi	r24, 0x02	; 2
    dfee:	09 f4       	brne	.+2      	; 0xdff2 <game+0x428>
    dff0:	be cf       	rjmp	.-132    	; 0xdf6e <game+0x3a4>
    dff2:	92 c0       	rjmp	.+292    	; 0xe118 <game+0x54e>
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
			} else {
				if ((buttons & (BTN_A | BTN_B | BTN_X | BTN_Y))) {
    dff4:	23 2b       	or	r18, r19
    dff6:	c1 f0       	breq	.+48     	; 0xe028 <game+0x45e>
					if ((*cursor_field_ptr >= TILE_FIRST_ATOM) && (*cursor_field_ptr <= TILE_LAST_ATOM)) {
    dff8:	88 81       	ld	r24, Y
    dffa:	83 50       	subi	r24, 0x03	; 3
    dffc:	83 34       	cpi	r24, 0x43	; 67
    dffe:	78 f4       	brcc	.+30     	; 0xe01e <game+0x454>
						while (ReadJoypad(0) & (BTN_A | BTN_B | BTN_X | BTN_Y)) {};
    e000:	80 e0       	ldi	r24, 0x00	; 0
    e002:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    e006:	83 70       	andi	r24, 0x03	; 3
    e008:	93 70       	andi	r25, 0x03	; 3
    e00a:	89 2b       	or	r24, r25
    e00c:	c9 f7       	brne	.-14     	; 0xe000 <game+0x436>
						holding_atom = *cursor_field_ptr;
    e00e:	88 81       	ld	r24, Y
    e010:	80 93 af 0e 	sts	0x0EAF, r24
						*cursor_field_ptr = TILE_FLOOR;
    e014:	d8 82       	st	Y, r13
						draw_field();
    e016:	0e 94 c2 6b 	call	0xd784	; 0xd784 <draw_field>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e01a:	83 e0       	ldi	r24, 0x03	; 3
    e01c:	01 c0       	rjmp	.+2      	; 0xe020 <game+0x456>
    e01e:	81 e0       	ldi	r24, 0x01	; 1
    e020:	6f ef       	ldi	r22, 0xFF	; 255
    e022:	41 e0       	ldi	r20, 0x01	; 1
    e024:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						play_sound(SOUND_LEVEL_CATCH);
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_LEFT) {
    e028:	e6 fe       	sbrs	r14, 6
    e02a:	1c c0       	rjmp	.+56     	; 0xe064 <game+0x49a>
					if (cursor_x > 0) {
    e02c:	80 91 de 0e 	lds	r24, 0x0EDE
    e030:	88 23       	and	r24, r24
    e032:	99 f0       	breq	.+38     	; 0xe05a <game+0x490>
    e034:	10 e0       	ldi	r17, 0x00	; 0
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
							sprites[SPRITE_CURSOR].x--;
    e036:	80 91 68 04 	lds	r24, 0x0468
    e03a:	81 50       	subi	r24, 0x01	; 1
    e03c:	80 93 68 04 	sts	0x0468, r24
							WaitVsync(1);
    e040:	81 e0       	ldi	r24, 0x01	; 1
    e042:	90 e0       	ldi	r25, 0x00	; 0
    e044:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_LEFT) {
					if (cursor_x > 0) {
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    e048:	1f 5f       	subi	r17, 0xFF	; 255
    e04a:	18 30       	cpi	r17, 0x08	; 8
    e04c:	a1 f7       	brne	.-24     	; 0xe036 <game+0x46c>
							sprites[SPRITE_CURSOR].x--;
							WaitVsync(1);
						}
						cursor_x--;
    e04e:	80 91 de 0e 	lds	r24, 0x0EDE
    e052:	81 50       	subi	r24, 0x01	; 1
    e054:	80 93 de 0e 	sts	0x0EDE, r24
    e058:	05 c0       	rjmp	.+10     	; 0xe064 <game+0x49a>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e05a:	81 e0       	ldi	r24, 0x01	; 1
    e05c:	6f ef       	ldi	r22, 0xFF	; 255
    e05e:	41 e0       	ldi	r20, 0x01	; 1
    e060:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						cursor_x--;
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_RIGHT) {
    e064:	e7 fe       	sbrs	r14, 7
    e066:	1c c0       	rjmp	.+56     	; 0xe0a0 <game+0x4d6>
					if (cursor_x < LEVEL_FIELD_WIDTH - 1) {
    e068:	80 91 de 0e 	lds	r24, 0x0EDE
    e06c:	8e 30       	cpi	r24, 0x0E	; 14
    e06e:	98 f4       	brcc	.+38     	; 0xe096 <game+0x4cc>
    e070:	10 e0       	ldi	r17, 0x00	; 0
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
							sprites[SPRITE_CURSOR].x++;
    e072:	80 91 68 04 	lds	r24, 0x0468
    e076:	8f 5f       	subi	r24, 0xFF	; 255
    e078:	80 93 68 04 	sts	0x0468, r24
							WaitVsync(1);
    e07c:	81 e0       	ldi	r24, 0x01	; 1
    e07e:	90 e0       	ldi	r25, 0x00	; 0
    e080:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_RIGHT) {
					if (cursor_x < LEVEL_FIELD_WIDTH - 1) {
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    e084:	1f 5f       	subi	r17, 0xFF	; 255
    e086:	18 30       	cpi	r17, 0x08	; 8
    e088:	a1 f7       	brne	.-24     	; 0xe072 <game+0x4a8>
							sprites[SPRITE_CURSOR].x++;
							WaitVsync(1);
						}
						cursor_x++;
    e08a:	80 91 de 0e 	lds	r24, 0x0EDE
    e08e:	8f 5f       	subi	r24, 0xFF	; 255
    e090:	80 93 de 0e 	sts	0x0EDE, r24
    e094:	05 c0       	rjmp	.+10     	; 0xe0a0 <game+0x4d6>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e096:	81 e0       	ldi	r24, 0x01	; 1
    e098:	6f ef       	ldi	r22, 0xFF	; 255
    e09a:	41 e0       	ldi	r20, 0x01	; 1
    e09c:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						cursor_x++;
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_UP) {
    e0a0:	e4 fe       	sbrs	r14, 4
    e0a2:	1c c0       	rjmp	.+56     	; 0xe0dc <game+0x512>
					if (cursor_y > 0) {
    e0a4:	80 91 b4 0e 	lds	r24, 0x0EB4
    e0a8:	88 23       	and	r24, r24
    e0aa:	99 f0       	breq	.+38     	; 0xe0d2 <game+0x508>
    e0ac:	10 e0       	ldi	r17, 0x00	; 0
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
							sprites[SPRITE_CURSOR].y--;
    e0ae:	80 91 69 04 	lds	r24, 0x0469
    e0b2:	81 50       	subi	r24, 0x01	; 1
    e0b4:	80 93 69 04 	sts	0x0469, r24
							WaitVsync(1);
    e0b8:	81 e0       	ldi	r24, 0x01	; 1
    e0ba:	90 e0       	ldi	r25, 0x00	; 0
    e0bc:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_UP) {
					if (cursor_y > 0) {
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    e0c0:	1f 5f       	subi	r17, 0xFF	; 255
    e0c2:	18 30       	cpi	r17, 0x08	; 8
    e0c4:	a1 f7       	brne	.-24     	; 0xe0ae <game+0x4e4>
							sprites[SPRITE_CURSOR].y--;
							WaitVsync(1);
						}
						cursor_y--;
    e0c6:	80 91 b4 0e 	lds	r24, 0x0EB4
    e0ca:	81 50       	subi	r24, 0x01	; 1
    e0cc:	80 93 b4 0e 	sts	0x0EB4, r24
    e0d0:	05 c0       	rjmp	.+10     	; 0xe0dc <game+0x512>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e0d2:	81 e0       	ldi	r24, 0x01	; 1
    e0d4:	6f ef       	ldi	r22, 0xFF	; 255
    e0d6:	41 e0       	ldi	r20, 0x01	; 1
    e0d8:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
						cursor_y--;
					} else {
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_DOWN) {
    e0dc:	e5 fe       	sbrs	r14, 5
    e0de:	1c c0       	rjmp	.+56     	; 0xe118 <game+0x54e>
					if (cursor_y < LEVEL_FIELD_HEIGHT - 1) {
    e0e0:	80 91 b4 0e 	lds	r24, 0x0EB4
    e0e4:	8e 30       	cpi	r24, 0x0E	; 14
    e0e6:	98 f4       	brcc	.+38     	; 0xe10e <game+0x544>
    e0e8:	10 e0       	ldi	r17, 0x00	; 0
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
							sprites[SPRITE_CURSOR].y++;
    e0ea:	80 91 69 04 	lds	r24, 0x0469
    e0ee:	8f 5f       	subi	r24, 0xFF	; 255
    e0f0:	80 93 69 04 	sts	0x0469, r24
							WaitVsync(1);
    e0f4:	81 e0       	ldi	r24, 0x01	; 1
    e0f6:	90 e0       	ldi	r25, 0x00	; 0
    e0f8:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
						play_sound(SOUND_LEVEL_CANT_MOVE);
					}
				}
				if (buttons & BTN_DOWN) {
					if (cursor_y < LEVEL_FIELD_HEIGHT - 1) {
						for (uint8_t i = 0; i < TILE_WIDTH; i++) {
    e0fc:	1f 5f       	subi	r17, 0xFF	; 255
    e0fe:	18 30       	cpi	r17, 0x08	; 8
    e100:	a1 f7       	brne	.-24     	; 0xe0ea <game+0x520>
							sprites[SPRITE_CURSOR].y++;
							WaitVsync(1);
						}
						cursor_y++;
    e102:	80 91 b4 0e 	lds	r24, 0x0EB4
    e106:	8f 5f       	subi	r24, 0xFF	; 255
    e108:	80 93 b4 0e 	sts	0x0EB4, r24
    e10c:	05 c0       	rjmp	.+10     	; 0xe118 <game+0x54e>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e10e:	81 e0       	ldi	r24, 0x01	; 1
    e110:	6f ef       	ldi	r22, 0xFF	; 255
    e112:	41 e0       	ldi	r20, 0x01	; 1
    e114:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
					} else {
						play_sound(1);
					}
				}
			}
			if (buttons & BTN_SELECT) {
    e118:	e2 fe       	sbrs	r14, 2
    e11a:	06 c0       	rjmp	.+12     	; 0xe128 <game+0x55e>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e11c:	82 e0       	ldi	r24, 0x02	; 2
    e11e:	6f ef       	ldi	r22, 0xFF	; 255
    e120:	41 e0       	ldi	r20, 0x01	; 1
    e122:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
    e126:	62 cd       	rjmp	.-1340   	; 0xdbec <game+0x22>
			}
			if (buttons & BTN_SELECT) {
				play_sound(SOUND_MENU_SELECT);
				goto MENU;
			}
			if (buttons & BTN_START) {
    e128:	e3 fe       	sbrs	r14, 3
    e12a:	0e c0       	rjmp	.+28     	; 0xe148 <game+0x57e>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e12c:	82 e0       	ldi	r24, 0x02	; 2
    e12e:	6f ef       	ldi	r22, 0xFF	; 255
    e130:	41 e0       	ldi	r20, 0x01	; 1
    e132:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
				play_sound(SOUND_MENU_SELECT);
				goto MENU;
			}
			if (buttons & BTN_START) {
				play_sound(SOUND_MENU_SELECT);
				while (ReadJoypad(0) & BTN_START);
    e136:	80 e0       	ldi	r24, 0x00	; 0
    e138:	0e 94 6d 5a 	call	0xb4da	; 0xb4da <ReadJoypad>
    e13c:	83 fd       	sbrc	r24, 3
    e13e:	fb cf       	rjmp	.-10     	; 0xe136 <game+0x56c>
				load_level();
    e140:	0e 94 0c 6c 	call	0xd818	; 0xd818 <load_level>
				refresh_game_screen();
    e144:	0e 94 f7 6b 	call	0xd7ee	; 0xd7ee <refresh_game_screen>
			}

			draw_cursor();
    e148:	0e 94 2d 6b 	call	0xd65a	; 0xd65a <draw_cursor>
			draw_statistics();
    e14c:	0e 94 d7 6a 	call	0xd5ae	; 0xd5ae <draw_statistics>
			WaitVsync(5);
    e150:	85 e0       	ldi	r24, 0x05	; 5
    e152:	90 e0       	ldi	r25, 0x00	; 0
    e154:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>
		menu();

		load_level();
		refresh_game_screen();

		while (!is_level_done()) {
    e158:	0e 94 f7 68 	call	0xd1ee	; 0xd1ee <is_level_done>
    e15c:	88 23       	and	r24, r24
    e15e:	09 f4       	brne	.+2      	; 0xe162 <game+0x598>
    e160:	4c cd       	rjmp	.-1384   	; 0xdbfa <game+0x30>
    e162:	e8 e6       	ldi	r30, 0x68	; 104
    e164:	f4 e0       	ldi	r31, 0x04	; 4
/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
		sprites[i].x = (SCREEN_TILES_H * TILE_WIDTH);
    e166:	c0 82       	st	Z, r12
    e168:	35 96       	adiw	r30, 0x05	; 5

/**
 * Hides all sprites
 */
void hide_sprites() {
	for(int i = 0; i < MAX_SPRITES; i++){
    e16a:	84 e0       	ldi	r24, 0x04	; 4
    e16c:	eb 38       	cpi	r30, 0x8B	; 139
    e16e:	f8 07       	cpc	r31, r24
    e170:	d1 f7       	brne	.-12     	; 0xe166 <game+0x59c>
/**
 * Plays sound (patch) by given id
 * @param unsignd char patch id of patch
 */
void play_sound(unsigned char patch) {
	TriggerFx(patch, 0xFF, true);
    e172:	86 e0       	ldi	r24, 0x06	; 6
    e174:	6f ef       	ldi	r22, 0xFF	; 255
    e176:	41 e0       	ldi	r20, 0x01	; 1
    e178:	0e 94 ae 5f 	call	0xbf5c	; 0xbf5c <TriggerFx>
			WaitVsync(5);
		}

		hide_sprites();
		play_sound(SOUND_LEVEL_CLEARED);
		WaitVsync(60);
    e17c:	8c e3       	ldi	r24, 0x3C	; 60
    e17e:	90 e0       	ldi	r25, 0x00	; 0
    e180:	0e 94 71 67 	call	0xcee2	; 0xcee2 <WaitVsync>

		// mark level as cleared
		eeprom_data.data[level / 8] |= 1 << (level % 8);
    e184:	20 91 5c 0d 	lds	r18, 0x0D5C
    e188:	e2 2f       	mov	r30, r18
    e18a:	e6 95       	lsr	r30
    e18c:	e6 95       	lsr	r30
    e18e:	e6 95       	lsr	r30
    e190:	f0 e0       	ldi	r31, 0x00	; 0
    e192:	e7 54       	subi	r30, 0x47	; 71
    e194:	f1 4f       	sbci	r31, 0xF1	; 241
    e196:	27 70       	andi	r18, 0x07	; 7
    e198:	81 e0       	ldi	r24, 0x01	; 1
    e19a:	90 e0       	ldi	r25, 0x00	; 0
    e19c:	02 c0       	rjmp	.+4      	; 0xe1a2 <game+0x5d8>
    e19e:	88 0f       	add	r24, r24
    e1a0:	99 1f       	adc	r25, r25
    e1a2:	2a 95       	dec	r18
    e1a4:	e2 f7       	brpl	.-8      	; 0xe19e <game+0x5d4>
    e1a6:	22 81       	ldd	r18, Z+2	; 0x02
    e1a8:	28 2b       	or	r18, r24
    e1aa:	22 83       	std	Z+2, r18	; 0x02
		EepromWriteBlock(&eeprom_data);
    e1ac:	89 eb       	ldi	r24, 0xB9	; 185
    e1ae:	9e e0       	ldi	r25, 0x0E	; 14
    e1b0:	0e 94 51 5b 	call	0xb6a2	; 0xb6a2 <EepromWriteBlock>

/**
 * Game loop
 */
void game() {
	while (level < LEVEL_COUNT) {
    e1b4:	80 91 5c 0d 	lds	r24, 0x0D5C
    e1b8:	82 33       	cpi	r24, 0x32	; 50
    e1ba:	08 f4       	brcc	.+2      	; 0xe1be <game+0x5f4>
    e1bc:	14 cd       	rjmp	.-1496   	; 0xdbe6 <game+0x1c>

		// mark level as cleared
		eeprom_data.data[level / 8] |= 1 << (level % 8);
		EepromWriteBlock(&eeprom_data);
	}
}
    e1be:	df 91       	pop	r29
    e1c0:	cf 91       	pop	r28
    e1c2:	1f 91       	pop	r17
    e1c4:	0f 91       	pop	r16
    e1c6:	ff 90       	pop	r15
    e1c8:	ef 90       	pop	r14
    e1ca:	df 90       	pop	r13
    e1cc:	cf 90       	pop	r12
    e1ce:	08 95       	ret

0000e1d0 <main>:
}

/**
 * Main code
 */
int main() {
    e1d0:	0f 93       	push	r16
    e1d2:	1f 93       	push	r17
	SetTileTable(tiles);
    e1d4:	02 e2       	ldi	r16, 0x22	; 34
    e1d6:	19 e1       	ldi	r17, 0x19	; 25
    e1d8:	c8 01       	movw	r24, r16
    e1da:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <SetTileTable>
	SetSpritesTileTable(tiles);
    e1de:	c8 01       	movw	r24, r16
    e1e0:	0e 94 2f 5a 	call	0xb45e	; 0xb45e <SetSpritesTileTable>
	SetFontTilesIndex(TILE_FIRST_FONT);
    e1e4:	86 ea       	ldi	r24, 0xA6	; 166
    e1e6:	0e 94 5b 5a 	call	0xb4b6	; 0xb4b6 <SetFontTilesIndex>
	InitMusicPlayer(patches);
    e1ea:	8b e6       	ldi	r24, 0x6B	; 107
    e1ec:	9a ea       	ldi	r25, 0xAA	; 170
    e1ee:	0e 94 39 5c 	call	0xb872	; 0xb872 <InitMusicPlayer>
	TriggerNote(3,SOUND_INTRO_MUSIC,20,0xff);
    e1f2:	83 e0       	ldi	r24, 0x03	; 3
    e1f4:	67 e0       	ldi	r22, 0x07	; 7
    e1f6:	44 e1       	ldi	r20, 0x14	; 20
    e1f8:	2f ef       	ldi	r18, 0xFF	; 255
    e1fa:	0e 94 8d 5c 	call	0xb91a	; 0xb91a <TriggerNote>
	SetUserPostVsyncCallback(vsync_callback);
    e1fe:	87 e6       	ldi	r24, 0x67	; 103
    e200:	99 e6       	ldi	r25, 0x69	; 105
    e202:	0e 94 8c 5a 	call	0xb518	; 0xb518 <SetUserPostVsyncCallback>

	// read custom configuration from eeprom
	EepromReadBlock(129, &eeprom_data);
    e206:	81 e8       	ldi	r24, 0x81	; 129
    e208:	90 e0       	ldi	r25, 0x00	; 0
    e20a:	69 eb       	ldi	r22, 0xB9	; 185
    e20c:	7e e0       	ldi	r23, 0x0E	; 14
    e20e:	0e 94 f3 5a 	call	0xb5e6	; 0xb5e6 <EepromReadBlock>
	eeprom_data.id = 129;
    e212:	81 e8       	ldi	r24, 0x81	; 129
    e214:	90 e0       	ldi	r25, 0x00	; 0
    e216:	90 93 ba 0e 	sts	0x0EBA, r25
    e21a:	80 93 b9 0e 	sts	0x0EB9, r24

	game();
    e21e:	0e 94 e5 6d 	call	0xdbca	; 0xdbca <game>
}
    e222:	80 e0       	ldi	r24, 0x00	; 0
    e224:	90 e0       	ldi	r25, 0x00	; 0
    e226:	1f 91       	pop	r17
    e228:	0f 91       	pop	r16
    e22a:	08 95       	ret

0000e22c <__udivmodqi4>:
    e22c:	99 1b       	sub	r25, r25
    e22e:	79 e0       	ldi	r23, 0x09	; 9
    e230:	04 c0       	rjmp	.+8      	; 0xe23a <__udivmodqi4_ep>

0000e232 <__udivmodqi4_loop>:
    e232:	99 1f       	adc	r25, r25
    e234:	96 17       	cp	r25, r22
    e236:	08 f0       	brcs	.+2      	; 0xe23a <__udivmodqi4_ep>
    e238:	96 1b       	sub	r25, r22

0000e23a <__udivmodqi4_ep>:
    e23a:	88 1f       	adc	r24, r24
    e23c:	7a 95       	dec	r23
    e23e:	c9 f7       	brne	.-14     	; 0xe232 <__udivmodqi4_loop>
    e240:	80 95       	com	r24
    e242:	08 95       	ret

0000e244 <__udivmodsi4>:
    e244:	a1 e2       	ldi	r26, 0x21	; 33
    e246:	1a 2e       	mov	r1, r26
    e248:	aa 1b       	sub	r26, r26
    e24a:	bb 1b       	sub	r27, r27
    e24c:	fd 01       	movw	r30, r26
    e24e:	0d c0       	rjmp	.+26     	; 0xe26a <__udivmodsi4_ep>

0000e250 <__udivmodsi4_loop>:
    e250:	aa 1f       	adc	r26, r26
    e252:	bb 1f       	adc	r27, r27
    e254:	ee 1f       	adc	r30, r30
    e256:	ff 1f       	adc	r31, r31
    e258:	a2 17       	cp	r26, r18
    e25a:	b3 07       	cpc	r27, r19
    e25c:	e4 07       	cpc	r30, r20
    e25e:	f5 07       	cpc	r31, r21
    e260:	20 f0       	brcs	.+8      	; 0xe26a <__udivmodsi4_ep>
    e262:	a2 1b       	sub	r26, r18
    e264:	b3 0b       	sbc	r27, r19
    e266:	e4 0b       	sbc	r30, r20
    e268:	f5 0b       	sbc	r31, r21

0000e26a <__udivmodsi4_ep>:
    e26a:	66 1f       	adc	r22, r22
    e26c:	77 1f       	adc	r23, r23
    e26e:	88 1f       	adc	r24, r24
    e270:	99 1f       	adc	r25, r25
    e272:	1a 94       	dec	r1
    e274:	69 f7       	brne	.-38     	; 0xe250 <__udivmodsi4_loop>
    e276:	60 95       	com	r22
    e278:	70 95       	com	r23
    e27a:	80 95       	com	r24
    e27c:	90 95       	com	r25
    e27e:	9b 01       	movw	r18, r22
    e280:	ac 01       	movw	r20, r24
    e282:	bd 01       	movw	r22, r26
    e284:	cf 01       	movw	r24, r30
    e286:	08 95       	ret

0000e288 <memcpy_P>:
    e288:	fb 01       	movw	r30, r22
    e28a:	dc 01       	movw	r26, r24
    e28c:	02 c0       	rjmp	.+4      	; 0xe292 <memcpy_P+0xa>
    e28e:	05 90       	lpm	r0, Z+
    e290:	0d 92       	st	X+, r0
    e292:	41 50       	subi	r20, 0x01	; 1
    e294:	50 40       	sbci	r21, 0x00	; 0
    e296:	d8 f7       	brcc	.-10     	; 0xe28e <memcpy_P+0x6>
    e298:	08 95       	ret

0000e29a <_exit>:
    e29a:	f8 94       	cli

0000e29c <__stop_program>:
    e29c:	ff cf       	rjmp	.-2      	; 0xe29c <__stop_program>
